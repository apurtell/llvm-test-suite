##=== TEST.dsgraph.report - Report description for AA tests ----*- perl -*-===##
#
# This file defines a report to be generated for the alias analysis comparison
# test.
#
##===----------------------------------------------------------------------===##

# Helper function
sub Ratio {
  my ($Cols, $Col) = @_;
  if ($Cols->[$Col-2] ne "*" and
      $Cols->[$Col-2] != "0") {
    return $Cols->[$Col-1]/$Cols->[$Col-2];
  } else {
    return "n/a";
  }
}

# Sort by program name...
$SortCol = 1;

# Sort in ascending order
$SortReverse = 0;

# These are the columns for the report.  The first entry is the header for the
# column, the second is the regex to use to match the value.  Empty list create
# seperators, and closures may be put in for custom processing.
(
# Name
            ["Name:",     '\'([^\']+)\' Program'],
            [],
# Precision
            ["basic",     '.basic.txt: [^:]*Summary: (.*)'],
            ["steens-fi", '.steens-fi.txt: [^:]*Summary: (.*)'],
            ["steens",    '.steens.txt: [^:]*Summary: (.*)'],
            ["andersens", '.andersens.txt: [^:]*Summary: (.*)'],
            ["ds-fi",     '.ds-fi.txt: [^:]*Summary: (.*)'],
            ["ds",        '.ds.txt: [^:]*Summary: (.*)'],
            [],
# Times
#Output/treeadd.aa.andersens.txt:   Total Execution Time: 0 seconds (0.00111997 wall clock)
            ["basic",     '.basic.txt: [^(]*\(([-e0-9.]+) wall'],
            ["steens-fi", '.steens-fi.txt: [^(]*\(([-e0-9.]+) wall'],
            ["steens",    '.steens.txt: [^(]*\(([-e0-9.]+) wall'],
            ["andersens", '.andersens.txt: [^(]*\(([-e0-9.]+) wall'],
            ["ds-fi",     '.ds-fi.txt: [^(]*\(([-e0-9.]+) wall'],
            ["ds",        '.ds.txt: [^(]*\(([-e0-9.]+) wall'],
            []
);
