cscope 15 /mounts/choi/disks/0/localhome/criswell/llvm/test/Programs/MultiSource/Benchmarks/MallocBench/perl               0000935393
	@EXTERN.h

14 #unde‡
EXT


15 
	#EXT
 

	)

17 #unde‡
INIT


18 
	#INIT
(
x
)

	)

20 #unde‡
DOINIT


	@INTERN.h

14 #unde‡
EXT


15 
	#EXT


	)

17 #unde‡
INIT


18 
	#INIT
(
x
Ë
	)
x

20 
	#DOINIT


	)

	@arg.h

14 
	#O_NULL
 0

	)

15 
	#O_RCAT
 1

	)

16 
	#O_ITEM
 2

	)

17 
	#O_SCALAR
 3

	)

18 
	#O_ITEM2
 4

	)

19 
	#O_ITEM3
 5

	)

20 
	#O_CONCAT
 6

	)

21 
	#O_REPEAT
 7

	)

22 
	#O_MATCH
 8

	)

23 
	#O_NMATCH
 9

	)

24 
	#O_SUBST
 10

	)

25 
	#O_NSUBST
 11

	)

26 
	#O_ASSIGN
 12

	)

27 
	#O_LOCAL
 13

	)

28 
	#O_AASSIGN
 14

	)

29 
	#O_SASSIGN
 15

	)

30 
	#O_CHOP
 16

	)

31 
	#O_DEFINED
 17

	)

32 
	#O_UNDEF
 18

	)

33 
	#O_STUDY
 19

	)

34 
	#O_POW
 20

	)

35 
	#O_MULTIPLY
 21

	)

36 
	#O_DIVIDE
 22

	)

37 
	#O_MODULO
 23

	)

38 
	#O_ADD
 24

	)

39 
	#O_SUBTRACT
 25

	)

40 
	#O_LEFT_SHIFT
 26

	)

41 
	#O_RIGHT_SHIFT
 27

	)

42 
	#O_LT
 28

	)

43 
	#O_GT
 29

	)

44 
	#O_LE
 30

	)

45 
	#O_GE
 31

	)

46 
	#O_EQ
 32

	)

47 
	#O_NE
 33

	)

48 
	#O_NCMP
 34

	)

49 
	#O_BIT_AND
 35

	)

50 
	#O_XOR
 36

	)

51 
	#O_BIT_OR
 37

	)

52 
	#O_AND
 38

	)

53 
	#O_OR
 39

	)

54 
	#O_COND_EXPR
 40

	)

55 
	#O_COMMA
 41

	)

56 
	#O_NEGATE
 42

	)

57 
	#O_NOT
 43

	)

58 
	#O_COMPLEMENT
 44

	)

59 
	#O_SELECT
 45

	)

60 
	#O_WRITE
 46

	)

61 
	#O_DBMOPEN
 47

	)

62 
	#O_DBMCLOSE
 48

	)

63 
	#O_OPEN
 49

	)

64 
	#O_TRANS
 50

	)

65 
	#O_NTRANS
 51

	)

66 
	#O_CLOSE
 52

	)

67 
	#O_EACH
 53

	)

68 
	#O_VALUES
 54

	)

69 
	#O_KEYS
 55

	)

70 
	#O_LARRAY
 56

	)

71 
	#O_ARRAY
 57

	)

72 
	#O_AELEM
 58

	)

73 
	#O_DELETE
 59

	)

74 
	#O_LHASH
 60

	)

75 
	#O_HASH
 61

	)

76 
	#O_HELEM
 62

	)

77 
	#O_LAELEM
 63

	)

78 
	#O_LHELEM
 64

	)

79 
	#O_LSLICE
 65

	)

80 
	#O_ASLICE
 66

	)

81 
	#O_HSLICE
 67

	)

82 
	#O_LASLICE
 68

	)

83 
	#O_LHSLICE
 69

	)

84 
	#O_SPLICE
 70

	)

85 
	#O_PUSH
 71

	)

86 
	#O_POP
 72

	)

87 
	#O_SHIFT
 73

	)

88 
	#O_UNPACK
 74

	)

89 
	#O_SPLIT
 75

	)

90 
	#O_LENGTH
 76

	)

91 
	#O_SPRINTF
 77

	)

92 
	#O_SUBSTR
 78

	)

93 
	#O_PACK
 79

	)

94 
	#O_GREP
 80

	)

95 
	#O_JOIN
 81

	)

96 
	#O_SLT
 82

	)

97 
	#O_SGT
 83

	)

98 
	#O_SLE
 84

	)

99 
	#O_SGE
 85

	)

100 
	#O_SEQ
 86

	)

101 
	#O_SNE
 87

	)

102 
	#O_SCMP
 88

	)

103 
	#O_SUBR
 89

	)

104 
	#O_DBSUBR
 90

	)

105 
	#O_CALLER
 91

	)

106 
	#O_SORT
 92

	)

107 
	#O_REVERSE
 93

	)

108 
	#O_WARN
 94

	)

109 
	#O_DIE
 95

	)

110 
	#O_PRTF
 96

	)

111 
	#O_PRINT
 97

	)

112 
	#O_CHDIR
 98

	)

113 
	#O_EXIT
 99

	)

114 
	#O_RESET
 100

	)

115 
	#O_LIST
 101

	)

116 
	#O_EOF
 102

	)

117 
	#O_GETC
 103

	)

118 
	#O_TELL
 104

	)

119 
	#O_RECV
 105

	)

120 
	#O_READ
 106

	)

121 
	#O_SYSREAD
 107

	)

122 
	#O_SYSWRITE
 108

	)

123 
	#O_SEND
 109

	)

124 
	#O_SEEK
 110

	)

125 
	#O_RETURN
 111

	)

126 
	#O_REDO
 112

	)

127 
	#O_NEXT
 113

	)

128 
	#O_LAST
 114

	)

129 
	#O_DUMP
 115

	)

130 
	#O_GOTO
 116

	)

131 
	#O_INDEX
 117

	)

132 
	#O_RINDEX
 118

	)

133 
	#O_TIME
 119

	)

134 
	#O_TMS
 120

	)

135 
	#O_LOCALTIME
 121

	)

136 
	#O_GMTIME
 122

	)

137 
	#O_TRUNCATE
 123

	)

138 
	#O_LSTAT
 124

	)

139 
	#O_STAT
 125

	)

140 
	#O_CRYPT
 126

	)

141 
	#O_ATAN2
 127

	)

142 
	#O_SIN
 128

	)

143 
	#O_COS
 129

	)

144 
	#O_RAND
 130

	)

145 
	#O_SRAND
 131

	)

146 
	#O_EXP
 132

	)

147 
	#O_LOG
 133

	)

148 
	#O_SQRT
 134

	)

149 
	#O_INT
 135

	)

150 
	#O_ORD
 136

	)

151 
	#O_ALARM
 137

	)

152 
	#O_SLEEP
 138

	)

153 
	#O_RANGE
 139

	)

154 
	#O_F_OR_R
 140

	)

155 
	#O_FLIP
 141

	)

156 
	#O_FLOP
 142

	)

157 
	#O_FORK
 143

	)

158 
	#O_WAIT
 144

	)

159 
	#O_WAITPID
 145

	)

160 
	#O_SYSTEM
 146

	)

161 
	#O_EXEC_OP
 147

	)

162 
	#O_HEX
 148

	)

163 
	#O_OCT
 149

	)

164 
	#O_CHOWN
 150

	)

165 
	#O_KILL
 151

	)

166 
	#O_UNLINK
 152

	)

167 
	#O_CHMOD
 153

	)

168 
	#O_UTIME
 154

	)

169 
	#O_UMASK
 155

	)

170 
	#O_MSGGET
 156

	)

171 
	#O_SHMGET
 157

	)

172 
	#O_SEMGET
 158

	)

173 
	#O_MSGCTL
 159

	)

174 
	#O_SHMCTL
 160

	)

175 
	#O_SEMCTL
 161

	)

176 
	#O_MSGSND
 162

	)

177 
	#O_MSGRCV
 163

	)

178 
	#O_SEMOP
 164

	)

179 
	#O_SHMREAD
 165

	)

180 
	#O_SHMWRITE
 166

	)

181 
	#O_RENAME
 167

	)

182 
	#O_LINK
 168

	)

183 
	#O_MKDIR
 169

	)

184 
	#O_RMDIR
 170

	)

185 
	#O_GETPPID
 171

	)

186 
	#O_GETPGRP
 172

	)

187 
	#O_SETPGRP
 173

	)

188 
	#O_GETPRIORITY
 174

	)

189 
	#O_SETPRIORITY
 175

	)

190 
	#O_CHROOT
 176

	)

191 
	#O_FCNTL
 177

	)

192 
	#O_IOCTL
 178

	)

193 
	#O_FLOCK
 179

	)

194 
	#O_UNSHIFT
 180

	)

195 
	#O_REQUIRE
 181

	)

196 
	#O_DOFILE
 182

	)

197 
	#O_EVAL
 183

	)

198 
	#O_FTRREAD
 184

	)

199 
	#O_FTRWRITE
 185

	)

200 
	#O_FTREXEC
 186

	)

201 
	#O_FTEREAD
 187

	)

202 
	#O_FTEWRITE
 188

	)

203 
	#O_FTEEXEC
 189

	)

204 
	#O_FTIS
 190

	)

205 
	#O_FTEOWNED
 191

	)

206 
	#O_FTROWNED
 192

	)

207 
	#O_FTZERO
 193

	)

208 
	#O_FTSIZE
 194

	)

209 
	#O_FTMTIME
 195

	)

210 
	#O_FTATIME
 196

	)

211 
	#O_FTCTIME
 197

	)

212 
	#O_FTSOCK
 198

	)

213 
	#O_FTCHR
 199

	)

214 
	#O_FTBLK
 200

	)

215 
	#O_FTFILE
 201

	)

216 
	#O_FTDIR
 202

	)

217 
	#O_FTPIPE
 203

	)

218 
	#O_FTLINK
 204

	)

219 
	#O_SYMLINK
 205

	)

220 
	#O_READLINK
 206

	)

221 
	#O_FTSUID
 207

	)

222 
	#O_FTSGID
 208

	)

223 
	#O_FTSVTX
 209

	)

224 
	#O_FTTTY
 210

	)

225 
	#O_FTTEXT
 211

	)

226 
	#O_FTBINARY
 212

	)

227 
	#O_SOCKET
 213

	)

228 
	#O_BIND
 214

	)

229 
	#O_CONNECT
 215

	)

230 
	#O_LISTEN
 216

	)

231 
	#O_ACCEPT
 217

	)

232 
	#O_GHBYNAME
 218

	)

233 
	#O_GHBYADDR
 219

	)

234 
	#O_GHOSTENT
 220

	)

235 
	#O_GNBYNAME
 221

	)

236 
	#O_GNBYADDR
 222

	)

237 
	#O_GNETENT
 223

	)

238 
	#O_GPBYNAME
 224

	)

239 
	#O_GPBYNUMBER
 225

	)

240 
	#O_GPROTOENT
 226

	)

241 
	#O_GSBYNAME
 227

	)

242 
	#O_GSBYPORT
 228

	)

243 
	#O_GSERVENT
 229

	)

244 
	#O_SHOSTENT
 230

	)

245 
	#O_SNETENT
 231

	)

246 
	#O_SPROTOENT
 232

	)

247 
	#O_SSERVENT
 233

	)

248 
	#O_EHOSTENT
 234

	)

249 
	#O_ENETENT
 235

	)

250 
	#O_EPROTOENT
 236

	)

251 
	#O_ESERVENT
 237

	)

252 
	#O_SOCKPAIR
 238

	)

253 
	#O_SHUTDOWN
 239

	)

254 
	#O_GSOCKOPT
 240

	)

255 
	#O_SSOCKOPT
 241

	)

256 
	#O_GETSOCKNAME
 242

	)

257 
	#O_GETPEERNAME
 243

	)

258 
	#O_SSELECT
 244

	)

259 
	#O_FILENO
 245

	)

260 
	#O_BINMODE
 246

	)

261 
	#O_VEC
 247

	)

262 
	#O_GPWNAM
 248

	)

263 
	#O_GPWUID
 249

	)

264 
	#O_GPWENT
 250

	)

265 
	#O_SPWENT
 251

	)

266 
	#O_EPWENT
 252

	)

267 
	#O_GGRNAM
 253

	)

268 
	#O_GGRGID
 254

	)

269 
	#O_GGRENT
 255

	)

270 
	#O_SGRENT
 256

	)

271 
	#O_EGRENT
 257

	)

272 
	#O_GETLOGIN
 258

	)

273 
	#O_OPENDIR
 259

	)

274 
	#O_READDIR
 260

	)

275 
	#O_TELLDIR
 261

	)

276 
	#O_SEEKDIR
 262

	)

277 
	#O_REWINDDIR
 263

	)

278 
	#O_CLOSEDIR
 264

	)

279 
	#O_SYSCALL
 265

	)

280 
	#O_PIPE
 266

	)

281 
	#MAXO
 267

	)

283 #i‚de‡
DOINIT


284 
*
›«me
[];

286 *
	g›«me
[] = {

558 
	#A_NULL
 0

	)

559 
	#A_EXPR
 1

	)

560 
	#A_CMD
 2

	)

561 
	#A_STAB
 3

	)

562 
	#A_LVAL
 4

	)

563 
	#A_SINGLE
 5

	)

564 
	#A_DOUBLE
 6

	)

565 
	#A_BACKTICK
 7

	)

566 
	#A_READ
 8

	)

567 
	#A_SPAT
 9

	)

568 
	#A_LEXPR
 10

	)

569 
	#A_ARYLEN
 11

	)

570 
	#A_ARYSTAB
 12

	)

571 
	#A_LARYLEN
 13

	)

572 
	#A_GLOB
 14

	)

573 
	#A_WORD
 15

	)

574 
	#A_INDREAD
 16

	)

575 
	#A_LARYSTAB
 17

	)

576 
	#A_STAR
 18

	)

577 
	#A_LSTAR
 19

	)

578 
	#A_WANTARRAY
 20

	)

580 
	#A_MASK
 31

	)

581 
	#A_DONT
 32

	)

583 #i‚de‡
DOINIT


584 
*
¨g«me
[];

586 *
	g¨g«me
[] = {

612 #i‚de‡
DOINIT


613 
boﬁ
 
hoi°abÀ
[];

615 
boﬁ
 
	ghoi°abÀ
[] =

641 
	u¨g±r
 {

642 
ARG
 *
	m¨g_¨g
;

643 *
	m¨g_cvÆ
;

644 
STAB
 *
	m¨g_°ab
;

645 
SPAT
 *
	m¨g_•©
;

646 
CMD
 *
	m¨g_cmd
;

647 
STR
 *
	m¨g_°r
;

648 
HASH
 *
	m¨g_hash
;

651 
	s¨g
 {

652 
¨g±r
 
	m¨g_±r
;

653 
	m¨g_Àn
;

654 
	m¨g_ty≥
;

655 
	m¨g_Êags
;

658 
	#AF_ARYOK
 1

	)

659 
	#AF_POST
 2

	)

660 
	#AF_PRE
 4

	)

661 
	#AF_UP
 8

	)

662 
	#AF_COMMON
 16

	)

663 
	#AF_DEPR
 32

	)

664 
	#AF_LISTISH
 64

	)

665 
	#AF_LOCAL
 128

	)

677 
	#NuŒ¨g
 
	`NuŒ
(
ARG
*)

	)

679 #i‚de‡
DOINIT


680 
EXT
 
	g›¨gs
[
MAXO
+1];

682 
	#A
(
e1
,
e2
,
e3
Ë”1+”2<<2)+”3<<4))

	)

683 
	#A5
(
e1
,
e2
,
e3
,
e4
,
e5
Ë”1+”2<<2)+”3<<4)+”4<<6)+”5<<8))

	)

684 
	g›¨gs
[
MAXO
+1] = {

685 
A
(0,0,0),

686 
A
(1,1,0),

687 
A
(1,0,0),

688 
A
(1,0,0),

689 
A
(0,0,0),

690 
A
(0,0,0),

691 
A
(1,1,0),

692 
A
(3,1,0),

693 
A
(1,0,0),

694 
A
(1,0,0),

695 
A
(1,0,0),

696 
A
(1,0,0),

697 
A
(1,1,0),

698 
A
(1,0,0),

699 
A
(3,3,0),

700 
A
(0,0,0),

701 
A
(3,0,0),

702 
A
(1,0,0),

703 
A
(1,0,0),

704 
A
(1,0,0),

705 
A
(1,1,0),

706 
A
(1,1,0),

707 
A
(1,1,0),

708 
A
(1,1,0),

709 
A
(1,1,0),

710 
A
(1,1,0),

711 
A
(1,1,0),

712 
A
(1,1,0),

713 
A
(1,1,0),

714 
A
(1,1,0),

715 
A
(1,1,0),

716 
A
(1,1,0),

717 
A
(1,1,0),

718 
A
(1,1,0),

719 
A
(1,1,0),

720 
A
(1,1,0),

721 
A
(1,1,0),

722 
A
(1,1,0),

723 
A
(1,0,0),

724 
A
(1,0,0),

725 
A
(1,0,0),

726 
A
(1,1,0),

727 
A
(1,0,0),

728 
A
(1,0,0),

729 
A
(1,0,0),

730 
A
(1,0,0),

731 
A
(1,0,0),

732 
A
(1,1,1),

733 
A
(1,0,0),

734 
A
(1,1,0),

735 
A
(1,0,0),

736 
A
(1,0,0),

737 
A
(1,0,0),

738 
A
(0,0,0),

739 
A
(0,0,0),

740 
A
(0,0,0),

741 
A
(0,0,0),

742 
A
(0,0,0),

743 
A
(0,1,0),

744 
A
(0,1,0),

745 
A
(0,0,0),

746 
A
(0,0,0),

747 
A
(0,1,0),

748 
A
(0,1,0),

749 
A
(0,1,0),

750 
A
(0,3,3),

751 
A
(0,3,0),

752 
A
(0,3,0),

753 
A
(0,3,0),

754 
A
(0,3,0),

755 
A
(0,3,1),

756 
A
(0,3,0),

757 
A
(0,0,0),

758 
A
(0,0,0),

759 
A
(1,1,0),

760 
A
(1,0,1),

761 
A
(1,0,0),

762 
A
(3,0,0),

763 
A
(1,1,1),

764 
A
(1,3,0),

765 
A
(0,3,0),

766 
A
(1,3,0),

767 
A
(1,1,0),

768 
A
(1,1,0),

769 
A
(1,1,0),

770 
A
(1,1,0),

771 
A
(1,1,0),

772 
A
(1,1,0),

773 
A
(1,1,0),

774 
A
(0,3,0),

775 
A
(0,3,0),

776 
A
(1,0,0),

777 
A
(1,3,0),

778 
A
(0,3,0),

779 
A
(0,3,0),

780 
A
(0,3,0),

781 
A
(1,3,0),

782 
A
(1,3,0),

783 
A
(1,0,0),

784 
A
(1,0,0),

785 
A
(1,0,0),

786 
A
(3,0,0),

787 
A
(1,0,0),

788 
A
(1,0,0),

789 
A
(1,0,0),

790 
A5
(1,1,1,1,0),

791 
A
(1,1,3),

792 
A
(1,1,3),

793 
A
(1,1,3),

794 
A
(1,1,3),

795 
A
(1,1,1),

796 
A
(0,3,0),

797 
A
(0,0,0),

798 
A
(0,0,0),

799 
A
(0,0,0),

800 
A
(0,0,0),

801 
A
(0,0,0),

802 
A
(1,1,1),

803 
A
(1,1,1),

804 
A
(0,0,0),

805 
A
(0,0,0),

806 
A
(1,0,0),

807 
A
(1,0,0),

808 
A
(1,1,0),

809 
A
(1,0,0),

810 
A
(1,0,0),

811 
A
(1,1,0),

812 
A
(1,1,0),

813 
A
(1,0,0),

814 
A
(1,0,0),

815 
A
(1,0,0),

816 
A
(1,0,0),

817 
A
(1,0,0),

818 
A
(1,0,0),

819 
A
(1,0,0),

820 
A
(1,0,0),

821 
A
(1,0,0),

822 
A
(1,0,0),

823 
A
(1,0,0),

824 
A
(1,1,0),

825 
A
(1,0,0),

826 
A
(1,0,0),

827 
A
(0,1,0),

828 
A
(0,0,0),

829 
A
(0,0,0),

830 
A
(1,1,0),

831 
A
(1,3,0),

832 
A
(1,3,0),

833 
A
(1,0,0),

834 
A
(1,0,0),

835 
A
(0,3,0),

836 
A
(0,3,0),

837 
A
(0,3,0),

838 
A
(0,3,0),

839 
A
(0,3,0),

840 
A
(1,0,0),

841 
A
(1,1,0),

842 
A
(1,1,1),

843 
A
(1,1,1),

844 
A
(1,1,1),

845 
A
(1,1,1),

846 
A5
(1,1,1,1,0),

847 
A
(1,1,1),

848 
A5
(1,1,1,1,1),

849 
A
(1,1,1),

850 
A5
(1,1,1,1,0),

851 
A5
(1,1,1,1,0),

852 
A
(1,1,0),

853 
A
(1,1,0),

854 
A
(1,1,0),

855 
A
(1,0,0),

856 
A
(0,0,0),

857 
A
(1,0,0),

858 
A
(1,1,0),

859 
A
(1,1,0),

860 
A
(1,1,1),

861 
A
(1,0,0),

862 
A
(1,1,1),

863 
A
(1,1,1),

864 
A
(1,1,0),

865 
A
(0,3,0),

866 
A
(1,0,0),

867 
A
(1,0,0),

868 
A
(1,0,0),

869 
A
(1,0,0),

870 
A
(1,0,0),

871 
A
(1,0,0),

872 
A
(1,0,0),

873 
A
(1,0,0),

874 
A
(1,0,0),

875 
A
(1,0,0),

876 
A
(1,0,0),

877 
A
(1,0,0),

878 
A
(1,0,0),

879 
A
(1,0,0),

880 
A
(1,0,0),

881 
A
(1,0,0),

882 
A
(1,0,0),

883 
A
(1,0,0),

884 
A
(1,0,0),

885 
A
(1,0,0),

886 
A
(1,0,0),

887 
A
(1,0,0),

888 
A
(1,0,0),

889 
A
(1,0,0),

890 
A
(1,1,0),

891 
A
(1,0,0),

892 
A
(1,0,0),

893 
A
(1,0,0),

894 
A
(1,0,0),

895 
A
(1,0,0),

896 
A
(1,0,0),

897 
A
(1,0,0),

898 
A5
(1,1,1,1,0),

899 
A
(1,1,0),

900 
A
(1,1,0),

901 
A
(1,1,0),

902 
A
(1,1,0),

903 
A
(1,0,0),

904 
A
(1,1,0),

905 
A
(0,0,0),

906 
A
(1,0,0),

907 
A
(1,1,0),

908 
A
(0,0,0),

909 
A
(1,0,0),

910 
A
(1,0,0),

911 
A
(0,0,0),

912 
A
(1,1,0),

913 
A
(1,1,0),

914 
A
(0,0,0),

915 
A
(1,0,0),

916 
A
(1,0,0),

917 
A
(1,0,0),

918 
A
(1,0,0),

919 
A
(0,0,0),

920 
A
(0,0,0),

921 
A
(0,0,0),

922 
A
(0,0,0),

923 
A5
(1,1,1,1,1),

924 
A
(1,1,0),

925 
A
(1,1,1),

926 
A5
(1,1,1,1,0),

927 
A
(1,0,0),

928 
A
(1,0,0),

929 
A5
(1,1,1,1,0),

930 
A
(1,0,0),

931 
A
(1,0,0),

932 
A
(1,1,1),

933 
A
(1,0,0),

934 
A
(1,0,0),

935 
A
(0,0,0),

936 
A
(0,0,0),

937 
A
(0,0,0),

938 
A
(1,0,0),

939 
A
(1,0,0),

940 
A
(0,0,0),

941 
A
(0,0,0),

942 
A
(0,0,0),

943 
A
(0,0,0),

944 
A
(1,1,0),

945 
A
(1,0,0),

946 
A
(1,0,0),

947 
A
(1,1,0),

948 
A
(1,0,0),

949 
A
(1,0,0),

950 
A
(1,3,0),

951 
A
(1,1,0),

954 #unde‡
A


955 #unde‡
A5


958 
do_å™s
();

959 
do_•lô
();

960 
boﬁ
 
do_eof
();

961 
do_ãŒ
();

962 
boﬁ
 
do_£ek
();

963 
do_tms
();

964 
do_time
();

965 
do_°©
();

966 
STR
 *
do_push
();

967 
FILE
 *
√xèrgv
();

968 
STR
 *
do_·ãxt
();

969 
do_¶i˚
();

	@array.c

14 
	~"EXTERN.h
"

15 
	~"≥æ.h
"

17 
STR
 *

18 
	$a„tch
(
¨
,
key
,
lvÆ
)

19 
ARRAY
 *
¨
;

20 
key
;

21 
lvÆ
;

23 
STR
 *
°r
;

25 i‡(
key
 < 0 || key > 
¨
->
¨y_fûl
) {

26 i‡(
lvÆ
 && 
key
 >= 0) {

27 i‡(
¨
->
¨y_Êags
 & 
ARF_REAL
)

28 
°r
 = 
	`Så_√w
(5,0);

30 
°r
 = 
	`°r_m‹èl
(&
°r_undef
);

31 ()
	`a°‹e
(
¨
,
key
,
°r
);

32  
°r
;

35  &
°r_undef
;

37 i‡(!
¨
->
¨y_¨øy
[
key
]) {

38 i‡(
lvÆ
) {

39 
°r
 = 
	`Så_√w
(6,0);

40 ()
	`a°‹e
(
¨
,
key
,
°r
);

41  
°r
;

43  &
°r_undef
;

45  
¨
->
¨y_¨øy
[
key
];

46 
	}
}

48 
boﬁ


49 
	$a°‹e
(
¨
,
key
,
vÆ
)

50 
ARRAY
 *
¨
;

51 
key
;

52 
STR
 *
vÆ
;

54 
ªtvÆ
;

56 i‡(
key
 < 0)

57  
FALSE
;

58 i‡(
key
 > 
¨
->
¨y_max
) {

59 
√wmax
;

61 i‡(
¨
->
¨y_Æloc
 !¨->
¨y_¨øy
) {

62 
ªtvÆ
 = 
¨
->
¨y_¨øy
 -ár->
¨y_Æloc
;

63 
	`C›y
(
¨
->
¨y_¨øy
,ár->
¨y_Æloc
,ár->
¨y_max
+1, 
STR
*);

64 
	`Zîo
(
¨
->
¨y_Æloc
+¨->
¨y_max
+1, 
ªtvÆ
, 
STR
*);

65 
¨
->
¨y_max
 +
ªtvÆ
;

66 
¨
->
¨y_¨øy
 -
ªtvÆ
;

67 i‡(
key
 > 
¨
->
¨y_max
 - 10) {

68 
√wmax
 = 
key
 + 
¨
->
¨y_max
;

69 
ªsize
;

73 i‡(
¨
->
¨y_Æloc
) {

74 
√wmax
 = 
key
 + 
¨
->
¨y_max
 / 5;

75 
ªsize
:

76 
	`Ríew
(
¨
->
¨y_Æloc
,
√wmax
+1, 
STR
*);

77 
	`Zîo
(&
¨
->
¨y_Æloc
[¨->
¨y_max
+1], 
√wmax
 -ár->¨y_max, 
STR
*);

80 
√wmax
 = 
key
 < 4 ? 4 : key;

81 
	`Newz
(2,
¨
->
¨y_Æloc
, 
√wmax
+1, 
STR
*);

83 
¨
->
¨y_¨øy
 =ár->
¨y_Æloc
;

84 
¨
->
¨y_max
 = 
√wmax
;

87 i‡((
¨
->
¨y_Êags
 & 
ARF_REAL
Ë&&ár->
¨y_fûl
 < 
key
) {

88 ++
¨
->
¨y_fûl
 < 
key
) {

89 i‡(
¨
->
¨y_¨øy
[¨->
¨y_fûl
] !
NuŒ°r
) {

90 
	`°r_‰ì
(
¨
->
¨y_¨øy
[¨->
¨y_fûl
]);

91 
¨
->
¨y_¨øy
[¨->
¨y_fûl
] = 
NuŒ°r
;

95 
ªtvÆ
 = (
¨
->
¨y_¨øy
[
key
] !
NuŒ°r
);

96 i‡(
ªtvÆ
 && (
¨
->
¨y_Êags
 & 
ARF_REAL
))

97 
	`°r_‰ì
(
¨
->
¨y_¨øy
[
key
]);

98 
¨
->
¨y_¨øy
[
key
] = 
vÆ
;

99  
ªtvÆ
;

100 
	}
}

102 
ARRAY
 *

103 
	$™ew
(
°ab
)

104 
STAB
 *
°ab
;

106 
ARRAY
 *
¨
;

108 
	`New
(1,
¨
,1,
ARRAY
);

109 
¨
->
¨y_magic
 = 
	`Så_√w
(7,0);

110 
¨
->
¨y_Æloc
 =ár->
¨y_¨øy
 = 0;

111 
	`°r_magic
(
¨
->
¨y_magic
, 
°ab
, '#', 
NuŒch
, 0);

112 
¨
->
¨y_max
 =ár->
¨y_fûl
 = -1;

113 
¨
->
¨y_Êags
 = 
ARF_REAL
;

114  
¨
;

115 
	}
}

117 
ARRAY
 *

118 
	$aÁke
(
°ab
,
size
,
°Ω
)

119 
STAB
 *
°ab
;

120 
size
;

121 
STR
 **
°Ω
;

123 
ARRAY
 *
¨
;

125 
	`New
(3,
¨
,1,
ARRAY
);

126 
	`New
(4,
¨
->
¨y_Æloc
,
size
+1,
STR
*);

127 
	`C›y
(
°Ω
,
¨
->
¨y_Æloc
,
size
,
STR
*);

128 
¨
->
¨y_¨øy
 =ár->
¨y_Æloc
;

129 
¨
->
¨y_magic
 = 
	`Så_√w
(8,0);

130 
	`°r_magic
(
¨
->
¨y_magic
, 
°ab
, '#', 
NuŒch
, 0);

131 
¨
->
¨y_fûl
 = 
size
 - 1;

132 
¨
->
¨y_max
 = 
size
 - 1;

133 
¨
->
¨y_Êags
 = 0;

134 
size
--) {

135 (*
°Ω
++)->
°r_pok
 &~
SP_TEMP
;

137  
¨
;

138 
	}
}

141 
	$a˛ór
(
¨
)

142 
ARRAY
 *
¨
;

144 
key
;

146 i‡(!
¨
 || !◊r->
¨y_Êags
 & 
ARF_REAL
Ë||ár->
¨y_max
 < 0)

148 i‡(
key
 = 
¨
->
¨y_¨øy
 -ár->
¨y_Æloc
) {

149 
¨
->
¨y_max
 +
key
;

150 
¨
->
¨y_¨øy
 -
key
;

152 
key
 = 0; key <
¨
->
¨y_max
; key++)

153 
	`°r_‰ì
(
¨
->
¨y_¨øy
[
key
]);

154 
¨
->
¨y_fûl
 = -1;

155 
	`Zîo
(
¨
->
¨y_¨øy
,ár->
¨y_max
+1, 
STR
*);

156 
	}
}

159 
	$a‰ì
(
¨
)

160 
ARRAY
 *
¨
;

162 
key
;

164 i‡(!
¨
)

166 i‡(
key
 = 
¨
->
¨y_¨øy
 -ár->
¨y_Æloc
) {

167 
¨
->
¨y_max
 +
key
;

168 
¨
->
¨y_¨øy
 -
key
;

170 i‡(
¨
->
¨y_Êags
 & 
ARF_REAL
) {

171 
key
 = 0; key <
¨
->
¨y_max
; key++)

172 
	`°r_‰ì
(
¨
->
¨y_¨øy
[
key
]);

174 
	`°r_‰ì
(
¨
->
¨y_magic
);

175 
	`Sa„‰ì
(
¨
->
¨y_Æloc
);

176 
	`Sa„‰ì
(
¨
);

177 
	}
}

179 
boﬁ


180 
	$≠ush
(
¨
,
vÆ
)

181 
ARRAY
 *
¨
;

182 
STR
 *
vÆ
;

184  
	`a°‹e
(
¨
,++◊r->
¨y_fûl
),
vÆ
);

185 
	}
}

187 
STR
 *

188 
	$≠›
(
¨
)

189 
ARRAY
 *
¨
;

191 
STR
 *
ªtvÆ
;

193 i‡(
¨
->
¨y_fûl
 < 0)

194  
NuŒ°r
;

195 
ªtvÆ
 = 
¨
->
¨y_¨øy
[¨->
¨y_fûl
];

196 
¨
->
¨y_¨øy
[¨->
¨y_fûl
--] = 
NuŒ°r
;

197  
ªtvÆ
;

198 
	}
}

200 
	$aunshi·
(
¨
,
num
)

201 
ARRAY
 *
¨
;

202 
num
;

204 
i
;

205 
STR
 **
s°r
,**
d°r
;

207 i‡(
num
 <= 0)

209 i‡(
¨
->
¨y_¨øy
 -ár->
¨y_Æloc
 >
num
) {

210 
¨
->
¨y_max
 +
num
;

211 
¨
->
¨y_fûl
 +
num
;

212 
num
--)

213 *--
¨
->
¨y_¨øy
 = 
NuŒ°r
;

216 ()
	`a°‹e
(
¨
,¨->
¨y_fûl
+
num
,(
STR
*)0);

217 
d°r
 = 
¨
->
¨y_¨øy
 +ár->
¨y_fûl
;

218 
s°r
 = 
d°r
 - 
num
;

219 #ifde‡
BUGGY_MSC5


220 #¥agm®
	`lo›_›t
(
off
)

222 
i
 = 
¨
->
¨y_fûl
; i >= 0; i--) {

223 *
d°r
-- = *
s°r
--;

224 #ifde‡
BUGGY_MSC5


225 #¥agm®
	`lo›_›t
()

228 
	`Zîo
(
¨
->
¨y_¨øy
, 
num
, 
STR
*);

230 
	}
}

232 
STR
 *

233 
	$ashi·
(
¨
)

234 
ARRAY
 *
¨
;

236 
STR
 *
ªtvÆ
;

238 i‡(
¨
->
¨y_fûl
 < 0)

239  
NuŒ°r
;

240 
ªtvÆ
 = *
¨
->
¨y_¨øy
;

241 *(
¨
->
¨y_¨øy
++Ë
NuŒ°r
;

242 
¨
->
¨y_max
--;

243 
¨
->
¨y_fûl
--;

244  
ªtvÆ
;

245 
	}
}

248 
	$Æí
(
¨
)

249 
ARRAY
 *
¨
;

251  
¨
->
¨y_fûl
;

252 
	}
}

254 
	$afûl
(
¨
, 
fûl
)

255 
ARRAY
 *
¨
;

256 
fûl
;

258 i‡(
fûl
 < 0)

259 
fûl
 = -1;

260 i‡(
fûl
 <
¨
->
¨y_max
)

261 
¨
->
¨y_fûl
 = 
fûl
;

263 ()
	`a°‹e
(
¨
,
fûl
,
NuŒ°r
);

264 
	}
}

	@array.h

14 
	s©bl
 {

15 
STR
 **
	m¨y_¨øy
;

16 
STR
 **
	m¨y_Æloc
;

17 
STR
 *
	m¨y_magic
;

18 
	m¨y_max
;

19 
	m¨y_fûl
;

20 
	m¨y_Êags
;

23 
	#ARF_REAL
 1

	)

25 
STR
 *
a„tch
();

26 
boﬁ
 
a°‹e
();

27 
STR
 *
≠›
();

28 
STR
 *
ashi·
();

29 
a‰ì
();

30 
a˛ór
();

31 
boﬁ
 
≠ush
();

32 
Æí
();

33 
ARRAY
 *
™ew
();

34 
ARRAY
 *
aÁke
();

	@cmd.c

17 
	~"EXTERN.h
"

18 
	~"≥æ.h
"

20 #ifde‡
I_VARARGS


21 
	~<v¨¨gs.h
>

24 
STR
 
	g°r_ch›
;

26 
grow_dÀvñ
();

30 #i‡
deföed
(
¸ay
Ë|| deföed(
__STDC__
)

31 
	#JMPCLOBBER


	)

40 
	$cmd_exec
(
cmd∑rm
,
gimme
,
•
)

41 
CMD
 *
VOLATILE
 
cmd∑rm
;

42 
VOLATILE
 
gimme
;

43 
VOLATILE
 
•
;

45 
CMD
 *
cmd
 = 
cmd∑rm
;

46 
SPAT
 *
VOLATILE
 
ﬁd•©
;

47 
VOLATILE
 
fú°ßve
 = 
ßve°ack
->
¨y_fûl
;

48 
VOLATILE
 
ﬁdßve
;

49 
VOLATILE
 
¨y›tßve
;

50 #ifde‡
DEBUGGING


51 
VOLATILE
 
ﬁddÀvñ
;

52 
VOLATILE
 
ítdÀvñ
;

54 
STR
 *
ªt°r
 = &
°r_undef
;

55 *
tmps
;

56 
cmdÊags
;

57 
m©ch
;

58 *
go_to
 = 
gŸo_èrg
;

59 
√w•
 = -2;

60 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

61 
FILE
 *
VOLATILE
 
Â
;

62 
ARRAY
 *
VOLATILE
 
¨
;

64 
œ°size
 = 0;

65 #ifde‡
DEBUGGING


66 
ítdÀvñ
 = 
dÀvñ
;

68 
èû_ªcursi⁄_íåy
:

69 #ifde‡
DEBUGGING


70 
dÀvñ
 = 
ítdÀvñ
;

72 #ifde‡
TAINT


73 
èöãd
 = 0;

75 i‡(
cmd
 =
NuŒcmd
) {

76 i‡(
gimme
 =
G_ARRAY
 && 
√w•
 > -2)

77  
√w•
;

79 
°
[++
•
] = 
ªt°r
;

80  
•
;

83 
cmdÊags
 = 
cmd
->
c_Êags
;

84 i‡(
go_to
) {

85 i‡(
cmd
->
c_œbñ
 && 
	`°rEQ
(
go_to
,cmd->c_label))

86 
gŸo_èrg
 = 
go_to
 = 
NuŒch
;

88 
cmd
->
c_ty≥
) {

89 
C_IF
:

90 
ﬁd•©
 = 
cur•©
;

91 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

92 #ifde‡
DEBUGGING


93 
ﬁddÀvñ
 = 
dÀvñ
;

95 
ªt°r
 = &
°r_yes
;

96 
√w•
 = -2;

97 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

98 #ifde‡
DEBUGGING


99 i‡(
debug
) {

100 
deb«me
[
dÀvñ
] = 't';

101 
debdñim
[
dÀvñ
] = '_';

102 i‡(++
dÀvñ
 >
dlmax
)

103 
	`grow_dÀvñ
();

106 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

107 
°
 = 
°ack
->
¨y_¨øy
;

108 
ªt°r
 = 
°
[
√w•
];

110 i‡(!
gŸo_èrg
)

111 
go_to
 = 
NuŒch
;

112 
cur•©
 = 
ﬁd•©
;

113 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

114 
	`ª°‹ñi°
(
ﬁdßve
);

115 #ifde‡
DEBUGGING


116 
dÀvñ
 = 
ﬁddÀvñ
;

118 
cmd
 = cmd->
ucmd
.
ccmd
.
cc_Æt
;

119 
èû_ªcursi⁄_íåy
;

120 
C_ELSE
:

121 
ﬁd•©
 = 
cur•©
;

122 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

123 #ifde‡
DEBUGGING


124 
ﬁddÀvñ
 = 
dÀvñ
;

126 
ªt°r
 = &
°r_undef
;

127 
√w•
 = -2;

128 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

129 #ifde‡
DEBUGGING


130 i‡(
debug
) {

131 
deb«me
[
dÀvñ
] = 'e';

132 
debdñim
[
dÀvñ
] = '_';

133 i‡(++
dÀvñ
 >
dlmax
)

134 
	`grow_dÀvñ
();

137 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

138 
°
 = 
°ack
->
¨y_¨øy
;

139 
ªt°r
 = 
°
[
√w•
];

141 i‡(!
gŸo_èrg
)

142 
go_to
 = 
NuŒch
;

143 
cur•©
 = 
ﬁd•©
;

144 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

145 
	`ª°‹ñi°
(
ﬁdßve
);

146 #ifde‡
DEBUGGING


147 
dÀvñ
 = 
ﬁddÀvñ
;

150 
C_BLOCK
:

151 
C_WHILE
:

152 i‡(!(
cmdÊags
 & 
CF_ONCE
)) {

153 
cmdÊags
 |
CF_ONCE
;

154 i‡(++
lo›_±r
 >
lo›_max
) {

155 
lo›_max
 += 128;

156 
	`Ríew
(
lo›_°ack
, 
lo›_max
, 
lo›
);

158 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
 = 
cmd
->
c_œbñ
;

159 
lo›_°ack
[
lo›_±r
].
lo›_•
 = 
•
;

160 #ifde‡
DEBUGGING


161 i‡(
debug
 & 4) {

162 
	`deb
("(PushingÜabel #%d %s)\n",

163 
lo›_±r
, 
cmd
->
c_œbñ
 ? cmd->c_label : "");

167 #ifde‡
JMPCLOBBER


168 
cmd∑rm
 = 
cmd
;

170 
m©ch
 = 
	`£tjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
);

171 i‡(
m©ch
) {

172 
°
 = 
°ack
->
¨y_¨øy
;

173 #ifde‡
JMPCLOBBER


174 
cmd
 = 
cmd∑rm
;

175 
cmdÊags
 = 
cmd
->
c_Êags
|
CF_ONCE
;

177 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

178 
	`ª°‹ñi°
(
ﬁdßve
);

179 
m©ch
) {

181 
	`Áèl
("l⁄gjm∞ªtu∫ed bad vÆuê(%d)",
m©ch
);

182 
O_LAST
:

183 
go_to
 = 
NuŒch
;

184 i‡(
œ°ªt°r
) {

185 
ªt°r
 = 
œ°ªt°r
;

186 
√w•
 = -2;

189 
√w•
 = 
•
 + 
œ°size
;

190 
ªt°r
 = 
°
[
√w•
];

192 #ifde‡
DEBUGGING


193 
ﬁddÀvñ
 = 
dÀvñ
;

195 
cur•©
 = 
ﬁd•©
;

196 
√xt_cmd
;

197 
O_NEXT
:

198 
go_to
 = 
NuŒch
;

199 #ifde‡
JMPCLOBBER


200 
√w•
 = -2;

201 
ªt°r
 = &
°r_undef
;

203 
√xt_ôî
;

204 
O_REDO
:

205 
go_to
 = 
NuŒch
;

206 #ifde‡
JMPCLOBBER


207 
√w•
 = -2;

208 
ªt°r
 = &
°r_undef
;

210 
doô
;

213 
ﬁd•©
 = 
cur•©
;

214 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

215 #ifde‡
DEBUGGING


216 
ﬁddÀvñ
 = 
dÀvñ
;

218 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

219 #ifde‡
DEBUGGING


220 i‡(
debug
) {

221 
deb«me
[
dÀvñ
] = 't';

222 
debdñim
[
dÀvñ
] = '_';

223 i‡(++
dÀvñ
 >
dlmax
)

224 
	`grow_dÀvñ
();

227 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

228 
°
 = 
°ack
->
¨y_¨øy
;

229 
ªt°r
 = 
°
[
√w•
];

231 i‡(!
gŸo_èrg
) {

232 
go_to
 = 
NuŒch
;

233 
√xt_ôî
;

235 #ifde‡
DEBUGGING


236 
dÀvñ
 = 
ﬁddÀvñ
;

238 i‡(
cmd
->
ucmd
.
ccmd
.
cc_Æt
) {

239 #ifde‡
DEBUGGING


240 i‡(
debug
) {

241 
deb«me
[
dÀvñ
] = 'a';

242 
debdñim
[
dÀvñ
] = '_';

243 i‡(++
dÀvñ
 >
dlmax
)

244 
	`grow_dÀvñ
();

247 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_Æt
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

248 
°
 = 
°ack
->
¨y_¨øy
;

249 
ªt°r
 = 
°
[
√w•
];

251 i‡(
gŸo_èrg
)

253 
go_to
 = 
NuŒch
;

254 
föish_whûe
;

256 
cmd
 = cmd->
c_√xt
;

257 i‡(
cmd
 && cmd->
c_hód
 == cmd)

259  
•
;

260 i‡(
cmdÊags
 & 
CF_ONCE
) {

261 #ifde‡
DEBUGGING


262 i‡(
debug
 & 4) {

263 
tmps
 = 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
;

264 
	`deb
("(P›pögÜabñ #%d %s)\n",
lo›_±r
,

265 
tmps
 ?Åmps : "" );

268 
lo›_±r
--;

270 
èû_ªcursi⁄_íåy
;

274 
u¡û_lo›
:

278 
curcmd
 = 
cmd
;

280 #ifde‡
DEBUGGING


281 i‡(
debug
) {

282 i‡(
debug
 & 2) {

283 
	`deb
("%s (%lx)Ñ%lxÅ%lxá%lxÇ%lx cs%lx\n",

284 
cmd«me
[
cmd
->
c_ty≥
],cmd,cmd->
c_ex¥
,

285 
cmd
->
ucmd
.
ccmd
.
cc_åue
,cmd->ucmd.ccmd.
cc_Æt
,cmd->
c_√xt
,

286 
cur•©
);

288 
deb«me
[
dÀvñ
] = 
cmd«me
[
cmd
->
c_ty≥
][0];

289 
debdñim
[
dÀvñ
] = '!';

290 i‡(++
dÀvñ
 >
dlmax
)

291 
	`grow_dÀvñ
();

297 i‡(
cmdÊags
 & 
CF_COND
) {

298 
cmdÊags
 & 
CF_OPTIMIZE
) {

300 
CFT_FALSE
:

301 
ªt°r
 = 
cmd
->
c_sh‹t
;

302 
√w•
 = -2;

303 
m©ch
 = 
FALSE
;

304 i‡(
cmdÊags
 & 
CF_NESURE
)

305 
maybe
;

307 
CFT_TRUE
:

308 
ªt°r
 = 
cmd
->
c_sh‹t
;

309 
√w•
 = -2;

310 
m©ch
 = 
TRUE
;

311 i‡(
cmdÊags
 & 
CF_EQSURE
)

312 
Êùmaybe
;

315 
CFT_REG
:

316 
ªt°r
 = 
	`STAB_STR
(
cmd
->
c_°ab
);

317 
√w•
 = -2;

318 
m©ch
 = 
	`°r_åue
(
ªt°r
);

319 i‡(
cmdÊags
 & (
m©ch
 ? 
CF_EQSURE
 : 
CF_NESURE
))

320 
Êùmaybe
;

323 
CFT_ANCHOR
:

324 i‡(
mu…ûöe
) {

325 i‡(*
cmd
->
c_sh‹t
->
°r_±r
 && !(
cmdÊags
 & 
CF_EQSURE
))

326 
sˇ¬î
;

331 
CFT_STROP
:

332 
ªt°r
 = 
	`STAB_STR
(
cmd
->
c_°ab
);

333 
√w•
 = -2;

334 #i‚de‡
I286


335 i‡(*
cmd
->
c_sh‹t
->
°r_±r
 =*
	`°r_gë
(
ªt°r
) &&

336 
	`bcmp
(
cmd
->
c_sh‹t
->
°r_±r
, 
	`°r_gë
(
ªt°r
),

337 
cmd
->
c_¶í
) == 0 ) {

338 i‡(
cmdÊags
 & 
CF_EQSURE
) {

339 i‡(
ßwam≥rßnd
 && (
cmdÊags
 & 
CF_OPTIMIZE
Ë!
CFT_STROP
) {

340 
cur•©
 = 
NuŒ•©
;

341 i‡(
À·°ab
)

342 
	`°r_n£t
(
	`°ab_vÆ
(
À·°ab
),"",0);

343 i‡(
am≥r°ab
)

344 
	`°r_s£t
(
	`°ab_vÆ
(
am≥r°ab
),
cmd
->
c_sh‹t
);

345 i‡(
right°ab
)

346 
	`°r_n£t
(
	`°ab_vÆ
(
right°ab
),

347 
ªt°r
->
°r_±r
 + 
cmd
->
c_¶í
,

348 
ªt°r
->
°r_cur
 - 
cmd
->
c_¶í
);

350 i‡(
cmd
->
c_•©
)

351 
œ°•©
 = 
cmd
->
c_•©
;

352 
m©ch
 = !(
cmdÊags
 & 
CF_FIRSTNEG
);

353 
ªt°r
 = &
°r_yes
;

354 
Êùmaybe
;

357 i‡(
cmdÊags
 & 
CF_NESURE
) {

358 
m©ch
 = 
cmdÊags
 & 
CF_FIRSTNEG
;

359 
ªt°r
 = &
°r_no
;

360 
Êùmaybe
;

364 *
z≠1
, *
z≠2
, 
z≠1c
, 
z≠2c
;

365 
z≠Àn
;

367 
z≠1
 = 
cmd
->
c_sh‹t
->
°r_±r
;

368 
z≠2
 = 
	`°r_gë
(
ªt°r
);

369 
z≠1c
 = *
z≠1
;

370 
z≠2c
 = *
z≠2
;

371 
z≠Àn
 = 
cmd
->
c_¶í
;

372 i‡((
z≠1c
 =
z≠2c
Ë&& (
	`bcmp
(
z≠1
, 
z≠2
, 
z≠Àn
) == 0)) {

373 i‡(
cmdÊags
 & 
CF_EQSURE
) {

374 i‡(
ßwam≥rßnd
 &&

375 (
cmdÊags
 & 
CF_OPTIMIZE
Ë!
CFT_STROP
) {

376 
cur•©
 = 
NuŒ•©
;

377 i‡(
À·°ab
)

378 
	`°r_n£t
(
	`°ab_vÆ
(
À·°ab
),"",0);

379 i‡(
am≥r°ab
)

380 
	`°r_s£t
(
	`°ab_vÆ
(
am≥r°ab
),
cmd
->
c_sh‹t
);

381 i‡(
right°ab
)

382 
	`°r_n£t
(
	`°ab_vÆ
(
right°ab
),

383 
ªt°r
->
°r_±r
 + 
cmd
->
c_¶í
,

384 
ªt°r
->
°r_cur
 - 
cmd
->
c_¶í
);

386 i‡(
cmd
->
c_•©
)

387 
œ°•©
 = 
cmd
->
c_•©
;

388 
m©ch
 = !(
cmdÊags
 & 
CF_FIRSTNEG
);

389 
ªt°r
 = &
°r_yes
;

390 
Êùmaybe
;

393 i‡(
cmdÊags
 & 
CF_NESURE
) {

394 
m©ch
 = 
cmdÊags
 & 
CF_FIRSTNEG
;

395 
ªt°r
 = &
°r_no
;

396 
Êùmaybe
;

402 
CFT_SCAN
:

403 
sˇ¬î
:

404 
ªt°r
 = 
	`STAB_STR
(
cmd
->
c_°ab
);

405 
√w•
 = -2;

406 i‡(
ªt°r
->
°r_pok
 & 
SP_STUDIED
)

407 i‡(
s¸ómfú°
[
cmd
->
c_sh‹t
->
°r_øª
] >= 0)

408 
tmps
 = 
	`s¸ómö°r
(
ªt°r
, 
cmd
->
c_sh‹t
);

410 
tmps
 = 
NuŒch
;

412 
tmps
 = 
	`°r_gë
(
ªt°r
);

413 #i‚de‡
löt


414 
tmps
 = 
	`fbmö°r
((*)tmps,

415 (*)
tmps
 + 
ªt°r
->
°r_cur
, 
cmd
->
c_sh‹t
);

418 i‡(
tmps
) {

419 i‡(
cmdÊags
 & 
CF_EQSURE
) {

420 ++
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
;

421 i‡(
ßwam≥rßnd
) {

422 
cur•©
 = 
NuŒ•©
;

423 i‡(
À·°ab
)

424 
	`°r_n£t
(
	`°ab_vÆ
(
À·°ab
),
ªt°r
->
°r_±r
,

425 
tmps
 - 
ªt°r
->
°r_±r
);

426 i‡(
am≥r°ab
)

427 
	`°r_n£t
(
	`°ab_vÆ
(
am≥r°ab
),

428 
tmps
, 
cmd
->
c_sh‹t
->
°r_cur
);

429 i‡(
right°ab
)

430 
	`°r_n£t
(
	`°ab_vÆ
(
right°ab
),

431 
tmps
 + 
cmd
->
c_sh‹t
->
°r_cur
,

432 
ªt°r
->
°r_cur
 - (
tmps
 -Ñë°r->
°r_±r
) -

433 
cmd
->
c_sh‹t
->
°r_cur
);

435 
œ°•©
 = 
cmd
->
c_•©
;

436 
m©ch
 = !(
cmdÊags
 & 
CF_FIRSTNEG
);

437 
ªt°r
 = &
°r_yes
;

438 
Êùmaybe
;

441 
höt
 = 
tmps
;

444 i‡(
cmdÊags
 & 
CF_NESURE
) {

445 ++
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
;

446 
m©ch
 = 
cmdÊags
 & 
CF_FIRSTNEG
;

447 
ªt°r
 = &
°r_no
;

448 
Êùmaybe
;

451 i‡(--
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
 < 0) {

452 
cmdÊags
 &~
CF_OPTIMIZE
;

453 
cmdÊags
 |
CFT_EVAL
;

454 
cmd
->
c_Êags
 = (
cmdÊags
 & ~
CF_ONCE
);

458 
CFT_NUMOP
:

459 
ªt°r
 = 
	`STAB_STR
(
cmd
->
c_°ab
);

460 
√w•
 = -2;

461 
cmd
->
c_¶í
) {

462 
O_EQ
:

463 i‡(
dow¨n
) {

464 i‡((!
ªt°r
->
°r_nok
 && !
	`looks_like_numbî
(retstr)))

465 
	`w¨n
("Possible use of == on string value");

467 
m©ch
 = (
	`°r_gnum
(
ªt°r
Ë=
cmd
->
c_sh‹t
->
°r_u
.
°r_nvÆ
);

469 
O_NE
:

470 
m©ch
 = (
	`°r_gnum
(
ªt°r
Ë!
cmd
->
c_sh‹t
->
°r_u
.
°r_nvÆ
);

472 
O_LT
:

473 
m©ch
 = (
	`°r_gnum
(
ªt°r
Ë< 
cmd
->
c_sh‹t
->
°r_u
.
°r_nvÆ
);

475 
O_LE
:

476 
m©ch
 = (
	`°r_gnum
(
ªt°r
Ë<
cmd
->
c_sh‹t
->
°r_u
.
°r_nvÆ
);

478 
O_GT
:

479 
m©ch
 = (
	`°r_gnum
(
ªt°r
Ë> 
cmd
->
c_sh‹t
->
°r_u
.
°r_nvÆ
);

481 
O_GE
:

482 
m©ch
 = (
	`°r_gnum
(
ªt°r
Ë>
cmd
->
c_sh‹t
->
°r_u
.
°r_nvÆ
);

485 i‡(
m©ch
) {

486 i‡(
cmdÊags
 & 
CF_EQSURE
) {

487 
ªt°r
 = &
°r_yes
;

488 
Êùmaybe
;

491 i‡(
cmdÊags
 & 
CF_NESURE
) {

492 
ªt°r
 = &
°r_no
;

493 
Êùmaybe
;

497 
CFT_INDGETS
:

498 
œ°_ö_°ab
 = 
	`°abít
(
	`°r_gë
(
	`STAB_STR
(
cmd
->
c_°ab
)),
TRUE
);

499 i‡(!
	`°ab_io
(
œ°_ö_°ab
))

500 
	`°ab_io
(
œ°_ö_°ab
Ë
	`°io_√w
();

501 
dogës
;

502 
CFT_GETS
:

503 
œ°_ö_°ab
 = 
cmd
->
c_°ab
;

504 
dogës
:

505 
Â
 = 
	`°ab_io
(
œ°_ö_°ab
)->
iÂ
;

506 
ªt°r
 = 
	`°ab_vÆ
(
def°ab
);

507 
√w•
 = -2;

508 
kìpgoög
:

509 i‡(
Â
 && 
	`°r_gës
(
ªt°r
, fp, 0)) {

510 i‡(*
ªt°r
->
°r_±r
 ='0' &&Ñë°r->
°r_cur
 == 1)

511 
m©ch
 = 
FALSE
;

513 
m©ch
 = 
TRUE
;

514 
	`°ab_io
(
œ°_ö_°ab
)->
löes
++;

516 i‡(
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 & 
IOF_ARGV
) {

517 i‡(!
Â
)

518 
d€vÆ
;

519 
Â
 = 
	`√xèrgv
(
œ°_ö_°ab
);

520 i‡(
Â
)

521 
kìpgoög
;

522 ()
	`do_˛o£
(
œ°_ö_°ab
,
FALSE
);

523 
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 |
IOF_START
;

524 
ªt°r
 = &
°r_undef
;

525 
m©ch
 = 
FALSE
;

528 
ªt°r
 = &
°r_undef
;

529 
m©ch
 = 
FALSE
;

531 
Êùmaybe
;

532 
CFT_EVAL
:

534 
CFT_UNFLIP
:

535 
tmps_max
 > 
tmps_ba£
) {

536 
	`°r_‰ì
(
tmps_li°
[
tmps_max
]);

537 
tmps_li°
[
tmps_max
--] = 
NuŒ°r
;

539 
√w•
 = 
	`evÆ
(
cmd
->
c_ex¥
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

540 
°
 = 
°ack
->
¨y_¨øy
;

541 
ªt°r
 = 
°
[
√w•
];

542 
m©ch
 = 
	`°r_åue
(
ªt°r
);

543 i‡(
cmd
->
c_ex¥
->
¨g_ty≥
 =
O_FLIP
)

544 
cmdÊags
 = 
	`c›y›t
(
cmd
,cmd->
c_ex¥
[3].
¨g_±r
.
¨g_cmd
);

545 
maybe
;

546 
CFT_CHOP
:

547 
ªt°r
 = 
	`°ab_vÆ
(
cmd
->
c_°ab
);

548 
√w•
 = -2;

549 
m©ch
 = (
ªt°r
->
°r_cur
 != 0);

550 
tmps
 = 
	`°r_gë
(
ªt°r
);

551 
tmps
 +
ªt°r
->
°r_cur
 - 
m©ch
;

552 
	`°r_n£t
(&
°r_ch›
,
tmps
,
m©ch
);

553 *
tmps
 = '\0';

554 
ªt°r
->
°r_nok
 = 0;

555 
ªt°r
->
°r_cur
 = 
tmps
 -Ñë°r->
°r_±r
;

556 
	`STABSET
(
ªt°r
);

557 
ªt°r
 = &
°r_ch›
;

558 
Êùmaybe
;

559 
CFT_ARRAY
:

560 
m©ch
 = 
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
;

562 i‡(
m©ch
 < 0) {

563 
¨
 = 
	`°ab_¨øy
(
cmd
->
c_ex¥
[1].
¨g_±r
.
¨g_°ab
);

564 
¨y›tßve
 = 
ßve°ack
->
¨y_fûl
;

565 
	`ßve•å
(&
	`°ab_vÆ
(
cmd
->
c_°ab
));

566 
	`ßvñ⁄g
(&
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
);

569 
¨
 = 
	`°ab_x¨øy
(
cmd
->
c_ex¥
[1].
¨g_±r
.
¨g_°ab
);

570 i‡(
cmd
->
c_ty≥
 !
C_WHILE
 && 
ßve°ack
->
¨y_fûl
 > 
fú°ßve
)

571 
	`ª°‹ñi°
(
fú°ßve
);

574 i‡(
m©ch
 >
¨
->
¨y_fûl
) {

575 
ªt°r
 = &
°r_undef
;

576 
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
 = -1;

577 
m©ch
 = 
FALSE
;

580 
m©ch
++;

581 i‡(!(
ªt°r
 = 
¨
->
¨y_¨øy
[
m©ch
]))

582 
ªt°r
 = 
	`a„tch
(
¨
,
m©ch
,
TRUE
);

583 
	`°ab_vÆ
(
cmd
->
c_°ab
Ë
ªt°r
;

584 
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
 = 
m©ch
;

585 
m©ch
 = 
TRUE
;

587 
√w•
 = -2;

588 
maybe
;

589 
CFT_D1
:

591 
CFT_D0
:

592 i‡(
DBsögÀ
->
°r_u
.
°r_nvÆ
 != 0)

594 i‡(
DBsig«l
->
°r_u
.
°r_nvÆ
 != 0)

596 i‡(
DBåa˚
->
°r_u
.
°r_nvÆ
 != 0)

598 
√xt_cmd
;

603 
d€vÆ
:

604 i‡(
gimme
 =
G_ARRAY
) {

605 
œ°ªt°r
 = 
NuŒ°r
;

606 
œ°•ba£
 = 
•
;

607 
œ°size
 = 
√w•
 - 
•
;

608 i‡(
œ°size
 < 0)

609 
œ°size
 = 0;

612 
œ°ªt°r
 = 
ªt°r
;

613 
tmps_max
 > 
tmps_ba£
) {

614 
	`°r_‰ì
(
tmps_li°
[
tmps_max
]);

615 
tmps_li°
[
tmps_max
--] = 
NuŒ°r
;

617 
√w•
 = 
	`evÆ
(
cmd
->
c_ex¥
,

618 
gimme
 && (
cmdÊags
 & 
CF_TERM
Ë&& 
cmd
->
c_ty≥
 =
C_EXPR
 &&

619 !
cmd
->
ucmd
.
acmd
.
ac_ex¥
,

620 
•
);

621 
°
 = 
°ack
->
¨y_¨øy
;

622 
ªt°r
 = 
°
[
√w•
];

623 i‡(
√w•
 > 
•
 && 
ªt°r
)

624 
m©ch
 = 
	`°r_åue
(
ªt°r
);

626 
m©ch
 = 
FALSE
;

627 
maybe
;

631 
Êùmaybe
:

632 i‡(
m©ch
 && 
cmdÊags
 & 
CF_FLIP
) {

633 
tmps_max
 > 
tmps_ba£
) {

634 
	`°r_‰ì
(
tmps_li°
[
tmps_max
]);

635 
tmps_li°
[
tmps_max
--] = 
NuŒ°r
;

637 i‡(
cmd
->
c_ex¥
->
¨g_ty≥
 =
O_FLOP
) {

638 
√w•
 = 
	`evÆ
(
cmd
->
c_ex¥
,
G_SCALAR
,
•
);

639 
cmdÊags
 = 
	`c›y›t
(
cmd
,cmd->
c_ex¥
[3].
¨g_±r
.
¨g_cmd
);

642 
√w•
 = 
	`evÆ
(
cmd
->
c_ex¥
,
G_SCALAR
,
•
);

643 i‡(
cmd
->
c_ex¥
->
¨g_ty≥
 =
O_FLOP
)

644 
cmdÊags
 = 
	`c›y›t
(
cmd
,cmd->
c_ex¥
[4].
¨g_±r
.
¨g_cmd
);

647 i‡(
cmdÊags
 & 
CF_FLIP
) {

648 i‡(
cmd
->
c_ex¥
->
¨g_ty≥
 =
O_FLOP
) {

649 
m©ch
 = 
TRUE
;

655 
maybe
:

656 i‡(
cmdÊags
 & 
CF_INVERT
)

657 
m©ch
 = !match;

658 i‡(!
m©ch
)

659 
√xt_cmd
;

661 #ifde‡
TAINT


662 
èöãd
 = 0;

667 
cmd
->
c_ty≥
) {

668 
C_NULL
:

669 
	`Áèl
("panic: cmd_exec");

670 
C_EXPR
:

671 i‡(
cmd
->
ucmd
.
acmd
.
ac_ex¥
) {

672 i‡(
gimme
 =
G_ARRAY
) {

673 
œ°ªt°r
 = 
NuŒ°r
;

674 
œ°•ba£
 = 
•
;

675 
œ°size
 = 
√w•
 - 
•
;

676 i‡(
œ°size
 < 0)

677 
œ°size
 = 0;

680 
œ°ªt°r
 = 
ªt°r
;

681 
tmps_max
 > 
tmps_ba£
) {

682 
	`°r_‰ì
(
tmps_li°
[
tmps_max
]);

683 
tmps_li°
[
tmps_max
--] = 
NuŒ°r
;

685 
√w•
 = 
	`evÆ
(
cmd
->
ucmd
.
acmd
.
ac_ex¥
,
gimme
 && (
cmdÊags
&
CF_TERM
),
•
);

686 
°
 = 
°ack
->
¨y_¨øy
;

687 
ªt°r
 = 
°
[
√w•
];

690 
C_NSWITCH
:

692 
vÆue
 = 
	`°r_gnum
(
	`STAB_STR
(
cmd
->
c_°ab
));

694 
m©ch
 = ()
vÆue
;

695 i‡(
vÆue
 < 0.0) {

696 i‡((()
m©ch
Ë> 
vÆue
)

697 --
m©ch
;

700 
doswôch
;

701 
C_CSWITCH
:

702 
m©ch
 = *(
	`°r_gë
(
	`STAB_STR
(
cmd
->
c_°ab
))) & 255;

703 
doswôch
:

704 
m©ch
 -
cmd
->
ucmd
.
scmd
.
sc_off£t
;

705 i‡(
m©ch
 < 0)

706 
m©ch
 = 0;

707 i‡(
m©ch
 > 
cmd
->
ucmd
.
scmd
.
sc_max
)

708 
m©ch
 = 
cmd
->
ucmd
.
scmd
.
sc_max
;

709 
cmd
 = cmd->
ucmd
.
scmd
.
sc_√xt
[
m©ch
];

710 
èû_ªcursi⁄_íåy
;

711 
C_NEXT
:

712 
cmd
 = cmd->
ucmd
.
ccmd
.
cc_Æt
;

713 
èû_ªcursi⁄_íåy
;

714 
C_ELSIF
:

715 
	`Áèl
("panic: ELSIF");

716 
C_IF
:

717 
ﬁd•©
 = 
cur•©
;

718 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

719 #ifde‡
DEBUGGING


720 
ﬁddÀvñ
 = 
dÀvñ
;

722 
ªt°r
 = &
°r_yes
;

723 
√w•
 = -2;

724 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

725 #ifde‡
DEBUGGING


726 i‡(
debug
) {

727 
deb«me
[
dÀvñ
] = 't';

728 
debdñim
[
dÀvñ
] = '_';

729 i‡(++
dÀvñ
 >
dlmax
)

730 
	`grow_dÀvñ
();

733 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

734 
°
 = 
°ack
->
¨y_¨øy
;

735 
ªt°r
 = 
°
[
√w•
];

737 
cur•©
 = 
ﬁd•©
;

738 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

739 
	`ª°‹ñi°
(
ﬁdßve
);

740 #ifde‡
DEBUGGING


741 
dÀvñ
 = 
ﬁddÀvñ
;

743 
cmd
 = cmd->
ucmd
.
ccmd
.
cc_Æt
;

744 
èû_ªcursi⁄_íåy
;

745 
C_ELSE
:

746 
ﬁd•©
 = 
cur•©
;

747 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

748 #ifde‡
DEBUGGING


749 
ﬁddÀvñ
 = 
dÀvñ
;

751 
ªt°r
 = &
°r_undef
;

752 
√w•
 = -2;

753 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

754 #ifde‡
DEBUGGING


755 i‡(
debug
) {

756 
deb«me
[
dÀvñ
] = 'e';

757 
debdñim
[
dÀvñ
] = '_';

758 i‡(++
dÀvñ
 >
dlmax
)

759 
	`grow_dÀvñ
();

762 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

763 
°
 = 
°ack
->
¨y_¨øy
;

764 
ªt°r
 = 
°
[
√w•
];

766 
cur•©
 = 
ﬁd•©
;

767 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

768 
	`ª°‹ñi°
(
ﬁdßve
);

769 #ifde‡
DEBUGGING


770 
dÀvñ
 = 
ﬁddÀvñ
;

773 
C_BLOCK
:

774 
C_WHILE
:

775 i‡(!(
cmdÊags
 & 
CF_ONCE
)) {

776 
cmdÊags
 |
CF_ONCE
;

777 i‡(++
lo›_±r
 >
lo›_max
) {

778 
lo›_max
 += 128;

779 
	`Ríew
(
lo›_°ack
, 
lo›_max
, 
lo›
);

781 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
 = 
cmd
->
c_œbñ
;

782 
lo›_°ack
[
lo›_±r
].
lo›_•
 = 
•
;

783 #ifde‡
DEBUGGING


784 i‡(
debug
 & 4) {

785 
	`deb
("(PushingÜabel #%d %s)\n",

786 
lo›_±r
, 
cmd
->
c_œbñ
 ? cmd->c_label : "");

790 #ifde‡
JMPCLOBBER


791 
cmd∑rm
 = 
cmd
;

793 
m©ch
 = 
	`£tjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
);

794 i‡(
m©ch
) {

795 
°
 = 
°ack
->
¨y_¨øy
;

796 #ifde‡
JMPCLOBBER


797 
cmd
 = 
cmd∑rm
;

798 
cmdÊags
 = 
cmd
->
c_Êags
|
CF_ONCE
;

799 
go_to
 = 
gŸo_èrg
;

801 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

802 
	`ª°‹ñi°
(
ﬁdßve
);

803 
m©ch
) {

805 
	`Áèl
("l⁄gjm∞ªtu∫ed bad vÆuê(%d)",
m©ch
);

806 
O_LAST
:

807 i‡(
œ°ªt°r
) {

808 
ªt°r
 = 
œ°ªt°r
;

809 
√w•
 = -2;

812 
√w•
 = 
•
 + 
œ°size
;

813 
ªt°r
 = 
°
[
√w•
];

815 
cur•©
 = 
ﬁd•©
;

816 
√xt_cmd
;

817 
O_NEXT
:

818 #ifde‡
JMPCLOBBER


819 
√w•
 = -2;

820 
ªt°r
 = &
°r_undef
;

822 
√xt_ôî
;

823 
O_REDO
:

824 #ifde‡
DEBUGGING


825 
dÀvñ
 = 
ﬁddÀvñ
;

827 #ifde‡
JMPCLOBBER


828 
√w•
 = -2;

829 
ªt°r
 = &
°r_undef
;

831 
doô
;

834 
ﬁd•©
 = 
cur•©
;

835 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

836 #ifde‡
DEBUGGING


837 
ﬁddÀvñ
 = 
dÀvñ
;

839 
doô
:

840 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

841 #ifde‡
DEBUGGING


842 i‡(
debug
) {

843 
deb«me
[
dÀvñ
] = 't';

844 
debdñim
[
dÀvñ
] = '_';

845 i‡(++
dÀvñ
 >
dlmax
)

846 
	`grow_dÀvñ
();

849 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

850 
°
 = 
°ack
->
¨y_¨øy
;

851 
ªt°r
 = 
°
[
√w•
];

856 
√xt_ôî
:

857 #ifde‡
DEBUGGING


858 
dÀvñ
 = 
ﬁddÀvñ
;

860 i‡(
cmd
->
ucmd
.
ccmd
.
cc_Æt
) {

861 #ifde‡
DEBUGGING


862 i‡(
debug
) {

863 
deb«me
[
dÀvñ
] = 'a';

864 
debdñim
[
dÀvñ
] = '_';

865 i‡(++
dÀvñ
 >
dlmax
)

866 
	`grow_dÀvñ
();

869 
√w•
 = 
	`cmd_exec
(
cmd
->
ucmd
.
ccmd
.
cc_Æt
,
gimme
 && (
cmdÊags
 & 
CF_TERM
),
•
);

870 
°
 = 
°ack
->
¨y_¨øy
;

871 
ªt°r
 = 
°
[
√w•
];

873 
föish_whûe
:

874 
cur•©
 = 
ﬁd•©
;

875 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
) {

876 i‡(
cmdÊags
 & 
CF_TERM
) {

877 
m©ch
 = 
•
 + 1; m©ch <
√w•
; match++)

878 
°
[
m©ch
] = 
	`°r_m‹èl
(st[match]);

879 
ªt°r
 = 
°
[
√w•
];

881 
	`ª°‹ñi°
(
ﬁdßve
);

883 #ifde‡
DEBUGGING


884 
dÀvñ
 = 
ﬁddÀvñ
 - 1;

886 i‡(
cmd
->
c_ty≥
 !
C_BLOCK
)

887 
u¡û_lo›
;

889 i‡(
cmdÊags
 & 
CF_LOOP
) {

890 
cmdÊags
 |
CF_COND
;

891 #ifde‡
DEBUGGING


892 
dÀvñ
 = 
ítdÀvñ
;

894 
u¡û_lo›
;

896 
√xt_cmd
:

897 i‡(
cmdÊags
 & 
CF_ONCE
) {

898 #ifde‡
DEBUGGING


899 i‡(
debug
 & 4) {

900 
tmps
 = 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
;

901 
	`deb
("(P›pögÜabñ #%d %s)\n",
lo›_±r
, 
tmps
 ?Åmps : "");

904 
lo›_±r
--;

905 i‡((
cmdÊags
 & 
CF_OPTIMIZE
Ë=
CFT_ARRAY
 &&

906 
ßve°ack
->
¨y_fûl
 > 
¨y›tßve
)

907 
	`ª°‹ñi°
(
¨y›tßve
);

909 
cmd
 = cmd->
c_√xt
;

910 
èû_ªcursi⁄_íåy
;

911 
	}
}

913 #ifde‡
DEBUGGING


914 #i‚de‡
I_VARARGS


916 
	$deb
(
∑t
,
a1
,
a2
,
a3
,
a4
,
a5
,
a6
,
a7
,
a8
)

917 *
∑t
;

919 
i
;

921 
	`Ârötf
(
°dîr
,"%-4ld",()
curcmd
->
c_löe
);

922 
i
=0; i<
dÀvñ
; i++)

923 
	`Ârötf
(
°dîr
,"%c%¯",
deb«me
[
i
],
debdñim
[i]);

924 
	`Ârötf
(
°dîr
,
∑t
,
a1
,
a2
,
a3
,
a4
,
a5
,
a6
,
a7
,
a8
);

925 
	}
}

928 
	$deb
(
va_Æi°
)

929 
va_d˛


931 
va_li°
 
¨gs
;

932 *
∑t
;

933 
i
;

935 
	`va_°¨t
(
¨gs
);

936 
	`Ârötf
(
°dîr
,"%-4ld",()
curcmd
->
c_löe
);

937 
i
=0; i<
dÀvñ
; i++)

938 
	`Ârötf
(
°dîr
,"%c%¯",
deb«me
[
i
],
debdñim
[i]);

940 
∑t
 = 
	`va_¨g
(
¨gs
, *);

941 (Ë
	`vÂrötf
(
°dîr
,
∑t
,
¨gs
);

942 
	`va_íd
–
¨gs
 );

943 
	}
}

947 
	$c›y›t
(
cmd
,
which
)

948 
CMD
 *
cmd
;

949 
CMD
 *
which
;

951 
cmd
->
c_Êags
 &
CF_ONCE
|
CF_COND
|
CF_LOOP
;

952 
cmd
->
c_Êags
 |
which
->c_flags;

953 
cmd
->
c_sh‹t
 = 
which
->c_short;

954 
cmd
->
c_¶í
 = 
which
->c_slen;

955 
cmd
->
c_°ab
 = 
which
->c_stab;

956  
cmd
->
c_Êags
;

957 
	}
}

959 
ARRAY
 *

960 
	$ßvóry
(
°ab
)

961 
STAB
 *
°ab
;

963 
STR
 *
°r
;

965 
°r
 = 
	`Så_√w
(10,0);

966 
°r
->
°r_°©e
 = 
SS_SARY
;

967 
°r
->
°r_u
.
°r_°ab
 = 
°ab
;

968 i‡(
°r
->
°r_±r
) {

969 
	`Sa„‰ì
(
°r
->
°r_±r
);

970 
°r
->
°r_±r
 = 
NuŒch
;

971 
°r
->
°r_Àn
 = 0;

973 
°r
->
°r_±r
 = (*)
	`°ab_¨øy
(
°ab
);

974 ()
	`≠ush
(
ßve°ack
,
°r
);

975 
	`°ab_x¨øy
(
°ab
Ë
	`NuŒ
(
ARRAY
*);

976  
	`°ab_x¨øy
(
	`Ødd
(
°ab
));

977 
	}
}

979 
HASH
 *

980 
	$ßvehash
(
°ab
)

981 
STAB
 *
°ab
;

983 
STR
 *
°r
;

985 
°r
 = 
	`Så_√w
(11,0);

986 
°r
->
°r_°©e
 = 
SS_SHASH
;

987 
°r
->
°r_u
.
°r_°ab
 = 
°ab
;

988 i‡(
°r
->
°r_±r
) {

989 
	`Sa„‰ì
(
°r
->
°r_±r
);

990 
°r
->
°r_±r
 = 
NuŒch
;

991 
°r
->
°r_Àn
 = 0;

993 
°r
->
°r_±r
 = (*)
	`°ab_hash
(
°ab
);

994 ()
	`≠ush
(
ßve°ack
,
°r
);

995 
	`°ab_xhash
(
°ab
Ë
	`NuŒ
(
HASH
*);

996  
	`°ab_xhash
(
	`hadd
(
°ab
));

997 
	}
}

1000 
	$ßveôem
(
ôem
)

1001 
STR
 *
ôem
;

1003 
STR
 *
°r
;

1005 ()
	`≠ush
(
ßve°ack
,
ôem
);

1006 
°r
 = 
	`Så_√w
(12,0);

1007 
	`°r_s£t
(
°r
,
ôem
);

1008 ()
	`≠ush
(
ßve°ack
,
°r
);

1009 
	}
}

1012 
	$ßveöt
(
öç
)

1013 *
öç
;

1015 
STR
 *
°r
;

1017 
°r
 = 
	`Så_√w
(13,0);

1018 
°r
->
°r_°©e
 = 
SS_SINT
;

1019 
°r
->
°r_u
.
°r_u£ful
 = ()*
öç
;

1020 i‡(
°r
->
°r_±r
) {

1021 
	`Sa„‰ì
(
°r
->
°r_±r
);

1022 
°r
->
°r_Àn
 = 0;

1024 
°r
->
°r_±r
 = (*)
öç
;

1025 ()
	`≠ush
(
ßve°ack
,
°r
);

1026 
	}
}

1029 
	$ßvñ⁄g
(
l⁄gp
)

1030 *
l⁄gp
;

1032 
STR
 *
°r
;

1034 
°r
 = 
	`Så_√w
(14,0);

1035 
°r
->
°r_°©e
 = 
SS_SLONG
;

1036 
°r
->
°r_u
.
°r_u£ful
 = *
l⁄gp
;

1037 i‡(
°r
->
°r_±r
) {

1038 
	`Sa„‰ì
(
°r
->
°r_±r
);

1039 
°r
->
°r_Àn
 = 0;

1041 
°r
->
°r_±r
 = (*)
l⁄gp
;

1042 ()
	`≠ush
(
ßve°ack
,
°r
);

1043 
	}
}

1046 
	$ßve•å
(
•å
)

1047 
STR
 **
•å
;

1049 
STR
 *
°r
;

1051 
°r
 = 
	`Så_√w
(15,0);

1052 
°r
->
°r_°©e
 = 
SS_SSTRP
;

1053 
°r
->
°r_magic
 = *
•å
;

1054 i‡(
°r
->
°r_±r
) {

1055 
	`Sa„‰ì
(
°r
->
°r_±r
);

1056 
°r
->
°r_Àn
 = 0;

1058 
°r
->
°r_±r
 = (*)
•å
;

1059 ()
	`≠ush
(
ßve°ack
,
°r
);

1060 
	}
}

1063 
	$ßvío°ab
(
°ab
)

1064 
STAB
 *
°ab
;

1066 
STR
 *
°r
;

1068 
°r
 = 
	`Så_√w
(16,0);

1069 
°r
->
°r_°©e
 = 
SS_SNSTAB
;

1070 
°r
->
°r_magic
 = (
STR
*)
°ab
;

1071 ()
	`≠ush
(
ßve°ack
,
°r
);

1072 
	}
}

1075 
	$ßveh±r
(
h±r
)

1076 
HASH
 **
h±r
;

1078 
STR
 *
°r
;

1080 
°r
 = 
	`Så_√w
(17,0);

1081 
°r
->
°r_°©e
 = 
SS_SHPTR
;

1082 
°r
->
°r_u
.
°r_hash
 = *
h±r
;

1083 i‡(
°r
->
°r_±r
) {

1084 
	`Sa„‰ì
(
°r
->
°r_±r
);

1085 
°r
->
°r_Àn
 = 0;

1087 
°r
->
°r_±r
 = (*)
h±r
;

1088 ()
	`≠ush
(
ßve°ack
,
°r
);

1089 
	}
}

1092 
	$ßvó±r
(
≠å
)

1093 
ARRAY
 **
≠å
;

1095 
STR
 *
°r
;

1097 
°r
 = 
	`Så_√w
(17,0);

1098 
°r
->
°r_°©e
 = 
SS_SAPTR
;

1099 
°r
->
°r_u
.
°r_¨øy
 = *
≠å
;

1100 i‡(
°r
->
°r_±r
) {

1101 
	`Sa„‰ì
(
°r
->
°r_±r
);

1102 
°r
->
°r_Àn
 = 0;

1104 
°r
->
°r_±r
 = (*)
≠å
;

1105 ()
	`≠ush
(
ßve°ack
,
°r
);

1106 
	}
}

1109 
	$ßvñi°
(
ßrg
,
maxßrg
)

1110 
STR
 **
ßrg
;

1111 
maxßrg
;

1113 
STR
 *
°r
;

1114 
i
;

1116 
i
 = 1; i <
maxßrg
; i++) {

1117 ()
	`≠ush
(
ßve°ack
,
ßrg
[
i
]);

1118 
°r
 = 
	`Så_√w
(18,0);

1119 
	`°r_s£t
(
°r
,
ßrg
[
i
]);

1120 ()
	`≠ush
(
ßve°ack
,
°r
);

1121 
ßrg
[
i
]->
°r_u
.
°r_u£ful
 = -1;

1123 
	}
}

1126 
	$ª°‹ñi°
(
ba£
)

1127 
ba£
;

1129 
STR
 *
°r
;

1130 
STR
 *
vÆue
;

1131 
STAB
 *
°ab
;

1133 i‡(
ba£
 < -1)

1134 
	`Áèl
("panic: corrupt saved stack index");

1135 
ßve°ack
->
¨y_fûl
 > 
ba£
) {

1136 
vÆue
 = 
	`≠›
(
ßve°ack
);

1137 
vÆue
->
°r_°©e
) {

1138 
SS_NORM
:

1139 
SS_INCR
:

1140 
°r
 = 
	`≠›
(
ßve°ack
);

1141 
	`°r_ª∂a˚
(
°r
,
vÆue
);

1142 
	`STABSET
(
°r
);

1144 
SS_SARY
:

1145 
°ab
 = 
vÆue
->
°r_u
.
°r_°ab
;

1146 
	`a‰ì
(
	`°ab_x¨øy
(
°ab
));

1147 
	`°ab_x¨øy
(
°ab
Ë(
ARRAY
*)
vÆue
->
°r_±r
;

1148 
vÆue
->
°r_±r
 = 
NuŒch
;

1149 
	`°r_‰ì
(
vÆue
);

1151 
SS_SHASH
:

1152 
°ab
 = 
vÆue
->
°r_u
.
°r_°ab
;

1153 ()
	`h‰ì
(
	`°ab_xhash
(
°ab
), 
FALSE
);

1154 
	`°ab_xhash
(
°ab
Ë(
HASH
*)
vÆue
->
°r_±r
;

1155 
vÆue
->
°r_±r
 = 
NuŒch
;

1156 
	`°r_‰ì
(
vÆue
);

1158 
SS_SINT
:

1159 *((*)
vÆue
->
°r_±r
Ë()vÆue->
°r_u
.
°r_u£ful
;

1160 
vÆue
->
°r_±r
 = 
NuŒch
;

1161 
	`°r_‰ì
(
vÆue
);

1163 
SS_SLONG
:

1164 *((*)
vÆue
->
°r_±r
ËvÆue->
°r_u
.
°r_u£ful
;

1165 
vÆue
->
°r_±r
 = 
NuŒch
;

1166 
	`°r_‰ì
(
vÆue
);

1168 
SS_SSTRP
:

1169 *((
STR
**)
vÆue
->
°r_±r
ËvÆue->
°r_magic
;

1170 
vÆue
->
°r_magic
 = 
NuŒ°r
;

1171 
vÆue
->
°r_±r
 = 
NuŒch
;

1172 
	`°r_‰ì
(
vÆue
);

1174 
SS_SHPTR
:

1175 *((
HASH
**)
vÆue
->
°r_±r
ËvÆue->
°r_u
.
°r_hash
;

1176 
vÆue
->
°r_±r
 = 
NuŒch
;

1177 
	`°r_‰ì
(
vÆue
);

1179 
SS_SAPTR
:

1180 *((
ARRAY
**)
vÆue
->
°r_±r
ËvÆue->
°r_u
.
°r_¨øy
;

1181 
vÆue
->
°r_±r
 = 
NuŒch
;

1182 
	`°r_‰ì
(
vÆue
);

1184 
SS_SNSTAB
:

1185 
°ab
 = (
STAB
*)
vÆue
->
°r_magic
;

1186 
vÆue
->
°r_magic
 = 
NuŒ°r
;

1187 ()
	`°ab_˛ór
(
°ab
);

1188 
	`°r_‰ì
(
vÆue
);

1190 
SS_SCSV
:

1192 
CSV
 *
csv
 = (CSV*Ë
vÆue
->
°r_±r
;

1194 
curcmd
 = 
csv
->curcmd;

1195 
curcsv
 = 
csv
->curcsv;

1196 
csv
->
sub
->
dïth
 = csv->depth;

1197 i‡(
csv
->
haßrgs
) {

1198 
	`a‰ì
(
csv
->
¨g¨øy
);

1199 
	`°ab_x¨øy
(
def°ab
Ë
csv
->
ßvóºay
;

1201 
	`°r_‰ì
(
vÆue
);

1205 
	`Áèl
("panic:Ñestorelist inconsistency");

1208 
	}
}

1210 #ifde‡
DEBUGGING


1212 
	$grow_dÀvñ
()

1214 
dlmax
 += 128;

1215 
	`Ríew
(
deb«me
, 
dlmax
, );

1216 
	`Ríew
(
debdñim
, 
dlmax
, );

1217 
	}
}

	@cmd.h

14 
	#C_NULL
 0

	)

15 
	#C_IF
 1

	)

16 
	#C_ELSE
 2

	)

17 
	#C_WHILE
 3

	)

18 
	#C_BLOCK
 4

	)

19 
	#C_EXPR
 5

	)

20 
	#C_NEXT
 6

	)

21 
	#C_ELSIF
 7

	)

22 
	#C_CSWITCH
 8

	)

23 
	#C_NSWITCH
 9

	)

25 #ifde‡
DEBUGGING


26 #i‚de‡
DOINIT


27 
*
cmd«me
[];

29 *
	gcmd«me
[] = {

45 
	#CF_OPTIMIZE
 077

	)

46 
	#CF_FIRSTNEG
 0100

	)

47 
	#CF_NESURE
 0200

	)

48 
	#CF_EQSURE
 0400

	)

49 
	#CF_COND
 01000

	)

51 
	#CF_LOOP
 02000

	)

52 
	#CF_INVERT
 04000

	)

53 
	#CF_ONCE
 010000

	)

54 
	#CF_FLIP
 020000

	)

55 
	#CF_TERM
 040000

	)

56 
	#CF_DBSUB
 0100000

	)

58 
	#CFT_FALSE
 0

	)

59 
	#CFT_TRUE
 1

	)

60 
	#CFT_REG
 2

	)

61 
	#CFT_ANCHOR
 3

	)

62 
	#CFT_STROP
 4

	)

63 
	#CFT_SCAN
 5

	)

64 
	#CFT_GETS
 6

	)

65 
	#CFT_EVAL
 7

	)

66 
	#CFT_UNFLIP
 8

	)

67 
	#CFT_CHOP
 9

	)

68 
	#CFT_ARRAY
 10

	)

69 
	#CFT_INDGETS
 11

	)

70 
	#CFT_NUMOP
 12

	)

71 
	#CFT_CCLASS
 13

	)

72 
	#CFT_D0
 14

	)

73 
	#CFT_D1
 15

	)

75 #ifde‡
DEBUGGING


76 #i‚de‡
DOINIT


77 
*
cmd›t
[];

79 *
	gcmd›t
[] = {

99 
	sacmd
 {

100 
STAB
 *
	mac_°ab
;

101 
ARG
 *
	mac_ex¥
;

104 
	sccmd
 {

105 
CMD
 *
	mcc_åue
;

106 
CMD
 *
	mcc_Æt
;

109 
	sscmd
 {

110 
CMD
 **
	msc_√xt
;

111 
	msc_off£t
;

112 
	msc_max
;

115 
	scmd
 {

116 
CMD
 *
	mc_√xt
;

117 
ARG
 *
	mc_ex¥
;

118 
CMD
 *
	mc_hód
;

119 
STR
 *
	mc_sh‹t
;

120 
STAB
 *
	mc_°ab
;

121 
SPAT
 *
	mc_•©
;

122 *
	mc_œbñ
;

123 
	uucmd
 {

124 
acmd
 
	macmd
;

125 
ccmd
 
	mccmd
;

126 
scmd
 
	mscmd
;

127 } 
	mucmd
;

128 
	mc_¶í
;

129 
VOLATILE
 
	mc_Êags
;

130 
HASH
 *
	mc_°ash
;

131 
STAB
 *
	mc_fûe°ab
;

132 
löe_t
 
	mc_löe
;

133 
	mc_ty≥
;

136 
	#NuŒcmd
 
	`NuŒ
(
CMD
*)

	)

137 
	#NuŒcsv
 
	`NuŒ
(
CSV
*)

	)

139 
EXT
 
CMD
 * 
VOLATILE
 
maö_roŸ
 
INIT
(
NuŒcmd
);

140 
EXT
 
CMD
 * 
VOLATILE
 
evÆ_roŸ
 
INIT
(
NuŒcmd
);

142 
EXT
 
CMD
 
	gcompûög
;

143 
EXT
 
CMD
 * 
VOLATILE
 
curcmd
 
INIT
(&
compûög
);

144 
EXT
 
CSV
 * 
VOLATILE
 
curcsv
 
INIT
(
NuŒcsv
);

146 
	sˇŒßve
 {

147 
SUBR
 *
	msub
;

148 
STAB
 *
	m°ab
;

149 
CSV
 *
	mcurcsv
;

150 
CMD
 *
	mcurcmd
;

151 
ARRAY
 *
	mßvóºay
;

152 
ARRAY
 *
	m¨g¨øy
;

153 
	mdïth
;

154 
	mw™èºay
;

155 
	mhaßrgs
;

158 
	scompcmd
 {

159 
CMD
 *
	mcomp_åue
;

160 
CMD
 *
	mcomp_Æt
;

163 
›t_¨g
();

164 
evÆ°©ic
();

165 
cmd_exec
();

	@config.h

1 #i‚de‡
c⁄fig_h


2 
	#c⁄fig_h


	)

32 
	#ALIGNBYTES
 8

	)

39 
	#BIN
 "/u§/loˇl/bö"

	)

45 
	#BYTEORDER
 0x4321

	)

58 
	#CPPSTDIN
 "/u§/loˇl/lib/gcc-˝p"

	)

59 
	#CPPMINUS
 ""

	)

66 
	#HAS_BCMP


	)

72 
	#HAS_BCOPY


	)

79 
	#HAS_BZERO


	)

92 
	#CASTNEGFLOAT


	)

93 
	#CASTFLAGS
 0

	)

101 
	#CHARSPRINTF


	)

113 
	#HAS_CRYPT


	)

140 
	#HAS_DUP2


	)

146 
	#HAS_FCHMOD


	)

152 
	#HAS_FCHOWN


	)

158 
	#HAS_FCNTL


	)

164 
	#FLEXFILENAMES


	)

170 
	#HAS_FLOCK


	)

177 
	#HAS_GETGROUPS


	)

189 
	#HAS_GETPGRP


	)

201 
	#HAS_GETPRIORITY


	)

219 
	#HAS_HTONS


	)

220 
	#HAS_HTONL


	)

221 
	#HAS_NTOHS


	)

222 
	#HAS_NTOHL


	)

240 
	#HAS_KILLPG


	)

246 
	#HAS_LSTAT


	)

252 
	#HAS_MEMCMP


	)

259 
	#HAS_MEMCPY


	)

266 
	#HAS_MKDIR


	)

272 
	#HAS_MSG


	)

278 
	#HAS_MSGCTL


	)

284 
	#HAS_MSGGET


	)

290 
	#HAS_MSGRCV


	)

296 
	#HAS_MSGSND


	)

314 
	#HAS_OPEN3


	)

320 
	#HAS_READDIR


	)

327 
	#HAS_RENAME


	)

334 
	#HAS_RMDIR


	)

340 
	#HAS_SELECT


	)

346 
	#HAS_SEM


	)

352 
	#HAS_SEMCTL


	)

358 
	#HAS_SEMGET


	)

364 
	#HAS_SEMOP


	)

370 
	#HAS_SETEGID


	)

376 
	#HAS_SETEUID


	)

382 
	#HAS_SETPGRP


	)

394 
	#HAS_SETPRIORITY


	)

405 
	#HAS_SETREGID


	)

417 
	#HAS_SETREUID


	)

436 
	#HAS_SHM


	)

442 
	#HAS_SHMAT


	)

448 
	#HAS_SHMCTL


	)

454 
	#HAS_SHMDT


	)

460 
	#HAS_SHMGET


	)

474 
	#HAS_SOCKET


	)

476 
	#HAS_SOCKETPAIR


	)

484 
	#STATBLOCKS


	)

497 
	#STRUCTCOPY


	)

509 
	#HAS_SYMLINK


	)

515 
	#HAS_SYSCALL


	)

521 
	#HAS_TRUNCATE


	)

526 
	#HAS_VFORK


	)

540 
	#VOIDSIG


	)

541 
	#TO_SIGNAL
 

	)

547 
	#HASVOLATILE


	)

560 
	#HAS_VPRINTF


	)

561 
	#CHARVSPRINTF


	)

571 
	#HAS_WAITPID


	)

577 
	#GIDTYPE
 
gid_t


	)

583 
	#GROUPSTYPE
 

	)

600 
	#I_GRP


	)

610 
	#I_NETINET_IN


	)

641 
	#I_PWD


	)

652 
	#I_SYS_FILE


	)

658 
	#I_SYSIOCTL


	)

673 
	#I_TIME


	)

674 
	#I_SYS_TIME


	)

682 
	#I_UTIME


	)

700 
	#INTSIZE
 4

	)

727 
	#I_DIRENT


	)

737 
	#MALLOCPTRTYPE
 

	)

744 
	#RANDBITS
 31

	)

751 
	#SCRIPTDIR
 "/u§/loˇl/bö"

	)

756 
	#SIG_NAME
 "ZERO","HUP","INT","QUIT","ILL","TRAP","ABRT","EMT","FPE","KILL","BUS","SEGV","SYS","PIPE","ALRM","TERM","URG","STOP","TSTP","CONT","CLD","TTIN","TTOU","IO","XCPU","XFSZ","VTALRM","PROF","WINCH","LOST","USR1","USR2"

	)

762 
	#STDCHAR
 

	)

768 
	#UIDTYPE
 
uid_t


	)

801 #i‚de‡
VOIDWANT


802 
	#VOIDWANT
 7

	)

804 
	#VOIDHAVE
 7

	)

805 #i‡(
VOIDHAVE
 & 
VOIDWANT
) != VOIDWANT

806 

	)

807 
	#VOID


	)

808 
	#VOIDP
 (*)

	)

809 
	#M_VOID


	)

811 
	#VOID
 

	)

812 
	#VOIDP
 (*)

	)

821 
	#PRIVLIB
 "/u§/loˇl/lib/≥æ"

	)

	@cons.c

14 
	~"EXTERN.h
"

15 
	~"≥æ.h
"

16 
	~"≥æy.h
"

18 
*
tokíame
[];

19 

yych¨
;

21 
cmd_toßve
();

22 
¨g_toßve
();

23 
•©_toßve
();

25 
boﬁ
 
	gßw_ªtu∫
;

27 
SUBR
 *

28 
	$make_sub
(
«me
,
cmd
)

29 *
«me
;

30 
CMD
 *
cmd
;

32 
SUBR
 *
sub
;

33 
STAB
 *
°ab
 = 
	`°abít
(
«me
,
TRUE
);

35 
	`Newz
(101,
sub
,1,
SUBR
);

36 i‡(
	`°ab_sub
(
°ab
)) {

37 i‡(
dow¨n
) {

38 
CMD
 *
ﬁdcurcmd
 = 
curcmd
;

40 i‡(
cmd
)

41 
curcmd
 = 
cmd
;

42 
	`w¨n
("Subroutöê%†ªdeföed",
«me
);

43 
curcmd
 = 
ﬁdcurcmd
;

45 i‡(
	`°ab_sub
(
°ab
)->
cmd
) {

46 
	`cmd_‰ì
(
	`°ab_sub
(
°ab
)->
cmd
);

47 
	`°ab_sub
(
°ab
)->
cmd
 = 
NuŒcmd
;

48 
	`a‰ì
(
	`°ab_sub
(
°ab
)->
toßve
);

50 
	`Sa„‰ì
(
	`°ab_sub
(
°ab
));

52 
	`°ab_sub
(
°ab
Ë
sub
;

53 
sub
->
fûe°ab
 = 
curcmd
->
c_fûe°ab
;

54 
ßw_ªtu∫
 = 
FALSE
;

55 
toßve
 = 
	`™ew
(
NuŒ°ab
);

56 
toßve
->
¨y_fûl
 = 0;

57 ()
	`cmd_toßve
(
cmd
,
FALSE
);

58 
sub
->
toßve
 =Åosave;

59 i‡(
ßw_ªtu∫
) {

60 
compcmd
 
mycompblock
;

62 
mycompblock
.
comp_åue
 = 
cmd
;

63 
mycompblock
.
comp_Æt
 = 
NuŒcmd
;

64 
cmd
 = 
	`add_œbñ
(
	`ßve°r
("_SUB_"),
	`make_ccmd
(
C_BLOCK
,
NuŒ¨g
,
mycompblock
));

65 
ßw_ªtu∫
 = 
FALSE
;

66 
cmd
->
c_Êags
 |
CF_TERM
;

68 
sub
->
cmd
 = cmd;

69 i‡(
≥ædb
) {

70 
STR
 *
°r
;

71 
STR
 *
tmp°r
 = 
	`°r_m‹èl
(&
°r_undef
);

73 
	`•rötf
(
buf
,"%s:%ld",
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
,

74 ()
sublöe
);

75 
°r
 = 
	`°r_make
(
buf
,0);

76 
	`°r_ˇt
(
°r
,"-");

77 
	`•rötf
(
buf
,"%ld",()
curcmd
->
c_löe
);

78 
	`°r_ˇt
(
°r
,
buf
);

79 
«me
 = 
	`°r_gë
(
sub«me
);

80 
	`°ab_fuŒ«me
(
tmp°r
,
°ab
);

81 
	`h°‹e
(
	`°ab_xhash
(
DBsub
), 
tmp°r
->
°r_±r
,Åmp°r->
°r_cur
, 
°r
, 0);

82 
	`°r_£t
(
sub«me
,"main");

84 
sublöe
 = 0;

85  
sub
;

86 
	}
}

88 
SUBR
 *

89 
	$make_usub
(
«me
, 
ix
, 
subaddr
, 
fûíame
)

90 *
«me
;

91 
ix
;

92 (*
subaddr
)();

93 *
fûíame
;

95 
SUBR
 *
sub
;

96 
STAB
 *
°ab
 = 
	`°abít
(
«me
,
Æl°abs
);

98 i‡(!
°ab
)

99  
	`NuŒ
(
SUBR
*);

100 
	`Newz
(101,
sub
,1,
SUBR
);

101 i‡(
	`°ab_sub
(
°ab
)) {

102 i‡(
dow¨n
)

103 
	`w¨n
("Subroutöê%†ªdeföed",
«me
);

104 i‡(
	`°ab_sub
(
°ab
)->
cmd
) {

105 
	`cmd_‰ì
(
	`°ab_sub
(
°ab
)->
cmd
);

106 
	`°ab_sub
(
°ab
)->
cmd
 = 
NuŒcmd
;

107 
	`a‰ì
(
	`°ab_sub
(
°ab
)->
toßve
);

109 
	`Sa„‰ì
(
	`°ab_sub
(
°ab
));

111 
	`°ab_sub
(
°ab
Ë
sub
;

112 
sub
->
fûe°ab
 = 
	`f°ab
(
fûíame
);

113 
sub
->
u£rsub
 = 
subaddr
;

114 
sub
->
u£rödex
 = 
ix
;

115  
sub
;

116 
	}
}

118 
	$make_f‹m
(
°ab
,
fcmd
)

119 
STAB
 *
°ab
;

120 
FCMD
 *
fcmd
;

122 i‡(
	`°ab_f‹m
(
°ab
)) {

123 
FCMD
 *
tmpfcmd
;

124 
FCMD
 *
√xtfcmd
;

126 
tmpfcmd
 = 
	`°ab_f‹m
(
°ab
);Åmpfcmd;Åmpfcmd = 
√xtfcmd
) {

127 
√xtfcmd
 = 
tmpfcmd
->
f_√xt
;

128 i‡(
tmpfcmd
->
f_ex¥
)

129 
	`¨g_‰ì
(
tmpfcmd
->
f_ex¥
);

130 i‡(
tmpfcmd
->
f_u≈¨£d
)

131 
	`°r_‰ì
(
tmpfcmd
->
f_u≈¨£d
);

132 i‡(
tmpfcmd
->
f_¥e
)

133 
	`Sa„‰ì
(
tmpfcmd
->
f_¥e
);

134 
	`Sa„‰ì
(
tmpfcmd
);

137 
	`°ab_f‹m
(
°ab
Ë
fcmd
;

138 
	}
}

140 
CMD
 *

141 
	$block_hód
(
èû
)

142 
CMD
 *
èû
;

144 
CMD
 *
hód
;

145 
›t
;

146 
œ°_›t
 = 0;

147 
STAB
 *
œ°_°ab
 = 
NuŒ°ab
;

148 
cou¡
 = 0;

149 
CMD
 *
swôchbeg
 = 
NuŒcmd
;

151 i‡(
èû
 =
NuŒcmd
) {

152  
èû
;

154 
hód
 = 
èû
->
c_hód
;

156 
èû
 = 
hód
;Åaû;Åaû =Åaû->
c_√xt
) {

159 i‡(
èû
->
c_ty≥
 =
C_IF
) {

160 i‡(!(
èû
->
ucmd
.
ccmd
.
cc_Æt
 =Åaû->ucmd.ccmd.cc_Æt->
c_√xt
))

161 
èû
->
c_Êags
 |
CF_TERM
;

163 i‡(
èû
->
c_ty≥
 =
C_EXPR
) {

164 
ARG
 *
¨g
;

166 i‡(
èû
->
ucmd
.
acmd
.
ac_ex¥
)

167 
¨g
 = 
èû
->
ucmd
.
acmd
.
ac_ex¥
;

169 
¨g
 = 
èû
->
c_ex¥
;

170 i‡(
¨g
) {

171 i‡(
¨g
->
¨g_ty≥
 =
O_RETURN
)

172 
èû
->
c_Êags
 |
CF_TERM
;

173 i‡(
¨g
->
¨g_ty≥
 =
O_ITEM
 &&árg[1].¨g_ty≥ =
A_CMD
)

174 
èû
->
c_Êags
 |
CF_TERM
;

177 i‡(!
èû
->
c_√xt
)

178 
èû
->
c_Êags
 |
CF_TERM
;

180 i‡(
èû
->
c_ex¥
 && (èû->
c_Êags
 & 
CF_OPTIMIZE
Ë=
CFT_FALSE
)

181 
	`›t_¨g
(
èû
,1,Åaû->
c_ty≥
 =
C_EXPR
);

184 
èû
->
c_Êags
 & (
CF_OPTIMIZE
|
CF_FIRSTNEG
|
CF_INVERT
)) {

185 
CFT_ANCHOR
:

186 i‡(
	`°abít
("*",
FALSE
)) {

187 
›t
 = 0;

191 
CFT_STROP
:

192 
›t
 = (
èû
->
c_Êags
 & 
CF_NESURE
Ë? 
CFT_STROP
 : 0;

194 
CFT_CCLASS
:

195 
›t
 = 
CFT_STROP
;

197 
CFT_NUMOP
:

198 
›t
 = (
èû
->
c_¶í
 =
O_NE
 ? 0 : 
CFT_NUMOP
);

199 i‡((
èû
->
c_Êags
&(
CF_NESURE
|
CF_EQSURE
)) != (CF_NESURE|CF_EQSURE))

200 
›t
 = 0;

203 
›t
 = 0;

205 i‡(
›t
 && o± =
œ°_›t
 && 
èû
->
c_°ab
 =
œ°_°ab
)

206 
cou¡
++;

208 i‡(
cou¡
 >= 3) {

209 i‡(
œ°_›t
 =
CFT_NUMOP
)

210 
	`make_nswôch
(
swôchbeg
,
cou¡
);

212 
	`make_cswôch
(
swôchbeg
,
cou¡
);

214 i‡(
›t
) {

215 
cou¡
 = 1;

216 
swôchbeg
 = 
èû
;

219 
cou¡
 = 0;

221 
œ°_›t
 = 
›t
;

222 
œ°_°ab
 = 
èû
->
c_°ab
;

224 i‡(
cou¡
 >= 3) {

225 i‡(
œ°_›t
 =
CFT_NUMOP
)

226 
	`make_nswôch
(
swôchbeg
,
cou¡
);

228 
	`make_cswôch
(
swôchbeg
,
cou¡
);

230  
hód
;

231 
	}
}

237 
	$make_cswôch
(
hód
,
cou¡
)

238 
CMD
 *
hód
;

239 
cou¡
;

241 
CMD
 *
cur
;

242 
CMD
 **
loc
;

243 
i
;

244 
mö
 = 255;

245 
max
 = 0;

248 
	`New
(102,
cur
, 1, 
CMD
);

249 #ifde‡
STRUCTCOPY


250 *
cur
 = *
hód
;

252 
	`C›y
(
hód
,
cur
,1,
CMD
);

254 
	`Zîo
(
hód
,1,
CMD
);

255 
hód
->
c_ty≥
 = 
C_CSWITCH
;

256 
hód
->
c_√xt
 = 
cur
;

257 
hód
->
c_°ab
 = 
cur
->c_stab;

259 
	`Newz
(103,
loc
,258,
CMD
*);

260 
loc
++;

261 
cou¡
--) {

262 i‡((
cur
->
c_Êags
 & 
CF_OPTIMIZE
Ë=
CFT_CCLASS
) {

263 
i
 = 0; i <= 255; i++) {

264 i‡(!
loc
[
i
] && 
cur
->
c_sh‹t
->
°r_±r
[i>>3] & (1 << (i&7))) {

265 
loc
[
i
] = 
cur
;

266 i‡(
i
 < 
mö
)

267 
mö
 = 
i
;

268 i‡(
i
 > 
max
)

269 
max
 = 
i
;

274 
i
 = *
cur
->
c_sh‹t
->
°r_±r
 & 255;

275 i‡(!
loc
[
i
]) {

276 
loc
[
i
] = 
cur
;

277 i‡(
i
 < 
mö
)

278 
mö
 = 
i
;

279 i‡(
i
 > 
max
)

280 
max
 = 
i
;

283 
cur
 = cur->
c_√xt
;

285 
max
++;

286 i‡(
mö
 > 0)

287 
	`C›y
(&
loc
[
mö
],&loc[0], 
max
 - mö, 
CMD
*);

288 
loc
--;

289 
mö
--;

290 
max
 -
mö
;

291 
i
 = 0; i <
max
; i++)

292 i‡(!
loc
[
i
])

293 
loc
[
i
] = 
cur
;

294 
	`Ríew
(
loc
,
max
+1,
CMD
*);

295 
hód
->
ucmd
.
scmd
.
sc_off£t
 = 
mö
;

296 
hód
->
ucmd
.
scmd
.
sc_max
 = 
max
;

297 
hód
->
ucmd
.
scmd
.
sc_√xt
 = 
loc
;

298 
	}
}

300 
	$make_nswôch
(
hód
,
cou¡
)

301 
CMD
 *
hód
;

302 
cou¡
;

304 
CMD
 *
cur
 = 
hód
;

305 
CMD
 **
loc
;

306 
i
;

307 
mö
 = 32767;

308 
max
 = -32768;

309 
‹igcou¡
 = 
cou¡
;

310 
vÆue
;

311 
ch™ged
;

313 
cou¡
--) {

314 
i
 = ()
	`°r_gnum
(
cur
->
c_sh‹t
);

315 
vÆue
 = ()
i
;

316 i‡(
vÆue
 !
cur
->
c_sh‹t
->
°r_u
.
°r_nvÆ
)

318 
ch™ged
 = 
i
;

319 i‡(
ch™ged
 !
i
)

321 i‡(
cur
->
c_¶í
 =
O_LE
)

322 
i
++;

323 i‡(
cur
->
c_¶í
 =
O_GE
)

324 
i
--;

325 i‡(
i
 < 
mö
)

326 
mö
 = 
i
;

327 i‡(
i
 > 
max
)

328 
max
 = 
i
;

329 
cur
 = cur->
c_√xt
;

331 
cou¡
 = 
‹igcou¡
;

332 i‡(
max
 - 
mö
 > 
cou¡
 * 2 + 10)

336 
	`New
(104,
cur
, 1, 
CMD
);

337 #ifde‡
STRUCTCOPY


338 *
cur
 = *
hód
;

340 
	`C›y
(
hód
,
cur
,1,
CMD
);

342 
	`Zîo
(
hód
,1,
CMD
);

343 
hód
->
c_ty≥
 = 
C_NSWITCH
;

344 
hód
->
c_√xt
 = 
cur
;

345 
hód
->
c_°ab
 = 
cur
->c_stab;

347 
	`Newz
(105,
loc
, 
max
 - 
mö
 + 3, 
CMD
*);

348 
loc
++;

349 
max
 -
mö
;

350 
max
++;

351 
cou¡
--) {

352 
i
 = ()
	`°r_gnum
(
cur
->
c_sh‹t
);

353 
i
 -
mö
;

354 
cur
->
c_¶í
) {

355 
O_LE
:

356 
i
++;

357 
O_LT
:

358 
i
--; i >= -1; i--)

359 i‡(!
loc
[
i
])

360 
loc
[
i
] = 
cur
;

362 
O_GE
:

363 
i
--;

364 
O_GT
:

365 
i
++; i <
max
; i++)

366 i‡(!
loc
[
i
])

367 
loc
[
i
] = 
cur
;

369 
O_EQ
:

370 i‡(!
loc
[
i
])

371 
loc
[
i
] = 
cur
;

374 
cur
 = cur->
c_√xt
;

376 
loc
--;

377 
mö
--;

378 
max
++;

379 
i
 = 0; i <
max
; i++)

380 i‡(!
loc
[
i
])

381 
loc
[
i
] = 
cur
;

382 
hód
->
ucmd
.
scmd
.
sc_off£t
 = 
mö
;

383 
hód
->
ucmd
.
scmd
.
sc_max
 = 
max
;

384 
hód
->
ucmd
.
scmd
.
sc_√xt
 = 
loc
;

385 
	}
}

387 
CMD
 *

388 
	$≠≥nd_löe
(
hód
,
èû
)

389 
CMD
 *
hód
;

390 
CMD
 *
èû
;

392 i‡(
èû
 =
NuŒcmd
)

393  
hód
;

394 i‡(!
èû
->
c_hód
)

395 
èû
->
c_hód
 =Åail;

396 i‡(
hód
 !
NuŒcmd
) {

397 
èû
 =Åaû->
c_hód
;

398 i‡(!
hód
->
c_hód
)

399 
hód
->
c_hód
 = head;

400 
hód
->
c_√xt
) {

401 
hód
->
c_√xt
->
c_hód
 = head->c_head;

402 
hód
 = hód->
c_√xt
;

404 
hód
->
c_√xt
 = 
èû
;

405 
èû
->
c_hód
 = 
hód
->c_head;

407 
èû
->
c_√xt
) {

408 
èû
->
c_√xt
->
c_hód
 =Åail->c_head;

409 
èû
 =Åaû->
c_√xt
;

411  
èû
;

412 
	}
}

414 
CMD
 *

415 
	$dodb
(
cur
)

416 
CMD
 *
cur
;

418 
CMD
 *
cmd
;

419 
CMD
 *
hód
 = 
cur
->
c_hód
;

420 
STR
 *
°r
;

422 i‡(!
hód
)

423 
hód
 = 
cur
;

424 i‡(!
hód
->
c_löe
)

425  
cur
;

426 
°r
 = 
	`a„tch
(
	`°ab_x¨øy
(
curcmd
->
c_fûe°ab
),()
hód
->
c_löe
,
FALSE
);

427 i‡(
°r
 =&
°r_undef
 || så->
°r_nok
)

428  
cur
;

429 
°r
->
°r_u
.
°r_nvÆ
 = ()
hód
->
c_löe
;

430 
°r
->
°r_nok
 = 1;

431 
	`Newz
(106,
cmd
,1,
CMD
);

432 
	`°r_magic
(
°r
, 
curcmd
->
c_fûe°ab
, 0, 
NuŒch
, 0);

433 
°r
->
°r_magic
->
°r_u
.
°r_cmd
 = 
cmd
;

434 
cmd
->
c_ty≥
 = 
C_EXPR
;

435 
cmd
->
ucmd
.
acmd
.
ac_°ab
 = 
NuŒ°ab
;

436 
cmd
->
ucmd
.
acmd
.
ac_ex¥
 = 
NuŒ¨g
;

437 
cmd
->
c_ex¥
 = 
	`make_›
(
O_SUBR
, 2,

438 
	`°ab2¨g
(
A_WORD
,
DB°ab
),

439 
NuŒ¨g
,

440 
NuŒ¨g
);

441 
cmd
->
c_Êags
 |
CF_COND
|
CF_DBSUB
|
CFT_D0
;

442 
cmd
->
c_löe
 = 
hód
->c_line;

443 
cmd
->
c_œbñ
 = 
hód
->c_label;

444 
cmd
->
c_fûe°ab
 = 
curcmd
->c_filestab;

445 
cmd
->
c_°ash
 = 
cur°ash
;

446  
	`≠≥nd_löe
(
cmd
, 
cur
);

447 
	}
}

449 
CMD
 *

450 
	$make_acmd
(
ty≥
,
°ab
,
c⁄d
,
¨g
)

451 
ty≥
;

452 
STAB
 *
°ab
;

453 
ARG
 *
c⁄d
;

454 
ARG
 *
¨g
;

456 
CMD
 *
cmd
;

458 
	`Newz
(107,
cmd
,1,
CMD
);

459 
cmd
->
c_ty≥
 = 
ty≥
;

460 
cmd
->
ucmd
.
acmd
.
ac_°ab
 = 
°ab
;

461 
cmd
->
ucmd
.
acmd
.
ac_ex¥
 = 
¨g
;

462 
cmd
->
c_ex¥
 = 
c⁄d
;

463 i‡(
c⁄d
)

464 
cmd
->
c_Êags
 |
CF_COND
;

465 i‡(
cmdlöe
 =
NOLINE
)

466 
cmd
->
c_löe
 = 
curcmd
->c_line;

468 
cmd
->
c_löe
 = 
cmdlöe
;

469 
cmdlöe
 = 
NOLINE
;

471 
cmd
->
c_fûe°ab
 = 
curcmd
->c_filestab;

472 
cmd
->
c_°ash
 = 
cur°ash
;

473 i‡(
≥ædb
)

474 
cmd
 = 
	`dodb
(cmd);

475  
cmd
;

476 
	}
}

478 
CMD
 *

479 
	$make_ccmd
(
ty≥
,
¨g
,
cblock
)

480 
ty≥
;

481 
ARG
 *
¨g
;

482 
compcmd
 
cblock
;

484 
CMD
 *
cmd
;

486 
	`Newz
(108,
cmd
, 1, 
CMD
);

487 
cmd
->
c_ty≥
 = 
ty≥
;

488 
cmd
->
c_ex¥
 = 
¨g
;

489 
cmd
->
ucmd
.
ccmd
.
cc_åue
 = 
cblock
.
comp_åue
;

490 
cmd
->
ucmd
.
ccmd
.
cc_Æt
 = 
cblock
.
comp_Æt
;

491 i‡(
¨g
)

492 
cmd
->
c_Êags
 |
CF_COND
;

493 i‡(
cmdlöe
 =
NOLINE
)

494 
cmd
->
c_löe
 = 
curcmd
->c_line;

496 
cmd
->
c_löe
 = 
cmdlöe
;

497 
cmdlöe
 = 
NOLINE
;

499 
cmd
->
c_fûe°ab
 = 
curcmd
->c_filestab;

500 
cmd
->
c_°ash
 = 
cur°ash
;

501 i‡(
≥ædb
)

502 
cmd
 = 
	`dodb
(cmd);

503  
cmd
;

504 
	}
}

506 
CMD
 *

507 
	$make_icmd
(
ty≥
,
¨g
,
cblock
)

508 
ty≥
;

509 
ARG
 *
¨g
;

510 
compcmd
 
cblock
;

512 
CMD
 *
cmd
;

513 
CMD
 *
Æt
;

514 
CMD
 *
cur
;

515 
CMD
 *
hód
;

516 
compcmd
 
ncblock
;

518 
	`Newz
(109,
cmd
, 1, 
CMD
);

519 
hód
 = 
cmd
;

520 
cmd
->
c_ty≥
 = 
ty≥
;

521 
cmd
->
c_ex¥
 = 
¨g
;

522 
cmd
->
ucmd
.
ccmd
.
cc_åue
 = 
cblock
.
comp_åue
;

523 
cmd
->
ucmd
.
ccmd
.
cc_Æt
 = 
cblock
.
comp_Æt
;

524 i‡(
¨g
)

525 
cmd
->
c_Êags
 |
CF_COND
;

526 i‡(
cmdlöe
 =
NOLINE
)

527 
cmd
->
c_löe
 = 
curcmd
->c_line;

529 
cmd
->
c_löe
 = 
cmdlöe
;

530 
cmdlöe
 = 
NOLINE
;

532 
cmd
->
c_fûe°ab
 = 
curcmd
->c_filestab;

533 
cmd
->
c_°ash
 = 
cur°ash
;

534 
cur
 = 
cmd
;

535 
Æt
 = 
cblock
.
comp_Æt
;

536 
Æt
 &&á…->
c_ty≥
 =
C_ELSIF
) {

537 
cur
 = 
Æt
;

538 
Æt
 =á…->
ucmd
.
ccmd
.
cc_Æt
;

540 i‡(
Æt
) {

541 
ncblock
.
comp_åue
 = 
Æt
;

542 
ncblock
.
comp_Æt
 = 
NuŒcmd
;

543 
Æt
 = 
	`≠≥nd_löe
(
cur
,
	`make_ccmd
(
C_ELSE
,
NuŒ¨g
,
ncblock
));

544 
cur
->
ucmd
.
ccmd
.
cc_Æt
 = 
Æt
;

547 
Æt
 = 
cur
;

549 
cur
 = 
cmd
;

550 
cmd
) {

551 
cur
 = 
cmd
;

552 
cmd
 = 
cur
->
ucmd
.
ccmd
.
cc_Æt
;

553 
cur
->
c_hód
 = 
hód
;

554 i‡(
cur
->
c_ty≥
 =
C_ELSIF
)

555 
cur
->
c_ty≥
 = 
C_IF
;

556 i‡(
cur
->
c_ty≥
 =
C_IF
)

557 
cur
->
ucmd
.
ccmd
.
cc_Æt
 = 
Æt
;

558 i‡(
cur
 =
Æt
)

560 
cur
->
c_√xt
 = 
cmd
;

562 i‡(
≥ædb
)

563 
cur
 = 
	`dodb
(cur);

564  
cur
;

565 
	}
}

568 
	$›t_¨g
(
cmd
,
Êù‹Ê›
,
acmd
)

569 
CMD
 *
cmd
;

570 
Êù‹Ê›
;

571 
acmd
;

573 
ARG
 *
¨g
;

574 
›t
 = 
CFT_EVAL
;

575 
suª
 = 0;

576 
ARG
 *
¨g2
;

577 
c⁄ãxt
 = 0;

578 
Êp
 = 
Êù‹Ê›
;

580 i‡(!
cmd
)

582 i‡(!(
¨g
 = 
cmd
->
c_ex¥
)) {

583 
cmd
->
c_Êags
 &~
CF_COND
;

589 i‡(
acmd
 && !
cmd
->
ucmd
.acmd.
ac_ex¥
 && !(cmd->
c_Êags
 & 
CF_TERM
) &&

590 (
¨g
->
¨g_ty≥
 =
O_AND
 ||árg->¨g_ty≥ =
O_OR
) ) {

591 
	`dehoi°
(
¨g
,1);

592 
¨g
[2].
¨g_ty≥
 &
A_MASK
;

593 
	`dehoi°
(
¨g
,2);

594 
cmd
->
ucmd
.
acmd
.
ac_ex¥
 = 
¨g
[2].
¨g_±r
.
¨g_¨g
;

595 
cmd
->
c_ex¥
 = 
¨g
[1].
¨g_±r
.
¨g_¨g
;

596 i‡(
¨g
->
¨g_ty≥
 =
O_OR
)

597 
cmd
->
c_Êags
 ^
CF_INVERT
;

598 
¨g
->
¨g_Àn
 = 0;

599 
	`‰ì_¨g
(
¨g
);

600 
¨g
 = 
cmd
->
c_ex¥
;

605 i‡(!(
cmd
->
c_Êags
 & 
CF_TERM
)) {

606 
¨g
->
¨g_ty≥
 =
O_NOT
) {

607 
	`dehoi°
(
¨g
,1);

608 
cmd
->
c_Êags
 ^
CF_INVERT
;

609 
cmd
->
c_ex¥
 = 
¨g
[1].
¨g_±r
.
¨g_¨g
;

610 
	`‰ì_¨g
(
¨g
);

611 
¨g
 = 
cmd
->
c_ex¥
;

615 i‡(!
¨g
->
¨g_Àn
) {

616 
cmd
->
c_Êags
 |
›t
;

622 i‡(
¨g
->
¨g_ty≥
 =
O_FLIP
)

623 
c⁄ãxt
 |= 4;

627 
m‹ec⁄ãxt
:

628 i‡(
¨g
->
¨g_ty≥
 =
O_AND
)

629 
c⁄ãxt
 |= 1;

630 i‡(
¨g
->
¨g_ty≥
 =
O_OR
)

631 
c⁄ãxt
 |= 2;

632 i‡(
c⁄ãxt
 && (
¨g
[
Êp
].
¨g_ty≥
 & 
A_MASK
Ë=
A_EXPR
) {

633 
¨g
 =árg[
Êp
].
¨g_±r
.
¨g_¨g
;

634 
Êp
 = 1;

635 i‡(
¨g
->
¨g_ty≥
 =
O_AND
 ||árg->¨g_ty≥ =
O_OR
)

636 
m‹ec⁄ãxt
;

638 i‡((
c⁄ãxt
 & 3) == 3)

641 i‡(
¨g
[
Êp
].
¨g_Êags
 & (
AF_PRE
|
AF_POST
)) {

642 
cmd
->
c_Êags
 |
›t
;

643 i‡(
acmd
 && !
cmd
->
ucmd
.acmd.
ac_ex¥
 && !(cmd->
c_Êags
 & 
CF_TERM
)

644 && 
cmd
->
c_ex¥
->
¨g_ty≥
 =
O_ITEM
) {

645 
¨g
[
Êp
].
¨g_Êags
 &~
AF_POST
;

646 
¨g
[
Êp
].
¨g_Êags
 |
AF_PRE
;

651 i‡(
¨g
->
¨g_ty≥
 =
O_ITEM
 ||árg->¨g_ty≥ =
O_FLIP
 ||

652 
¨g
->
¨g_ty≥
 =
O_AND
 ||árg->¨g_ty≥ =
O_OR
) {

653 i‡((
¨g
[
Êp
].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
) {

654 
›t
 = (
	`°r_åue
(
¨g
[
Êp
].
¨g_±r
.
¨g_°r
Ë? 
CFT_TRUE
 : 
CFT_FALSE
);

655 
cmd
->
c_sh‹t
 = 
	`°r_smake
(
¨g
[
Êp
].
¨g_±r
.
¨g_°r
);

656 
lôîÆ
;

658 i‡((
¨g
[
Êp
].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
 ||

659 (
¨g
[
Êp
].
¨g_ty≥
 & 
A_MASK
Ë=
A_LVAL
) {

660 
cmd
->
c_°ab
 = 
¨g
[
Êp
].
¨g_±r
.
¨g_°ab
;

661 i‡(!
c⁄ãxt
)

662 
¨g
[
Êp
].
¨g_±r
.
¨g_°ab
 = 
NuŒ°ab
;

663 
›t
 = 
CFT_REG
;

664 
lôîÆ
:

665 i‡(!
c⁄ãxt
) {

666 
	`¨g_‰ì
(
¨g
);

667 
cmd
->
c_ex¥
 = 
NuŒ¨g
;

669 i‡(!(
c⁄ãxt
 & 1))

670 
cmd
->
c_Êags
 |
CF_EQSURE
;

671 i‡(!(
c⁄ãxt
 & 2))

672 
cmd
->
c_Êags
 |
CF_NESURE
;

675 i‡(
¨g
->
¨g_ty≥
 =
O_MATCH
 ||árg->¨g_ty≥ =
O_SUBST
 ||

676 
¨g
->
¨g_ty≥
 =
O_NMATCH
 ||árg->¨g_ty≥ =
O_NSUBST
) {

677 i‡((
¨g
[1].
¨g_ty≥
 =
A_STAB
 ||árg[1].¨g_ty≥ =
A_LVAL
) &&

678 (
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë=
A_SPAT
 &&

679 
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_sh‹t
 ) {

680 
cmd
->
c_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

681 
cmd
->
c_sh‹t
 = 
	`°r_smake
(
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_sh‹t
);

682 
cmd
->
c_¶í
 = 
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_¶í
;

683 i‡(
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_Êags
 & 
SPAT_ALL
 &&

684 !(
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_Êags
 & 
SPAT_ONCE
) &&

685 (
¨g
->
¨g_ty≥
 =
O_MATCH
 ||árg->¨g_ty≥ =
O_NMATCH
) )

686 
suª
 |
CF_EQSURE
;

688 i‡(
¨g
->
¨g_ty≥
 !
O_SUBST
) {

689 
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_sh‹t
 = 
NuŒ°r
;

690 
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_¶í
 = 0;

692 
suª
 |
CF_NESURE
;

693 i‡(
¨g
->
¨g_ty≥
 =
O_NMATCH
 ||árg->¨g_ty≥ =
O_NSUBST
)

694 
cmd
->
c_Êags
 |
CF_FIRSTNEG
;

695 i‡(
c⁄ãxt
 & 1) {

696 i‡(
cmd
->
c_Êags
 & 
CF_FIRSTNEG
)

697 
suª
 &~
CF_NESURE
;

699 
suª
 &~
CF_EQSURE
;

701 i‡(
c⁄ãxt
 & 2) {

702 i‡(
cmd
->
c_Êags
 & 
CF_FIRSTNEG
)

703 
suª
 &~
CF_EQSURE
;

705 
suª
 &~
CF_NESURE
;

707 i‡(
suª
 & (
CF_EQSURE
|
CF_NESURE
)) {

708 i‡(
¨g
[2].
¨g_±r
.
¨g_•©
->
•©_Êags
 & 
SPAT_SCANFIRST
)

709 
›t
 = 
CFT_SCAN
;

711 
›t
 = 
CFT_ANCHOR
;

712 i‡(
suª
 =(
CF_EQSURE
|
CF_NESURE
)

713 && 
¨g
->
¨g_ty≥
 =
O_MATCH


714 && 
c⁄ãxt
 & 4

715 && 
Êù‹Ê›
 == 1) {

716 
	`•©_‰ì
(
¨g
[2].
¨g_±r
.
¨g_•©
);

717 
¨g
[2].
¨g_±r
.
¨g_•©
 = 
NuŒ•©
;

720 
cmd
->
c_•©
 = 
¨g
[2].
¨g_±r
.
¨g_•©
;

721 
cmd
->
c_Êags
 |
suª
;

725 i‡(
¨g
->
¨g_ty≥
 =
O_SEQ
 ||árg->¨g_ty≥ =
O_SNE
 ||

726 
¨g
->
¨g_ty≥
 =
O_SLT
 ||árg->¨g_ty≥ =
O_SGT
) {

727 i‡(
¨g
[1].
¨g_ty≥
 =
A_STAB
 ||árg[1].¨g_ty≥ =
A_LVAL
) {

728 i‡(
¨g
[2].
¨g_ty≥
 =
A_SINGLE
) {

729 *
junk
 = 
	`°r_gë
(
¨g
[2].
¨g_±r
.
¨g_°r
);

731 
cmd
->
c_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

732 
cmd
->
c_sh‹t
 = 
	`°r_smake
(
¨g
[2].
¨g_±r
.
¨g_°r
);

733 
cmd
->
c_¶í
 = cmd->
c_sh‹t
->
°r_cur
+1;

734 
¨g
->
¨g_ty≥
) {

735 
O_SLT
: 
O_SGT
:

736 
suª
 |
CF_EQSURE
;

737 
cmd
->
c_Êags
 |
CF_FIRSTNEG
;

739 
O_SNE
:

740 
cmd
->
c_Êags
 |
CF_FIRSTNEG
;

742 
O_SEQ
:

743 
suª
 |
CF_NESURE
|
CF_EQSURE
;

746 i‡(
c⁄ãxt
 & 1) {

747 i‡(
cmd
->
c_Êags
 & 
CF_FIRSTNEG
)

748 
suª
 &~
CF_NESURE
;

750 
suª
 &~
CF_EQSURE
;

752 i‡(
c⁄ãxt
 & 2) {

753 i‡(
cmd
->
c_Êags
 & 
CF_FIRSTNEG
)

754 
suª
 &~
CF_EQSURE
;

756 
suª
 &~
CF_NESURE
;

758 i‡(
suª
 & (
CF_EQSURE
|
CF_NESURE
)) {

759 
›t
 = 
CFT_STROP
;

760 
cmd
->
c_Êags
 |
suª
;

765 i‡(
¨g
->
¨g_ty≥
 =
O_EQ
 ||árg->¨g_ty≥ =
O_NE
 ||

766 
¨g
->
¨g_ty≥
 =
O_LE
 ||árg->¨g_ty≥ =
O_GE
 ||

767 
¨g
->
¨g_ty≥
 =
O_LT
 ||árg->¨g_ty≥ =
O_GT
) {

768 i‡(
¨g
[1].
¨g_ty≥
 =
A_STAB
 ||árg[1].¨g_ty≥ =
A_LVAL
) {

769 i‡(
¨g
[2].
¨g_ty≥
 =
A_SINGLE
) {

770 
cmd
->
c_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

771 i‡(
dow¨n
) {

772 
STR
 *
°r
 = 
¨g
[2].
¨g_±r
.
¨g_°r
;

774 i‡((!
°r
->
°r_nok
 && !
	`looks_like_numbî
(str)))

775 
	`w¨n
("Possible use of == on string value");

777 
cmd
->
c_sh‹t
 = 
	`°r_nmake
(
	`°r_gnum
(
¨g
[2].
¨g_±r
.
¨g_°r
));

778 
cmd
->
c_¶í
 = 
¨g
->
¨g_ty≥
;

779 
suª
 |
CF_NESURE
|
CF_EQSURE
;

780 i‡(
c⁄ãxt
 & 1) {

781 
suª
 &~
CF_EQSURE
;

783 i‡(
c⁄ãxt
 & 2) {

784 
suª
 &~
CF_NESURE
;

786 i‡(
suª
 & (
CF_EQSURE
|
CF_NESURE
)) {

787 
›t
 = 
CFT_NUMOP
;

788 
cmd
->
c_Êags
 |
suª
;

793 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
 &&

794 (
¨g
[1].
¨g_ty≥
 =
A_STAB
 ||árg[1].¨g_ty≥ =
A_LVAL
) &&

795 
¨g
[1].
¨g_±r
.
¨g_°ab
 =
def°ab
 &&

796 
¨g
[2].
¨g_ty≥
 =
A_EXPR
 ) {

797 
¨g2
 = 
¨g
[2].
¨g_±r
.
¨g_¨g
;

798 i‡(
¨g2
->
¨g_ty≥
 =
O_ITEM
 &&árg2[1].¨g_ty≥ =
A_READ
) {

799 
›t
 = 
CFT_GETS
;

800 
cmd
->
c_°ab
 = 
¨g2
[1].
¨g_±r
.
¨g_°ab
;

801 i‡(!(
	`°ab_io
(
¨g2
[1].
¨g_±r
.
¨g_°ab
)->
Êags
 & 
IOF_ARGV
)) {

802 
	`‰ì_¨g
(
¨g2
);

803 
¨g
[2].
¨g_±r
.
¨g_¨g
 = 
NuŒ¨g
;

804 
	`‰ì_¨g
(
¨g
);

805 
cmd
->
c_ex¥
 = 
NuŒ¨g
;

809 i‡(
¨g
->
¨g_ty≥
 =
O_CHOP
 &&

810 (
¨g
[1].
¨g_ty≥
 =
A_STAB
 ||árg[1].¨g_ty≥ =
A_LVAL
) ) {

811 
›t
 = 
CFT_CHOP
;

812 
cmd
->
c_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

813 
	`‰ì_¨g
(
¨g
);

814 
cmd
->
c_ex¥
 = 
NuŒ¨g
;

816 i‡(
c⁄ãxt
 & 4)

817 
›t
 |
CF_FLIP
;

818 
cmd
->
c_Êags
 |
›t
;

820 i‡(
cmd
->
c_Êags
 & 
CF_FLIP
) {

821 i‡(
Êù‹Ê›
 == 1) {

822 
¨g
 = 
cmd
->
c_ex¥
;

823 
	`New
(110,
¨g
[3].
¨g_±r
.
¨g_cmd
, 1, 
CMD
);

824 
	`C›y
(
cmd
, 
¨g
[3].
¨g_±r
.
¨g_cmd
, 1, 
CMD
);

825 
	`New
(111,
¨g
[4].
¨g_±r
.
¨g_cmd
,1,
CMD
);

826 
	`C›y
(
cmd
, 
¨g
[4].
¨g_±r
.
¨g_cmd
, 1, 
CMD
);

827 
	`›t_¨g
(
¨g
[4].
¨g_±r
.
¨g_cmd
,2,
acmd
);

828 
¨g
->
¨g_Àn
 = 2;

831 i‡((
›t
 & 
CF_OPTIMIZE
Ë=
CFT_EVAL
)

832 
cmd
->
c_Êags
 = (cmd->c_Êag†& ~
CF_OPTIMIZE
Ë| 
CFT_UNFLIP
;

835 
	}
}

837 
CMD
 *

838 
	$add_œbñ
(
lbl
,
cmd
)

839 *
lbl
;

840 
CMD
 *
cmd
;

842 i‡(
cmd
)

843 
cmd
->
c_œbñ
 = 
lbl
;

844  
cmd
;

845 
	}
}

847 
CMD
 *

848 
	$addc⁄d
(
cmd
, 
¨g
)

849 
CMD
 *
cmd
;

850 
ARG
 *
¨g
;

852 
cmd
->
c_ex¥
 = 
¨g
;

853 
cmd
->
c_Êags
 |
CF_COND
;

854  
cmd
;

855 
	}
}

857 
CMD
 *

858 
	$addlo›
(
cmd
, 
¨g
)

859 
CMD
 *
cmd
;

860 
ARG
 *
¨g
;

862 
	`whûe_io
();

864 
cmd
->
c_ex¥
 = 
¨g
;

865 
cmd
->
c_Êags
 |
CF_COND
|
CF_LOOP
;

867 i‡(!(
cmd
->
c_Êags
 & 
CF_INVERT
))

868 
	`whûe_io
(
cmd
);

870 i‡(
cmd
->
c_ty≥
 =
C_BLOCK
)

871 
cmd
->
c_Êags
 &~
CF_COND
;

873 
¨g
 = 
cmd
->
ucmd
.
acmd
.
ac_ex¥
;

874 i‡(
¨g
 &&árg->
¨g_ty≥
 =
O_ITEM
 &&árg[1].¨g_ty≥ =
A_CMD
)

875 
cmd
->
c_Êags
 &~
CF_COND
;

876 i‡(
¨g
 && (¨g->
¨g_Êags
 & 
AF_DEPR
) &&

877 (
¨g
->
¨g_ty≥
 =
O_SUBR
 ||árg->¨g_ty≥ =
O_DBSUBR
) )

878 
cmd
->
c_Êags
 &~
CF_COND
;

880  
cmd
;

881 
	}
}

883 
CMD
 *

884 
	$övît
(
cmd
)

885 
CMD
 *
cmd
;

887 
CMD
 *
èrg
 = 
cmd
;

888 i‡(
èrg
->
c_hód
)

889 
èrg
 =Å¨g->
c_hód
;

890 i‡(
èrg
->
c_Êags
 & 
CF_DBSUB
)

891 
èrg
 =Å¨g->
c_√xt
;

892 
èrg
->
c_Êags
 ^
CF_INVERT
;

893  
cmd
;

894 
	}
}

896 
	$yyîr‹
(
s
)

897 *
s
;

899 
tmpbuf
[258];

900 
tmp2buf
[258];

901 *
äame
 = 
tmpbuf
;

903 i‡(
buÂå
 > 
ﬁdﬁdbuÂå
 && bufptr - oldoldbufptr < 200 &&

904 
ﬁdﬁdbuÂå
 !
ﬁdbuÂå
 && oldbuÂå !
buÂå
) {

905 
	`is•a˚
(*
ﬁdﬁdbuÂå
))

906 
ﬁdﬁdbuÂå
++;

907 
	`°∫˝y
(
tmp2buf
, 
ﬁdﬁdbuÂå
, 
buÂå
 - oldoldbufptr);

908 
tmp2buf
[
buÂå
 - 
ﬁdﬁdbuÂå
] = '\0';

909 
	`•rötf
(
äame
,"√xà2Åokí†\"%s\"",
tmp2buf
);

911 i‡(
buÂå
 > 
ﬁdbuÂå
 && bufptr - oldbufptr < 200 &&

912 
ﬁdbuÂå
 !
buÂå
) {

913 
	`is•a˚
(*
ﬁdbuÂå
))

914 
ﬁdbuÂå
++;

915 
	`°∫˝y
(
tmp2buf
, 
ﬁdbuÂå
, 
buÂå
 - oldbufptr);

916 
tmp2buf
[
buÂå
 - 
ﬁdbuÂå
] = '\0';

917 
	`•rötf
(
äame
,"√xàtokí \"%s\"",
tmp2buf
);

919 i‡(
yych¨
 > 256)

920 
äame
 = "nextÅoken ???";

921 i‡(!
yych¨
)

922 ()
	`°r˝y
(
äame
,"at EOF");

923 i‡(
yych¨
 < 32)

924 ()
	`•rötf
(
äame
,"√xàch¨ ^%c",
yych¨
+64);

925 i‡(
yych¨
 == 127)

926 ()
	`°r˝y
(
äame
,"at EOF");

928 ()
	`•rötf
(
äame
,"√xàch¨ %c",
yych¨
);

929 ()
	`•rötf
(
buf
, "%s in file %sátÜine %d, %s\n",

930 
s
,
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
,curcmd->
c_löe
,
äame
);

931 i‡(
curcmd
->
c_löe
 =
mu…i_íd
 && 
mu…i_°¨t
 < multi_end)

932 
	`•rötf
(
buf
+
	`°æí
(buf),

934 
mu…i_›í
,
mu…i_˛o£
,
mu…i_°¨t
);

935 i‡(
ö_evÆ
)

936 
	`°r_ˇt
(
	`°ab_vÆ
(
	`°abít
("@",
TRUE
)),
buf
);

938 
	`Âuts
(
buf
,
°dîr
);

939 i‡(++
îr‹_cou¡
 >= 10)

940 
	`Áèl
("%s hasÅoo manyÉrrors.\n",

941 
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
);

942 
	}
}

945 
	$whûe_io
(
cmd
)

946 
CMD
 *
cmd
;

948 
ARG
 *
¨g
 = 
cmd
->
c_ex¥
;

949 
STAB
 *
asgn°ab
;

953 i‡(
¨g
 &&árg->
¨g_ty≥
 =
O_ITEM
 &&árg[1].¨g_ty≥ =
A_READ
) {

954 
cmd
->
c_Êags
 &~
CF_OPTIMIZE
;

955 
cmd
->
c_Êags
 |
CFT_GETS
;

956 
cmd
->
c_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

957 i‡(
	`°ab_io
(
¨g
[1].
¨g_±r
.
¨g_°ab
)->
Êags
 & 
IOF_ARGV
) {

958 
cmd
->
c_ex¥
 = 
	`l
(
	`make_›
(
O_ASSIGN
, 2,

959 
	`°ab2¨g
(
A_LVAL
,
def°ab
), 
¨g
, 
NuŒ¨g
));

962 
	`‰ì_¨g
(
¨g
);

963 
cmd
->
c_ex¥
 = 
NuŒ¨g
;

966 i‡(
¨g
 &&árg->
¨g_ty≥
 =
O_ITEM
 &&árg[1].¨g_ty≥ =
A_INDREAD
) {

967 
cmd
->
c_Êags
 &~
CF_OPTIMIZE
;

968 
cmd
->
c_Êags
 |
CFT_INDGETS
;

969 
cmd
->
c_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

970 
	`‰ì_¨g
(
¨g
);

971 
cmd
->
c_ex¥
 = 
NuŒ¨g
;

973 i‡(
¨g
 &&árg->
¨g_ty≥
 =
O_ITEM
 &&árg[1].¨g_ty≥ =
A_GLOB
) {

974 i‡((
cmd
->
c_Êags
 & 
CF_OPTIMIZE
Ë=
CFT_ARRAY
)

975 
asgn°ab
 = 
cmd
->
c_°ab
;

977 
asgn°ab
 = 
def°ab
;

978 
cmd
->
c_ex¥
 = 
	`l
(
	`make_›
(
O_ASSIGN
, 2,

979 
	`°ab2¨g
(
A_LVAL
,
asgn°ab
), 
¨g
, 
NuŒ¨g
));

980 
cmd
->
c_Êags
 &~
CF_OPTIMIZE
;

982 
	}
}

984 
CMD
 *

985 
	$w›t
(
cmd
)

986 
CMD
 *
cmd
;

988 
CMD
 *
èû
;

989 
CMD
 *
√wèû
;

990 
i
;

992 i‡(
cmd
->
c_ex¥
 && (cmd->
c_Êags
 & 
CF_OPTIMIZE
Ë=
CFT_FALSE
)

993 
	`›t_¨g
(
cmd
,1, cmd->
c_ty≥
 =
C_EXPR
);

995 
	`whûe_io
(
cmd
);

999 
èû
 = 
cmd
->
ucmd
.
ccmd
.
cc_åue
;

1000 i‡(
èû
 =
NuŒcmd
)

1001  
cmd
;

1002 
	`New
(112,
√wèû
, 1, 
CMD
);

1005 i‡(
èû
->
c_ty≥
 =
C_EXPR
 &&

1006 
èû
->
ucmd
.
acmd
.
ac_ex¥
 &&

1007 
èû
->
ucmd
.
acmd
.
ac_ex¥
->
¨g_ty≥
 =
O_NEXT
 &&

1008 (
èû
->
ucmd
.
acmd
.
ac_ex¥
->
¨g_Àn
 == 0 ||

1009 (
cmd
->
c_œbñ
 &&

1010 
	`°rEQ
(
cmd
->
c_œbñ
,

1011 
èû
->
ucmd
.
acmd
.
ac_ex¥
[1].
¨g_±r
.
¨g_°r
->
°r_±r
) )))

1013 
	`¨g_‰ì
(
èû
->
ucmd
.
acmd
.
ac_ex¥
);

1014 
èû
->
ucmd
.
acmd
.
ac_ex¥
 = 
NuŒ¨g
;

1015 
èû
->
c_ty≥
 = 
C_NEXT
;

1016 i‡(
cmd
->
ucmd
.
ccmd
.
cc_Æt
 !
NuŒcmd
)

1017 
èû
->
ucmd
.
ccmd
.
cc_Æt
 = 
cmd
->ucmd.ccmd.cc_alt;

1019 
èû
->
ucmd
.
ccmd
.
cc_Æt
 = 
√wèû
;

1020 
èû
->
ucmd
.
ccmd
.
cc_åue
 = 
NuŒcmd
;

1022 i‡(
èû
->
c_ty≥
 =
C_IF
 && !èû->
ucmd
.
ccmd
.
cc_Æt
) {

1023 i‡(
cmd
->
ucmd
.
ccmd
.
cc_Æt
 !
NuŒcmd
)

1024 
èû
->
ucmd
.
ccmd
.
cc_Æt
 = 
cmd
->ucmd.ccmd.cc_alt;

1026 
èû
->
ucmd
.
ccmd
.
cc_Æt
 = 
√wèû
;

1028 i‡(
èû
->
c_ty≥
 =
C_CSWITCH
 ||Åaû->c_ty≥ =
C_NSWITCH
) {

1029 i‡(
cmd
->
ucmd
.
ccmd
.
cc_Æt
 !
NuŒcmd
) {

1030 
i
 = 
èû
->
ucmd
.
scmd
.
sc_max
; i >= 0; i--)

1031 i‡(!
èû
->
ucmd
.
scmd
.
sc_√xt
[
i
])

1032 
èû
->
ucmd
.
scmd
.
sc_√xt
[
i
] = 
cmd
->ucmd.
ccmd
.
cc_Æt
;

1035 
i
 = 
èû
->
ucmd
.
scmd
.
sc_max
; i >= 0; i--)

1036 i‡(!
èû
->
ucmd
.
scmd
.
sc_√xt
[
i
])

1037 
èû
->
ucmd
.
scmd
.
sc_√xt
[
i
] = 
√wèû
;

1041 i‡(!
èû
->
c_√xt
)

1043 
èû
 =Åaû->
c_√xt
;

1048 i‡(
cmd
->
ucmd
.
ccmd
.
cc_Æt
 !
NuŒcmd
) {

1049 
èû
->
c_√xt
 = 
cmd
->
ucmd
.
ccmd
.
cc_Æt
;

1050 
èû
 =Åaû->
c_√xt
;

1053 i‡(
èû
->
c_ty≥
 =
C_EXPR
 &&

1054 
èû
->
ucmd
.
acmd
.
ac_ex¥
 &&

1055 
èû
->
ucmd
.
acmd
.
ac_ex¥
->
¨g_ty≥
 =
O_NEXT
 &&

1056 (
èû
->
ucmd
.
acmd
.
ac_ex¥
->
¨g_Àn
 == 0 ||

1057 (
cmd
->
c_œbñ
 &&

1058 
	`°rEQ
(
cmd
->
c_œbñ
,

1059 
èû
->
ucmd
.
acmd
.
ac_ex¥
[1].
¨g_±r
.
¨g_°r
->
°r_±r
) )))

1061 
	`¨g_‰ì
(
èû
->
ucmd
.
acmd
.
ac_ex¥
);

1062 
èû
->
ucmd
.
acmd
.
ac_ex¥
 = 
NuŒ¨g
;

1063 
èû
->
c_ty≥
 = 
C_NEXT
;

1064 
èû
->
ucmd
.
ccmd
.
cc_Æt
 = 
√wèû
;

1065 
èû
->
ucmd
.
ccmd
.
cc_åue
 = 
NuŒcmd
;

1067 i‡(
èû
->
c_ty≥
 =
C_IF
 && !èû->
ucmd
.
ccmd
.
cc_Æt
) {

1068 
èû
->
ucmd
.
ccmd
.
cc_Æt
 = 
√wèû
;

1070 i‡(
èû
->
c_ty≥
 =
C_CSWITCH
 ||Åaû->c_ty≥ =
C_NSWITCH
) {

1071 
i
 = 
èû
->
ucmd
.
scmd
.
sc_max
; i >= 0; i--)

1072 i‡(!
èû
->
ucmd
.
scmd
.
sc_√xt
[
i
])

1073 
èû
->
ucmd
.
scmd
.
sc_√xt
[
i
] = 
√wèû
;

1076 i‡(!
èû
->
c_√xt
)

1078 
èû
 =Åaû->
c_√xt
;

1080  ; 
èû
->
c_√xt
;Åail =Åail->c_next) ;

1089 
èû
->
c_√xt
 = 
√wèû
;

1090 
èû
 = 
√wèû
;

1091 i‡(!
cmd
->
ucmd
.
ccmd
.
cc_Æt
)

1092 
cmd
->
ucmd
.
ccmd
.
cc_Æt
 = 
èû
;

1094 #i‚de‡
löt


1095 ()
	`bc›y
((*)
cmd
, (*)
èû
, (
CMD
));

1097 
èû
->
c_ty≥
 = 
C_EXPR
;

1098 
èû
->
c_Êags
 ^
CF_INVERT
;

1099 
èû
->
c_√xt
 =Åaû->
ucmd
.
ccmd
.
cc_åue
;

1100 
èû
->
ucmd
.
acmd
.
ac_ex¥
 = 
	`make_›
(
O_LAST
,0,
NuŒ¨g
,Nullarg,Nullarg);

1101 
èû
->
ucmd
.
acmd
.
ac_°ab
 = 
NuŒ°ab
;

1102  
cmd
;

1103 
	}
}

1105 
CMD
 *

1106 
	$ovî
(
óch°ab
,
cmd
)

1107 
STAB
 *
óch°ab
;

1108 
CMD
 *
cmd
;

1112 
cmd
->
c_Êags
 &~
CF_OPTIMIZE
;

1113 
cmd
->
c_Êags
 |
CFT_ARRAY
;

1114 
cmd
->
c_°ab
 = 
óch°ab
;

1115 
cmd
->
c_sh‹t
 = 
	`°r_√w
(0);

1116 
cmd
->
c_sh‹t
->
°r_u
.
°r_u£ful
 = -1;

1118  
cmd
;

1119 
	}
}

1121 
	$cmd_‰ì
(
cmd
)

1122 
CMD
 *
cmd
;

1124 
CMD
 *
to‰ì
;

1125 
CMD
 *
hód
 = 
cmd
;

1127 
cmd
) {

1128 i‡(
cmd
->
c_ty≥
 !
C_WHILE
) {

1129 i‡(
cmd
->
c_œbñ
) {

1130 
	`Sa„‰ì
(
cmd
->
c_œbñ
);

1131 
cmd
->
c_œbñ
 = 
NuŒch
;

1133 i‡(
cmd
->
c_sh‹t
) {

1134 
	`°r_‰ì
(
cmd
->
c_sh‹t
);

1135 
cmd
->
c_sh‹t
 = 
NuŒ°r
;

1137 i‡(
cmd
->
c_ex¥
) {

1138 
	`¨g_‰ì
(
cmd
->
c_ex¥
);

1139 
cmd
->
c_ex¥
 = 
NuŒ¨g
;

1142 
cmd
->
c_ty≥
) {

1143 
C_WHILE
:

1144 
C_BLOCK
:

1145 
C_ELSE
:

1146 
C_IF
:

1147 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

1148 
	`cmd_‰ì
(
cmd
->
ucmd
.
ccmd
.
cc_åue
);

1149 
cmd
->
ucmd
.
ccmd
.
cc_åue
 = 
NuŒcmd
;

1152 
C_EXPR
:

1153 i‡(
cmd
->
ucmd
.
acmd
.
ac_ex¥
) {

1154 
	`¨g_‰ì
(
cmd
->
ucmd
.
acmd
.
ac_ex¥
);

1155 
cmd
->
ucmd
.
acmd
.
ac_ex¥
 = 
NuŒ¨g
;

1159 
to‰ì
 = 
cmd
;

1160 
cmd
 = cmd->
c_√xt
;

1161 i‡(
to‰ì
 !
hód
)

1162 
	`Sa„‰ì
(
to‰ì
);

1163 i‡(
cmd
 && cmd =
hód
)

1166 
	`Sa„‰ì
(
hód
);

1167 
	}
}

1169 
	$¨g_‰ì
(
¨g
)

1170 
ARG
 *
¨g
;

1172 
i
;

1174 
i
 = 1; i <
¨g
->
¨g_Àn
; i++) {

1175 
¨g
[
i
].
¨g_ty≥
 & 
A_MASK
) {

1176 
A_NULL
:

1177 i‡(
¨g
->
¨g_ty≥
 =
O_TRANS
) {

1178 
	`Sa„‰ì
(
¨g
[
i
].
¨g_±r
.
¨g_cvÆ
);

1179 
¨g
[
i
].
¨g_±r
.
¨g_cvÆ
 = 
NuŒch
;

1182 
A_LEXPR
:

1183 i‡(
¨g
->
¨g_ty≥
 =
O_AASSIGN
 &&

1184 
¨g
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 =
O_LARRAY
) {

1185 *
«me
 =

1186 
	`°ab_«me
(
¨g
[
i
].
¨g_±r
.
¨g_¨g
[1].¨g_±r.
¨g_°ab
);

1188 i‡(
	`°∫EQ
("_GEN_",
«me
, 5))

1189 
	`hdñëe
(
def°ash
,
«me
,
	`°æí
(name));

1192 
A_EXPR
:

1193 
	`¨g_‰ì
(
¨g
[
i
].
¨g_±r
.
¨g_¨g
);

1194 
¨g
[
i
].
¨g_±r
.
¨g_¨g
 = 
NuŒ¨g
;

1196 
A_CMD
:

1197 
	`cmd_‰ì
(
¨g
[
i
].
¨g_±r
.
¨g_cmd
);

1198 
¨g
[
i
].
¨g_±r
.
¨g_cmd
 = 
NuŒcmd
;

1200 
A_WORD
:

1201 
A_STAB
:

1202 
A_LVAL
:

1203 
A_READ
:

1204 
A_GLOB
:

1205 
A_ARYLEN
:

1206 
A_LARYLEN
:

1207 
A_ARYSTAB
:

1208 
A_LARYSTAB
:

1210 
A_SINGLE
:

1211 
A_DOUBLE
:

1212 
A_BACKTICK
:

1213 
	`°r_‰ì
(
¨g
[
i
].
¨g_±r
.
¨g_°r
);

1214 
¨g
[
i
].
¨g_±r
.
¨g_°r
 = 
NuŒ°r
;

1216 
A_SPAT
:

1217 
	`•©_‰ì
(
¨g
[
i
].
¨g_±r
.
¨g_•©
);

1218 
¨g
[
i
].
¨g_±r
.
¨g_•©
 = 
NuŒ•©
;

1222 
	`‰ì_¨g
(
¨g
);

1223 
	}
}

1225 
	$•©_‰ì
(
•©
)

1226 
SPAT
 *
•©
;

1228 
SPAT
 *
•
;

1229 
HENT
 *
íåy
;

1231 i‡(
•©
->
•©_ru¡ime
) {

1232 
	`¨g_‰ì
(
•©
->
•©_ru¡ime
);

1233 
•©
->
•©_ru¡ime
 = 
NuŒ¨g
;

1235 i‡(
•©
->
•©_ª∂
) {

1236 
	`¨g_‰ì
(
•©
->
•©_ª∂
);

1237 
•©
->
•©_ª∂
 = 
NuŒ¨g
;

1239 i‡(
•©
->
•©_sh‹t
) {

1240 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

1241 
•©
->
•©_sh‹t
 = 
NuŒ°r
;

1243 i‡(
•©
->
•©_ªgexp
) {

1244 
	`ªg‰ì
(
•©
->
•©_ªgexp
);

1245 
•©
->
•©_ªgexp
 = 
	`NuŒ
(
REGEXP
*);

1250 
íåy
 = 
def°ash
->
tbl_¨øy
['_'];É¡ry;É¡ry =É¡ry->
hít_√xt
) {

1251 
HASH
 *
°ash
;

1252 
STAB
 *
°ab
 = (STAB*)
íåy
->
hít_vÆ
;

1254 i‡(!
°ab
)

1256 
°ash
 = 
	`°ab_hash
(
°ab
);

1257 i‡(!
°ash
 || sèsh->
tbl_•©roŸ
 =
	`NuŒ
(
SPAT
*))

1259 i‡(
°ash
->
tbl_•©roŸ
 =
•©
)

1260 
°ash
->
tbl_•©roŸ
 = 
•©
->
•©_√xt
;

1262 
•
 = 
°ash
->
tbl_•©roŸ
;

1263 
•
 && sp->
•©_√xt
 !
•©
;

1264 
•
 = sp->
•©_√xt
)

1266 i‡(
•
)

1267 
•
->
•©_√xt
 = 
•©
->spat_next;

1270 
	`Sa„‰ì
(
•©
);

1271 
	}
}

1278 
	$cmd_toßve
(
cmd
,
wûlßve
)

1279 
CMD
 *
cmd
;

1280 
wûlßve
;

1282 
CMD
 *
hód
 = 
cmd
;

1283 
shouldßve
 = 
FALSE
;

1284 
tmpßve
;

1285 
CMD
 *
œ°cmd
 = 
NuŒcmd
;

1287 
cmd
) {

1288 i‡(
cmd
->
c_ex¥
)

1289 
shouldßve
 |
	`¨g_toßve
(
cmd
->
c_ex¥
,
wûlßve
);

1290 
cmd
->
c_ty≥
) {

1291 
C_WHILE
:

1292 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

1293 
tmpßve
 = 
	`cmd_toßve
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
wûlßve
);

1298 i‡(
tmpßve
 && (
cmd
->
c_Êags
 & 
CF_OPTIMIZE
Ë=
CFT_ARRAY
) {

1299 i‡(
œ°cmd
 &&

1300 
œ°cmd
->
c_ty≥
 =
C_EXPR
 &&

1301 
œ°cmd
->
c_ex¥
) {

1302 
ARG
 *
¨g
 = 
œ°cmd
->
c_ex¥
;

1304 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
 &&

1305 
¨g
[1].
¨g_ty≥
 =
A_LEXPR
 &&

1306 
¨g
[1].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 =
O_LARRAY
 &&

1307 
	`°∫EQ
("_GEN_",

1308 
	`°ab_«me
(

1309 
¨g
[1].
¨g_±r
.
¨g_¨g
[1].¨g_±r.
¨g_°ab
),

1311 ()
	`loˇlize
(
¨g
);

1317 ()
	`≠ush
(
toßve
,
cmd
->
c_sh‹t
);

1319 
shouldßve
 |
tmpßve
;

1322 
C_BLOCK
:

1323 
C_ELSE
:

1324 
C_IF
:

1325 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
)

1326 
shouldßve
 |
	`cmd_toßve
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,
wûlßve
);

1328 
C_EXPR
:

1329 i‡(
cmd
->
ucmd
.
acmd
.
ac_ex¥
)

1330 
shouldßve
 |
	`¨g_toßve
(
cmd
->
ucmd
.
acmd
.
ac_ex¥
,
wûlßve
);

1333 
œ°cmd
 = 
cmd
;

1334 
cmd
 = cmd->
c_√xt
;

1335 i‡(
cmd
 && cmd =
hód
)

1338  
shouldßve
;

1339 
	}
}

1342 
	$¨g_toßve
(
¨g
,
wûlßve
)

1343 
ARG
 *
¨g
;

1344 
wûlßve
;

1346 
i
;

1347 
shouldßve
 = 
FALSE
;

1349 
i
 = 
¨g
->
¨g_Àn
; i >= 1; i--) {

1350 
¨g
[
i
].
¨g_ty≥
 & 
A_MASK
) {

1351 
A_NULL
:

1353 
A_LEXPR
:

1354 
A_EXPR
:

1355 
shouldßve
 |
	`¨g_toßve
(
¨g
[
i
].
¨g_±r
.
¨g_¨g
,shouldsave);

1357 
A_CMD
:

1358 
shouldßve
 |
	`cmd_toßve
(
¨g
[
i
].
¨g_±r
.
¨g_cmd
,shouldsave);

1360 
A_WORD
:

1361 
A_STAB
:

1362 
A_LVAL
:

1363 
A_READ
:

1364 
A_GLOB
:

1365 
A_ARYLEN
:

1366 
A_SINGLE
:

1367 
A_DOUBLE
:

1368 
A_BACKTICK
:

1370 
A_SPAT
:

1371 
shouldßve
 |
	`•©_toßve
(
¨g
[
i
].
¨g_±r
.
¨g_•©
);

1375 
¨g
->
¨g_ty≥
) {

1376 
O_RETURN
:

1377 
ßw_ªtu∫
 = 
TRUE
;

1379 
O_EVAL
:

1380 
O_SUBR
:

1381 
shouldßve
 = 
TRUE
;

1384 i‡(
wûlßve
)

1385 ()
	`≠ush
(
toßve
,
¨g
->
¨g_±r
.
¨g_°r
);

1386  
shouldßve
;

1387 
	}
}

1390 
	$•©_toßve
(
•©
)

1391 
SPAT
 *
•©
;

1393 
shouldßve
 = 
FALSE
;

1395 i‡(
•©
->
•©_ru¡ime
)

1396 
shouldßve
 |
	`¨g_toßve
(
•©
->
•©_ru¡ime
,
FALSE
);

1397 i‡(
•©
->
•©_ª∂
) {

1398 
shouldßve
 |
	`¨g_toßve
(
•©
->
•©_ª∂
,
FALSE
);

1401  
shouldßve
;

1402 
	}
}

	@consarg.c

17 
	~"EXTERN.h
"

18 
	~"≥æ.h
"

19 
nŸhög_ö_comm⁄
();

20 
¨g_comm⁄
();

21 
•©_comm⁄
();

23 
ARG
 *

24 
	$make_•lô
(
°ab
,
¨g
,
lim¨g
)

25 
STAB
 *
°ab
;

26 
ARG
 *
¨g
;

27 
ARG
 *
lim¨g
;

29 
SPAT
 *
•©
;

31 i‡(
¨g
->
¨g_ty≥
 !
O_MATCH
) {

32 
	`Newz
(201,
•©
,1,
SPAT
);

33 
•©
->
•©_√xt
 = 
cur°ash
->
tbl_•©roŸ
;

34 
cur°ash
->
tbl_•©roŸ
 = 
•©
;

36 
•©
->
•©_ru¡ime
 = 
¨g
;

37 
¨g
 = 
	`make_m©ch
(
O_MATCH
,
	`°ab2¨g
(
A_STAB
,
def°ab
),
•©
);

39 
	`Ríew
(
¨g
,4,
ARG
);

40 
¨g
->
¨g_Àn
 = 3;

41 i‡(
lim¨g
) {

42 i‡(
lim¨g
->
¨g_ty≥
 =
O_ITEM
) {

43 
	`C›y
(
lim¨g
+1,
¨g
+3,1,
ARG
);

44 
lim¨g
[1].
¨g_ty≥
 = 
A_NULL
;

45 
	`¨g_‰ì
(
lim¨g
);

48 
¨g
[3].
¨g_Êags
 = 0;

49 
¨g
[3].
¨g_ty≥
 = 
A_EXPR
;

50 
¨g
[3].
¨g_±r
.
¨g_¨g
 = 
lim¨g
;

54 
¨g
[3].
¨g_ty≥
 = 
A_NULL
;

55 
¨g
->
¨g_ty≥
 = 
O_SPLIT
;

56 
•©
 = 
¨g
[2].
¨g_±r
.
¨g_•©
;

57 
•©
->
•©_ª∂
 = 
	`°ab2¨g
(
A_STAB
,
	`Ødd
(
°ab
));

58 i‡(
•©
->
•©_sh‹t
) {

59 i‡(!((
•©
->
•©_Êags
 & 
SPAT_SCANFIRST
) &&

60 (
•©
->
•©_Êags
 & 
SPAT_ALL
) )) {

61 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

62 
•©
->
•©_sh‹t
 = 
NuŒ°r
;

65  
¨g
;

66 
	}
}

68 
ARG
 *

69 
	$mod_m©ch
(
ty≥
,
À·
,
∑t
)

70 
ARG
 *
À·
;

71 
ARG
 *
∑t
;

74 
SPAT
 *
•©
;

75 
ARG
 *
√w¨g
;

77 i‡(!
∑t
)

78  
NuŒ¨g
;

80 i‡((
∑t
->
¨g_ty≥
 =
O_MATCH
 ||

81 
∑t
->
¨g_ty≥
 =
O_SUBST
 ||

82 
∑t
->
¨g_ty≥
 =
O_TRANS
 ||

83 
∑t
->
¨g_ty≥
 =
O_SPLIT


85 
∑t
[1].
¨g_±r
.
¨g_°ab
 =
def°ab
 ) {

86 
∑t
->
¨g_ty≥
) {

87 
O_MATCH
:

88 
√w¨g
 = 
	`make_›
(
ty≥
 =
O_MATCH
 ? O_MATCH : 
O_NMATCH
,

89 
∑t
->
¨g_Àn
,

90 
À·
,
NuŒ¨g
,Nullarg);

92 
O_SUBST
:

93 
√w¨g
 = 
	`l
(
	`make_›
(
ty≥
 =
O_MATCH
 ? 
O_SUBST
 : 
O_NSUBST
,

94 
∑t
->
¨g_Àn
,

95 
À·
,
NuŒ¨g
,Nullarg));

97 
O_TRANS
:

98 
√w¨g
 = 
	`l
(
	`make_›
(
ty≥
 =
O_MATCH
 ? 
O_TRANS
 : 
O_NTRANS
,

99 
∑t
->
¨g_Àn
,

100 
À·
,
NuŒ¨g
,Nullarg));

102 
O_SPLIT
:

103 
√w¨g
 = 
	`make_›
(
ty≥
 =
O_MATCH
 ? 
O_SPLIT
 : O_SPLIT,

104 
∑t
->
¨g_Àn
,

105 
À·
,
NuŒ¨g
,Nullarg);

108 i‡(
∑t
->
¨g_Àn
 >= 2) {

109 
√w¨g
[2].
¨g_ty≥
 = 
∑t
[2].arg_type;

110 
√w¨g
[2].
¨g_±r
 = 
∑t
[2].arg_ptr;

111 
√w¨g
[2].
¨g_Àn
 = 
∑t
[2].arg_len;

112 
√w¨g
[2].
¨g_Êags
 = 
∑t
[2].arg_flags;

113 i‡(
∑t
->
¨g_Àn
 >= 3) {

114 
√w¨g
[3].
¨g_ty≥
 = 
∑t
[3].arg_type;

115 
√w¨g
[3].
¨g_±r
 = 
∑t
[3].arg_ptr;

116 
√w¨g
[3].
¨g_Àn
 = 
∑t
[3].arg_len;

117 
√w¨g
[3].
¨g_Êags
 = 
∑t
[3].arg_flags;

120 
	`‰ì_¨g
(
∑t
);

123 
	`Newz
(202,
•©
,1,
SPAT
);

124 
•©
->
•©_√xt
 = 
cur°ash
->
tbl_•©roŸ
;

125 
cur°ash
->
tbl_•©roŸ
 = 
•©
;

127 
•©
->
•©_ru¡ime
 = 
∑t
;

128 
√w¨g
 = 
	`make_›
(
ty≥
,2,
À·
,
NuŒ¨g
,Nullarg);

129 
√w¨g
[2].
¨g_ty≥
 = 
A_SPAT
 | 
A_DONT
;

130 
√w¨g
[2].
¨g_±r
.
¨g_•©
 = 
•©
;

133  
√w¨g
;

134 
	}
}

136 
ARG
 *

137 
	$make_›
(
ty≥
,
√wÀn
,
¨g1
,
¨g2
,
¨g3
)

138 
ty≥
;

139 
√wÀn
;

140 
ARG
 *
¨g1
;

141 
ARG
 *
¨g2
;

142 
ARG
 *
¨g3
;

144 
ARG
 *
¨g
;

145 
ARG
 *
chld
;

146 
dﬂrg
;

147 
i
;

148 
ARG
 *
¨g4
;

149 
ARG
 *
¨g5
;

151 
¨g
 = 
	`›_√w
(
√wÀn
);

152 
¨g
->
¨g_ty≥
 = 
ty≥
;

153 i‡(
chld
 = 
¨g1
) {

154 i‡(
chld
->
¨g_ty≥
 =
O_ITEM
 &&

155 (
hoi°abÀ
[ 
i
 = (
chld
[1].
¨g_ty≥
&
A_MASK
)] || i =
A_LVAL
 ||

156 (
i
 =
A_LEXPR
 &&

157 (
chld
[1].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 =
O_LIST
 ||

158 
chld
[1].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 =
O_ARRAY
 ||

159 
chld
[1].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 =
O_HASH
 ))))

161 
¨g
[1].
¨g_ty≥
 = 
chld
[1].arg_type;

162 
¨g
[1].
¨g_±r
 = 
chld
[1].arg_ptr;

163 
¨g
[1].
¨g_Êags
 |
chld
[1].arg_flags;

164 
¨g
[1].
¨g_Àn
 = 
chld
[1].arg_len;

165 
	`‰ì_¨g
(
chld
);

168 
¨g
[1].
¨g_ty≥
 = 
A_EXPR
;

169 
¨g
[1].
¨g_±r
.
¨g_¨g
 = 
chld
;

172 i‡(
chld
 = 
¨g2
) {

173 i‡(
chld
->
¨g_ty≥
 =
O_ITEM
 &&

174 (
hoi°abÀ
[
chld
[1].
¨g_ty≥
&
A_MASK
] ||

175 (
ty≥
 =
O_ASSIGN
 &&

176 ((
chld
[1].
¨g_ty≥
 =
A_READ
 && !(
¨g
[1].¨g_ty≥ & 
A_DONT
))

178 (
chld
[1].
¨g_ty≥
 =
A_INDREAD
 && !(
¨g
[1].¨g_ty≥ & 
A_DONT
))

180 (
chld
[1].
¨g_ty≥
 =
A_GLOB
 && !(
¨g
[1].¨g_ty≥ & 
A_DONT
))

182 
¨g
[2].
¨g_ty≥
 = 
chld
[1].arg_type;

183 
¨g
[2].
¨g_±r
 = 
chld
[1].arg_ptr;

184 
¨g
[2].
¨g_Àn
 = 
chld
[1].arg_len;

185 
	`‰ì_¨g
(
chld
);

188 
¨g
[2].
¨g_ty≥
 = 
A_EXPR
;

189 
¨g
[2].
¨g_±r
.
¨g_¨g
 = 
chld
;

192 i‡(
chld
 = 
¨g3
) {

193 i‡(
chld
->
¨g_ty≥
 =
O_ITEM
 && 
hoi°abÀ
[chld[1].¨g_ty≥&
A_MASK
]) {

194 
¨g
[3].
¨g_ty≥
 = 
chld
[1].arg_type;

195 
¨g
[3].
¨g_±r
 = 
chld
[1].arg_ptr;

196 
¨g
[3].
¨g_Àn
 = 
chld
[1].arg_len;

197 
	`‰ì_¨g
(
chld
);

200 
¨g
[3].
¨g_ty≥
 = 
A_EXPR
;

201 
¨g
[3].
¨g_±r
.
¨g_¨g
 = 
chld
;

204 i‡(
√wÀn
 >4 && (
chld
 = 
¨g4
)) {

205 i‡(
chld
->
¨g_ty≥
 =
O_ITEM
 && 
hoi°abÀ
[chld[1].¨g_ty≥&
A_MASK
]) {

206 
¨g
[4].
¨g_ty≥
 = 
chld
[1].arg_type;

207 
¨g
[4].
¨g_±r
 = 
chld
[1].arg_ptr;

208 
¨g
[4].
¨g_Àn
 = 
chld
[1].arg_len;

209 
	`‰ì_¨g
(
chld
);

212 
¨g
[4].
¨g_ty≥
 = 
A_EXPR
;

213 
¨g
[4].
¨g_±r
.
¨g_¨g
 = 
chld
;

216 i‡(
√wÀn
 >5 && (
chld
 = 
¨g5
)) {

217 i‡(
chld
->
¨g_ty≥
 =
O_ITEM
 && 
hoi°abÀ
[chld[1].¨g_ty≥&
A_MASK
]) {

218 
¨g
[5].
¨g_ty≥
 = 
chld
[1].arg_type;

219 
¨g
[5].
¨g_±r
 = 
chld
[1].arg_ptr;

220 
¨g
[5].
¨g_Àn
 = 
chld
[1].arg_len;

221 
	`‰ì_¨g
(
chld
);

224 
¨g
[5].
¨g_ty≥
 = 
A_EXPR
;

225 
¨g
[5].
¨g_±r
.
¨g_¨g
 = 
chld
;

228 
dﬂrg
 = 
›¨gs
[
ty≥
];

229 
i
 = 1; i <
√wÀn
; ++i) {

230 i‡(!(
dﬂrg
 & 1))

231 
¨g
[
i
].
¨g_ty≥
 |
A_DONT
;

232 i‡(
dﬂrg
 & 2)

233 
¨g
[
i
].
¨g_Êags
 |
AF_ARYOK
;

234 
dﬂrg
 >>= 2;

236 #ifde‡
DEBUGGING


237 i‡(
debug
 & 16) {

238 
	`Ârötf
(
°dîr
,"%lx <make_›(%s",
¨g
,
›«me
[¨g->
¨g_ty≥
]);

239 i‡(
¨g1
)

240 
	`Ârötf
(
°dîr
,",%s=%lx",

241 
¨g«me
[
¨g
[1].
¨g_ty≥
&
A_MASK
],¨g[1].
¨g_±r
.
¨g_¨g
);

242 i‡(
¨g2
)

243 
	`Ârötf
(
°dîr
,",%s=%lx",

244 
¨g«me
[
¨g
[2].
¨g_ty≥
&
A_MASK
],¨g[2].
¨g_±r
.
¨g_¨g
);

245 i‡(
¨g3
)

246 
	`Ârötf
(
°dîr
,",%s=%lx",

247 
¨g«me
[
¨g
[3].
¨g_ty≥
&
A_MASK
],¨g[3].
¨g_±r
.
¨g_¨g
);

248 i‡(
√wÀn
 >= 4)

249 
	`Ârötf
(
°dîr
,",%s=%lx",

250 
¨g«me
[
¨g
[4].
¨g_ty≥
&
A_MASK
],¨g[4].
¨g_±r
.
¨g_¨g
);

251 i‡(
√wÀn
 >= 5)

252 
	`Ârötf
(
°dîr
,",%s=%lx",

253 
¨g«me
[
¨g
[5].
¨g_ty≥
&
A_MASK
],¨g[5].
¨g_±r
.
¨g_¨g
);

254 
	`Ârötf
(
°dîr
,")\n");

257 
	`evÆ°©ic
(
¨g
);

258  
¨g
;

259 
	}
}

262 
	$evÆ°©ic
(
¨g
)

263 
ARG
 *
¨g
;

265 
STR
 *
°r
;

266 
STR
 *
s1
;

267 
STR
 *
s2
;

268 
vÆue
;

269 *
tmps
;

270 
i
;

271 
tm∂⁄g
;

272 
tmp2
;

273 
	`exp
(), 
	`log
(), 
	`sqπ
(), 
	`modf
();

274 *
	`¸y±
();

275 
	`sö
(), 
	`cos
(), 
	`©™2
(), 
	`pow
();

277 i‡(!
¨g
 || !¨g->
¨g_Àn
)

280 i‡((
¨g
[1].
¨g_ty≥
 =
A_SINGLE
 ||árg->¨g_ty≥ =
O_AELEM
) &&

281 (
¨g
->
¨g_Àn
 =1 ||árg[2].
¨g_ty≥
 =
A_SINGLE
) ) {

282 
°r
 = 
	`Så_√w
(20,0);

283 
s1
 = 
¨g
[1].
¨g_±r
.
¨g_°r
;

284 i‡(
¨g
->
¨g_Àn
 > 1)

285 
s2
 = 
¨g
[2].
¨g_±r
.
¨g_°r
;

287 
s2
 = 
NuŒ°r
;

288 
¨g
->
¨g_ty≥
) {

289 
O_AELEM
:

290 
i
 = ()
	`°r_gnum
(
s2
);

291 i‡(
i
 < 32767 && i >= 0) {

292 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

293 
¨g
->
¨g_Àn
 = 1;

294 
¨g
[1].
¨g_ty≥
 = 
A_ARYSTAB
;

295 
¨g
[1].
¨g_Àn
 = 
i
;

296 
	`°r_‰ì
(
s2
);

297 
¨g
[2].
¨g_ty≥
 = 
A_NULL
;

298 
¨g
[2].
¨g_±r
.
¨g_°r
 = 
NuŒ°r
;

302 
	`°r_‰ì
(
°r
);

303 
°r
 = 
NuŒ°r
;

305 
O_CONCAT
:

306 
	`°r_s£t
(
°r
,
s1
);

307 
	`°r_sˇt
(
°r
,
s2
);

309 
O_REPEAT
:

310 
i
 = ()
	`°r_gnum
(
s2
);

311 
tmps
 = 
	`°r_gë
(
s1
);

312 
	`°r_n£t
(
°r
,"",0);

313 
	`STR_GROW
(
°r
, 
i
 * 
s1
->
°r_cur
 + 1);

314 
	`ª≥©˝y
(
°r
->
°r_±r
, 
tmps
, 
s1
->
°r_cur
, 
i
);

315 
°r
->
°r_cur
 = 
i
 * 
s1
->str_cur;

316 
°r
->
°r_±r
[°r->
°r_cur
] = '\0';

318 
O_MULTIPLY
:

319 
vÆue
 = 
	`°r_gnum
(
s1
);

320 
	`°r_num£t
(
°r
,
vÆue
 * 
	`°r_gnum
(
s2
));

322 
O_DIVIDE
:

323 
vÆue
 = 
	`°r_gnum
(
s2
);

324 i‡(
vÆue
 == 0.0)

325 
	`yyîr‹
("Illegal division by constant zero");

327 #ifde‡
¸ay


330 
x
;

331 
k
;

332 
x
 = 
	`°r_gnum
(
s1
);

333 i‡(()()
x
 == x &&

334 ()()
vÆue
 == value &&

335 (
k
 = ()
x
/()
vÆue
)*()value == ()x) {

336 
vÆue
 = 
k
;

338 
vÆue
 = 
x
/value;

340 
	`°r_num£t
(
°r
,
vÆue
);

343 
	`°r_num£t
(
°r
,
	`°r_gnum
(
s1
Ë/ 
vÆue
);

346 
O_MODULO
:

347 
tm∂⁄g
 = ()
	`°r_gnum
(
s2
);

348 i‡(
tm∂⁄g
 == 0L) {

349 
	`yyîr‹
("Illegal modulus of constant zero");

352 
tmp2
 = ()
	`°r_gnum
(
s1
);

353 #i‚de‡
löt


354 i‡(
tmp2
 >= 0)

355 
	`°r_num£t
(
°r
,()(
tmp2
 % 
tm∂⁄g
));

357 
	`°r_num£t
(
°r
,()((
tm∂⁄g
-((-
tmp2
 - 1) %Åmplong)) - 1));

359 
tmp2
 =Åmp2;

362 
O_ADD
:

363 
vÆue
 = 
	`°r_gnum
(
s1
);

364 
	`°r_num£t
(
°r
,
vÆue
 + 
	`°r_gnum
(
s2
));

366 
O_SUBTRACT
:

367 
vÆue
 = 
	`°r_gnum
(
s1
);

368 
	`°r_num£t
(
°r
,
vÆue
 - 
	`°r_gnum
(
s2
));

370 
O_LEFT_SHIFT
:

371 
vÆue
 = 
	`°r_gnum
(
s1
);

372 
i
 = ()
	`°r_gnum
(
s2
);

373 #i‚de‡
löt


374 
	`°r_num£t
(
°r
,()((()
vÆue
Ë<< 
i
));

377 
O_RIGHT_SHIFT
:

378 
vÆue
 = 
	`°r_gnum
(
s1
);

379 
i
 = ()
	`°r_gnum
(
s2
);

380 #i‚de‡
löt


381 
	`°r_num£t
(
°r
,()((()
vÆue
Ë>> 
i
));

384 
O_LT
:

385 
vÆue
 = 
	`°r_gnum
(
s1
);

386 
	`°r_num£t
(
°r
,(
vÆue
 < 
	`°r_gnum
(
s2
)) ? 1.0 : 0.0);

388 
O_GT
:

389 
vÆue
 = 
	`°r_gnum
(
s1
);

390 
	`°r_num£t
(
°r
,(
vÆue
 > 
	`°r_gnum
(
s2
)) ? 1.0 : 0.0);

392 
O_LE
:

393 
vÆue
 = 
	`°r_gnum
(
s1
);

394 
	`°r_num£t
(
°r
,(
vÆue
 <
	`°r_gnum
(
s2
)) ? 1.0 : 0.0);

396 
O_GE
:

397 
vÆue
 = 
	`°r_gnum
(
s1
);

398 
	`°r_num£t
(
°r
,(
vÆue
 >
	`°r_gnum
(
s2
)) ? 1.0 : 0.0);

400 
O_EQ
:

401 i‡(
dow¨n
) {

402 i‡((!
s1
->
°r_nok
 && !
	`looks_like_numbî
(s1)) ||

403 (!
s2
->
°r_nok
 && !
	`looks_like_numbî
(s2)) )

404 
	`w¨n
("Possible use of == on string value");

406 
vÆue
 = 
	`°r_gnum
(
s1
);

407 
	`°r_num£t
(
°r
,(
vÆue
 =
	`°r_gnum
(
s2
)) ? 1.0 : 0.0);

409 
O_NE
:

410 
vÆue
 = 
	`°r_gnum
(
s1
);

411 
	`°r_num£t
(
°r
,(
vÆue
 !
	`°r_gnum
(
s2
)) ? 1.0 : 0.0);

413 
O_NCMP
:

414 
vÆue
 = 
	`°r_gnum
(
s1
);

415 
vÆue
 -
	`°r_gnum
(
s2
);

416 i‡(
vÆue
 > 0.0)

417 
vÆue
 = 1.0;

418 i‡(
vÆue
 < 0.0)

419 
vÆue
 = -1.0;

420 
	`°r_num£t
(
°r
,
vÆue
);

422 
O_BIT_AND
:

423 
vÆue
 = 
	`°r_gnum
(
s1
);

424 #i‚de‡
löt


425 
	`°r_num£t
(
°r
,()(
	`U_L
(
vÆue
Ë& U_L(
	`°r_gnum
(
s2
))));

428 
O_XOR
:

429 
vÆue
 = 
	`°r_gnum
(
s1
);

430 #i‚de‡
löt


431 
	`°r_num£t
(
°r
,()(
	`U_L
(
vÆue
Ë^ U_L(
	`°r_gnum
(
s2
))));

434 
O_BIT_OR
:

435 
vÆue
 = 
	`°r_gnum
(
s1
);

436 #i‚de‡
löt


437 
	`°r_num£t
(
°r
,()(
	`U_L
(
vÆue
Ë| U_L(
	`°r_gnum
(
s2
))));

440 
O_AND
:

441 i‡(
	`°r_åue
(
s1
))

442 
	`°r_s£t
(
°r
,
s2
);

444 
	`°r_s£t
(
°r
,
s1
);

446 
O_OR
:

447 i‡(
	`°r_åue
(
s1
))

448 
	`°r_s£t
(
°r
,
s1
);

450 
	`°r_s£t
(
°r
,
s2
);

452 
O_COND_EXPR
:

453 i‡((
¨g
[3].
¨g_ty≥
 & 
A_MASK
Ë!
A_SINGLE
) {

454 
	`°r_‰ì
(
°r
);

455 
°r
 = 
NuŒ°r
;

458 i‡(
	`°r_åue
(
s1
))

459 
	`°r_s£t
(
°r
,
s2
);

461 
	`°r_s£t
(
°r
,
¨g
[3].
¨g_±r
.
¨g_°r
);

462 
	`°r_‰ì
(
¨g
[3].
¨g_±r
.
¨g_°r
);

463 
¨g
[3].
¨g_±r
.
¨g_°r
 = 
NuŒ°r
;

466 
O_NEGATE
:

467 
	`°r_num£t
(
°r
,()(-
	`°r_gnum
(
s1
)));

469 
O_NOT
:

470 
	`°r_num£t
(
°r
,()(!
	`°r_åue
(
s1
)));

472 
O_COMPLEMENT
:

473 #i‚de‡
löt


474 
	`°r_num£t
(
°r
,()(~
	`U_L
(
	`°r_gnum
(
s1
))));

477 
O_SIN
:

478 
	`°r_num£t
(
°r
,
	`sö
(
	`°r_gnum
(
s1
)));

480 
O_COS
:

481 
	`°r_num£t
(
°r
,
	`cos
(
	`°r_gnum
(
s1
)));

483 
O_ATAN2
:

484 
vÆue
 = 
	`°r_gnum
(
s1
);

485 
	`°r_num£t
(
°r
,
	`©™2
(
vÆue
, 
	`°r_gnum
(
s2
)));

487 
O_POW
:

488 
vÆue
 = 
	`°r_gnum
(
s1
);

489 
	`°r_num£t
(
°r
,
	`pow
(
vÆue
, 
	`°r_gnum
(
s2
)));

491 
O_LENGTH
:

492 
	`°r_num£t
(
°r
, ()
	`°r_Àn
(
s1
));

494 
O_SLT
:

495 
	`°r_num£t
(
°r
,()(
	`°r_cmp
(
s1
,
s2
) < 0));

497 
O_SGT
:

498 
	`°r_num£t
(
°r
,()(
	`°r_cmp
(
s1
,
s2
) > 0));

500 
O_SLE
:

501 
	`°r_num£t
(
°r
,()(
	`°r_cmp
(
s1
,
s2
) <= 0));

503 
O_SGE
:

504 
	`°r_num£t
(
°r
,()(
	`°r_cmp
(
s1
,
s2
) >= 0));

506 
O_SEQ
:

507 
	`°r_num£t
(
°r
,()(
	`°r_eq
(
s1
,
s2
)));

509 
O_SNE
:

510 
	`°r_num£t
(
°r
,()(!
	`°r_eq
(
s1
,
s2
)));

512 
O_SCMP
:

513 
	`°r_num£t
(
°r
,()(
	`°r_cmp
(
s1
,
s2
)));

515 
O_CRYPT
:

516 #ifde‡
HAS_CRYPT


517 
tmps
 = 
	`°r_gë
(
s1
);

518 
	`°r_£t
(
°r
,
	`¸y±
(
tmps
,
	`°r_gë
(
s2
)));

520 
	`yyîr‹
(

524 
O_EXP
:

525 
	`°r_num£t
(
°r
,
	`exp
(
	`°r_gnum
(
s1
)));

527 
O_LOG
:

528 
	`°r_num£t
(
°r
,
	`log
(
	`°r_gnum
(
s1
)));

530 
O_SQRT
:

531 
	`°r_num£t
(
°r
,
	`sqπ
(
	`°r_gnum
(
s1
)));

533 
O_INT
:

534 
vÆue
 = 
	`°r_gnum
(
s1
);

535 i‡(
vÆue
 >= 0.0)

536 ()
	`modf
(
vÆue
,&value);

538 ()
	`modf
(-
vÆue
,&value);

539 
vÆue
 = -value;

541 
	`°r_num£t
(
°r
,
vÆue
);

543 
O_ORD
:

544 #i‚de‡
I286


545 
	`°r_num£t
(
°r
,()(*
	`°r_gë
(
s1
)));

548 
z≠c
;

549 *
z≠s
;

551 
z≠s
 = 
	`°r_gë
(
s1
);

552 
z≠c
 = (Ë*
z≠s
;

553 
	`°r_num£t
(
°r
,()(
z≠c
));

558 i‡(
°r
) {

559 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

560 
	`°r_‰ì
(
s1
);

561 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
°r
;

562 i‡(
s2
) {

563 
	`°r_‰ì
(
s2
);

564 
¨g
[2].
¨g_±r
.
¨g_°r
 = 
NuŒ°r
;

565 
¨g
[2].
¨g_ty≥
 = 
A_NULL
;

569 
	}
}

571 
ARG
 *

572 
	$l
(
¨g
)

573 
ARG
 *
¨g
;

575 
i
;

576 
ARG
 *
¨g1
;

577 
ARG
 *
¨g2
;

578 
SPAT
 *
•©
;

579 
¨ghog
 = 0;

581 
i
 = 
¨g
[1].
¨g_ty≥
 & 
A_MASK
;

583 
¨g
->
¨g_Êags
 |
AF_COMMON
;

586 i‡(
i
 =
A_ARYLEN
) {

587 
¨g
[1].
¨g_ty≥
 = 
A_LARYLEN
;

588  
¨g
;

590 i‡(
i
 =
A_ARYSTAB
) {

591 
¨g
[1].
¨g_ty≥
 = 
A_LARYSTAB
;

592  
¨g
;

597 i‡(
i
 =
A_EXPR
 || i =
A_LEXPR
) {

598 
¨g1
 = 
¨g
[1].
¨g_±r
.
¨g_¨g
;

600 i‡(
¨g1
->
¨g_ty≥
 =
O_LIST
 ||árg1->¨g_ty≥ =
O_ITEM
) {

602 i‡(
¨g
->
¨g_Àn
 > 1) {

603 
	`dehoi°
(
¨g
,2);

604 
¨g2
 = 
¨g
[2].
¨g_±r
.
¨g_¨g
;

605 i‡(
	`nŸhög_ö_comm⁄
(
¨g1
,
¨g2
))

606 
¨g
->
¨g_Êags
 &~
AF_COMMON
;

607 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
) {

608 i‡(
¨g1
->
¨g_Êags
 & 
AF_LOCAL
)

609 
¨g
->
¨g_Êags
 |
AF_LOCAL
;

610 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

611 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

614 i‡(
¨g
->
¨g_ty≥
 !
O_CHOP
)

615 
¨g
->
¨g_ty≥
 = 
O_ASSIGN
;

616 
i
 = 
¨g1
->
¨g_Àn
; i >= 1; i--) {

617 
¨g1
[
i
].
¨g_ty≥
) {

618 
A_STAR
: 
A_LSTAR
:

619 
¨g1
[
i
].
¨g_ty≥
 = 
A_LSTAR
;

621 
A_STAB
: 
A_LVAL
:

622 
¨g1
[
i
].
¨g_ty≥
 = 
A_LVAL
;

624 
A_ARYLEN
: 
A_LARYLEN
:

625 
¨g1
[
i
].
¨g_ty≥
 = 
A_LARYLEN
;

627 
A_ARYSTAB
: 
A_LARYSTAB
:

628 
¨g1
[
i
].
¨g_ty≥
 = 
A_LARYSTAB
;

630 
A_EXPR
: 
A_LEXPR
:

631 
¨g1
[
i
].
¨g_ty≥
 = 
A_LEXPR
;

632 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
) {

633 
O_ARRAY
: 
O_LARRAY
:

634 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 = 
O_LARRAY
;

635 
¨ghog
 = 1;

637 
O_AELEM
: 
O_LAELEM
:

638 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 = 
O_LAELEM
;

640 
O_HASH
: 
O_LHASH
:

641 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 = 
O_LHASH
;

642 
¨ghog
 = 1;

644 
O_HELEM
: 
O_LHELEM
:

645 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 = 
O_LHELEM
;

647 
O_ASLICE
: 
O_LASLICE
:

648 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 = 
O_LASLICE
;

650 
O_HSLICE
: 
O_LHSLICE
:

651 
¨g1
[
i
].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 = 
O_LHSLICE
;

654 
ûl_ôem
;

658 
ûl_ôem
:

659 ()
	`•rötf
(
tokíbuf
, "Illegal item (%s)ásÜvalue",

660 
¨g«me
[
¨g1
[
i
].
¨g_ty≥
&
A_MASK
]);

661 
	`yyîr‹
(
tokíbuf
);

664 i‡(
¨g
->
¨g_Àn
 > 1) {

665 i‡(
¨g2
->
¨g_ty≥
 =
O_SPLIT
 && !¨g2[3].¨g_ty≥ && !
¨ghog
) {

666 
¨g2
[3].
¨g_ty≥
 = 
A_SINGLE
;

667 
¨g2
[3].
¨g_±r
.
¨g_°r
 =

668 
	`°r_nmake
(()
¨g1
->
¨g_Àn
 + 1);

672 i‡(
¨g1
->
¨g_ty≥
 =
O_AELEM
 ||árg1->¨g_ty≥ =
O_LAELEM
)

673 i‡(
¨g
->
¨g_ty≥
 =
O_DEFINED
)

674 
¨g1
->
¨g_ty≥
 = 
O_AELEM
;

676 
¨g1
->
¨g_ty≥
 = 
O_LAELEM
;

677 i‡(
¨g1
->
¨g_ty≥
 =
O_ARRAY
 ||árg1->¨g_ty≥ =
O_LARRAY
) {

678 
¨g1
->
¨g_ty≥
 = 
O_LARRAY
;

679 i‡(
¨g
->
¨g_Àn
 > 1) {

680 
	`dehoi°
(
¨g
,2);

681 
¨g2
 = 
¨g
[2].
¨g_±r
.
¨g_¨g
;

682 i‡(
¨g2
->
¨g_ty≥
 =
O_SPLIT
) {

683 
•©
 = 
¨g2
[2].
¨g_±r
.
¨g_•©
;

684 i‡(!(
•©
->
•©_Êags
 & 
SPAT_ONCE
) &&

685 
	`nŸhög_ö_comm⁄
(
¨g1
,
•©
->
•©_ª∂
)) {

686 
•©
->
•©_ª∂
[1].
¨g_±r
.
¨g_°ab
 =

687 
¨g1
[1].
¨g_±r
.
¨g_°ab
;

688 
¨g1
[1].
¨g_±r
.
¨g_°ab
 = 
NuŒ°ab
;

689 
•©
->
•©_Êags
 |
SPAT_ONCE
;

690 
	`¨g_‰ì
(
¨g1
);

691 
¨g
[1].
¨g_±r
.
¨g_¨g
 = 
NuŒ¨g
;

692 
	`‰ì_¨g
(
¨g
);

693  
¨g2
;

696 i‡(
	`nŸhög_ö_comm⁄
(
¨g1
,
¨g2
))

697 
¨g
->
¨g_Êags
 &~
AF_COMMON
;

698 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
) {

699 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

700 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

703 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
)

704 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

706 i‡(
¨g1
->
¨g_ty≥
 =
O_HELEM
 ||árg1->¨g_ty≥ =
O_LHELEM
)

707 i‡(
¨g
->
¨g_ty≥
 =
O_DEFINED
)

708 
¨g1
->
¨g_ty≥
 = 
O_HELEM
;

710 
¨g1
->
¨g_ty≥
 = 
O_LHELEM
;

711 i‡(
¨g1
->
¨g_ty≥
 =
O_HASH
 ||árg1->¨g_ty≥ =
O_LHASH
) {

712 
¨g1
->
¨g_ty≥
 = 
O_LHASH
;

713 i‡(
¨g
->
¨g_Àn
 > 1) {

714 
	`dehoi°
(
¨g
,2);

715 
¨g2
 = 
¨g
[2].
¨g_±r
.
¨g_¨g
;

716 i‡(
	`nŸhög_ö_comm⁄
(
¨g1
,
¨g2
))

717 
¨g
->
¨g_Êags
 &~
AF_COMMON
;

718 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
) {

719 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

720 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

723 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
)

724 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

726 i‡(
¨g1
->
¨g_ty≥
 =
O_ASLICE
) {

727 
¨g1
->
¨g_ty≥
 = 
O_LASLICE
;

728 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
) {

729 
	`dehoi°
(
¨g
,2);

730 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

731 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

734 i‡(
¨g1
->
¨g_ty≥
 =
O_HSLICE
) {

735 
¨g1
->
¨g_ty≥
 = 
O_LHSLICE
;

736 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
) {

737 
	`dehoi°
(
¨g
,2);

738 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

739 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

742 i‡((
¨g
->
¨g_ty≥
 =
O_DEFINED
 ||árg->¨g_ty≥ =
O_UNDEF
) &&

743 (
¨g1
->
¨g_ty≥
 =(
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
)) ) {

744 
¨g
[1].
¨g_ty≥
 |
A_DONT
;

746 i‡(
¨g1
->
¨g_ty≥
 =
O_SUBSTR
 ||árg1->¨g_ty≥ =
O_VEC
) {

747 ()
	`l
(
¨g1
);

748 
	`Ríewc
(
¨g1
->
¨g_±r
.
¨g_°r
, 1, 
l°rög
, 
STR
);

751 i‡(
¨g1
->
¨g_ty≥
 =
O_ASSIGN
) {

756 ()
	`•rötf
(
tokíbuf
,

757 "IŒegÆÉx¥essi⁄ (%sËa†lvÆue",
›«me
[
¨g1
->
¨g_ty≥
]);

758 
	`yyîr‹
(
tokíbuf
);

760 
¨g
[1].
¨g_ty≥
 = 
A_LEXPR
 | (¨g[1].¨g_ty≥ & 
A_DONT
);

761 i‡(
¨g
->
¨g_ty≥
 =
O_ASSIGN
 && (
¨g1
[1].
¨g_Êags
 & 
AF_ARYOK
)) {

762 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

763 i‡(
¨g
->
¨g_Àn
 > 1)

764 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

766 #ifde‡
DEBUGGING


767 i‡(
debug
 & 16)

768 
	`Ârötf
(
°dîr
,"lval LEXPR\n");

770  
¨g
;

772 i‡(
i
 =
A_STAR
 || i =
A_LSTAR
) {

773 
¨g
[1].
¨g_ty≥
 = 
A_LSTAR
 | (¨g[1].¨g_ty≥ & 
A_DONT
);

774  
¨g
;

779 i‡(
i
 !
A_STAB
 && i !
A_LVAL
) {

780 ()
	`•rötf
(
tokíbuf
,

781 "IŒegÆ iãm (%sËa†lvÆue",
¨g«me
[
¨g
[1].
¨g_ty≥
&
A_MASK
]);

782 
	`yyîr‹
(
tokíbuf
);

784 
¨g
[1].
¨g_ty≥
 = 
A_LVAL
 | (¨g[1].¨g_ty≥ & 
A_DONT
);

785 #ifde‡
DEBUGGING


786 i‡(
debug
 & 16)

787 
	`Ârötf
(
°dîr
,"lval LVAL\n");

789  
¨g
;

790 
	}
}

792 
ARG
 *

793 
	$fixl
(
ty≥
,
¨g
)

794 
ty≥
;

795 
ARG
 *
¨g
;

797 i‡(
ty≥
 =
O_DEFINED
 ||Åy≥ =
O_UNDEF
) {

798 i‡(
¨g
->
¨g_ty≥
 !
O_ITEM
)

799 
¨g
 = 
	`hide_¨y
(arg);

800 i‡(
¨g
->
¨g_ty≥
 =
O_ITEM
) {

801 
ty≥
 = 
¨g
[1].
¨g_ty≥
 & 
A_MASK
;

802 i‡(
ty≥
 =
A_EXPR
 ||Åy≥ =
A_LEXPR
)

803 
¨g
[1].
¨g_ty≥
 = 
A_LEXPR
|
A_DONT
;

806  
¨g
;

807 
	}
}

809 
	$dehoi°
(
¨g
,
i
)

810 
ARG
 *
¨g
;

812 
ARG
 *
tm∑rg
;

814 i‡(
¨g
[
i
].
¨g_ty≥
 !
A_EXPR
) {

815 
tm∑rg
 = 
	`make_›
(
O_ITEM
,1,
NuŒ¨g
,Nullarg,Nullarg);

816 
tm∑rg
[1] = 
¨g
[
i
];

817 
¨g
[
i
].
¨g_±r
.
¨g_¨g
 = 
tm∑rg
;

818 
¨g
[
i
].
¨g_ty≥
 = 
A_EXPR
;

820 
	}
}

822 
ARG
 *

823 
	$addÊags
(
i
,
Êags
,
¨g
)

824 
ARG
 *
¨g
;

826 
¨g
[
i
].
¨g_Êags
 |
Êags
;

827  
¨g
;

828 
	}
}

830 
ARG
 *

831 
	$hide_¨y
(
¨g
)

832 
ARG
 *
¨g
;

834 i‡(
¨g
->
¨g_ty≥
 =
O_ARRAY
 ||árg->¨g_ty≥ =
O_HASH
)

835  
	`make_›
(
O_ITEM
,1,
¨g
,
NuŒ¨g
,Nullarg);

836  
¨g
;

837 
	}
}

841 
ARG
 *

842 
	$jmaybe
(
¨g
)

843 
ARG
 *
¨g
;

845 i‡(
¨g
 &&árg->
¨g_ty≥
 =
O_COMMA
) {

846 
¨g
 = 
	`li°ish
(arg);

847 
¨g
 = 
	`make_›
(
O_JOIN
, 2,

848 
	`°ab2¨g
(
A_STAB
,
	`°abít
(";",
TRUE
)),

849 
	`make_li°
(
¨g
),

850 
NuŒ¨g
);

852  
¨g
;

853 
	}
}

855 
ARG
 *

856 
	$make_li°
(
¨g
)

857 
ARG
 *
¨g
;

859 
i
;

860 
ARG
 *
node
;

861 
ARG
 *
nxäode
;

862 
j
;

863 
STR
 *
tmp°r
;

865 i‡(!
¨g
) {

866 
¨g
 = 
	`›_√w
(0);

867 
¨g
->
¨g_ty≥
 = 
O_LIST
;

869 i‡(
¨g
->
¨g_ty≥
 !
O_COMMA
) {

870 i‡(
¨g
->
¨g_ty≥
 !
O_ARRAY
)

871 
¨g
->
¨g_Êags
 |
AF_LISTISH
;

872 
¨g
->
¨g_Êags
 |
AF_LISTISH
;

873  
¨g
;

875 
i
 = 2, 
node
 = 
¨g
; ; i++) {

876 i‡(
node
->
¨g_Àn
 < 2)

878 i‡(
node
[1].
¨g_ty≥
 !
A_EXPR
)

880 
node
 =Çode[1].
¨g_±r
.
¨g_¨g
;

881 i‡(
node
->
¨g_ty≥
 !
O_COMMA
)

884 i‡(
i
 > 2) {

885 
node
 = 
¨g
;

886 
¨g
 = 
	`›_√w
(
i
);

887 
tmp°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

888 #ifde‡
STRUCTCOPY


889 *
¨g
 = *
node
;

891 ()
	`bc›y
((*)
node
, (*)
¨g
, (
ARG
));

893 
¨g
->
¨g_±r
.
¨g_°r
 = 
tmp°r
;

894 
j
 = 
i
; ; ) {

895 #ifde‡
STRUCTCOPY


896 
¨g
[
j
] = 
node
[2];

898 ()
	`bc›y
((*)(
node
+2), (*)(
¨g
+
j
), (
ARG
));

900 
¨g
[
j
].
¨g_Êags
 |
AF_ARYOK
;

901 --
j
;

902 i‡(
j
 < 2) {

903 #ifde‡
STRUCTCOPY


904 
¨g
[1] = 
node
[1];

906 ()
	`bc›y
((*)(
node
+1), (*)(
¨g
+1), (
ARG
));

908 
	`‰ì_¨g
(
node
);

911 
nxäode
 = 
node
[1].
¨g_±r
.
¨g_¨g
;

912 
	`‰ì_¨g
(
node
);

913 
node
 = 
nxäode
;

916 
¨g
[1].
¨g_Êags
 |
AF_ARYOK
;

917 
¨g
[2].
¨g_Êags
 |
AF_ARYOK
;

918 
¨g
->
¨g_ty≥
 = 
O_LIST
;

919 
¨g
->
¨g_Àn
 = 
i
;

920  
¨g
;

921 
	}
}

925 
ARG
 *

926 
	$li°ish
(
¨g
)

927 
ARG
 *
¨g
;

929 i‡(
¨g
->
¨g_Êags
 & 
AF_LISTISH
)

930 
¨g
 = 
	`make_›
(
O_LIST
,1,¨g,
NuŒ¨g
,Nullarg);

931  
¨g
;

932 
	}
}

934 
ARG
 *

935 
	$maybñi°ish
(
›ty≥
, 
¨g
)

936 
›ty≥
;

937 
ARG
 *
¨g
;

939 
ARG
 *
tm∑rg
 = 
¨g
;

941 i‡(
›ty≥
 =
O_RETURN
 && 
¨g
->
¨g_ty≥
 =
O_ITEM
 &&

942 
¨g
[1].
¨g_ty≥
 =
A_EXPR
 && (
tm∑rg
 =árg[1].
¨g_±r
.
¨g_¨g
) &&

943 ((
tm∑rg
->
¨g_Êags
 & 
AF_LISTISH
Ë|| (tm∑rg->
¨g_ty≥
 =
O_ARRAY
) )) {

944 
tm∑rg
 = 
	`li°ish
(tmparg);

945 
	`‰ì_¨g
(
¨g
);

946 
¨g
 = 
tm∑rg
;

948 i‡(
›ty≥
 =
O_PRTF
 ||

949 (
¨g
->
¨g_ty≥
 =
O_ASLICE
 ||árg->¨g_ty≥ =
O_HSLICE
 ||

950 
¨g
->
¨g_ty≥
 =
O_F_OR_R
) )

951 
¨g
 = 
	`li°ish
(arg);

952  
¨g
;

953 
	}
}

957 
ARG
 *

958 
	$loˇlize
(
¨g
)

959 
ARG
 *
¨g
;

961 
¨g
->
¨g_Êags
 |
AF_LOCAL
;

962  
¨g
;

963 
	}
}

965 
ARG
 *

966 
	$rˇtmaybe
(
¨g
)

967 
ARG
 *
¨g
;

969 
ARG
 *
¨g2
;

971 i‡(
¨g
->
¨g_ty≥
 =
O_CONCAT
 &&árg[2].¨g_ty≥ =
A_EXPR
) {

972 
¨g2
 = 
¨g
[2].
¨g_±r
.
¨g_¨g
;

973 i‡(
¨g2
->
¨g_ty≥
 =
O_ITEM
 &&árg2[1].¨g_ty≥ =
A_READ
) {

974 
¨g
->
¨g_ty≥
 = 
O_RCAT
;

975 
¨g
[2].
¨g_ty≥
 = 
¨g2
[1].arg_type;

976 
¨g
[2].
¨g_±r
 = 
¨g2
[1].arg_ptr;

977 
	`‰ì_¨g
(
¨g2
);

980  
¨g
;

981 
	}
}

983 
ARG
 *

984 
	$°ab2¨g
(
©y≥
,
°ab
)

985 
©y≥
;

986 
STAB
 *
°ab
;

988 
ARG
 *
¨g
;

990 
¨g
 = 
	`›_√w
(1);

991 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

992 
¨g
[1].
¨g_ty≥
 = 
©y≥
;

993 
¨g
[1].
¨g_±r
.
¨g_°ab
 = 
°ab
;

994  
¨g
;

995 
	}
}

997 
ARG
 *

998 
	$cvÆ_to_¨g
(
cvÆ
)

999 *
cvÆ
;

1001 
ARG
 *
¨g
;

1003 
¨g
 = 
	`›_√w
(1);

1004 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1005 
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

1006 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
	`°r_make
(
cvÆ
,0);

1007 
	`Sa„‰ì
(
cvÆ
);

1008  
¨g
;

1009 
	}
}

1011 
ARG
 *

1012 
	$›_√w
(
num¨gs
)

1013 
num¨gs
;

1015 
ARG
 *
¨g
;

1017 
	`Newz
(203,
¨g
, 
num¨gs
 + 1, 
ARG
);

1018 
¨g
->
¨g_±r
.
¨g_°r
 = 
	`Så_√w
(21,0);

1019 
¨g
->
¨g_Àn
 = 
num¨gs
;

1020  
¨g
;

1021 
	}
}

1024 
	$‰ì_¨g
(
¨g
)

1025 
ARG
 *
¨g
;

1027 
	`°r_‰ì
(
¨g
->
¨g_±r
.
¨g_°r
);

1028 
	`Sa„‰ì
(
¨g
);

1029 
	}
}

1031 
ARG
 *

1032 
	$make_m©ch
(
ty≥
,
ex¥
,
•©
)

1033 
ty≥
;

1034 
ARG
 *
ex¥
;

1035 
SPAT
 *
•©
;

1037 
ARG
 *
¨g
;

1039 
¨g
 = 
	`make_›
(
ty≥
,2,
ex¥
,
NuŒ¨g
,Nullarg);

1041 
¨g
[2].
¨g_ty≥
 = 
A_SPAT
|
A_DONT
;

1042 
¨g
[2].
¨g_±r
.
¨g_•©
 = 
•©
;

1043 #ifde‡
DEBUGGING


1044 i‡(
debug
 & 16)

1045 
	`Ârötf
(
°dîr
,"make_m©ch SPAT=%lx\n",()
•©
);

1048 i‡(
ty≥
 =
O_SUBST
 ||Åy≥ =
O_NSUBST
) {

1049 i‡(
¨g
[1].
¨g_ty≥
 !
A_STAB
) {

1050 
	`yyîr‹
("IllegalÜvalue");

1052 
¨g
[1].
¨g_ty≥
 = 
A_LVAL
;

1054  
¨g
;

1055 
	}
}

1057 
ARG
 *

1058 
	$cmd_to_¨g
(
cmd
)

1059 
CMD
 *
cmd
;

1061 
ARG
 *
¨g
;

1063 
¨g
 = 
	`›_√w
(1);

1064 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1065 
¨g
[1].
¨g_ty≥
 = 
A_CMD
;

1066 
¨g
[1].
¨g_±r
.
¨g_cmd
 = 
cmd
;

1067  
¨g
;

1068 
	}
}

1073 
	$nŸhög_ö_comm⁄
(
¨g1
,
¨g2
)

1074 
ARG
 *
¨g1
;

1075 
ARG
 *
¨g2
;

1077 
thi£x¥
 = 0;

1079 
thi£x¥
++;

1080 i‡(
	`¨g_comm⁄
(
¨g1
,
thi£x¥
,1))

1082 
	`°ab_œ°ex¥
(
def°ab
Ë
thi£x¥
;

1083 i‡(
	`¨g_comm⁄
(
¨g2
,
thi£x¥
,0))

1086 
	}
}

1093 
	$¨g_comm⁄
(
¨g
,
ex¥num
,
m¨kög
)

1094 
ARG
 *
¨g
;

1095 
ex¥num
;

1096 
m¨kög
;

1098 
i
;

1100 i‡(!
¨g
)

1102 
i
 = 
¨g
->
¨g_Àn
; i >= 1; i--) {

1103 
¨g
[
i
].
¨g_ty≥
 & 
A_MASK
) {

1104 
A_NULL
:

1106 
A_LEXPR
:

1107 
A_EXPR
:

1108 i‡(
	`¨g_comm⁄
(
¨g
[
i
].
¨g_±r
.
¨g_¨g
,
ex¥num
,
m¨kög
))

1111 
A_CMD
:

1113 
A_STAR
:

1114 
A_LSTAR
:

1115 
A_STAB
:

1116 
A_LVAL
:

1117 
A_ARYLEN
:

1118 
A_LARYLEN
:

1119 i‡(
m¨kög
)

1120 
	`°ab_œ°ex¥
(
¨g
[
i
].
¨g_±r
.
¨g_°ab
Ë
ex¥num
;

1121 i‡(
	`°ab_œ°ex¥
(
¨g
[
i
].
¨g_±r
.
¨g_°ab
Ë=
ex¥num
)

1124 
A_DOUBLE
:

1125 
A_BACKTICK
:

1127 *
s
 = 
¨g
[
i
].
¨g_±r
.
¨g_°r
->
°r_±r
;

1128 *
£nd
 = 
s
 + 
¨g
[
i
].
¨g_±r
.
¨g_°r
->
°r_cur
;

1129 
STAB
 *
°ab
;

1131 *
s
) {

1132 i‡(*
s
 == '$' && s[1]) {

1133 
s
 = 
	`sˇnidít
(s,
£nd
,
tokíbuf
);

1134 
°ab
 = 
	`°abít
(
tokíbuf
,
TRUE
);

1135 i‡(
m¨kög
)

1136 
	`°ab_œ°ex¥
(
°ab
Ë
ex¥num
;

1137 i‡(
	`°ab_œ°ex¥
(
°ab
Ë=
ex¥num
)

1141 i‡(*
s
 == '\\' && s[1])

1142 
s
++;

1143 
s
++;

1147 
A_SPAT
:

1148 i‡(
	`•©_comm⁄
(
¨g
[
i
].
¨g_±r
.
¨g_•©
,
ex¥num
,
m¨kög
))

1151 
A_READ
:

1152 
A_INDREAD
:

1153 
A_GLOB
:

1154 
A_WORD
:

1155 
A_SINGLE
:

1159 
¨g
->
¨g_ty≥
) {

1160 
O_ARRAY
:

1161 
O_LARRAY
:

1162 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
)

1163 ()
	`Ødd
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

1165 
O_HASH
:

1166 
O_LHASH
:

1167 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
)

1168 ()
	`hadd
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

1170 
O_EVAL
:

1171 
O_SUBR
:

1172 
O_DBSUBR
:

1176 
	}
}

1179 
	$•©_comm⁄
(
•©
,
ex¥num
,
m¨kög
)

1180 
SPAT
 *
•©
;

1181 
ex¥num
;

1182 
m¨kög
;

1184 i‡(
•©
->
•©_ru¡ime
)

1185 i‡(
	`¨g_comm⁄
(
•©
->
•©_ru¡ime
,
ex¥num
,
m¨kög
))

1187 i‡(
•©
->
•©_ª∂
) {

1188 i‡(
	`¨g_comm⁄
(
•©
->
•©_ª∂
,
ex¥num
,
m¨kög
))

1192 
	}
}

	@doarg.c

18 
	~"EXTERN.h
"

19 
	~"≥æ.h
"

21 #i‡!
deföed
(
NSIG
Ë|| deföed(
M_UNIX
Ë|| deföed(
M_XENIX
)

22 
	~<sig«l.h
>

25 

fﬁd
[];

27 #ifde‡
BUGGY_MSC


28 #¥agm®
fun˘i⁄
(
memcmp
)

32 
	$do_sub°
(
°r
,
¨g
,
•
)

33 
STR
 *
°r
;

34 
ARG
 *
¨g
;

35 
•
;

37 
SPAT
 *
•©
;

38 
SPAT
 *
r•©
;

39 
STR
 *
d°r
;

40 *
s
 = 
	`°r_gë
(
°r
);

41 *
°ªnd
 = 
s
 + 
°r
->
°r_cur
;

42 *
m
;

43 *
c
;

44 *
d
;

45 
˛í
;

46 
ôîs
 = 0;

47 
maxôîs
 = (
°ªnd
 - 
s
) + 10;

48 
i
;

49 
boﬁ
 
⁄˚
;

50 *
‹ig
;

51 
ß„ba£
;

53 
r•©
 = 
•©
 = 
¨g
[2].
¨g_±r
.
¨g_•©
;

54 i‡(!
•©
 || !
s
)

55 
	`Áèl
("panic: do_subst");

56 i‡(
•©
->
•©_ru¡ime
) {

57 
noöåp
 = "|)";

58 ()
	`evÆ
(
•©
->
•©_ru¡ime
,
G_SCALAR
,
•
);

59 
m
 = 
	`°r_gë
(
d°r
 = 
°ack
->
¨y_¨øy
[
•
+1]);

60 
noöåp
 = "";

61 i‡(
•©
->
•©_ªgexp
) {

62 
	`ªg‰ì
(
•©
->
•©_ªgexp
);

63 
•©
->
•©_ªgexp
 = 
	`NuŒ
(
REGEXP
*);

65 
•©
->
•©_ªgexp
 = 
	`ªgcomp
(
m
,m+
d°r
->
°r_cur
,

66 
•©
->
•©_Êags
 & 
SPAT_FOLD
);

67 i‡(
•©
->
•©_Êags
 & 
SPAT_KEEP
) {

68 
	`¨g_‰ì
(
•©
->
•©_ru¡ime
);

69 
•©
->
•©_ru¡ime
 = 
NuŒ¨g
;

72 #ifde‡
DEBUGGING


73 i‡(
debug
 & 8) {

74 
	`deb
("2.SPAT /%s/\n",
•©
->
•©_ªgexp
->
¥ecomp
);

77 
ß„ba£
 = ((!
•©
->
•©_ªgexp
 || !•©->•©_ªgexp->
≈¨ís
) &&

78 !
ßwam≥rßnd
);

79 i‡(!*
•©
->
•©_ªgexp
->
¥ecomp
 && 
œ°•©
)

80 
•©
 = 
œ°•©
;

81 
‹ig
 = 
m
 = 
s
;

82 i‡(
höt
) {

83 i‡(
höt
 < 
s
 || höà> 
°ªnd
)

84 
	`Áèl
("panic: hint in do_match");

85 
s
 = 
höt
;

86 
höt
 = 
NuŒch
;

87 i‡(
•©
->
•©_ªgexp
->
ªgback
 >= 0) {

88 
s
 -
•©
->
•©_ªgexp
->
ªgback
;

89 i‡(
s
 < 
m
)

90 
s
 = 
m
;

93 
s
 = 
m
;

95 i‡(
•©
->
•©_sh‹t
) {

96 i‡(
•©
->
•©_Êags
 & 
SPAT_SCANFIRST
) {

97 i‡(
°r
->
°r_pok
 & 
SP_STUDIED
) {

98 i‡(
s¸ómfú°
[
•©
->
•©_sh‹t
->
°r_øª
] < 0)

99 
n›e
;

100 i‡(!(
s
 = 
	`s¸ómö°r
(
°r
,
•©
->
•©_sh‹t
)))

101 
n›e
;

103 #i‚de‡
löt


104 i‡(!(
s
 = 
	`fbmö°r
((*)s, (*)
°ªnd
,

105 
•©
->
•©_sh‹t
)))

106 
n›e
;

108 i‡(
s
 && 
•©
->
•©_ªgexp
->
ªgback
 >= 0) {

109 ++
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
;

110 
s
 -
•©
->
•©_ªgexp
->
ªgback
;

111 i‡(
s
 < 
m
)

112 
s
 = 
m
;

115 
s
 = 
m
;

117 i‡(!
mu…ûöe
 && (*
•©
->
•©_sh‹t
->
°r_±r
 !*
s
 ||

118 
	`bcmp
(
•©
->
•©_sh‹t
->
°r_±r
, 
s
, s∑t->
•©_¶í
) ))

119 
n›e
;

120 i‡(--
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
 < 0) {

121 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

122 
•©
->
•©_sh‹t
 = 
NuŒ°r
;

125 
⁄˚
 = ((
r•©
->
•©_Êags
 & 
SPAT_ONCE
) != 0);

126 i‡(
r•©
->
•©_Êags
 & 
SPAT_CONST
) {

127 i‡((
r•©
->
•©_ª∂
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
)

128 
d°r
 = 
r•©
->
•©_ª∂
[1].
¨g_±r
.
¨g_°r
;

130 ()
	`evÆ
(
r•©
->
•©_ª∂
,
G_SCALAR
,
•
);

131 
d°r
 = 
°ack
->
¨y_¨øy
[
•
+1];

133 
c
 = 
	`°r_gë
(
d°r
);

134 
˛í
 = 
d°r
->
°r_cur
;

135 i‡(
˛í
 <
•©
->
•©_¶í
 + ()•©->
•©_ªgexp
->
ªgback
) {

137 i‡(
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, 
‹ig
, 0,

138 
°r
->
°r_pok
 & 
SP_STUDIED
 ? så : 
NuŒ°r
, 
ß„ba£
)) {

139 i‡(
•©
->
•©_ªgexp
->
subba£
)

140 
l⁄g_way
;

141 
d
 = 
s
;

142 
œ°•©
 = 
•©
;

143 
°r
->
°r_pok
 = 
SP_VALID
;

144 i‡(
⁄˚
) {

145 
m
 = 
•©
->
•©_ªgexp
->
°¨ç
[0];

146 
d
 = 
•©
->
•©_ªgexp
->
ídp
[0];

147 
s
 = 
‹ig
;

148 i‡(
m
 - 
s
 > 
°ªnd
 - 
d
) {

149 i‡(
˛í
) {

150 ()
	`bc›y
(
c
, 
m
, 
˛í
);

151 
m
 +
˛í
;

153 
i
 = 
°ªnd
 - 
d
;

154 i‡(
i
 > 0) {

155 ()
	`bc›y
(
d
, 
m
, 
i
);

156 
m
 +
i
;

158 *
m
 = '\0';

159 
°r
->
°r_cur
 = 
m
 - 
s
;

160 
	`STABSET
(
°r
);

161 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 1.0);

162 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

163  
•
;

165 i‡(
i
 = 
m
 - 
s
) {

166 
d
 -
˛í
;

167 
m
 = 
d
;

168 
	`°r_ch›
(
°r
,
d
-
i
);

169 
s
 +
i
;

170 
i
--)

171 *--
d
 = *--
s
;

172 i‡(
˛í
)

173 ()
	`bc›y
(
c
, 
m
, 
˛í
);

174 
	`STABSET
(
°r
);

175 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 1.0);

176 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

177  
•
;

179 i‡(
˛í
) {

180 
d
 -
˛í
;

181 
	`°r_ch›
(
°r
,
d
);

182 ()
	`bc›y
(
c
,
d
,
˛í
);

183 
	`STABSET
(
°r
);

184 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 1.0);

185 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

186  
•
;

189 
	`°r_ch›
(
°r
,
d
);

190 
	`STABSET
(
°r
);

191 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 1.0);

192 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

193  
•
;

198 i‡(
ôîs
++ > 
maxôîs
)

199 
	`Áèl
("SubstitutionÜoop");

200 
m
 = 
•©
->
•©_ªgexp
->
°¨ç
[0];

201 i‡(
i
 = 
m
 - 
s
) {

202 i‡(
s
 !
d
)

203 ()
	`bc›y
(
s
,
d
,
i
);

204 
d
 +
i
;

206 i‡(
˛í
) {

207 ()
	`bc›y
(
c
,
d
,
˛í
);

208 
d
 +
˛í
;

210 
s
 = 
•©
->
•©_ªgexp
->
ídp
[0];

211 } 
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, 
‹ig
, s =
m
,

212 
NuŒ°r
, 
TRUE
));

213 i‡(
s
 !
d
) {

214 
i
 = 
°ªnd
 - 
s
;

215 
°r
->
°r_cur
 = 
d
 - så->
°r_±r
 + 
i
;

216 ()
	`bc›y
(
s
,
d
,
i
+1);

218 
	`STABSET
(
°r
);

219 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, ()
ôîs
);

220 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

221  
•
;

223 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 0.0);

224 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

225  
•
;

229 
c
 = 
NuŒch
;

230 i‡(
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, 
‹ig
, 0,

231 
°r
->
°r_pok
 & 
SP_STUDIED
 ? så : 
NuŒ°r
, 
ß„ba£
)) {

232 
l⁄g_way
:

233 
d°r
 = 
	`Så_√w
(25,
	`°r_Àn
(
°r
));

234 
	`°r_n£t
(
d°r
,
m
,
s
-m);

235 i‡(
•©
->
•©_ªgexp
->
subba£
)

236 
cur•©
 = 
•©
;

237 
œ°•©
 = 
•©
;

239 i‡(
ôîs
++ > 
maxôîs
)

240 
	`Áèl
("SubstitutionÜoop");

241 i‡(
•©
->
•©_ªgexp
->
subba£


242 && 
•©
->
•©_ªgexp
->
subba£
 !
‹ig
) {

243 
m
 = 
s
;

244 
s
 = 
‹ig
;

245 
‹ig
 = 
•©
->
•©_ªgexp
->
subba£
;

246 
s
 = 
‹ig
 + (
m
 - s);

247 
°ªnd
 = 
s
 + (°ªnd - 
m
);

249 
m
 = 
•©
->
•©_ªgexp
->
°¨ç
[0];

250 
	`°r_nˇt
(
d°r
,
s
,
m
-s);

251 
s
 = 
•©
->
•©_ªgexp
->
ídp
[0];

252 i‡(
c
) {

253 i‡(
˛í
)

254 
	`°r_nˇt
(
d°r
,
c
,
˛í
);

257 *
mysubba£
 = 
•©
->
•©_ªgexp
->
subba£
;

259 
•©
->
•©_ªgexp
->
subba£
 = 
NuŒch
;

260 ()
	`evÆ
(
r•©
->
•©_ª∂
,
G_SCALAR
,
•
);

261 
	`°r_sˇt
(
d°r
,
°ack
->
¨y_¨øy
[
•
+1]);

262 i‡(
•©
->
•©_ªgexp
->
subba£
)

263 
	`Sa„‰ì
(
•©
->
•©_ªgexp
->
subba£
);

264 
•©
->
•©_ªgexp
->
subba£
 = 
mysubba£
;

266 i‡(
⁄˚
)

268 } 
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, 
‹ig
, s =
m
, 
NuŒ°r
,

269 
ß„ba£
));

270 
	`°r_nˇt
(
d°r
,
s
,
°ªnd
 - s);

271 
	`°r_ª∂a˚
(
°r
,
d°r
);

272 
	`STABSET
(
°r
);

273 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, ()
ôîs
);

274 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

275  
•
;

277 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 0.0);

278 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

279  
•
;

281 
n›e
:

282 ++
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
;

283 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
, 0.0);

284 
°ack
->
¨y_¨øy
[++
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

285  
•
;

286 
	}
}

287 #ifde‡
BUGGY_MSC


288 #¥agm®
öåösic
(
memcmp
)

292 
	$do_å™s
(
°r
,
¨g
)

293 
STR
 *
°r
;

294 
ARG
 *
¨g
;

296 *
tbl
;

297 *
s
;

298 
m©ches
 = 0;

299 
ch
;

300 *
£nd
;

301 *
d
;

302 
squash
 = 
¨g
[2].
¨g_Àn
 & 1;

304 
tbl
 = (*Ë
¨g
[2].
¨g_±r
.
¨g_cvÆ
;

305 
s
 = 
	`°r_gë
(
°r
);

306 
£nd
 = 
s
 + 
°r
->
°r_cur
;

307 i‡(!
tbl
 || !
s
)

308 
	`Áèl
("panic: do_trans");

309 #ifde‡
DEBUGGING


310 i‡(
debug
 & 8) {

311 
	`deb
("2.TBL\n");

314 i‡(!
¨g
[2].
¨g_Àn
) {

315 
s
 < 
£nd
) {

316 i‡((
ch
 = 
tbl
[*
s
 & 0377]) >= 0) {

317 
m©ches
++;

318 *
s
 = 
ch
;

320 
s
++;

324 
d
 = 
s
;

325 
s
 < 
£nd
) {

326 i‡((
ch
 = 
tbl
[*
s
 & 0377]) >= 0) {

327 *
d
 = 
ch
;

328 i‡(
m©ches
++ && 
squash
) {

329 i‡(
d
[-1] == *d)

330 
m©ches
--;

332 
d
++;

335 
d
++;

337 i‡(
ch
 == -1)

338 *
d
++ = *
s
;

339 
s
++;

341 
m©ches
 +
£nd
 - 
d
;

342 *
d
 = '\0';

343 
°r
->
°r_cur
 = 
d
 - så->
°r_±r
;

345 
	`STABSET
(
°r
);

346  
m©ches
;

347 
	}
}

350 
	$do_joö
(
°r
,
¨gœ°
)

351 
STR
 *
°r
;

352 *
¨gœ°
;

354 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

355 
•
 = 
¨gœ°
[1];

356 
ôems
 = 
¨gœ°
[2] - 
•
;

357 *
dñim
 = 
	`°r_gë
(
°
[
•
]);

358 
dñimÀn
 = 
°
[
•
]->
°r_cur
;

360 
°
 +++
•
;

361 i‡(
ôems
-- > 0)

362 
	`°r_s£t
(
°r
, *
°
++);

364 
	`°r_£t
(
°r
,"");

365 i‡(
dñimÀn
) {

366 ; 
ôems
 > 0; iãms--,
°
++) {

367 
	`°r_nˇt
(
°r
,
dñim
,
dñimÀn
);

368 
	`°r_sˇt
(
°r
,*
°
);

372 ; 
ôems
 > 0; iãms--,
°
++)

373 
	`°r_sˇt
(
°r
,*
°
);

375 
	`STABSET
(
°r
);

376 
	}
}

379 
	$do_∑ck
(
°r
,
¨gœ°
)

380 
STR
 *
°r
;

381 *
¨gœ°
;

383 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

384 
•
 = 
¨gœ°
[1];

385 
ôems
;

386 *
∑t
 = 
	`°r_gë
(
°
[
•
]);

387 *
∑ãnd
 = 
∑t
 + 
°
[
•
]->
°r_cur
;

388 
Àn
;

389 
d©umty≥
;

390 
STR
 *
‰om°r
;

391 *
nuŒ10
 = "\0\0\0\0\0\0\0\0\0\0";

392 *
•a˚10
 = " ";

395 
ach¨
;

396 
ash‹t
;

397 
aöt
;

398 
auöt
;

399 
Æ⁄g
;

400 
aul⁄g
;

401 *
≠å
;

402 
aÊﬂt
;

403 
adoubÀ
;

405 
ôems
 = 
¨gœ°
[2] - 
•
;

406 
°
 +++
•
;

407 
	`°r_n£t
(
°r
,"",0);

408 
∑t
 < 
∑ãnd
) {

409 
	#NEXTFROM
 (
ôems
-- > 0 ? *
°
++ : &
°r_no
)

	)

410 
d©umty≥
 = *
∑t
++;

411 i‡(*
∑t
 == '*') {

412 
Àn
 = 
	`ödex
("@Xxu",
d©umty≥
Ë? 0 : 
ôems
;

413 
∑t
++;

415 i‡(
	`isdigô
(*
∑t
)) {

416 
Àn
 = *
∑t
++ - '0';

417 
	`isdigô
(*
∑t
))

418 
Àn
 = (À¿* 10Ë+ (*
∑t
++ - '0');

421 
Àn
 = 1;

422 
d©umty≥
) {

426 
	`Áèl
("% may only be used in unpack");

428 
Àn
 -
°r
->
°r_cur
;

429 i‡(
Àn
 > 0)

430 
grow
;

431 
Àn
 = -len;

432 i‡(
Àn
 > 0)

433 
shrök
;

436 
shrök
:

437 i‡(
°r
->
°r_cur
 < 
Àn
)

438 
	`Áèl
("X outside of string");

439 
°r
->
°r_cur
 -
Àn
;

440 
°r
->
°r_±r
[°r->
°r_cur
] = '\0';

443 
grow
:

444 
Àn
 >= 10) {

445 
	`°r_nˇt
(
°r
,
nuŒ10
,10);

446 
Àn
 -= 10;

448 
	`°r_nˇt
(
°r
,
nuŒ10
,
Àn
);

452 
‰om°r
 = 
NEXTFROM
;

453 
≠å
 = 
	`°r_gë
(
‰om°r
);

454 i‡(
∑t
[-1] == '*')

455 
Àn
 = 
‰om°r
->
°r_cur
;

456 i‡(
‰om°r
->
°r_cur
 > 
Àn
)

457 
	`°r_nˇt
(
°r
,
≠å
,
Àn
);

459 
	`°r_nˇt
(
°r
,
≠å
,
‰om°r
->
°r_cur
);

460 
Àn
 -
‰om°r
->
°r_cur
;

461 i‡(
d©umty≥
 == 'A') {

462 
Àn
 >= 10) {

463 
	`°r_nˇt
(
°r
,
•a˚10
,10);

464 
Àn
 -= 10;

466 
	`°r_nˇt
(
°r
,
•a˚10
,
Àn
);

469 
Àn
 >= 10) {

470 
	`°r_nˇt
(
°r
,
nuŒ10
,10);

471 
Àn
 -= 10;

473 
	`°r_nˇt
(
°r
,
nuŒ10
,
Àn
);

480 *
ßvï©
 = 
∑t
;

481 
ßveôems
 = 
ôems
;

483 
‰om°r
 = 
NEXTFROM
;

484 
≠å
 = 
	`°r_gë
(
‰om°r
);

485 i‡(
∑t
[-1] == '*')

486 
Àn
 = 
‰om°r
->
°r_cur
;

487 
∑t
 = 
≠å
;

488 
aöt
 = 
°r
->
°r_cur
;

489 
°r
->
°r_cur
 +(
Àn
+7)/8;

490 
	`STR_GROW
(
°r
, så->
°r_cur
 + 1);

491 
≠å
 = 
°r
->
°r_±r
 + 
aöt
;

492 i‡(
Àn
 > 
‰om°r
->
°r_cur
)

493 
Àn
 = 
‰om°r
->
°r_cur
;

494 
aöt
 = 
Àn
;

495 
ôems
 = 0;

496 i‡(
d©umty≥
 == 'B') {

497 
Àn
 = 0;Üí++ < 
aöt
;) {

498 
ôems
 |*
∑t
++ & 1;

499 i‡(
Àn
 & 7)

500 
ôems
 <<= 1;

502 *
≠å
++ = 
ôems
 & 0xff;

503 
ôems
 = 0;

508 
Àn
 = 0;Üí++ < 
aöt
;) {

509 i‡(*
∑t
++ & 1)

510 
ôems
 |= 128;

511 i‡(
Àn
 & 7)

512 
ôems
 >>= 1;

514 *
≠å
++ = 
ôems
 & 0xff;

515 
ôems
 = 0;

519 i‡(
aöt
 & 7) {

520 i‡(
d©umty≥
 == 'B')

521 
ôems
 <<7 - (
aöt
 & 7);

523 
ôems
 >>7 - (
aöt
 & 7);

524 *
≠å
++ = 
ôems
 & 0xff;

526 
∑t
 = 
°r
->
°r_±r
 + så->
°r_cur
;

527 
≠å
 <
∑t
)

528 *
≠å
++ = '\0';

530 
∑t
 = 
ßvï©
;

531 
ôems
 = 
ßveôems
;

537 *
ßvï©
 = 
∑t
;

538 
ßveôems
 = 
ôems
;

540 
‰om°r
 = 
NEXTFROM
;

541 
≠å
 = 
	`°r_gë
(
‰om°r
);

542 i‡(
∑t
[-1] == '*')

543 
Àn
 = 
‰om°r
->
°r_cur
;

544 
∑t
 = 
≠å
;

545 
aöt
 = 
°r
->
°r_cur
;

546 
°r
->
°r_cur
 +(
Àn
+1)/2;

547 
	`STR_GROW
(
°r
, så->
°r_cur
 + 1);

548 
≠å
 = 
°r
->
°r_±r
 + 
aöt
;

549 i‡(
Àn
 > 
‰om°r
->
°r_cur
)

550 
Àn
 = 
‰om°r
->
°r_cur
;

551 
aöt
 = 
Àn
;

552 
ôems
 = 0;

553 i‡(
d©umty≥
 == 'H') {

554 
Àn
 = 0;Üí++ < 
aöt
;) {

555 i‡(
	`ißÕha
(*
∑t
))

556 
ôems
 |((*
∑t
++ & 15) + 9) & 15;

558 
ôems
 |*
∑t
++ & 15;

559 i‡(
Àn
 & 1)

560 
ôems
 <<= 4;

562 *
≠å
++ = 
ôems
 & 0xff;

563 
ôems
 = 0;

568 
Àn
 = 0;Üí++ < 
aöt
;) {

569 i‡(
	`ißÕha
(*
∑t
))

570 
ôems
 |(((*
∑t
++ & 15) + 9) & 15) << 4;

572 
ôems
 |(*
∑t
++ & 15) << 4;

573 i‡(
Àn
 & 1)

574 
ôems
 >>= 4;

576 *
≠å
++ = 
ôems
 & 0xff;

577 
ôems
 = 0;

581 i‡(
aöt
 & 1)

582 *
≠å
++ = 
ôems
 & 0xff;

583 
∑t
 = 
°r
->
°r_±r
 + så->
°r_cur
;

584 
≠å
 <
∑t
)

585 *
≠å
++ = '\0';

587 
∑t
 = 
ßvï©
;

588 
ôems
 = 
ßveôems
;

593 
Àn
-- > 0) {

594 
‰om°r
 = 
NEXTFROM
;

595 
aöt
 = ()
	`°r_gnum
(
‰om°r
);

596 
ach¨
 = 
aöt
;

597 
	`°r_nˇt
(
°r
,&
ach¨
,());

603 
Àn
-- > 0) {

604 
‰om°r
 = 
NEXTFROM
;

605 
aÊﬂt
 = ()
	`°r_gnum
(
‰om°r
);

606 
	`°r_nˇt
(
°r
, (*)&
aÊﬂt
,  ());

611 
Àn
-- > 0) {

612 
‰om°r
 = 
NEXTFROM
;

613 
adoubÀ
 = ()
	`°r_gnum
(
‰om°r
);

614 
	`°r_nˇt
(
°r
, (*)&
adoubÀ
,  ());

618 
Àn
-- > 0) {

619 
‰om°r
 = 
NEXTFROM
;

620 
ash‹t
 = ()
	`°r_gnum
(
‰om°r
);

621 #ifde‡
HAS_HTONS


622 
ash‹t
 = 
	`ht⁄s
(ashort);

624 
	`°r_nˇt
(
°r
,(*)&
ash‹t
,());

629 
Àn
-- > 0) {

630 
‰om°r
 = 
NEXTFROM
;

631 
ash‹t
 = ()
	`°r_gnum
(
‰om°r
);

632 
	`°r_nˇt
(
°r
,(*)&
ash‹t
,());

636 
Àn
-- > 0) {

637 
‰om°r
 = 
NEXTFROM
;

638 
auöt
 = 
	`U_I
(
	`°r_gnum
(
‰om°r
));

639 
	`°r_nˇt
(
°r
,(*)&
auöt
,());

643 
Àn
-- > 0) {

644 
‰om°r
 = 
NEXTFROM
;

645 
aöt
 = ()
	`°r_gnum
(
‰om°r
);

646 
	`°r_nˇt
(
°r
,(*)&
aöt
,());

650 
Àn
-- > 0) {

651 
‰om°r
 = 
NEXTFROM
;

652 
aul⁄g
 = 
	`U_L
(
	`°r_gnum
(
‰om°r
));

653 #ifde‡
HAS_HTONL


654 
aul⁄g
 = 
	`ht⁄l
(aulong);

656 
	`°r_nˇt
(
°r
,(*)&
aul⁄g
,());

660 
Àn
-- > 0) {

661 
‰om°r
 = 
NEXTFROM
;

662 
aul⁄g
 = 
	`U_L
(
	`°r_gnum
(
‰om°r
));

663 
	`°r_nˇt
(
°r
,(*)&
aul⁄g
,());

667 
Àn
-- > 0) {

668 
‰om°r
 = 
NEXTFROM
;

669 
Æ⁄g
 = ()
	`°r_gnum
(
‰om°r
);

670 
	`°r_nˇt
(
°r
,(*)&
Æ⁄g
,());

674 
Àn
-- > 0) {

675 
‰om°r
 = 
NEXTFROM
;

676 
≠å
 = 
	`°r_gë
(
‰om°r
);

677 
	`°r_nˇt
(
°r
,(*)&
≠å
,(*));

681 
‰om°r
 = 
NEXTFROM
;

682 
≠å
 = 
	`°r_gë
(
‰om°r
);

683 
aöt
 = 
‰om°r
->
°r_cur
;

684 
	`STR_GROW
(
°r
,
aöt
 * 4 / 3);

685 i‡(
Àn
 <= 1)

686 
Àn
 = 45;

688 
Àn
 =Üen / 3 * 3;

689 
aöt
 > 0) {

690 
todo
;

692 i‡(
aöt
 > 
Àn
)

693 
todo
 = 
Àn
;

695 
todo
 = 
aöt
;

696 
	`d€ncodes
(
°r
, 
≠å
, 
todo
);

697 
aöt
 -
todo
;

698 
≠å
 +
todo
;

703 
	`STABSET
(
°r
);

704 
	}
}

705 #unde‡
NEXTFROM


707 
	$d€ncodes
(
°r
, 
s
, 
Àn
)

708 
STR
 *
°r
;

709 *
s
;

710 
Àn
;

712 
hunk
[5];

714 *
hunk
 = 
Àn
 + ' ';

715 
	`°r_nˇt
(
°r
, 
hunk
, 1);

716 
hunk
[4] = '\0';

717 
Àn
 > 0) {

718 
hunk
[0] = ' ' + (077 & (*
s
 >> 2));

719 
hunk
[1] = ' ' + (077 & ((*
s
 << 4) & 060 | (s[1] >> 4) & 017));

720 
hunk
[2] = ' ' + (077 & ((
s
[1] << 2) & 074 | (s[2] >> 6) & 03));

721 
hunk
[3] = ' ' + (077 & (
s
[2] & 077));

722 
	`°r_nˇt
(
°r
, 
hunk
, 4);

723 
s
 += 3;

724 
Àn
 -= 3;

726 
s
 = 
°r
->
°r_±r
; *s; s++) {

727 i‡(*
s
 == ' ')

728 *
s
 = '`';

730 
	`°r_nˇt
(
°r
, "\n", 1);

731 
	}
}

734 
	$do_•rötf
(
°r
,
Àn
,
ßrg
)

735 
STR
 *
°r
;

736 
Àn
;

737 
STR
 **
ßrg
;

739 *
s
;

740 *
t
;

741 *
f
;

742 
boﬁ
 
dﬁ⁄g
;

743 
ch
;

744 
STR
 *
ßrgnuŒ
 = &
°r_no
;

745 *
£nd
;

746 *
xs
;

747 
xÀn
;

748 
vÆue
;

749 *
‹igs
;

751 
	`°r_£t
(
°r
,"");

752 
Àn
--;

753 
‹igs
 = 
t
 = 
s
 = 
	`°r_gë
(*
ßrg
);

754 
£nd
 = 
s
 + (*
ßrg
)->
°r_cur
;

755 
ßrg
++;

756  ; ; 
Àn
--) {

757 i‡(
Àn
 <0 || !*
ßrg
) {

758 
ßrg
 = &
ßrgnuŒ
;

759 
Àn
 = 0;

761  ; 
t
 < 
£nd
 && *t != '%';Å++) ;

762 i‡(
t
 >
£nd
)

764 
f
 = 
t
;

765 *
buf
 = '\0';

766 
xs
 = 
buf
;

767 
dﬁ⁄g
 = 
FALSE
;

768 
t
++;Å < 
£nd
;Å++) {

769 *
t
) {

771 
ch
 = *(++
t
);

772 *
t
 = '\0';

773 ()
	`•rötf
(
xs
,
f
);

774 
Àn
++;

775 
xÀn
 = 
	`°æí
(
xs
);

782 
dﬁ⁄g
 = 
TRUE
;

785 
ch
 = *(++
t
);

786 *
t
 = '\0';

787 
xÀn
 = ()
	`°r_gnum
(*(
ßrg
++));

788 i‡(
	`°rEQ
(
f
,"%c")) {

789 *
xs
 = 
xÀn
;

790 
xs
[1] = '\0';

791 
xÀn
 = 1;

794 ()
	`•rötf
(
xs
,
f
,
xÀn
);

795 
xÀn
 = 
	`°æí
(
xs
);

799 
dﬁ⁄g
 = 
TRUE
;

802 
ch
 = *(++
t
);

803 *
t
 = '\0';

804 i‡(
dﬁ⁄g
)

805 ()
	`•rötf
(
xs
,
f
,()
	`°r_gnum
(*(
ßrg
++)));

807 ()
	`•rötf
(
xs
,
f
,()
	`°r_gnum
(*(
ßrg
++)));

808 
xÀn
 = 
	`°æí
(
xs
);

811 
dﬁ⁄g
 = 
TRUE
;

814 
ch
 = *(++
t
);

815 *
t
 = '\0';

816 
vÆue
 = 
	`°r_gnum
(*(
ßrg
++));

817 i‡(
dﬁ⁄g
)

818 ()
	`•rötf
(
xs
,
f
,
	`U_L
(
vÆue
));

820 ()
	`•rötf
(
xs
,
f
,
	`U_I
(
vÆue
));

821 
xÀn
 = 
	`°æí
(
xs
);

824 
ch
 = *(++
t
);

825 *
t
 = '\0';

826 ()
	`•rötf
(
xs
,
f
,
	`°r_gnum
(*(
ßrg
++)));

827 
xÀn
 = 
	`°æí
(
xs
);

830 
ch
 = *(++
t
);

831 *
t
 = '\0';

832 
xs
 = 
	`°r_gë
(*
ßrg
);

833 
xÀn
 = (*
ßrg
)->
°r_cur
;

834 i‡(*
xs
 == 'S' && xs[1] == 't' && xs[2] == 'B' && xs[3] == '\0'

835 && 
xÀn
 =(
STBP
)) {

836 
STR
 *
tmp°r
 = 
	`Så_√w
(24,0);

838 
	`°ab_fuŒ«me
(
tmp°r
, ((
STAB
*)(*
ßrg
)));

839 
	`•rötf
(
tokíbuf
,"*%s",
tmp°r
->
°r_±r
);

841 
xs
 = 
tokíbuf
;

842 
xÀn
 = 
	`°æí
(
tokíbuf
);

843 
	`°r_‰ì
(
tmp°r
);

845 
ßrg
++;

846 i‡(
	`°rEQ
(
f
,"%s")) {

849 
	`°r˝y
(
tokíbuf
+64,
f
);

850 *
t
 = 
ch
;

851 ()
	`•rötf
(
buf
,
tokíbuf
+64,
xs
);

852 
xs
 = 
buf
;

853 
xÀn
 = 
	`°æí
(
xs
);

857 *
t
 = 
ch
;

858 
	`STR_GROW
(
°r
, så->
°r_cur
 + (
f
 - 
s
Ë+ 
Àn
 + 1);

859 
	`°r_nˇt
(
°r
, 
s
, 
f
 - s);

860 
	`°r_nˇt
(
°r
, 
xs
, 
xÀn
);

861 
s
 = 
t
;

865 
	`°r_nˇt
(
°r
, 
s
, 
t
 - s);

866 
	`STABSET
(
°r
);

867 
	}
}

869 
STR
 *

870 
	$do_push
(
¨y
,
¨gœ°
)

871 
ARRAY
 *
¨y
;

872 *
¨gœ°
;

874 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

875 
•
 = 
¨gœ°
[1];

876 
ôems
 = 
¨gœ°
[2] - 
•
;

877 
STR
 *
°r
 = &
°r_undef
;

879 
°
 +++
•
; 
ôems
 > 0; items--,st++) {

880 
°r
 = 
	`Så_√w
(26,0);

881 i‡(*
°
)

882 
	`°r_s£t
(
°r
,*
°
);

883 ()
	`≠ush
(
¨y
,
°r
);

885  
°r
;

886 
	}
}

889 
	$do_unshi·
(
¨y
,
¨gœ°
)

890 
ARRAY
 *
¨y
;

891 *
¨gœ°
;

893 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

894 
•
 = 
¨gœ°
[1];

895 
ôems
 = 
¨gœ°
[2] - 
•
;

896 
STR
 *
°r
;

897 
i
;

899 
	`aunshi·
(
¨y
,
ôems
);

900 
i
 = 0;

901 
°
 +++
•
; 
i
 < 
ôems
; i++,st++) {

902 
°r
 = 
	`Så_√w
(27,0);

903 
	`°r_s£t
(
°r
,*
°
);

904 ()
	`a°‹e
(
¨y
,
i
,
°r
);

906 
	}
}

909 
	$do_subr
(
¨g
,
gimme
,
¨gœ°
)

910 
ARG
 *
¨g
;

911 
gimme
;

912 *
¨gœ°
;

914 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

915 
•
 = 
¨gœ°
[1];

916 
ôems
 = 
¨gœ°
[2] - 
•
;

917 
SUBR
 *
sub
;

918 
STR
 *
°r
;

919 
STAB
 *
°ab
;

920 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

921 
ﬁdtmps_ba£
 = 
tmps_ba£
;

922 
haßrgs
 = ((
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë!
A_NULL
);

923 
CSV
 *
csv
;

925 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

926 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

928 
STR
 *
tmp°r
 = 
	`°ab_vÆ
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

930 i‡(
tmp°r
)

931 
°ab
 = 
	`°abít
(
	`°r_gë
(
tmp°r
),
TRUE
);

933 
°ab
 = 
NuŒ°ab
;

935 i‡(!
°ab
)

936 
	`Áèl
("Undefined subroutine called");

937 i‡(!(
sub
 = 
	`°ab_sub
(
°ab
))) {

938 
STR
 *
tmp°r
 = 
¨g
[0].
¨g_±r
.
¨g_°r
;

940 
	`°ab_fuŒ«me
(
tmp°r
, 
°ab
);

941 
	`Áèl
("Undeföed subroutöê\"%s\" cÆÀd",
tmp°r
->
°r_±r
);

943 i‡(
¨g
->
¨g_ty≥
 =
O_DBSUBR
 && !
sub
->
u£rsub
) {

944 
°r
 = 
	`°ab_vÆ
(
DBsub
);

945 
	`ßveôem
(
°r
);

946 
	`°ab_fuŒ«me
(
°r
,
°ab
);

947 
sub
 = 
	`°ab_sub
(
DBsub
);

948 i‡(!
sub
)

949 
	`Áèl
("No DBsubÑoutine");

951 
°r
 = 
	`Så_√w
(15, (
CSV
));

952 
°r
->
°r_°©e
 = 
SS_SCSV
;

953 ()
	`≠ush
(
ßve°ack
,
°r
);

954 
csv
 = (
CSV
*)
°r
->
°r_±r
;

955 
csv
->
sub
 = sub;

956 
csv
->
°ab
 = stab;

957 
csv
->
curcsv
 = curcsv;

958 
csv
->
curcmd
 = curcmd;

959 
csv
->
dïth
 = 
sub
->depth;

960 
csv
->
w™èºay
 = 
gimme
;

961 
csv
->
haßrgs
 = hasargs;

962 
curcsv
 = 
csv
;

963 i‡(
sub
->
u£rsub
) {

964 
csv
->
haßrgs
 = 0;

965 
csv
->
ßvóºay
 = 
	`NuŒ
(
ARRAY
*);;

966 
csv
->
¨g¨øy
 = 
	`NuŒ
(
ARRAY
*);

967 
°
[
•
] = 
¨g
->
¨g_±r
.
¨g_°r
;

968 i‡(!
haßrgs
)

969 
ôems
 = 0;

970  (*
sub
->
u£rsub
)(sub->
u£rödex
,
•
,
ôems
);

972 i‡(
haßrgs
) {

973 
csv
->
ßvóºay
 = 
	`°ab_x¨øy
(
def°ab
);

974 
csv
->
¨g¨øy
 = 
	`aÁke
(
def°ab
, 
ôems
, &
°
[
•
+1]);

975 
	`°ab_x¨øy
(
def°ab
Ë
csv
->
¨g¨øy
;

977 
sub
->
dïth
++;

978 i‡(
sub
->
dïth
 >= 2) {

979 i‡(
sub
->
dïth
 =100 && 
dow¨n
)

980 
	`w¨n
("Dì∞ªcursi⁄ o¿subroutöê\"%s\"",
	`°ab_«me
(
°ab
));

981 
	`ßvñi°
(
sub
->
toßve
->
¨y_¨øy
,sub->toßve->
¨y_fûl
);

983 
tmps_ba£
 = 
tmps_max
;

984 
•
 = 
	`cmd_exec
(
sub
->
cmd
,
gimme
, --sp);

985 
°
 = 
°ack
->
¨y_¨øy
;

987 
tmps_ba£
 = 
ﬁdtmps_ba£
;

988 
ôems
 = 
¨gœ°
[0] + 1; iãm†<
•
; items++)

989 
°
[
ôems
] = 
	`°r_m‹èl
(st[items]);

991 
	`ª°‹ñi°
(
ﬁdßve
);

992  
•
;

993 
	}
}

996 
	$do_assign
(
¨g
,
gimme
,
¨gœ°
)

997 
ARG
 *
¨g
;

998 
gimme
;

999 *
¨gœ°
;

1002 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1003 
STR
 **
fú°ªÀm
 = 
°
 + 
¨gœ°
[1] + 1;

1004 
STR
 **
fú°ÀÀm
 = 
°
 + 
¨gœ°
[0] + 1;

1005 
STR
 **
œ°ªÀm
 = 
°
 + 
¨gœ°
[2];

1006 
STR
 **
œ°ÀÀm
 = 
°
 + 
¨gœ°
[1];

1007 
STR
 **
ªÀm
;

1008 
STR
 **
ÀÀm
;

1010 
STR
 *
°r
;

1011 
ARRAY
 *
¨y
;

1012 
makñoˇl
;

1013 
HASH
 *
hash
;

1014 
i
;

1016 
makñoˇl
 = (
¨g
->
¨g_Êags
 & 
AF_LOCAL
);

1017 
loˇlizög
 = 
makñoˇl
;

1018 
dñaymagic
 = 
DM_DELAY
;

1024 i‡(
¨g
->
¨g_Êags
 & 
AF_COMMON
) {

1025 
ªÀm
 = 
fú°ªÀm
;Ññem <
œ°ªÀm
;Ñelem++) {

1026 i‡(
°r
 = *
ªÀm
)

1027 *
ªÀm
 = 
	`°r_m‹èl
(
°r
);

1030 
ªÀm
 = 
fú°ªÀm
;

1031 
ÀÀm
 = 
fú°ÀÀm
;

1032 
¨y
 = 
	`NuŒ
(
ARRAY
*);

1033 
hash
 = 
	`NuŒ
(
HASH
*);

1034 
ÀÀm
 <
œ°ÀÀm
) {

1035 
°r
 = *
ÀÀm
++;

1036 i‡(
°r
->
°r_°©e
 >
SS_HASH
) {

1037 i‡(
°r
->
°r_°©e
 =
SS_ARY
) {

1038 i‡(
makñoˇl
)

1039 
¨y
 = 
	`ßvóry
(
°r
->
°r_u
.
°r_°ab
);

1041 
¨y
 = 
	`°ab_¨øy
(
°r
->
°r_u
.
°r_°ab
);

1042 
¨y
->
¨y_fûl
 = -1;

1044 
i
 = 0;

1045 
ªÀm
 <
œ°ªÀm
) {

1046 
°r
 = 
	`Så_√w
(28,0);

1047 i‡(*
ªÀm
)

1048 
	`°r_s£t
(
°r
,*
ªÀm
);

1049 *(
ªÀm
++Ë
°r
;

1050 ()
	`a°‹e
(
¨y
,
i
++,
°r
);

1053 i‡(
°r
->
°r_°©e
 =
SS_HASH
) {

1054 *
tmps
;

1055 
STR
 *
tmp°r
;

1056 
magic
 = 0;

1057 
STAB
 *
tmp°ab
 = 
°r
->
°r_u
.
°r_°ab
;

1059 i‡(
makñoˇl
)

1060 
hash
 = 
	`ßvehash
(
°r
->
°r_u
.
°r_°ab
);

1062 
hash
 = 
	`°ab_hash
(
°r
->
°r_u
.
°r_°ab
);

1063 i‡(
tmp°ab
 =
ív°ab
) {

1064 
magic
 = 'E';

1065 
ívú⁄
[0] = 
NuŒch
;

1067 i‡(
tmp°ab
 =
sig°ab
) {

1068 
magic
 = 'S';

1069 #i‚de‡
NSIG


1070 
	#NSIG
 32

	)

1072 
i
 = 1; i < 
NSIG
; i++)

1073 
	`sig«l
(
i
, 
SIG_DFL
);

1075 #ifde‡
SOME_DBM


1076 i‡(
hash
->
tbl_dbm
)

1077 
magic
 = 'D';

1079 
	`h˛ór
(
hash
, 
magic
 == 'D');

1082 
ªÀm
 < 
œ°ªÀm
) {

1083 i‡(*
ªÀm
)

1084 
°r
 = *(
ªÀm
++);

1086 
°r
 = &
°r_no
, 
ªÀm
++;

1087 
tmps
 = 
	`°r_gë
(
°r
);

1088 
tmp°r
 = 
	`Så_√w
(29,0);

1089 i‡(*
ªÀm
)

1090 
	`°r_s£t
(
tmp°r
,*
ªÀm
);

1091 *(
ªÀm
++Ë
tmp°r
;

1092 ()
	`h°‹e
(
hash
,
tmps
,
°r
->
°r_cur
,
tmp°r
,0);

1093 i‡(
magic
) {

1094 
	`°r_magic
(
tmp°r
, 
tmp°ab
, 
magic
, 
tmps
, 
°r
->
°r_cur
);

1095 
	`°ab£t
(
tmp°r
->
°r_magic
,Åmpstr);

1100 
	`Áèl
("panic: do_assign");

1103 i‡(
makñoˇl
)

1104 
	`ßveôem
(
°r
);

1105 i‡(
ªÀm
 <
œ°ªÀm
) {

1106 
	`°r_s£t
(
°r
, *
ªÀm
);

1107 *(
ªÀm
++Ë
°r
;

1110 
	`°r_s£t
(
°r
, &
°r_undef
);

1111 i‡(
gimme
 =
G_ARRAY
) {

1112 
i
 = ++
œ°ªÀm
 - 
fú°ªÀm
;

1113 
ªÀm
++;

1114 
	`a°‹e
(
°ack
,
i
,
°r
);

1115 i‡(
°
 !
°ack
->
¨y_¨øy
) {

1116 
°
 = 
°ack
->
¨y_¨øy
;

1117 
fú°ªÀm
 = 
°
 + 
¨gœ°
[1] + 1;

1118 
fú°ÀÀm
 = 
°
 + 
¨gœ°
[0] + 1;

1119 
œ°ÀÀm
 = 
°
 + 
¨gœ°
[1];

1120 
œ°ªÀm
 = 
°
 + 
i
;

1121 
ªÀm
 = 
œ°ªÀm
 + 1;

1125 
	`STABSET
(
°r
);

1128 i‡(
dñaymagic
 > 1) {

1129 i‡(
dñaymagic
 & 
DM_REUID
) {

1130 #ifde‡
HAS_SETREUID


1131 
	`£åeuid
(
uid
,
euid
);

1133 i‡(
uid
 !
euid
 || 
	`£tuid
(uid) < 0)

1134 
	`Áèl
("No setreuidávailable");

1137 i‡(
dñaymagic
 & 
DM_REGID
) {

1138 #ifde‡
HAS_SETREGID


1139 
	`£åegid
(
gid
,
egid
);

1141 i‡(
gid
 !
egid
 || 
	`£tgid
(gid) < 0)

1142 
	`Áèl
("No setregidávailable");

1146 
dñaymagic
 = 0;

1147 
loˇlizög
 = 
FALSE
;

1148 i‡(
gimme
 =
G_ARRAY
) {

1149 
i
 = 
œ°ªÀm
 - 
fú°ªÀm
 + 1;

1150 i‡(
¨y
 || 
hash
)

1151 
	`C›y
(
fú°ªÀm
, 
fú°ÀÀm
, 
i
, 
STR
*);

1152  
¨gœ°
[0] + 
i
;

1155 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
,()(
¨gœ°
[2] -árglast[1]));

1156 *
fú°ÀÀm
 = 
¨g
->
¨g_±r
.
¨g_°r
;

1157  
¨gœ°
[0] + 1;

1159 
	}
}

1162 
	$do_°udy
(
°r
,
¨g
,
gimme
,
¨gœ°
)

1163 
STR
 *
°r
;

1164 
ARG
 *
¨g
;

1165 
gimme
;

1166 *
¨gœ°
;

1168 *
s
;

1169 
pos
 = 
°r
->
°r_cur
;

1170 
ch
;

1171 *
sfú°
;

1172 *
¢ext
;

1173 
maxs¸óm
 = -1;

1174 
STR
 *
œ°s¸óm
 = 
NuŒ°r
;

1175 
ªtvÆ
;

1176 
ªèrg
 = 
¨gœ°
[0] + 1;

1178 #i‚de‡
löt


1179 
s
 = (*)(
	`°r_gë
(
°r
));

1181 
s
 = 
	`NuŒ
(*);

1183 i‡(
œ°s¸óm
)

1184 
œ°s¸óm
->
°r_pok
 &~
SP_STUDIED
;

1185 
œ°s¸óm
 = 
°r
;

1186 i‡(
pos
 <= 0) {

1187 
ªtvÆ
 = 0;

1188 
ªt
;

1190 i‡(
pos
 > 
maxs¸óm
) {

1191 i‡(
maxs¸óm
 < 0) {

1192 
maxs¸óm
 = 
pos
 + 80;

1193 
	`New
(301,
s¸ómfú°
, 256, );

1194 
	`New
(302,
s¸óm√xt
, 
maxs¸óm
, );

1197 
maxs¸óm
 = 
pos
 +Öos / 4;

1198 
	`Ríew
(
s¸óm√xt
, 
maxs¸óm
, );

1202 
sfú°
 = 
s¸ómfú°
;

1203 
¢ext
 = 
s¸óm√xt
;

1205 i‡(!
sfú°
 || !
¢ext
)

1206 
	`Áèl
("do_study: out of memory");

1208 
ch
 = 256; ch; --ch)

1209 *
sfú°
++ = -1;

1210 
sfú°
 -= 256;

1212 --
pos
 >= 0) {

1213 
ch
 = 
s
[
pos
];

1214 i‡(
sfú°
[
ch
] >= 0)

1215 
¢ext
[
pos
] = 
sfú°
[
ch
] -Öos;

1217 
¢ext
[
pos
] = -pos;

1218 
sfú°
[
ch
] = 
pos
;

1224 i‡(
ßwi
)

1225 
sfú°
[
fﬁd
[
ch
]] = 
pos
;

1228 
°r
->
°r_pok
 |
SP_STUDIED
;

1229 
ªtvÆ
 = 1;

1230 
ªt
:

1231 
	`°r_num£t
(
¨g
->
¨g_±r
.
¨g_°r
,()
ªtvÆ
);

1232 
°ack
->
¨y_¨øy
[
ªèrg
] = 
¨g
->
¨g_±r
.
¨g_°r
;

1233  
ªèrg
;

1234 
	}
}

1237 
	$do_deföed
(
°r
,
¨g
,
gimme
,
¨gœ°
)

1238 
STR
 *
°r
;

1239 
ARG
 *
¨g
;

1240 
gimme
;

1241 *
¨gœ°
;

1243 
ty≥
;

1244 
ªèrg
 = 
¨gœ°
[0] + 1;

1245 
ªtvÆ
;

1246 
ARRAY
 *
¨y
;

1247 
HASH
 *
hash
;

1249 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë!
A_LEXPR
)

1250 
	`Áèl
("IllegalárgumentÅo defined()");

1251 
¨g
 =árg[1].
¨g_±r
.
¨g_¨g
;

1252 
ty≥
 = 
¨g
->
¨g_ty≥
;

1254 i‡(
ty≥
 =
O_SUBR
 ||Åy≥ =
O_DBSUBR
)

1255 
ªtvÆ
 = 
	`°ab_sub
(
¨g
[1].
¨g_±r
.
¨g_°ab
) != 0;

1256 i‡(
ty≥
 =
O_ARRAY
 ||Åy≥ =
O_LARRAY
 ||

1257 
ty≥
 =
O_ASLICE
 ||Åy≥ =
O_LASLICE
 )

1258 
ªtvÆ
 = ((
¨y
 = 
	`°ab_x¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
)) != 0

1259 && 
¨y
->
¨y_max
 >= 0 );

1260 i‡(
ty≥
 =
O_HASH
 ||Åy≥ =
O_LHASH
 ||

1261 
ty≥
 =
O_HSLICE
 ||Åy≥ =
O_LHSLICE
 )

1262 
ªtvÆ
 = ((
hash
 = 
	`°ab_xhash
(
¨g
[1].
¨g_±r
.
¨g_°ab
)) != 0

1263 && 
hash
->
tbl_¨øy
);

1265 
ªtvÆ
 = 
FALSE
;

1266 
	`°r_num£t
(
°r
,()
ªtvÆ
);

1267 
°ack
->
¨y_¨øy
[
ªèrg
] = 
°r
;

1268  
ªèrg
;

1269 
	}
}

1272 
	$do_undef
(
°r
,
¨g
,
gimme
,
¨gœ°
)

1273 
STR
 *
°r
;

1274 
ARG
 *
¨g
;

1275 
gimme
;

1276 *
¨gœ°
;

1278 
ty≥
;

1279 
STAB
 *
°ab
;

1280 
ªèrg
 = 
¨gœ°
[0] + 1;

1282 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë!
A_LEXPR
)

1283 
	`Áèl
("IllegalárgumentÅo undef()");

1284 
¨g
 =árg[1].
¨g_±r
.
¨g_¨g
;

1285 
ty≥
 = 
¨g
->
¨g_ty≥
;

1287 i‡(
ty≥
 =
O_ARRAY
 ||Åy≥ =
O_LARRAY
) {

1288 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1289 
	`a‰ì
(
	`°ab_x¨øy
(
°ab
));

1290 
	`°ab_x¨øy
(
°ab
Ë
	`NuŒ
(
ARRAY
*);

1292 i‡(
ty≥
 =
O_HASH
 ||Åy≥ =
O_LHASH
) {

1293 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1294 i‡(
°ab
 =
ív°ab
)

1295 
ívú⁄
[0] = 
NuŒch
;

1296 i‡(
°ab
 =
sig°ab
) {

1297 
i
;

1299 
i
 = 1; i < 
NSIG
; i++)

1300 
	`sig«l
(
i
, 
SIG_DFL
);

1302 ()
	`h‰ì
(
	`°ab_xhash
(
°ab
), 
TRUE
);

1303 
	`°ab_xhash
(
°ab
Ë
	`NuŒ
(
HASH
*);

1305 i‡(
ty≥
 =
O_SUBR
 ||Åy≥ =
O_DBSUBR
) {

1306 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1307 i‡(
	`°ab_sub
(
°ab
)) {

1308 
	`cmd_‰ì
(
	`°ab_sub
(
°ab
)->
cmd
);

1309 
	`°ab_sub
(
°ab
)->
cmd
 = 
NuŒcmd
;

1310 
	`a‰ì
(
	`°ab_sub
(
°ab
)->
toßve
);

1311 
	`Sa„‰ì
(
	`°ab_sub
(
°ab
));

1312 
	`°ab_sub
(
°ab
Ë
	`NuŒ
(
SUBR
*);

1316 
	`Áèl
("Can't undefineÅhat kind of object");

1317 
	`°r_num£t
(
°r
,0.0);

1318 
°ack
->
¨y_¨øy
[
ªèrg
] = 
°r
;

1319  
ªèrg
;

1320 
	}
}

1323 
	$do_vec
(
lvÆue
,
a°r
,
¨gœ°
)

1324 
lvÆue
;

1325 
STR
 *
a°r
;

1326 *
¨gœ°
;

1328 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1329 
•
 = 
¨gœ°
[0];

1330 
STR
 *
°r
 = 
°
[++
•
];

1331 
off£t
 = ()
	`°r_gnum
(
°
[++
•
]);

1332 
size
 = ()
	`°r_gnum
(
°
[++
•
]);

1333 *
s
 = (*)
	`°r_gë
(
°r
);

1334 
ªäum
;

1335 
Àn
;

1337 
•
 = 
¨gœ°
[1];

1338 
off£t
 *
size
;

1339 
Àn
 = (
off£t
 + 
size
 + 7) / 8;

1340 i‡(
off£t
 < 0 || 
size
 < 1)

1341 
ªäum
 = 0;

1342 i‡(!
lvÆue
 && 
Àn
 > 
°r
->
°r_cur
)

1343 
ªäum
 = 0;

1345 i‡(
Àn
 > 
°r
->
°r_cur
) {

1346 
	`STR_GROW
(
°r
,
Àn
);

1347 ()
	`bzîo
(
°r
->
°r_±r
 + så->
°r_cur
, 
Àn
 - str->str_cur);

1348 
°r
->
°r_cur
 = 
Àn
;

1350 
s
 = (*)
	`°r_gë
(
°r
);

1351 i‡(
size
 < 8)

1352 
ªäum
 = (
s
[
off£t
 >> 3] >> (off£à& 7)Ë& ((1 << 
size
) - 1);

1354 
off£t
 >>= 3;

1355 i‡(
size
 == 8)

1356 
ªäum
 = 
s
[
off£t
];

1357 i‡(
size
 == 16)

1358 
ªäum
 = (
s
[
off£t
] << 8) + s[offset+1];

1359 i‡(
size
 == 32)

1360 
ªäum
 = (
s
[
off£t
] << 24) + (s[offset + 1] << 16) +

1361 (
s
[
off£t
 + 2] << 8) + s[offset+3];

1364 i‡(
lvÆue
) {

1365 
l°rög
 *
l°r
 = (l°rög*)
a°r
;

1367 
a°r
->
°r_magic
 = 
°r
;

1368 
°
[
•
]->
°r_øª
 = 'v';

1369 
l°r
->
l°r_off£t
 = 
off£t
;

1370 
l°r
->
l°r_Àn
 = 
size
;

1374 
	`°r_num£t
(
a°r
,()
ªäum
);

1375 
°
[
•
] = 
a°r
;

1376  
•
;

1377 
	}
}

1380 
	$do_vec£t
(
m°r
,
°r
)

1381 
STR
 *
m°r
;

1382 
STR
 *
°r
;

1384 
l°rög
 *
l°r
 = (l°rög*)
°r
;

1385 
off£t
;

1386 
size
;

1387 *
s
 = (*)
m°r
->
°r_±r
;

1388 
lvÆ
 = 
	`U_L
(
	`°r_gnum
(
°r
));

1389 
mask
;

1391 
m°r
->
°r_øª
 = 0;

1392 
°r
->
°r_magic
 = 
NuŒ°r
;

1393 
off£t
 = 
l°r
->
l°r_off£t
;

1394 
size
 = 
l°r
->
l°r_Àn
;

1395 i‡(
size
 < 8) {

1396 
mask
 = (1 << 
size
) - 1;

1397 
size
 = 
off£t
 & 7;

1398 
lvÆ
 &
mask
;

1399 
off£t
 >>= 3;

1400 
s
[
off£t
] &~(
mask
 << 
size
);

1401 
s
[
off£t
] |
lvÆ
 << 
size
;

1404 i‡(
size
 == 8)

1405 
s
[
off£t
] = 
lvÆ
 & 255;

1406 i‡(
size
 == 16) {

1407 
s
[
off£t
] = (
lvÆ
 >> 8) & 255;

1408 
s
[
off£t
+1] = 
lvÆ
 & 255;

1410 i‡(
size
 == 32) {

1411 
s
[
off£t
] = (
lvÆ
 >> 24) & 255;

1412 
s
[
off£t
+1] = (
lvÆ
 >> 16) & 255;

1413 
s
[
off£t
+2] = (
lvÆ
 >> 8) & 255;

1414 
s
[
off£t
+3] = 
lvÆ
 & 255;

1417 
	}
}

1419 
	$do_ch›
(
a°r
,
°r
)

1420 
STR
 *
a°r
;

1421 
STR
 *
°r
;

1423 *
tmps
;

1424 
i
;

1425 
ARRAY
 *
¨y
;

1426 
HASH
 *
hash
;

1427 
HENT
 *
íåy
;

1429 i‡(!
°r
)

1431 i‡(
°r
->
°r_°©e
 =
SS_ARY
) {

1432 
¨y
 = 
	`°ab_¨øy
(
°r
->
°r_u
.
°r_°ab
);

1433 
i
 = 0; i <
¨y
->
¨y_fûl
; i++)

1434 
	`do_ch›
(
a°r
,
¨y
->
¨y_¨øy
[
i
]);

1437 i‡(
°r
->
°r_°©e
 =
SS_HASH
) {

1438 
hash
 = 
	`°ab_hash
(
°r
->
°r_u
.
°r_°ab
);

1439 ()
	`hôîöô
(
hash
);

1440 
íåy
 = 
	`hôî√xt
(
hash
))

1441 
	`do_ch›
(
a°r
,
	`hôîvÆ
(
hash
,
íåy
));

1444 
tmps
 = 
	`°r_gë
(
°r
);

1445 i‡(!
tmps
)

1447 
tmps
 +
°r
->
°r_cur
 - (str->str_cur != 0);

1448 
	`°r_n£t
(
a°r
,
tmps
,1);

1449 *
tmps
 = '\0';

1450 
°r
->
°r_cur
 = 
tmps
 - så->
°r_±r
;

1451 
°r
->
°r_nok
 = 0;

1452 
	`STABSET
(
°r
);

1453 
	}
}

1455 
	$do_v›
(
›ty≥
,
°r
,
À·
,
right
)

1456 
STR
 *
°r
;

1457 
STR
 *
À·
;

1458 
STR
 *
right
;

1460 *
s
;

1461 *
l
 = 
	`°r_gë
(
À·
);

1462 *
r
 = 
	`°r_gë
(
right
);

1463 
Àn
;

1465 
Àn
 = 
À·
->
°r_cur
;

1466 i‡(
Àn
 > 
right
->
°r_cur
)

1467 
Àn
 = 
right
->
°r_cur
;

1468 i‡(
°r
->
°r_cur
 > 
Àn
)

1469 
°r
->
°r_cur
 = 
Àn
;

1470 i‡(
°r
->
°r_cur
 < 
Àn
) {

1471 
	`STR_GROW
(
°r
,
Àn
);

1472 ()
	`bzîo
(
°r
->
°r_±r
 + så->
°r_cur
, 
Àn
 - str->str_cur);

1473 
°r
->
°r_cur
 = 
Àn
;

1475 
s
 = 
°r
->
°r_±r
;

1476 i‡(!
s
) {

1477 
	`°r_n£t
(
°r
,"",0);

1478 
s
 = 
°r
->
°r_±r
;

1480 
›ty≥
) {

1481 
O_BIT_AND
:

1482 
Àn
--)

1483 *
s
++ = *
l
++ & *
r
++;

1485 
O_XOR
:

1486 
Àn
--)

1487 *
s
++ = *
l
++ ^ *
r
++;

1488 
m›_up
;

1489 
O_BIT_OR
:

1490 
Àn
--)

1491 *
s
++ = *
l
++ | *
r
++;

1492 
m›_up
:

1493 
Àn
 = 
°r
->
°r_cur
;

1494 i‡(
right
->
°r_cur
 > 
Àn
)

1495 
	`°r_nˇt
(
°r
,
right
->
°r_±r
+
Àn
,right->
°r_cur
 -Üen);

1496 i‡(
À·
->
°r_cur
 > 
Àn
)

1497 
	`°r_nˇt
(
°r
,
À·
->
°r_±r
+
Àn
,À·->
°r_cur
 -Üen);

1500 
	}
}

1503 
	$do_sysˇŒ
(
¨gœ°
)

1504 *
¨gœ°
;

1506 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1507 
•
 = 
¨gœ°
[1];

1508 
ôems
 = 
¨gœ°
[2] - 
•
;

1509 
¨g
[8];

1510 
i
 = 0;

1511 
ªtvÆ
 = -1;

1513 #ifde‡
HAS_SYSCALL


1514 #ifde‡
TAINT


1515 
°
 +++
•
; 
ôems
--; st++)

1516 
èöãd
 |(*
°
)->
°r_èöãd
;

1517 
°
 = 
°ack
->
¨y_¨øy
;

1518 
•
 = 
¨gœ°
[1];

1519 
ôems
 = 
¨gœ°
[2] - 
•
;

1521 #ifde‡
TAINT


1522 
	`èöçr›î
("Insecure dependency in syscall");

1528 
ôems
--) {

1529 i‡(
°
[++
•
]->
°r_nok
 || !
i
)

1530 
¨g
[
i
++] = ()
	`°r_gnum
(
°
[
•
]);

1531 #i‚de‡
löt


1533 
¨g
[
i
++] = ()
°
[
•
]->
°r_±r
;

1536 
•
 = 
¨gœ°
[1];

1537 
ôems
 = 
¨gœ°
[2] - 
•
;

1538 
ôems
) {

1540 
	`Áèl
("Too fewárgsÅo syscall");

1542 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0]);

1545 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1]);

1548 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1],arg[2]);

1551 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1],arg[2],arg[3]);

1554 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1],arg[2],arg[3],arg[4]);

1557 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1],arg[2],arg[3],arg[4],arg[5]);

1560 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1],arg[2],arg[3],arg[4],arg[5],arg[6]);

1563 
ªtvÆ
 = 
	`sysˇŒ
(
¨g
[0],arg[1],arg[2],arg[3],arg[4],arg[5],arg[6],

1564 
¨g
[7]);

1567  
ªtvÆ
;

1569 
	`Áèl
("syscall() unimplemented");

1571 
	}
}

	@doio.c

17 
	~"EXTERN.h
"

18 
	~"≥æ.h
"

20 #ifde‡
HAS_SOCKET


21 
	~<sys/sockë.h
>

22 
	~<√tdb.h
>

25 #ifde‡
HAS_SELECT


26 #ifde‡
I_SYS_SELECT


27 #i‚de‡
I_SYS_TIME


28 
	~<sys/£À˘.h
>

33 #i‡
deföed
(
HAS_MSG
Ë|| deföed(
HAS_SEM
Ë|| deföed(
HAS_SHM
)

34 
	~<sys/ùc.h
>

35 #ifde‡
HAS_MSG


36 
	~<sys/msg.h
>

38 #ifde‡
HAS_SEM


39 
	~<sys/£m.h
>

41 #ifde‡
HAS_SHM


42 
	~<sys/shm.h
>

46 #ifde‡
I_PWD


47 
	~<pwd.h
>

49 #ifde‡
I_GRP


50 
	~<gΩ.h
>

52 #ifde‡
I_UTIME


53 
	~<utime.h
>

55 #ifde‡
I_FCNTL


56 
	~<f˙é.h
>

58 #ifde‡
I_SYS_FILE


59 
	~<sys/fûe.h
>

62 
	gœ°°©vÆ
 = -1;

63 
	gœ°°y≥
 = 
O_STAT
;

65 
boﬁ


66 
	$do_›í
(
°ab
,
«me
,
Àn
)

67 
STAB
 *
°ab
;

68 *
«me
;

69 
Àn
;

71 
FILE
 *
Â
;

72 
STIO
 *
°io
 = 
	`°ab_io
(
°ab
);

73 *
my«me
 = 
	`ßve°r
(
«me
);

74 
ªsu…
;

75 
fd
;

76 
wrôög
 = 0;

77 
mode
[3];

79 
«me
 = 
my«me
;

80 
f‹k¥o˚ss
 = 1;

81 
Àn
 && 
	`is•a˚
(
«me
[len-1]))

82 
«me
[--
Àn
] = '\0';

83 i‡(!
°io
)

84 
°io
 = 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

85 i‡(
°io
->
iÂ
) {

86 
fd
 = 
	`fûío
(
°io
->
iÂ
);

87 i‡(
°io
->
ty≥
 == '|')

88 
ªsu…
 = 
	`myp˛o£
(
°io
->
iÂ
);

89 i‡(
°io
->
ty≥
 == '-')

90 
ªsu…
 = 0;

91 i‡(
°io
->
iÂ
 !°io->
oÂ
) {

92 i‡(
°io
->
oÂ
) {

93 
ªsu…
 = 
	`f˛o£
(
°io
->
oÂ
);

94 
	`f˛o£
(
°io
->
iÂ
);

97 
ªsu…
 = 
	`f˛o£
(
°io
->
iÂ
);

100 
ªsu…
 = 
	`f˛o£
(
°io
->
iÂ
);

101 i‡(
ªsu…
 =
EOF
 && 
fd
 > 2)

102 
	`Ârötf
(
°dîr
,"Warning: unableÅo close filehandle %sÖroperly.\n",

103 
	`°ab_«me
(
°ab
));

104 
°io
->
oÂ
 = stio->
iÂ
 = 
NuŒÂ
;

106 i‡(*
«me
 ='+' && 
Àn
 > 1 &&Çame[len-1] != '|') {

107 
mode
[1] = *
«me
++;

108 
mode
[2] = '\0';

109 --
Àn
;

110 
wrôög
 = 1;

113 
mode
[1] = '\0';

115 
°io
->
ty≥
 = *
«me
;

116 i‡(*
«me
 == '|') {

117 
«me
++; 
	`is•a˚
(*name);Çame++) ;

118 #ifde‡
TAINT


119 
	`èöãnv
();

120 
	`èöçr›î
("Insecure dependency inÖiped open");

122 
Â
 = 
	`myp›í
(
«me
,"w");

123 
wrôög
 = 1;

125 i‡(*
«me
 == '>') {

126 #ifde‡
TAINT


127 
	`èöçr›î
("Insecure dependency in open");

129 
«me
++;

130 i‡(*
«me
 == '>') {

131 
mode
[0] = 
°io
->
ty≥
 = 'a';

132 
«me
++;

135 
mode
[0] = 'w';

136 
wrôög
 = 1;

137 i‡(*
«me
 == '&') {

138 
du∂icôy
:

139 
«me
++;

140 
	`is•a˚
(*
«me
))

141 
«me
++;

142 i‡(
	`isdigô
(*
«me
))

143 
fd
 = 
	`©oi
(
«me
);

145 
°ab
 = 
	`°abít
(
«me
,
FALSE
);

146 i‡(!
°ab
 || !
	`°ab_io
(stab))

147  
FALSE
;

148 i‡(
	`°ab_io
(
°ab
Ë&& sèb_io(°ab)->
iÂ
) {

149 
fd
 = 
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
);

150 i‡(
	`°ab_io
(
°ab
)->
ty≥
 == 's')

151 
°io
->
ty≥
 = 's';

154 
fd
 = -1;

156 i‡(!(
Â
 = 
	`fd›í
(
fd
 = 
	`dup
(fd),
mode
))) {

157 
	`˛o£
(
fd
);

161 
	`is•a˚
(*
«me
))

162 
«me
++;

163 i‡(
	`°rEQ
(
«me
,"-")) {

164 
Â
 = 
°dout
;

165 
°io
->
ty≥
 = '-';

168 
Â
 = 
	`f›í
(
«me
,
mode
);

173 i‡(*
«me
 == '<') {

174 
mode
[0] = 'r';

175 
«me
++;

176 
	`is•a˚
(*
«me
))

177 
«me
++;

178 i‡(*
«me
 == '&')

179 
du∂icôy
;

180 i‡(
	`°rEQ
(
«me
,"-")) {

181 
Â
 = 
°dö
;

182 
°io
->
ty≥
 = '-';

185 
Â
 = 
	`f›í
(
«me
,
mode
);

187 i‡(
«me
[
Àn
-1] == '|') {

188 #ifde‡
TAINT


189 
	`èöãnv
();

190 
	`èöçr›î
("Insecure dependency inÖiped open");

192 
«me
[--
Àn
] = '\0';

193 
Àn
 && 
	`is•a˚
(
«me
[len-1]))

194 
«me
[--
Àn
] = '\0';

195 ; 
	`is•a˚
(*
«me
);Çame++) ;

196 
Â
 = 
	`myp›í
(
«me
,"r");

197 
°io
->
ty≥
 = '|';

200 
°io
->
ty≥
 = '<';

201 ; 
	`is•a˚
(*
«me
);Çame++) ;

202 i‡(
	`°rEQ
(
«me
,"-")) {

203 
Â
 = 
°dö
;

204 
°io
->
ty≥
 = '-';

207 
Â
 = 
	`f›í
(
«me
,"r");

210 
	`Sa„‰ì
(
my«me
);

211 i‡(!
Â
)

212  
FALSE
;

213 i‡(
°io
->
ty≥
 &&

214 
°io
->
ty≥
 != '|' && stio->type != '-') {

215 i‡(
	`f°©
(
	`fûío
(
Â
),&
°©buf
) < 0) {

216 ()
	`f˛o£
(
Â
);

217  
FALSE
;

219 i‡(
	`S_ISSOCK
(
°©buf
.
°_mode
))

220 
°io
->
ty≥
 = 's';

221 #ifde‡
S_IFMT


222 i‡(!(
°©buf
.
°_mode
 & 
S_IFMT
))

223 
°io
->
ty≥
 = 's';

226 #i‡
	`deföed
(
HAS_FCNTL
Ë&& deföed(
F_SETFD
)

227 
fd
 = 
	`fûío
(
Â
);

228 
	`f˙é
(
fd
,
F_SETFD
,fd >= 3);

230 
°io
->
iÂ
 = 
Â
;

231 i‡(
wrôög
) {

232 i‡(
°io
->
ty≥
 != 's')

233 
°io
->
oÂ
 = 
Â
;

235 i‡(!(
°io
->
oÂ
 = 
	`fd›í
(
	`fûío
(
Â
),"w"))) {

236 
	`f˛o£
(
Â
);

237 
°io
->
iÂ
 = 
NuŒÂ
;

240  
TRUE
;

241 
	}
}

243 
FILE
 *

244 
	$√xèrgv
(
°ab
)

245 
STAB
 *
°ab
;

247 
STR
 *
°r
;

248 
fûedev
;

249 
fûeöo
;

250 
fûeuid
;

251 
fûegid
;

252 
fûemode
 = 0;

253 
œ°fd
;

254 *
ﬁd«me
;

256 i‡(!
¨gvout°ab
)

257 
¨gvout°ab
 = 
	`°abít
("ARGVOUT",
TRUE
);

258 i‡(
fûemode
 & (
S_ISUID
|
S_ISGID
)) {

259 
	`fÊush
(
	`°ab_io
(
¨gvout°ab
)->
iÂ
);

260 #ifde‡
HAS_FCHMOD


261 ()
	`fchmod
(
œ°fd
,
fûemode
);

263 ()
	`chmod
(
ﬁd«me
,
fûemode
);

266 
fûemode
 = 0;

267 
	`Æí
(
	`°ab_x¨øy
(
°ab
)) >= 0) {

268 
°r
 = 
	`ashi·
(
	`°ab_x¨øy
(
°ab
));

269 
	`°r_s£t
(
	`°ab_vÆ
(
°ab
),
°r
);

270 
	`STABSET
(
	`°ab_vÆ
(
°ab
));

271 
ﬁd«me
 = 
	`°r_gë
(
	`°ab_vÆ
(
°ab
));

272 i‡(
	`do_›í
(
°ab
,
ﬁd«me
,
	`°ab_vÆ
(°ab)->
°r_cur
)) {

273 i‡(
ö∂a˚
) {

274 #ifde‡
TAINT


275 
	`èöçr›î
("Insecure dependency in inplace open");

277 i‡(
	`°rEQ
(
ﬁd«me
,"-")) {

278 
	`°r_‰ì
(
°r
);

279 
defout°ab
 = 
	`°abít
("STDOUT",
TRUE
);

280  
	`°ab_io
(
°ab
)->
iÂ
;

282 
fûedev
 = 
°©buf
.
°_dev
;

283 
fûeöo
 = 
°©buf
.
°_öo
;

284 
fûemode
 = 
°©buf
.
°_mode
;

285 
fûeuid
 = 
°©buf
.
°_uid
;

286 
fûegid
 = 
°©buf
.
°_gid
;

287 i‡(!
	`S_ISREG
(
fûemode
)) {

288 
	`w¨n
("Can't do inplaceÉdit: %s isÇotáÑegular file",

289 
ﬁd«me
 );

290 
	`do_˛o£
(
°ab
,
FALSE
);

291 
	`°r_‰ì
(
°r
);

294 i‡(*
ö∂a˚
) {

295 #ifde‡
SUFFIX


296 
	`add_suffix
(
°r
,
ö∂a˚
);

298 
	`°r_ˇt
(
°r
,
ö∂a˚
);

300 #i‚de‡
FLEXFILENAMES


301 i‡(
	`°©
(
°r
->
°r_±r
,&
°©buf
) >= 0

302 && 
°©buf
.
°_dev
 =
fûedev


303 && 
°©buf
.
°_öo
 =
fûeöo
 ) {

304 
	`w¨n
("Can't do inplaceÉdit: %s > 14 characters",

305 
°r
->
°r_±r
 );

306 
	`do_˛o£
(
°ab
,
FALSE
);

307 
	`°r_‰ì
(
°r
);

311 #ifde‡
HAS_RENAME


312 #i‚de‡
MSDOS


313 i‡(
	`ª«me
(
ﬁd«me
,
°r
->
°r_±r
) < 0) {

314 
	`w¨n
("Can'tÑename %sÅo %s: %s, skipping file",

315 
ﬁd«me
, 
°r
->
°r_±r
, 
	`°ªº‹
(
î∫o
) );

316 
	`do_˛o£
(
°ab
,
FALSE
);

317 
	`°r_‰ì
(
°r
);

321 
	`do_˛o£
(
°ab
,
FALSE
);

322 ()
	`u∆ök
(
°r
->
°r_±r
);

323 ()
	`ª«me
(
ﬁd«me
,
°r
->
°r_±r
);

324 
	`do_›í
(
°ab
,
°r
->
°r_±r
,
	`°ab_vÆ
(°ab)->
°r_cur
);

327 ()
	`UNLINK
(
°r
->
°r_±r
);

328 i‡(
	`lök
(
ﬁd«me
,
°r
->
°r_±r
) < 0) {

329 
	`w¨n
("Can'tÑename %sÅo %s: %s, skipping file",

330 
ﬁd«me
, 
°r
->
°r_±r
, 
	`°ªº‹
(
î∫o
) );

331 
	`do_˛o£
(
°ab
,
FALSE
);

332 
	`°r_‰ì
(
°r
);

335 ()
	`UNLINK
(
ﬁd«me
);

339 #i‚de‡
MSDOS


340 i‡(
	`UNLINK
(
ﬁd«me
) < 0) {

341 
	`w¨n
("Can'tÑename %sÅo %s: %s, skipping file",

342 
ﬁd«me
, 
°r
->
°r_±r
, 
	`°ªº‹
(
î∫o
) );

343 
	`do_˛o£
(
°ab
,
FALSE
);

344 
	`°r_‰ì
(
°r
);

348 
	`Áèl
("Can't do inplaceÉdit without backup");

352 
	`°r_n£t
(
°r
,">",1);

353 
	`°r_ˇt
(
°r
,
ﬁd«me
);

354 
î∫o
 = 0;

355 i‡(!
	`do_›í
(
¨gvout°ab
,
°r
->
°r_±r
,°r->
°r_cur
)) {

356 
	`w¨n
("Can't do inplaceÉdit on %s: %s",

357 
ﬁd«me
, 
	`°ªº‹
(
î∫o
) );

358 
	`do_˛o£
(
°ab
,
FALSE
);

359 
	`°r_‰ì
(
°r
);

362 
defout°ab
 = 
¨gvout°ab
;

363 
œ°fd
 = 
	`fûío
(
	`°ab_io
(
¨gvout°ab
)->
iÂ
);

364 ()
	`f°©
(
œ°fd
,&
°©buf
);

365 #ifde‡
HAS_FCHMOD


366 ()
	`fchmod
(
œ°fd
,
fûemode
);

368 ()
	`chmod
(
ﬁd«me
,
fûemode
);

370 i‡(
fûeuid
 !
°©buf
.
°_uid
 || 
fûegid
 !°©buf.
°_gid
) {

371 #ifde‡
HAS_FCHOWN


372 ()
	`fchown
(
œ°fd
,
fûeuid
,
fûegid
);

374 #ifde‡
HAS_CHOWN


375 ()
	`chown
(
ﬁd«me
,
fûeuid
,
fûegid
);

380 
	`°r_‰ì
(
°r
);

381  
	`°ab_io
(
°ab
)->
iÂ
;

384 
	`Ârötf
(
°dîr
,"C™'à›í %s: %s\n",
	`°r_gë
(
°r
), 
	`°ªº‹
(
î∫o
));

385 
	`°r_‰ì
(
°r
);

387 i‡(
ö∂a˚
) {

388 ()
	`do_˛o£
(
¨gvout°ab
,
FALSE
);

389 
defout°ab
 = 
	`°abít
("STDOUT",
TRUE
);

391  
NuŒÂ
;

392 
	}
}

394 #ifde‡
HAS_PIPE


396 
	$do_pùe
(
°r
, 
r°ab
, 
w°ab
)

397 
STR
 *
°r
;

398 
STAB
 *
r°ab
;

399 
STAB
 *
w°ab
;

401 
STIO
 *
r°io
;

402 
STIO
 *
w°io
;

403 
fd
[2];

405 i‡(!
r°ab
)

406 
badexô
;

407 i‡(!
w°ab
)

408 
badexô
;

410 
r°io
 = 
	`°ab_io
(
r°ab
);

411 
w°io
 = 
	`°ab_io
(
w°ab
);

413 i‡(!
r°io
)

414 
r°io
 = 
	`°ab_io
(
r°ab
Ë
	`°io_√w
();

415 i‡(
r°io
->
iÂ
)

416 
	`do_˛o£
(
r°ab
,
FALSE
);

417 i‡(!
w°io
)

418 
w°io
 = 
	`°ab_io
(
w°ab
Ë
	`°io_√w
();

419 i‡(
w°io
->
iÂ
)

420 
	`do_˛o£
(
w°ab
,
FALSE
);

422 i‡(
	`pùe
(
fd
) < 0)

423 
badexô
;

424 
r°io
->
iÂ
 = 
	`fd›í
(
fd
[0], "r");

425 
w°io
->
oÂ
 = 
	`fd›í
(
fd
[1], "w");

426 
w°io
->
iÂ
 = w°io->
oÂ
;

427 
r°io
->
ty≥
 = '<';

428 
w°io
->
ty≥
 = '>';

429 i‡(!
r°io
->
iÂ
 || !
w°io
->
oÂ
) {

430 i‡(
r°io
->
iÂ
Ë
	`f˛o£
(rstio->ifp);

431 
	`˛o£
(
fd
[0]);

432 i‡(
w°io
->
oÂ
Ë
	`f˛o£
(wstio->ofp);

433 
	`˛o£
(
fd
[1]);

434 
badexô
;

437 
	`°r_s£t
(
°r
,&
°r_yes
);

440 
badexô
:

441 
	`°r_s£t
(
°r
,&
°r_undef
);

443 
	}
}

446 
boﬁ


447 
	$do_˛o£
(
°ab
,
ex∂icô
)

448 
STAB
 *
°ab
;

449 
boﬁ
 
ex∂icô
;

451 
boﬁ
 
ªtvÆ
 = 
FALSE
;

452 
STIO
 *
°io
;

453 
°©us
;

455 i‡(!
°ab
)

456 
°ab
 = 
¨gv°ab
;

457 i‡(!
°ab
)

458  
FALSE
;

459 
°io
 = 
	`°ab_io
(
°ab
);

460 i‡(!
°io
) {

461 i‡(
dow¨n
 && 
ex∂icô
)

462 
	`w¨n
("Clo£ o¿un›íed fûê<%s>",
	`°ab_«me
(
°ab
));

463  
FALSE
;

465 i‡(
°io
->
iÂ
) {

466 i‡(
°io
->
ty≥
 == '|') {

467 
°©us
 = 
	`myp˛o£
(
°io
->
iÂ
);

468 
ªtvÆ
 = (
°©us
 == 0);

469 
°©usvÆue
 = ()
°©us
 & 0xffff;

471 i‡(
°io
->
ty≥
 == '-')

472 
ªtvÆ
 = 
TRUE
;

474 i‡(
°io
->
oÂ
 && stio->oÂ !°io->
iÂ
) {

475 
ªtvÆ
 = (
	`f˛o£
(
°io
->
oÂ
Ë!
EOF
);

476 
	`f˛o£
(
°io
->
iÂ
);

479 
ªtvÆ
 = (
	`f˛o£
(
°io
->
iÂ
Ë!
EOF
);

481 
°io
->
oÂ
 = stio->
iÂ
 = 
NuŒÂ
;

483 i‡(
ex∂icô
)

484 
°io
->
löes
 = 0;

485 
°io
->
ty≥
 = ' ';

486  
ªtvÆ
;

487 
	}
}

489 
boﬁ


490 
	$do_eof
(
°ab
)

491 
STAB
 *
°ab
;

493 
STIO
 *
°io
;

494 
ch
;

496 i‡(!
°ab
) {

497 i‡(
¨gv°ab
)

498 
°io
 = 
	`°ab_io
(
¨gv°ab
);

500  
TRUE
;

503 
°io
 = 
	`°ab_io
(
°ab
);

505 i‡(!
°io
)

506  
TRUE
;

508 
°io
->
iÂ
) {

510 #ifde‡
STDSTDIO


511 i‡(
°io
->
iÂ
->
_˙t
 > 0)

512  
FALSE
;

515 
ch
 = 
	`gëc
(
°io
->
iÂ
);

516 i‡(
ch
 !
EOF
) {

517 ()
	`ungëc
(
ch
, 
°io
->
iÂ
);

518  
FALSE
;

520 #ifde‡
STDSTDIO


521 i‡(
°io
->
iÂ
->
_˙t
 < -1)

522 
°io
->
iÂ
->
_˙t
 = -1;

524 i‡(!
°ab
) {

525 i‡(!
	`√xèrgv
(
¨gv°ab
))

526  
TRUE
;

529  
TRUE
;

531  
TRUE
;

532 
	}
}

535 
	$do_ãŒ
(
°ab
)

536 
STAB
 *
°ab
;

538 
STIO
 *
°io
;

540 i‡(!
°ab
)

541 
pho€y
;

543 
°io
 = 
	`°ab_io
(
°ab
);

544 i‡(!
°io
 || !°io->
iÂ
)

545 
pho€y
;

547 i‡(
	`„of
(
°io
->
iÂ
))

548 ()
	`f£ek
 (
°io
->
iÂ
, 0L, 2);

550  
	`·ñl
(
°io
->
iÂ
);

552 
pho€y
:

553 i‡(
dow¨n
)

554 
	`w¨n
("tell() on unopened file");

556 
	}
}

558 
boﬁ


559 
	$do_£ek
(
°ab
, 
pos
, 
whí˚
)

560 
STAB
 *
°ab
;

561 
pos
;

562 
whí˚
;

564 
STIO
 *
°io
;

566 i‡(!
°ab
)

567 
nuts
;

569 
°io
 = 
	`°ab_io
(
°ab
);

570 i‡(!
°io
 || !°io->
iÂ
)

571 
nuts
;

573 i‡(
	`„of
(
°io
->
iÂ
))

574 ()
	`f£ek
 (
°io
->
iÂ
, 0L, 2);

576  
	`f£ek
(
°io
->
iÂ
, 
pos
, 
whí˚
) >= 0;

578 
nuts
:

579 i‡(
dow¨n
)

580 
	`w¨n
("seek() on unopened file");

581  
FALSE
;

582 
	}
}

585 
	$do_˘l
(
›ty≥
,
°ab
,
func
,
¨g°r
)

586 
›ty≥
;

587 
STAB
 *
°ab
;

588 
func
;

589 
STR
 *
¨g°r
;

591 
STIO
 *
°io
;

592 *
s
;

593 
ªtvÆ
;

595 i‡(!
°ab
 || !
¨g°r
)

597 
°io
 = 
	`°ab_io
(
°ab
);

598 i‡(!
°io
)

601 i‡(
¨g°r
->
°r_pok
 || !¨g°r->
°r_nok
) {

602 i‡(!
¨g°r
->
°r_pok
)

603 
s
 = 
	`°r_gë
(
¨g°r
);

605 #ifde‡
IOCPARM_MASK


606 #i‚de‡
IOCPARM_LEN


607 
	#IOCPARM_LEN
(
x
Ë(((xË>> 16Ë& 
IOCPARM_MASK
)

	)

610 #ifde‡
IOCPARM_LEN


611 
ªtvÆ
 = 
	`IOCPARM_LEN
(
func
);

613 
ªtvÆ
 = 256;

615 i‡(
¨g°r
->
°r_cur
 < 
ªtvÆ
) {

616 
	`Så_Grow
(
¨g°r
,
ªtvÆ
+1);

617 
¨g°r
->
°r_cur
 = 
ªtvÆ
;

620 
s
 = 
¨g°r
->
°r_±r
;

621 
s
[
¨g°r
->
°r_cur
] = 17;

624 
ªtvÆ
 = ()
	`°r_gnum
(
¨g°r
);

625 #ifde‡
MSDOS


626 
s
 = (*)()
ªtvÆ
;

628 
s
 = (*)
ªtvÆ
;

632 #i‚de‡
löt


633 i‡(
›ty≥
 =
O_IOCTL
)

634 
ªtvÆ
 = 
	`io˘l
(
	`fûío
(
°io
->
iÂ
), 
func
, 
s
);

636 #ifde‡
MSDOS


637 
	`Áèl
("fcntl isÇot implemented");

639 #ifde‡
HAS_FCNTL


640 
ªtvÆ
 = 
	`f˙é
(
	`fûío
(
°io
->
iÂ
), 
func
, 
s
);

642 
	`Áèl
("fcntl isÇot implemented");

646 
ªtvÆ
 = 0;

649 i‡(
¨g°r
->
°r_pok
) {

650 i‡(
s
[
¨g°r
->
°r_cur
] != 17)

651 
	`Áèl
("Return value overflowed string");

652 
s
[
¨g°r
->
°r_cur
] = 0;

654  
ªtvÆ
;

655 
	}
}

658 
	$do_°©
(
°r
,
¨g
,
gimme
,
¨gœ°
)

659 
STR
 *
°r
;

660 
ARG
 *
¨g
;

661 
gimme
;

662 *
¨gœ°
;

664 
ARRAY
 *
¨y
 = 
°ack
;

665 
•
 = 
¨gœ°
[0] + 1;

666 
max
 = 13;

668 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
) {

669 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

670 i‡(
tmp°ab
 !
def°ab
) {

671 
œ°°y≥
 = 
O_STAT
;

672 
°©°ab
 = 
tmp°ab
;

673 
	`°r_£t
(
°©«me
,"");

674 i‡(!
	`°ab_io
(
tmp°ab
Ë|| !°ab_io—mp°ab)->
iÂ
 ||

675 
	`f°©
(
	`fûío
(
	`°ab_io
(
tmp°ab
)->
iÂ
),&
°©ˇche
) < 0) {

676 
max
 = 0;

677 
œ°°©vÆ
 = -1;

680 i‡(
œ°°©vÆ
 < 0)

681 
max
 = 0;

684 
	`°r_£t
(
°©«me
,
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
]));

685 
°©°ab
 = 
NuŒ°ab
;

686 #ifde‡
HAS_LSTAT


687 
œ°°y≥
 = 
¨g
->
¨g_ty≥
;

688 i‡(
¨g
->
¨g_ty≥
 =
O_LSTAT
)

689 
œ°°©vÆ
 = 
	`l°©
(
	`°r_gë
(
°©«me
),&
°©ˇche
);

692 
œ°°©vÆ
 = 
	`°©
(
	`°r_gë
(
°©«me
),&
°©ˇche
);

693 i‡(
œ°°©vÆ
 < 0)

694 
max
 = 0;

697 i‡(
gimme
 !
G_ARRAY
) {

698 i‡(
max
)

699 
	`°r_s£t
(
°r
,&
°r_yes
);

701 
	`°r_s£t
(
°r
,&
°r_undef
);

702 
	`STABSET
(
°r
);

703 
¨y
->
¨y_¨øy
[
•
] = 
°r
;

704  
•
;

706 
•
--;

707 i‡(
max
) {

708 #i‚de‡
löt


709 ()
	`a°‹e
(
¨y
,++
•
,

710 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_dev
)));

711 ()
	`a°‹e
(
¨y
,++
•
,

712 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_öo
)));

713 ()
	`a°‹e
(
¨y
,++
•
,

714 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_mode
)));

715 ()
	`a°‹e
(
¨y
,++
•
,

716 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_∆ök
)));

717 ()
	`a°‹e
(
¨y
,++
•
,

718 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_uid
)));

719 ()
	`a°‹e
(
¨y
,++
•
,

720 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_gid
)));

721 ()
	`a°‹e
(
¨y
,++
•
,

722 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_rdev
)));

723 ()
	`a°‹e
(
¨y
,++
•
,

724 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_size
)));

725 ()
	`a°‹e
(
¨y
,++
•
,

726 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_©ime
)));

727 ()
	`a°‹e
(
¨y
,++
•
,

728 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_mtime
)));

729 ()
	`a°‹e
(
¨y
,++
•
,

730 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_˘ime
)));

731 #ifde‡
STATBLOCKS


732 ()
	`a°‹e
(
¨y
,++
•
,

733 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_blksize
)));

734 ()
	`a°‹e
(
¨y
,++
•
,

735 
	`°r_2m‹èl
(
	`°r_nmake
(()
°©ˇche
.
°_blocks
)));

737 ()
	`a°‹e
(
¨y
,++
•
,

738 
	`°r_2m‹èl
(
	`°r_make
("",0)));

739 ()
	`a°‹e
(
¨y
,++
•
,

740 
	`°r_2m‹èl
(
	`°r_make
("",0)));

743 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_nmake
(0.0));

746  
•
;

747 
	}
}

749 #i‡!
deföed
(
HAS_TRUNCATE
Ë&& !deföed(
HAS_CHSIZE
Ë&& deföed(
F_FREESP
)

751 
	#HAS_CHSIZE


	)

753 
	$chsize
(
fd
, 
Àngth
)

754 
fd
;

755 
off_t
 
Àngth
;

757 

	`l£ek
();

758 
Êock
 
Ê
;

759 
°©
 
fûebuf
;

761 i‡(
	`f°©
(
fd
, &
fûebuf
) < 0)

764 i‡(
fûebuf
.
°_size
 < 
Àngth
) {

768 i‡((
	`l£ek
(
fd
, (
Àngth
 - 1), 0)) < 0)

773 i‡((
	`wrôe
(
fd
, "", 1)) != 1)

779 
Ê
.
l_whí˚
 = 0;

780 
Ê
.
l_Àn
 = 0;

781 
Ê
.
l_°¨t
 = 
Àngth
;

782 
Ê
.
l_ty≥
 = 
F_WRLCK
;

792 i‡(
	`f˙é
(
fd
, 
F_FREESP
, &
Ê
) < 0)

798 
	}
}

802 
	$do_åunˇã
(
°r
,
¨g
,
gimme
,
¨gœ°
)

803 
STR
 *
°r
;

804 
ARG
 *
¨g
;

805 
gimme
;

806 *
¨gœ°
;

808 
ARRAY
 *
¨y
 = 
°ack
;

809 
•
 = 
¨gœ°
[0] + 1;

810 
off_t
 
Àn
 = (off_t)
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+1]);

811 
ªsu…
 = 1;

812 
STAB
 *
tmp°ab
;

814 #i‡
	`deföed
(
HAS_TRUNCATE
Ë|| deföed(
HAS_CHSIZE
)

815 #ifde‡
HAS_TRUNCATE


816 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
) {

817 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

818 i‡(!
	`°ab_io
(
tmp°ab
) ||

819 
	`·runˇã
(
	`fûío
(
	`°ab_io
(
tmp°ab
)->
iÂ
), 
Àn
) < 0)

820 
ªsu…
 = 0;

822 i‡(
	`åunˇã
(
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
]), 
Àn
) < 0)

823 
ªsu…
 = 0;

825 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
) {

826 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

827 i‡(!
	`°ab_io
(
tmp°ab
) ||

828 
	`chsize
(
	`fûío
(
	`°ab_io
(
tmp°ab
)->
iÂ
), 
Àn
) < 0)

829 
ªsu…
 = 0;

832 
tmpfd
;

834 i‡((
tmpfd
 = 
	`›í
(
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
]), 0)) < 0)

835 
ªsu…
 = 0;

837 i‡(
	`chsize
(
tmpfd
, 
Àn
) < 0)

838 
ªsu…
 = 0;

839 
	`˛o£
(
tmpfd
);

844 i‡(
ªsu…
)

845 
	`°r_s£t
(
°r
,&
°r_yes
);

847 
	`°r_s£t
(
°r
,&
°r_undef
);

848 
	`STABSET
(
°r
);

849 
¨y
->
¨y_¨øy
[
•
] = 
°r
;

850  
•
;

852 
	`Áèl
("truncateÇot implemented");

854 
	}
}

857 
	$looks_like_numbî
(
°r
)

858 
STR
 *
°r
;

860 *
s
;

861 *
£nd
;

863 i‡(!
°r
->
°r_pok
)

864  
TRUE
;

865 
s
 = 
°r
->
°r_±r
;

866 
£nd
 = 
s
 + 
°r
->
°r_cur
;

867 
	`is•a˚
(*
s
))

868 
s
++;

869 i‡(
s
 >
£nd
)

870  
FALSE
;

871 i‡(*
s
 == '+' || *s == '-')

872 
s
++;

873 
	`isdigô
(*
s
))

874 
s
++;

875 i‡(
s
 =
£nd
)

876  
TRUE
;

877 i‡(*
s
 == '.')

878 
s
++;

879 i‡(
s
 =
°r
->
°r_±r
)

880  
FALSE
;

881 
	`isdigô
(*
s
))

882 
s
++;

883 i‡(
s
 =
£nd
)

884  
TRUE
;

885 i‡(*
s
 == 'e' || *s == 'E') {

886 
s
++;

887 i‡(*
s
 == '+' || *s == '-')

888 
s
++;

889 
	`isdigô
(*
s
))

890 
s
++;

892 
	`is•a˚
(*
s
))

893 
s
++;

894 i‡(
s
 >
£nd
)

895  
TRUE
;

896  
FALSE
;

897 
	}
}

899 
boﬁ


900 
	$do_¥öt
(
°r
,
Â
)

901 
STR
 *
°r
;

902 
FILE
 *
Â
;

904 *
tmps
;

906 i‡(!
Â
) {

907 i‡(
dow¨n
)

908 
	`w¨n
("printÅo unopened file");

909  
FALSE
;

911 i‡(!
°r
)

912  
TRUE
;

913 i‡(
ofmt
 &&

914 ((
°r
->
°r_nok
 && så->
°r_u
.
°r_nvÆ
 != 0.0)

915 || (
	`looks_like_numbî
(
°r
Ë&& 
	`°r_gnum
(str) != 0.0) ) ) {

916 
	`Ârötf
(
Â
, 
ofmt
, 
°r
->
°r_u
.
°r_nvÆ
);

917  !
	`„º‹
(
Â
);

920 
tmps
 = 
	`°r_gë
(
°r
);

921 i‡(*
tmps
 == 'S' &&Åmps[1] == 't' &&Åmps[2] == 'B' &&Åmps[3] == '\0'

922 && 
°r
->
°r_cur
 =(
STBP
Ë&& 
	`°æí
(
tmps
) < str->str_cur) {

923 
STR
 *
tmp°r
 = 
	`°r_m‹èl
(&
°r_undef
);

924 
	`°ab_fuŒ«me
(
tmp°r
,((
STAB
*)
°r
));

925 
°r
 = 
tmp°r
;

926 
tmps
 = 
°r
->
°r_±r
;

927 
	`putc
('*',
Â
);

929 i‡(
°r
->
°r_cur
 && (
	`fwrôe
(
tmps
,1,°r->°r_cur,
Â
Ë=0 || 
	`„º‹
(fp)))

930  
FALSE
;

932  
TRUE
;

933 
	}
}

935 
boﬁ


936 
	$do_≠röt
(
¨g
,
Â
,
¨gœ°
)

937 
ARG
 *
¨g
;

938 
FILE
 *
Â
;

939 *
¨gœ°
;

941 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

942 
•
 = 
¨gœ°
[1];

943 
ªtvÆ
;

944 
ôems
 = 
¨gœ°
[2] - 
•
;

946 i‡(!
Â
) {

947 i‡(
dow¨n
)

948 
	`w¨n
("printÅo unopened file");

949  
FALSE
;

951 
°
 +++
•
;

952 i‡(
¨g
->
¨g_ty≥
 =
O_PRTF
) {

953 
	`do_•rötf
(
¨g
->
¨g_±r
.
¨g_°r
,
ôems
,
°
);

954 
ªtvÆ
 = 
	`do_¥öt
(
¨g
->
¨g_±r
.
¨g_°r
,
Â
);

957 
ªtvÆ
 = (
ôems
 <= 0);

958 ; 
ôems
 > 0; iãms--,
°
++) {

959 i‡(
ªtvÆ
 && 
of¶í
) {

960 i‡(
	`fwrôe
(
ofs
, 1, 
of¶í
, 
Â
Ë=0 || 
	`„º‹
(fp)) {

961 
ªtvÆ
 = 
FALSE
;

965 i‡(!(
ªtvÆ
 = 
	`do_¥öt
(*
°
, 
Â
)))

968 i‡(
ªtvÆ
 && 
‹¶í
)

969 i‡(
	`fwrôe
(
‹s
, 1, 
‹¶í
, 
Â
Ë=0 || 
	`„º‹
(fp))

970 
ªtvÆ
 = 
FALSE
;

972  
ªtvÆ
;

973 
	}
}

976 
	$my°©
(
¨g
,
°r
)

977 
ARG
 *
¨g
;

978 
STR
 *
°r
;

980 
STIO
 *
°io
;

982 
œ°°y≥
 = 
O_STAT
;

983 i‡(
¨g
[1].
¨g_ty≥
 & 
A_DONT
) {

984 
°io
 = 
	`°ab_io
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

985 i‡(
°io
 && stio->
iÂ
) {

986 
°©°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

987 
	`°r_£t
(
°©«me
,"");

988  (
œ°°©vÆ
 = 
	`f°©
(
	`fûío
(
°io
->
iÂ
), &
°©ˇche
));

991 i‡(
¨g
[1].
¨g_±r
.
¨g_°ab
 =
def°ab
)

992  
œ°°©vÆ
;

993 i‡(
dow¨n
)

994 
	`w¨n
("Stat on unopened file <%s>",

995 
	`°ab_«me
(
¨g
[1].
¨g_±r
.
¨g_°ab
));

996 
°©°ab
 = 
NuŒ°ab
;

997 
	`°r_£t
(
°©«me
,"");

998  (
œ°°©vÆ
 = -1);

1002 
°©°ab
 = 
NuŒ°ab
;

1003 
	`°r_£t
(
°©«me
,
	`°r_gë
(
°r
));

1004  (
œ°°©vÆ
 = 
	`°©
(
	`°r_gë
(
°r
),&
°©ˇche
));

1006 
	}
}

1009 
	$myl°©
(
¨g
,
°r
)

1010 
ARG
 *
¨g
;

1011 
STR
 *
°r
;

1013 i‡(
¨g
[1].
¨g_ty≥
 & 
A_DONT
) {

1014 i‡(
¨g
[1].
¨g_±r
.
¨g_°ab
 =
def°ab
) {

1015 i‡(
œ°°y≥
 !
O_LSTAT
)

1016 
	`Áèl
("The statÖreceding -l _ wasn'tánÜstat");

1017  
œ°°©vÆ
;

1019 
	`Áèl
("You can't use -l oná filehandle");

1022 
œ°°y≥
 = 
O_LSTAT
;

1023 
°©°ab
 = 
NuŒ°ab
;

1024 
	`°r_£t
(
°©«me
,
	`°r_gë
(
°r
));

1025 #ifde‡
HAS_LSTAT


1026  (
œ°°©vÆ
 = 
	`l°©
(
	`°r_gë
(
°r
),&
°©ˇche
));

1028  (
œ°°©vÆ
 = 
	`°©
(
	`°r_gë
(
°r
),&
°©ˇche
));

1030 
	}
}

1032 
STR
 *

1033 
	$do_·ãxt
(
¨g
,
°r
)

1034 
ARG
 *
¨g
;

1035 
STR
 *
°r
;

1037 
i
;

1038 
Àn
;

1039 
odd
 = 0;

1040 
STDCHAR
 
tbuf
[512];

1041 
STDCHAR
 *
s
;

1042 
STIO
 *
°io
;

1044 i‡(
¨g
[1].
¨g_ty≥
 & 
A_DONT
) {

1045 i‡(
¨g
[1].
¨g_±r
.
¨g_°ab
 =
def°ab
) {

1046 i‡(
°©°ab
)

1047 
°io
 = 
	`°ab_io
(
°©°ab
);

1049 
°r
 = 
°©«me
;

1050 
ªÆly_fûíame
;

1054 
°©°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1055 
	`°r_£t
(
°©«me
,"");

1056 
°io
 = 
	`°ab_io
(
°©°ab
);

1058 i‡(
°io
 && stio->
iÂ
) {

1059 #ifde‡
STDSTDIO


1060 
	`f°©
(
	`fûío
(
°io
->
iÂ
),&
°©ˇche
);

1061 i‡(
°io
->
iÂ
->
_˙t
 <= 0) {

1062 
i
 = 
	`gëc
(
°io
->
iÂ
);

1063 i‡(
i
 !
EOF
)

1064 ()
	`ungëc
(
i
,
°io
->
iÂ
);

1066 i‡(
°io
->
iÂ
->
_˙t
 <= 0)

1067  &
°r_yes
;

1068 
Àn
 = 
°io
->
iÂ
->
_˙t
 + (°io->iÂ->
_±r
 - stio->iÂ->
_ba£
);

1069 
s
 = 
°io
->
iÂ
->
_ba£
;

1071 
	`Áèl
("-Tánd -BÇot implemented on filehandles\n");

1075 i‡(
dow¨n
)

1076 
	`w¨n
("Test on unopened file <%s>",

1077 
	`°ab_«me
(
¨g
[1].
¨g_±r
.
¨g_°ab
));

1078  &
°r_undef
;

1082 
°©°ab
 = 
NuŒ°ab
;

1083 
	`°r_£t
(
°©«me
,
	`°r_gë
(
°r
));

1084 
ªÆly_fûíame
:

1085 
i
 = 
	`›í
(
	`°r_gë
(
°r
),0);

1086 i‡(
i
 < 0)

1087  &
°r_undef
;

1088 
	`f°©
(
i
,&
°©ˇche
);

1089 
Àn
 = 
	`ªad
(
i
,
tbuf
,512);

1090 ()
	`˛o£
(
i
);

1091 i‡(
Àn
 <= 0)

1092  &
°r_yes
;

1093 
s
 = 
tbuf
;

1098 
i
 = 0; i < 
Àn
; i++,
s
++) {

1099 i‡(!*
s
) {

1100 
odd
 +
Àn
;

1103 i‡(*
s
 & 128)

1104 
odd
++;

1105 i‡(*
s
 < 32 &&

1106 *
s
 != '\n' && *s != '\r' && *s != '\b' &&

1107 *
s
 != '\t' && *s != '\f' && *s != 27)

1108 
odd
++;

1111 i‡((
odd
 * 10 > 
Àn
Ë=(
¨g
->
¨g_ty≥
 =
O_FTTEXT
))

1112  &
°r_no
;

1114  &
°r_yes
;

1115 
	}
}

1117 
boﬁ


1118 
	$do_´xec
(
ªÆly
,
¨gœ°
)

1119 
STR
 *
ªÆly
;

1120 *
¨gœ°
;

1122 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1123 
•
 = 
¨gœ°
[1];

1124 
ôems
 = 
¨gœ°
[2] - 
•
;

1125 **
a
;

1126 **
¨gv
;

1127 *
tmps
;

1129 i‡(
ôems
) {

1130 
	`New
(401,
¨gv
, 
ôems
+1, *);

1131 
a
 = 
¨gv
;

1132 
°
 +++
•
; 
ôems
 > 0; items--,st++) {

1133 i‡(*
°
)

1134 *
a
++ = 
	`°r_gë
(*
°
);

1136 *
a
++ = "";

1138 *
a
 = 
NuŒch
;

1139 #ifde‡
TAINT


1140 i‡(*
¨gv
[0] != '/')

1141 
	`èöãnv
();

1143 i‡(
ªÆly
 && *(
tmps
 = 
	`°r_gë
(really)))

1144 
	`execvp
(
tmps
,
¨gv
);

1146 
	`execvp
(
¨gv
[0],argv);

1147 
	`Sa„‰ì
(
¨gv
);

1149  
FALSE
;

1150 
	}
}

1152 **
	gArgv
 = 
NuŒ
(**);

1153 *
	gCmd
 = 
NuŒch
;

1156 
	$do_exec‰ì
()

1158 i‡(
Argv
) {

1159 
	`Sa„‰ì
(
Argv
);

1160 
Argv
 = 
	`NuŒ
(**);

1162 i‡(
Cmd
) {

1163 
	`Sa„‰ì
(
Cmd
);

1164 
Cmd
 = 
NuŒch
;

1166 
	}
}

1168 
boﬁ


1169 
	$do_exec
(
cmd
)

1170 *
cmd
;

1172 **
a
;

1173 *
s
;

1174 
Êags
[10];

1176 #ifde‡
TAINT


1177 
	`èöãnv
();

1178 
	`èöçr›î
("Insecure dependency inÉxec");

1183 #ifde‡
CSH


1184 i‡(
	`°∫EQ
(
cmd
,
csh«me
,
cshÀn
) && strnEQ(cmd+cshlen," -c",3)) {

1185 
	`°r˝y
(
Êags
,"-c");

1186 
s
 = 
cmd
+
cshÀn
+3;

1187 i‡(*
s
 == 'f') {

1188 
s
++;

1189 
	`°rˇt
(
Êags
,"f");

1191 i‡(*
s
 == ' ')

1192 
s
++;

1193 i‡(*
s
++ == '\'') {

1194 *
ncmd
 = 
s
;

1196 *
s
)

1197 
s
++;

1198 i‡(
s
[-1] == '\n')

1199 *--
s
 = '\0';

1200 i‡(
s
[-1] == '\'') {

1201 *--
s
 = '\0';

1202 
	`exe˛
(
csh«me
,"csh", 
Êags
,
ncmd
,(*)0);

1203 *
s
 = '\'';

1204  
FALSE
;

1212 
s
 = 
cmd
; *†&& 
	`ißÕha
(*s); s++) ;

1213 i‡(*
s
 == '=')

1214 
doshñl
;

1215 
s
 = 
cmd
; *s; s++) {

1216 i‡(*
s
 !' ' && !
	`ißÕha
(*sË&& 
	`ödex
("$&*(){}[]'\";\\|?<>~`\n",*s)) {

1217 i‡(*
s
 == '\n' && !s[1]) {

1218 *
s
 = '\0';

1221 
doshñl
:

1222 
	`exe˛
("/bö/sh","sh","-c",
cmd
,(*)0);

1223  
FALSE
;

1226 
	`New
(402,
Argv
, (
s
 - 
cmd
) / 2 + 2, *);

1227 
Cmd
 = 
	`nßve°r
(
cmd
, 
s
-cmd);

1228 
a
 = 
Argv
;

1229 
s
 = 
Cmd
; *s;) {

1230 *
s
 && 
	`is•a˚
(*s)) s++;

1231 i‡(*
s
)

1232 *(
a
++Ë
s
;

1233 *
s
 && !
	`is•a˚
(*s)) s++;

1234 i‡(*
s
)

1235 *
s
++ = '\0';

1237 *
a
 = 
NuŒch
;

1238 i‡(
Argv
[0]) {

1239 
	`execvp
(
Argv
[0],Argv);

1240 i‡(
î∫o
 =
ENOEXEC
) {

1241 
	`do_exec‰ì
();

1242 
doshñl
;

1245 
	`do_exec‰ì
();

1246  
FALSE
;

1247 
	}
}

1249 #ifde‡
HAS_SOCKET


1251 
	$do_sockë
(
°ab
, 
¨gœ°
)

1252 
STAB
 *
°ab
;

1253 *
¨gœ°
;

1255 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1256 
•
 = 
¨gœ°
[1];

1257 
STIO
 *
°io
;

1258 
domaö
, 
ty≥
, 
¥Ÿocﬁ
, 
fd
;

1260 i‡(!
°ab
)

1261  
FALSE
;

1263 
°io
 = 
	`°ab_io
(
°ab
);

1264 i‡(!
°io
)

1265 
°io
 = 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

1266 i‡(
°io
->
iÂ
)

1267 
	`do_˛o£
(
°ab
,
FALSE
);

1269 
domaö
 = ()
	`°r_gnum
(
°
[++
•
]);

1270 
ty≥
 = ()
	`°r_gnum
(
°
[++
•
]);

1271 
¥Ÿocﬁ
 = ()
	`°r_gnum
(
°
[++
•
]);

1272 #ifde‡
TAINT


1273 
	`èöçr›î
("Insecure dependency in socket");

1275 
fd
 = 
	`sockë
(
domaö
,
ty≥
,
¥Ÿocﬁ
);

1276 i‡(
fd
 < 0)

1277  
FALSE
;

1278 
°io
->
iÂ
 = 
	`fd›í
(
fd
, "r");

1279 
°io
->
oÂ
 = 
	`fd›í
(
fd
, "w");

1280 
°io
->
ty≥
 = 's';

1281 i‡(!
°io
->
iÂ
 || !°io->
oÂ
) {

1282 i‡(
°io
->
iÂ
Ë
	`f˛o£
(stio->ifp);

1283 i‡(
°io
->
oÂ
Ë
	`f˛o£
(stio->ofp);

1284 i‡(!
°io
->
iÂ
 && !°io->
oÂ
Ë
	`˛o£
(
fd
);

1285  
FALSE
;

1288  
TRUE
;

1289 
	}
}

1292 
	$do_böd
(
°ab
, 
¨gœ°
)

1293 
STAB
 *
°ab
;

1294 *
¨gœ°
;

1296 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1297 
•
 = 
¨gœ°
[1];

1298 
STIO
 *
°io
;

1299 *
addr
;

1301 i‡(!
°ab
)

1302 
nuts
;

1304 
°io
 = 
	`°ab_io
(
°ab
);

1305 i‡(!
°io
 || !°io->
iÂ
)

1306 
nuts
;

1308 
addr
 = 
	`°r_gë
(
°
[++
•
]);

1309 #ifde‡
TAINT


1310 
	`èöçr›î
("Insecure dependency in bind");

1312  
	`böd
(
	`fûío
(
°io
->
iÂ
), (*Ë
addr
, 
°
[
•
]->
°r_cur
) >= 0;

1314 
nuts
:

1315 i‡(
dow¨n
)

1316 
	`w¨n
("bind() on closed fd");

1317  
FALSE
;

1319 
	}
}

1322 
	$do_c⁄√˘
(
°ab
, 
¨gœ°
)

1323 
STAB
 *
°ab
;

1324 *
¨gœ°
;

1326 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1327 
•
 = 
¨gœ°
[1];

1328 
STIO
 *
°io
;

1329 *
addr
;

1331 i‡(!
°ab
)

1332 
nuts
;

1334 
°io
 = 
	`°ab_io
(
°ab
);

1335 i‡(!
°io
 || !°io->
iÂ
)

1336 
nuts
;

1338 
addr
 = 
	`°r_gë
(
°
[++
•
]);

1339 #ifde‡
TAINT


1340 
	`èöçr›î
("Insecure dependency in connect");

1342  
	`c⁄√˘
(
	`fûío
(
°io
->
iÂ
), (*Ë
addr
, 
°
[
•
]->
°r_cur
) >= 0;

1344 
nuts
:

1345 i‡(
dow¨n
)

1346 
	`w¨n
("connect() on closed fd");

1347  
FALSE
;

1349 
	}
}

1352 
	$do_li°í
(
°ab
, 
¨gœ°
)

1353 
STAB
 *
°ab
;

1354 *
¨gœ°
;

1356 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1357 
•
 = 
¨gœ°
[1];

1358 
STIO
 *
°io
;

1359 
backlog
;

1361 i‡(!
°ab
)

1362 
nuts
;

1364 
°io
 = 
	`°ab_io
(
°ab
);

1365 i‡(!
°io
 || !°io->
iÂ
)

1366 
nuts
;

1368 
backlog
 = ()
	`°r_gnum
(
°
[++
•
]);

1369  
	`li°í
(
	`fûío
(
°io
->
iÂ
), 
backlog
) >= 0;

1371 
nuts
:

1372 i‡(
dow¨n
)

1373 
	`w¨n
("listen() on closed fd");

1374  
FALSE
;

1375 
	}
}

1378 
	$do_ac˚±
(
°r
, 
n°ab
, 
g°ab
)

1379 
STR
 *
°r
;

1380 
STAB
 *
n°ab
;

1381 
STAB
 *
g°ab
;

1383 
STIO
 *
n°io
;

1384 
STIO
 *
g°io
;

1385 
Àn
 =  
buf
;

1386 
fd
;

1388 i‡(!
n°ab
)

1389 
badexô
;

1390 i‡(!
g°ab
)

1391 
nuts
;

1393 
g°io
 = 
	`°ab_io
(
g°ab
);

1394 
n°io
 = 
	`°ab_io
(
n°ab
);

1396 i‡(!
g°io
 || !g°io->
iÂ
)

1397 
nuts
;

1398 i‡(!
n°io
)

1399 
n°io
 = 
	`°ab_io
(
n°ab
Ë
	`°io_√w
();

1400 i‡(
n°io
->
iÂ
)

1401 
	`do_˛o£
(
n°ab
,
FALSE
);

1403 
fd
 = 
	`ac˚±
(
	`fûío
(
g°io
->
iÂ
),(*)
buf
,&
Àn
);

1404 i‡(
fd
 < 0)

1405 
badexô
;

1406 
n°io
->
iÂ
 = 
	`fd›í
(
fd
, "r");

1407 
n°io
->
oÂ
 = 
	`fd›í
(
fd
, "w");

1408 
n°io
->
ty≥
 = 's';

1409 i‡(!
n°io
->
iÂ
 || !n°io->
oÂ
) {

1410 i‡(
n°io
->
iÂ
Ë
	`f˛o£
(nstio->ifp);

1411 i‡(
n°io
->
oÂ
Ë
	`f˛o£
(nstio->ofp);

1412 i‡(!
n°io
->
iÂ
 && !n°io->
oÂ
Ë
	`˛o£
(
fd
);

1413 
badexô
;

1416 
	`°r_n£t
(
°r
, 
buf
, 
Àn
);

1419 
nuts
:

1420 i‡(
dow¨n
)

1421 
	`w¨n
("accept() on closed fd");

1422 
badexô
:

1423 
	`°r_s£t
(
°r
,&
°r_undef
);

1425 
	}
}

1428 
	$do_shutdown
(
°ab
, 
¨gœ°
)

1429 
STAB
 *
°ab
;

1430 *
¨gœ°
;

1432 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1433 
•
 = 
¨gœ°
[1];

1434 
STIO
 *
°io
;

1435 
how
;

1437 i‡(!
°ab
)

1438 
nuts
;

1440 
°io
 = 
	`°ab_io
(
°ab
);

1441 i‡(!
°io
 || !°io->
iÂ
)

1442 
nuts
;

1444 
how
 = ()
	`°r_gnum
(
°
[++
•
]);

1445  
	`shutdown
(
	`fûío
(
°io
->
iÂ
), 
how
) >= 0;

1447 
nuts
:

1448 i‡(
dow¨n
)

1449 
	`w¨n
("shutdown() on closed fd");

1450  
FALSE
;

1452 
	}
}

1455 
	$do_s›t
(
›ty≥
, 
°ab
, 
¨gœ°
)

1456 
›ty≥
;

1457 
STAB
 *
°ab
;

1458 *
¨gœ°
;

1460 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1461 
•
 = 
¨gœ°
[1];

1462 
STIO
 *
°io
;

1463 
fd
;

1464 
lvl
;

1465 
›äame
;

1467 i‡(!
°ab
)

1468 
nuts
;

1470 
°io
 = 
	`°ab_io
(
°ab
);

1471 i‡(!
°io
 || !°io->
iÂ
)

1472 
nuts
;

1474 
fd
 = 
	`fûío
(
°io
->
iÂ
);

1475 
lvl
 = ()
	`°r_gnum
(
°
[
•
+1]);

1476 
›äame
 = ()
	`°r_gnum
(
°
[
•
+2]);

1477 
›ty≥
) {

1478 
O_GSOCKOPT
:

1479 
°
[
•
] = 
	`°r_2m‹èl
(
	`°r_√w
(257));

1480 
°
[
•
]->
°r_cur
 = 256;

1481 
°
[
•
]->
°r_pok
 = 1;

1482 i‡(
	`gësock›t
(
fd
, 
lvl
, 
›äame
, 
°
[
•
]->
°r_±r
, &°[•]->
°r_cur
) < 0)

1483 
nuts
;

1485 
O_SSOCKOPT
:

1486 
°
[
•
] = st[sp+3];

1487 i‡(
	`£tsock›t
(
fd
, 
lvl
, 
›äame
, 
°
[
•
]->
°r_±r
, st[•]->
°r_cur
) < 0)

1488 
nuts
;

1489 
°
[
•
] = &
°r_yes
;

1493  
•
;

1495 
nuts
:

1496 i‡(
dow¨n
)

1497 
	`w¨n
("[gs]etsockopt() on closed fd");

1498 
°
[
•
] = &
°r_undef
;

1499  
•
;

1501 
	}
}

1504 
	$do_gësock«me
(
›ty≥
, 
°ab
, 
¨gœ°
)

1505 
›ty≥
;

1506 
STAB
 *
°ab
;

1507 *
¨gœ°
;

1509 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1510 
•
 = 
¨gœ°
[1];

1511 
STIO
 *
°io
;

1512 
fd
;

1514 i‡(!
°ab
)

1515 
nuts
;

1517 
°io
 = 
	`°ab_io
(
°ab
);

1518 i‡(!
°io
 || !°io->
iÂ
)

1519 
nuts
;

1521 
°
[
•
] = 
	`°r_2m‹èl
(
	`°r_√w
(257));

1522 
°
[
•
]->
°r_cur
 = 256;

1523 
°
[
•
]->
°r_pok
 = 1;

1524 
fd
 = 
	`fûío
(
°io
->
iÂ
);

1525 
›ty≥
) {

1526 
O_GETSOCKNAME
:

1527 i‡(
	`gësock«me
(
fd
, (*Ë
°
[
•
]->
°r_±r
, &°[•]->
°r_cur
) < 0)

1528 
nuts2
;

1530 
O_GETPEERNAME
:

1531 i‡(
	`gë≥î«me
(
fd
, (*Ë
°
[
•
]->
°r_±r
, &°[•]->
°r_cur
) < 0)

1532 
nuts2
;

1536  
•
;

1538 
nuts
:

1539 i‡(
dow¨n
)

1540 
	`w¨n
("get{sock,peer}name() on closed fd");

1541 
nuts2
:

1542 
°
[
•
] = &
°r_undef
;

1543  
•
;

1545 
	}
}

1548 
	$do_ghít
(
which
,
gimme
,
¨gœ°
)

1549 
which
;

1550 
gimme
;

1551 *
¨gœ°
;

1553 
ARRAY
 *
¨y
 = 
°ack
;

1554 
•
 = 
¨gœ°
[0];

1555 **
ñem
;

1556 
STR
 *
°r
;

1557 
ho°ít
 *
	`gëho°by«me
();

1558 
ho°ít
 *
	`gëho°byaddr
();

1559 #ifde‡
HAS_GETHOSTENT


1560 
ho°ít
 *
	`gëho°ít
();

1562 
ho°ít
 *
hít
;

1563 
Àn
;

1565 i‡(
gimme
 !
G_ARRAY
) {

1566 
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_undef
));

1567  
•
;

1570 i‡(
which
 =
O_GHBYNAME
) {

1571 *
«me
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+1]);

1573 
hít
 = 
	`gëho°by«me
(
«me
);

1575 i‡(
which
 =
O_GHBYADDR
) {

1576 
STR
 *
addr°r
 = 
¨y
->
¨y_¨øy
[
•
+1];

1577 
addπy≥
 = ()
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+2]);

1578 *
addr
 = 
	`°r_gë
(
addr°r
);

1580 
hít
 = 
	`gëho°byaddr
(
addr
,
addr°r
->
°r_cur
,
addπy≥
);

1583 #ifde‡
HAS_GETHOSTENT


1584 
hít
 = 
	`gëho°ít
();

1586 
	`Áèl
("gethostentÇot implemented");

1588 i‡(
hít
) {

1589 #i‚de‡
löt


1590 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1591 
	`°r_£t
(
°r
, 
hít
->
h_«me
);

1592 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1593 
ñem
 = 
hít
->
h_Æü£s
; *elem;Élem++) {

1594 
	`°r_ˇt
(
°r
, *
ñem
);

1595 i‡(
ñem
[1])

1596 
	`°r_nˇt
(
°r
," ",1);

1598 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1599 
	`°r_num£t
(
°r
, ()
hít
->
h_addπy≥
);

1600 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1601 
Àn
 = 
hít
->
h_Àngth
;

1602 
	`°r_num£t
(
°r
, ()
Àn
);

1603 #ifde‡
h_addr


1604 
ñem
 = 
hít
->
h_addr_li°
; *elem;Élem++) {

1605 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1606 
	`°r_n£t
(
°r
, *
ñem
, 
Àn
);

1609 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1610 
	`°r_n£t
(
°r
, 
hít
->
h_addr
, 
Àn
);

1613 
ñem
 = 
NuŒch
;

1614 
ñem
 =Élem;

1615 ()
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_no
));

1619  
•
;

1620 
	}
}

1623 
	$do_g√¡
(
which
,
gimme
,
¨gœ°
)

1624 
which
;

1625 
gimme
;

1626 *
¨gœ°
;

1628 
ARRAY
 *
¨y
 = 
°ack
;

1629 
•
 = 
¨gœ°
[0];

1630 **
ñem
;

1631 
STR
 *
°r
;

1632 
√ã¡
 *
	`gë√tby«me
();

1633 
√ã¡
 *
	`gë√tbyaddr
();

1634 
√ã¡
 *
	`gë√ã¡
();

1635 
√ã¡
 *
√¡
;

1637 i‡(
gimme
 !
G_ARRAY
) {

1638 
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_undef
));

1639  
•
;

1642 i‡(
which
 =
O_GNBYNAME
) {

1643 *
«me
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+1]);

1645 
√¡
 = 
	`gë√tby«me
(
«me
);

1647 i‡(
which
 =
O_GNBYADDR
) {

1648 
addr
 = 
	`U_L
(
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+1]));

1649 
addπy≥
 = ()
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+2]);

1651 
√¡
 = 
	`gë√tbyaddr
(()
addr
,
addπy≥
);

1654 
√¡
 = 
	`gë√ã¡
();

1656 i‡(
√¡
) {

1657 #i‚de‡
löt


1658 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1659 
	`°r_£t
(
°r
, 
√¡
->
n_«me
);

1660 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1661 
ñem
 = 
√¡
->
n_Æü£s
; *elem;Élem++) {

1662 
	`°r_ˇt
(
°r
, *
ñem
);

1663 i‡(
ñem
[1])

1664 
	`°r_nˇt
(
°r
," ",1);

1666 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1667 
	`°r_num£t
(
°r
, ()
√¡
->
n_addπy≥
);

1668 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1669 
	`°r_num£t
(
°r
, ()
√¡
->
n_√t
);

1671 
ñem
 = 
NuŒch
;

1672 
ñem
 =Élem;

1673 ()
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_no
));

1677  
•
;

1678 
	}
}

1681 
	$do_g≥¡
(
which
,
gimme
,
¨gœ°
)

1682 
which
;

1683 
gimme
;

1684 *
¨gœ°
;

1686 
ARRAY
 *
¨y
 = 
°ack
;

1687 
•
 = 
¨gœ°
[0];

1688 **
ñem
;

1689 
STR
 *
°r
;

1690 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
();

1691 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
();

1692 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
();

1693 
¥Ÿ€¡
 *
≥¡
;

1695 i‡(
gimme
 !
G_ARRAY
) {

1696 
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_undef
));

1697  
•
;

1700 i‡(
which
 =
O_GPBYNAME
) {

1701 *
«me
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+1]);

1703 
≥¡
 = 
	`gë¥Ÿoby«me
(
«me
);

1705 i‡(
which
 =
O_GPBYNUMBER
) {

1706 
¥Ÿo
 = ()
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+1]);

1708 
≥¡
 = 
	`gë¥Ÿobynumbî
(
¥Ÿo
);

1711 
≥¡
 = 
	`gë¥Ÿ€¡
();

1713 i‡(
≥¡
) {

1714 #i‚de‡
löt


1715 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1716 
	`°r_£t
(
°r
, 
≥¡
->
p_«me
);

1717 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1718 
ñem
 = 
≥¡
->
p_Æü£s
; *elem;Élem++) {

1719 
	`°r_ˇt
(
°r
, *
ñem
);

1720 i‡(
ñem
[1])

1721 
	`°r_nˇt
(
°r
," ",1);

1723 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1724 
	`°r_num£t
(
°r
, ()
≥¡
->
p_¥Ÿo
);

1726 
ñem
 = 
NuŒch
;

1727 
ñem
 =Élem;

1728 ()
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_no
));

1732  
•
;

1733 
	}
}

1736 
	$do_g£¡
(
which
,
gimme
,
¨gœ°
)

1737 
which
;

1738 
gimme
;

1739 *
¨gœ°
;

1741 
ARRAY
 *
¨y
 = 
°ack
;

1742 
•
 = 
¨gœ°
[0];

1743 **
ñem
;

1744 
STR
 *
°r
;

1745 
£rvít
 *
	`gë£rvby«me
();

1746 
£rvít
 *
	`gë£rvbynumbî
();

1747 
£rvít
 *
	`gë£rvít
();

1748 
£rvít
 *
£¡
;

1750 i‡(
gimme
 !
G_ARRAY
) {

1751 
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_undef
));

1752  
•
;

1755 i‡(
which
 =
O_GSBYNAME
) {

1756 *
«me
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+1]);

1757 *
¥Ÿo
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+2]);

1759 i‡(
¥Ÿo
 && !*proto)

1760 
¥Ÿo
 = 
NuŒch
;

1762 
£¡
 = 
	`gë£rvby«me
(
«me
,
¥Ÿo
);

1764 i‡(
which
 =
O_GSBYPORT
) {

1765 
p‹t
 = ()
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+1]);

1766 *
¥Ÿo
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+2]);

1768 
£¡
 = 
	`gë£rvbyp‹t
(
p‹t
,
¥Ÿo
);

1771 
£¡
 = 
	`gë£rvít
();

1772 i‡(
£¡
) {

1773 #i‚de‡
löt


1774 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1775 
	`°r_£t
(
°r
, 
£¡
->
s_«me
);

1776 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1777 
ñem
 = 
£¡
->
s_Æü£s
; *elem;Élem++) {

1778 
	`°r_ˇt
(
°r
, *
ñem
);

1779 i‡(
ñem
[1])

1780 
	`°r_nˇt
(
°r
," ",1);

1782 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1783 #ifde‡
HAS_NTOHS


1784 
	`°r_num£t
(
°r
, ()
	`¡ohs
(
£¡
->
s_p‹t
));

1786 
	`°r_num£t
(
°r
, ()(
£¡
->
s_p‹t
));

1788 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1789 
	`°r_£t
(
°r
, 
£¡
->
s_¥Ÿo
);

1791 
ñem
 = 
NuŒch
;

1792 
ñem
 =Élem;

1793 ()
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_no
));

1797  
•
;

1798 
	}
}

1802 #ifde‡
HAS_SELECT


1804 
	$do_£À˘
(
gimme
,
¨gœ°
)

1805 
gimme
;

1806 *
¨gœ°
;

1808 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1809 
•
 = 
¨gœ°
[0];

1810 
i
;

1811 
j
;

1812 *
s
;

1813 
STR
 *
°r
;

1814 
vÆue
;

1815 
maxÀn
 = 0;

1816 
nfound
;

1817 
timevÆ
 
timebuf
;

1818 
timevÆ
 *
tbuf
 = &
timebuf
;

1819 
growsize
;

1820 #i‡
BYTEORDER
 != 0x1234 && BYTEORDER != 0x12345678

1821 
masksize
;

1822 
off£t
;

1823 *
fd_£ts
[4];

1824 
k
;

1826 #i‡
BYTEORDER
 & 0xf0000

1827 
	#ORDERBYTE
 (0x88888888 - 
BYTEORDER
)

	)

1829 
	#ORDERBYTE
 (0x4444 - 
BYTEORDER
)

	)

1834 
i
 = 1; i <= 3; i++) {

1835 
j
 = 
°
[
•
+
i
]->
°r_cur
;

1836 i‡(
maxÀn
 < 
j
)

1837 
maxÀn
 = 
j
;

1840 #i‡
BYTEORDER
 == 0x1234 || BYTEORDER == 0x12345678

1841 
growsize
 = 
maxÀn
;

1843 #ifde‡
NFDBITS


1845 #i‚de‡
NBBY


1846 
	#NBBY
 8

	)

1849 
masksize
 = 
NFDBITS
 / 
NBBY
;

1851 
masksize
 = ();

1853 
growsize
 = 
maxÀn
 + (
masksize
 - (maxlen % masksize));

1854 
	`Zîo
(&
fd_£ts
[0], 4, *);

1857 
i
 = 1; i <= 3; i++) {

1858 
°r
 = 
°
[
•
+
i
];

1859 
j
 = 
°r
->
°r_Àn
;

1860 i‡(
j
 < 
growsize
) {

1861 i‡(
°r
->
°r_pok
) {

1862 
	`Så_Grow
(
°r
,
growsize
);

1863 
s
 = 
	`°r_gë
(
°r
Ë+ 
j
;

1864 ++
j
 <
growsize
) {

1865 *
s
++ = '\0';

1868 i‡(
°r
->
°r_±r
) {

1869 
	`Sa„‰ì
(
°r
->
°r_±r
);

1870 
°r
->
°r_±r
 = 
NuŒch
;

1873 #i‡
BYTEORDER
 != 0x1234 && BYTEORDER != 0x12345678

1874 
s
 = 
°r
->
°r_±r
;

1875 i‡(
s
) {

1876 
	`New
(403, 
fd_£ts
[
i
], 
growsize
, );

1877 
off£t
 = 0; off£à< 
growsize
; off£à+
masksize
) {

1878 
j
 = 0, 
k
=
ORDERBYTE
; j < 
masksize
; j++, (k >>= 4))

1879 
fd_£ts
[
i
][
j
+
off£t
] = 
s
[(
k
 % 
masksize
) + offset];

1884 
°r
 = 
°
[
•
+4];

1885 i‡(
°r
->
°r_nok
 || så->
°r_pok
) {

1886 
vÆue
 = 
	`°r_gnum
(
°r
);

1887 i‡(
vÆue
 < 0.0)

1888 
vÆue
 = 0.0;

1889 
timebuf
.
tv_£c
 = ()
vÆue
;

1890 
vÆue
 -()
timebuf
.
tv_£c
;

1891 
timebuf
.
tv_u£c
 = ()(
vÆue
 * 1000000.0);

1894 
tbuf
 = 
	`NuŒ
(
timevÆ
*);

1896 #i‡
BYTEORDER
 == 0x1234 || BYTEORDER == 0x12345678

1897 
nfound
 = 
	`£À˘
(

1898 
maxÀn
 * 8,

1899 
°
[
•
+1]->
°r_±r
,

1900 
°
[
•
+2]->
°r_±r
,

1901 
°
[
•
+3]->
°r_±r
,

1902 
tbuf
);

1904 
nfound
 = 
	`£À˘
(

1905 
maxÀn
 * 8,

1906 (*)
fd_£ts
[1],

1907 (*)
fd_£ts
[2],

1908 (*)
fd_£ts
[3],

1909 
tbuf
);

1910 
i
 = 1; i <= 3; i++) {

1911 i‡(
fd_£ts
[
i
]) {

1912 
°r
 = 
°
[
•
+
i
];

1913 
s
 = 
°r
->
°r_±r
;

1914 
off£t
 = 0; off£à< 
growsize
; off£à+
masksize
) {

1915 
j
 = 0, 
k
=
ORDERBYTE
; j < 
masksize
; j++, (k >>= 4))

1916 
s
[(
k
 % 
masksize
Ë+ 
off£t
] = 
fd_£ts
[
i
][
j
+offset];

1922 
°
[++
•
] = 
	`°r_m‹èl
(&
°r_no
);

1923 
	`°r_num£t
(
°
[
•
], ()
nfound
);

1924 i‡(
gimme
 =
G_ARRAY
 && 
tbuf
) {

1925 
vÆue
 = ()(
timebuf
.
tv_£c
) +

1926 ()(
timebuf
.
tv_u£c
) / 1000000.0;

1927 
°
[++
•
] = 
	`°r_m‹èl
(&
°r_no
);

1928 
	`°r_num£t
(
°
[
•
], 
vÆue
);

1930  
•
;

1931 
	}
}

1934 #ifde‡
HAS_SOCKET


1936 
	$do_•aú
(
°ab1
, 
°ab2
, 
¨gœ°
)

1937 
STAB
 *
°ab1
;

1938 
STAB
 *
°ab2
;

1939 *
¨gœ°
;

1941 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1942 
•
 = 
¨gœ°
[2];

1943 
STIO
 *
°io1
;

1944 
STIO
 *
°io2
;

1945 
domaö
, 
ty≥
, 
¥Ÿocﬁ
, 
fd
[2];

1947 i‡(!
°ab1
 || !
°ab2
)

1948  
FALSE
;

1950 
°io1
 = 
	`°ab_io
(
°ab1
);

1951 
°io2
 = 
	`°ab_io
(
°ab2
);

1952 i‡(!
°io1
)

1953 
°io1
 = 
	`°ab_io
(
°ab1
Ë
	`°io_√w
();

1954 i‡(
°io1
->
iÂ
)

1955 
	`do_˛o£
(
°ab1
,
FALSE
);

1956 i‡(!
°io2
)

1957 
°io2
 = 
	`°ab_io
(
°ab2
Ë
	`°io_√w
();

1958 i‡(
°io2
->
iÂ
)

1959 
	`do_˛o£
(
°ab2
,
FALSE
);

1961 
domaö
 = ()
	`°r_gnum
(
°
[++
•
]);

1962 
ty≥
 = ()
	`°r_gnum
(
°
[++
•
]);

1963 
¥Ÿocﬁ
 = ()
	`°r_gnum
(
°
[++
•
]);

1964 #ifde‡
TAINT


1965 
	`èöçr›î
("Insecure dependency in socketpair");

1967 #ifde‡
HAS_SOCKETPAIR


1968 i‡(
	`sockë∑ú
(
domaö
,
ty≥
,
¥Ÿocﬁ
,
fd
) < 0)

1969  
FALSE
;

1971 
	`Áèl
("Socketpair unimplemented");

1973 
°io1
->
iÂ
 = 
	`fd›í
(
fd
[0], "r");

1974 
°io1
->
oÂ
 = 
	`fd›í
(
fd
[0], "w");

1975 
°io1
->
ty≥
 = 's';

1976 
°io2
->
iÂ
 = 
	`fd›í
(
fd
[1], "r");

1977 
°io2
->
oÂ
 = 
	`fd›í
(
fd
[1], "w");

1978 
°io2
->
ty≥
 = 's';

1979 i‡(!
°io1
->
iÂ
 || !°io1->
oÂ
 || !
°io2
->ifp || !stio2->ofp) {

1980 i‡(
°io1
->
iÂ
Ë
	`f˛o£
(stio1->ifp);

1981 i‡(
°io1
->
oÂ
Ë
	`f˛o£
(stio1->ofp);

1982 i‡(!
°io1
->
iÂ
 && !°io1->
oÂ
Ë
	`˛o£
(
fd
[0]);

1983 i‡(
°io2
->
iÂ
Ë
	`f˛o£
(stio2->ifp);

1984 i‡(
°io2
->
oÂ
Ë
	`f˛o£
(stio2->ofp);

1985 i‡(!
°io2
->
iÂ
 && !°io2->
oÂ
Ë
	`˛o£
(
fd
[1]);

1986  
FALSE
;

1989  
TRUE
;

1990 
	}
}

1995 
	$do_gpwít
(
which
,
gimme
,
¨gœ°
)

1996 
which
;

1997 
gimme
;

1998 *
¨gœ°
;

2000 #ifde‡
I_PWD


2001 
ARRAY
 *
¨y
 = 
°ack
;

2002 
•
 = 
¨gœ°
[0];

2003 
STR
 *
°r
;

2004 
∑sswd
 *
	`gëpw«m
();

2005 
∑sswd
 *
	`gëpwuid
();

2006 
∑sswd
 *
	`gëpwít
();

2007 
∑sswd
 *
pwít
;

2009 i‡(
gimme
 !
G_ARRAY
) {

2010 
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_undef
));

2011  
•
;

2014 i‡(
which
 =
O_GPWNAM
) {

2015 *
«me
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+1]);

2017 
pwít
 = 
	`gëpw«m
(
«me
);

2019 i‡(
which
 =
O_GPWUID
) {

2020 
uid
 = ()
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+1]);

2022 
pwít
 = 
	`gëpwuid
(
uid
);

2025 
pwít
 = 
	`gëpwít
();

2027 i‡(
pwít
) {

2028 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2029 
	`°r_£t
(
°r
, 
pwít
->
pw_«me
);

2030 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2031 
	`°r_£t
(
°r
, 
pwít
->
pw_∑sswd
);

2032 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2033 
	`°r_num£t
(
°r
, ()
pwít
->
pw_uid
);

2034 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2035 
	`°r_num£t
(
°r
, ()
pwít
->
pw_gid
);

2036 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2037 #ifde‡
PWCHANGE


2038 
	`°r_num£t
(
°r
, ()
pwít
->
pw_ch™ge
);

2040 #ifde‡
PWQUOTA


2041 
	`°r_num£t
(
°r
, ()
pwít
->
pw_quŸa
);

2043 #ifde‡
PWAGE


2044 
	`°r_£t
(
°r
, 
pwít
->
pw_age
);

2048 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2049 #ifde‡
PWCLASS


2050 
	`°r_£t
(
°r
,
pwít
->
pw_˛ass
);

2052 #ifde‡
PWCOMMENT


2053 
	`°r_£t
(
°r
, 
pwít
->
pw_commít
);

2056 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2057 
	`°r_£t
(
°r
, 
pwít
->
pw_gecos
);

2058 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2059 
	`°r_£t
(
°r
, 
pwít
->
pw_dú
);

2060 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2061 
	`°r_£t
(
°r
, 
pwít
->
pw_shñl
);

2062 #ifde‡
PWEXPIRE


2063 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2064 
	`°r_num£t
(
°r
, ()
pwít
->
pw_expúe
);

2068  
•
;

2070 
	`Áèl
("passwordÑoutinesÇot implemented");

2072 
	}
}

2075 
	$do_ggª¡
(
which
,
gimme
,
¨gœ°
)

2076 
which
;

2077 
gimme
;

2078 *
¨gœ°
;

2080 #ifde‡
I_GRP


2081 
ARRAY
 *
¨y
 = 
°ack
;

2082 
•
 = 
¨gœ°
[0];

2083 **
ñem
;

2084 
STR
 *
°r
;

2085 
group
 *
	`gëg∫am
();

2086 
group
 *
	`gëgrgid
();

2087 
group
 *
	`gëgª¡
();

2088 
group
 *
gª¡
;

2090 i‡(
gimme
 !
G_ARRAY
) {

2091 
	`a°‹e
(
¨y
, ++
•
, 
	`°r_m‹èl
(&
°r_undef
));

2092  
•
;

2095 i‡(
which
 =
O_GGRNAM
) {

2096 *
«me
 = 
	`°r_gë
(
¨y
->
¨y_¨øy
[
•
+1]);

2098 
gª¡
 = 
	`gëg∫am
(
«me
);

2100 i‡(
which
 =
O_GGRGID
) {

2101 
gid
 = ()
	`°r_gnum
(
¨y
->
¨y_¨øy
[
•
+1]);

2103 
gª¡
 = 
	`gëgrgid
(
gid
);

2106 
gª¡
 = 
	`gëgª¡
();

2108 i‡(
gª¡
) {

2109 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2110 
	`°r_£t
(
°r
, 
gª¡
->
gr_«me
);

2111 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2112 
	`°r_£t
(
°r
, 
gª¡
->
gr_∑sswd
);

2113 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2114 
	`°r_num£t
(
°r
, ()
gª¡
->
gr_gid
);

2115 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

2116 
ñem
 = 
gª¡
->
gr_mem
; *elem;Élem++) {

2117 
	`°r_ˇt
(
°r
, *
ñem
);

2118 i‡(
ñem
[1])

2119 
	`°r_nˇt
(
°r
," ",1);

2123  
•
;

2125 
	`Áèl
("groupÑoutinesÇot implemented");

2127 
	}
}

2130 
	$do_dú›
(
›ty≥
,
°ab
,
gimme
,
¨gœ°
)

2131 
›ty≥
;

2132 
STAB
 *
°ab
;

2133 
gimme
;

2134 *
¨gœ°
;

2136 #i‡
	`deföed
(
DIRENT
Ë&& deföed(
HAS_READDIR
)

2137 
ARRAY
 *
¨y
 = 
°ack
;

2138 
STR
 **
°
 = 
¨y
->
¨y_¨øy
;

2139 
•
 = 
¨gœ°
[1];

2140 
STIO
 *
°io
;

2141 
Æ⁄g
;

2142 #i‚de‡
ãŒdú


2143 
	`ãŒdú
();

2145 
DIRENT
 *
	`ªaddú
();

2146 
DIRENT
 *
dp
;

2148 i‡(!
°ab
)

2149 
n›e
;

2150 i‡(!(
°io
 = 
	`°ab_io
(
°ab
)))

2151 
°io
 = 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

2152 i‡(!
°io
->
dúp
 && 
›ty≥
 !
O_OPENDIR
)

2153 
n›e
;

2154 
°
[
•
] = &
°r_yes
;

2155 
›ty≥
) {

2156 
O_OPENDIR
:

2157 i‡(
°io
->
dúp
)

2158 
	`˛o£dú
(
°io
->
dúp
);

2159 i‡(!(
°io
->
dúp
 = 
	`›ídú
(
	`°r_gë
(
°
[
•
+1]))))

2160 
n›e
;

2162 
O_READDIR
:

2163 i‡(
gimme
 =
G_ARRAY
) {

2164 --
•
;

2165 
dp
 = 
	`ªaddú
(
°io
->
dúp
)) {

2166 #ifde‡
DIRNAMLEN


2167 ()
	`a°‹e
(
¨y
,++
•
,

2168 
	`°r_2m‹èl
(
	`°r_make
(
dp
->
d_«me
,dp->
d_«mÀn
)));

2170 ()
	`a°‹e
(
¨y
,++
•
,

2171 
	`°r_2m‹èl
(
	`°r_make
(
dp
->
d_«me
,0)));

2176 i‡(!(
dp
 = 
	`ªaddú
(
°io
->
dúp
)))

2177 
n›e
;

2178 
°
[
•
] = 
	`°r_m‹èl
(&
°r_undef
);

2179 #ifde‡
DIRNAMLEN


2180 
	`°r_n£t
(
°
[
•
], 
dp
->
d_«me
, dp->
d_«mÀn
);

2182 
	`°r_£t
(
°
[
•
], 
dp
->
d_«me
);

2186 #i‡
MACH


2187 
O_TELLDIR
:

2188 
O_SEEKDIR
:

2189 
n›e
;

2191 
O_TELLDIR
:

2192 
°
[
•
] = 
	`°r_m‹èl
(&
°r_undef
);

2193 
	`°r_num£t
(
°
[
•
], ()
	`ãŒdú
(
°io
->
dúp
));

2195 
O_SEEKDIR
:

2196 
°
[
•
] = 
	`°r_m‹èl
(&
°r_undef
);

2197 
Æ⁄g
 = ()
	`°r_gnum
(
°
[
•
+1]);

2198 ()
	`£ekdú
(
°io
->
dúp
,
Æ⁄g
);

2201 
O_REWINDDIR
:

2202 
°
[
•
] = 
	`°r_m‹èl
(&
°r_undef
);

2203 ()
	`ªwöddú
(
°io
->
dúp
);

2205 
O_CLOSEDIR
:

2206 
°
[
•
] = 
	`°r_m‹èl
(&
°r_undef
);

2207 ()
	`˛o£dú
(
°io
->
dúp
);

2208 
°io
->
dúp
 = 0;

2211  
•
;

2213 
n›e
:

2214 
°
[
•
] = &
°r_undef
;

2215  
•
;

2218 
	`Áèl
("Unimplemented directory operation");

2220 
	}
}

2222 
	$≠∂y
(
ty≥
,
¨gœ°
)

2223 
ty≥
;

2224 *
¨gœ°
;

2226 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2227 
•
 = 
¨gœ°
[1];

2228 
ôems
 = 
¨gœ°
[2] - 
•
;

2229 
vÆ
;

2230 
vÆ2
;

2231 
tŸ
 = 0;

2232 *
s
;

2234 #ifde‡
TAINT


2235 
°
 +++
•
; 
ôems
--; st++)

2236 
èöãd
 |(*
°
)->
°r_èöãd
;

2237 
°
 = 
°ack
->
¨y_¨øy
;

2238 
•
 = 
¨gœ°
[1];

2239 
ôems
 = 
¨gœ°
[2] - 
•
;

2241 
ty≥
) {

2242 
O_CHMOD
:

2243 #ifde‡
TAINT


2244 
	`èöçr›î
("Insecure dependency in chmod");

2246 i‡(--
ôems
 > 0) {

2247 
tŸ
 = 
ôems
;

2248 
vÆ
 = ()
	`°r_gnum
(
°
[++
•
]);

2249 
ôems
--) {

2250 i‡(
	`chmod
(
	`°r_gë
(
°
[++
•
]),
vÆ
))

2251 
tŸ
--;

2255 #ifde‡
HAS_CHOWN


2256 
O_CHOWN
:

2257 #ifde‡
TAINT


2258 
	`èöçr›î
("Insecure dependency in chown");

2260 i‡(
ôems
 > 2) {

2261 
ôems
 -= 2;

2262 
tŸ
 = 
ôems
;

2263 
vÆ
 = ()
	`°r_gnum
(
°
[++
•
]);

2264 
vÆ2
 = ()
	`°r_gnum
(
°
[++
•
]);

2265 
ôems
--) {

2266 i‡(
	`chown
(
	`°r_gë
(
°
[++
•
]),
vÆ
,
vÆ2
))

2267 
tŸ
--;

2272 #ifde‡
HAS_KILL


2273 
O_KILL
:

2274 #ifde‡
TAINT


2275 
	`èöçr›î
("Insecure dependency in kill");

2277 i‡(--
ôems
 > 0) {

2278 
tŸ
 = 
ôems
;

2279 
s
 = 
	`°r_gë
(
°
[++
•
]);

2280 i‡(
	`isuµî
(*
s
)) {

2281 i‡(*
s
 == 'S' && s[1] == 'I' && s[2] == 'G')

2282 
s
 += 3;

2283 i‡(!(
vÆ
 = 
	`whichsig
(
s
)))

2284 
	`Áèl
("Uƒecognized sig«»«mê\"%s\"",
s
);

2287 
vÆ
 = ()
	`°r_gnum
(
°
[
•
]);

2288 i‡(
vÆ
 < 0) {

2289 
vÆ
 = -val;

2290 
ôems
--) {

2291 
¥oc
 = ()
	`°r_gnum
(
°
[++
•
]);

2292 #ifde‡
HAS_KILLPG


2293 i‡(
	`kûÕg
(
¥oc
,
vÆ
))

2295 i‡(
	`kûl
(-
¥oc
,
vÆ
))

2297 
tŸ
--;

2301 
ôems
--) {

2302 i‡(
	`kûl
(()(
	`°r_gnum
(
°
[++
•
])),
vÆ
))

2303 
tŸ
--;

2309 
O_UNLINK
:

2310 #ifde‡
TAINT


2311 
	`èöçr›î
("Insecure dependency in unlink");

2313 
tŸ
 = 
ôems
;

2314 
ôems
--) {

2315 
s
 = 
	`°r_gë
(
°
[++
•
]);

2316 i‡(
euid
 || 
unß„
) {

2317 i‡(
	`UNLINK
(
s
))

2318 
tŸ
--;

2321 #ifde‡
HAS_LSTAT


2322 i‡(
	`l°©
(
s
,&
°©buf
Ë< 0 || 
	`S_ISDIR
(°©buf.
°_mode
))

2324 i‡(
	`°©
(
s
,&
°©buf
Ë< 0 || 
	`S_ISDIR
(°©buf.
°_mode
))

2326 
tŸ
--;

2328 i‡(
	`UNLINK
(
s
))

2329 
tŸ
--;

2334 
O_UTIME
:

2335 #ifde‡
TAINT


2336 
	`èöçr›î
("Insecure dependency in utime");

2338 i‡(
ôems
 > 2) {

2339 #ifde‡
I_UTIME


2340 
utimbuf
 
utbuf
;

2343 
a˘ime
;

2344 
modtime
;

2345 } 
utbuf
;

2348 
	`Zîo
(&
utbuf
,  utbuf, );

2349 
utbuf
.
a˘ime
 = ()
	`°r_gnum
(
°
[++
•
]);

2350 
utbuf
.
modtime
 = ()
	`°r_gnum
(
°
[++
•
]);

2351 
ôems
 -= 2;

2352 #i‚de‡
löt


2353 
tŸ
 = 
ôems
;

2354 
ôems
--) {

2355 i‡(
	`utime
(
	`°r_gë
(
°
[++
•
]),&
utbuf
))

2356 
tŸ
--;

2361 
ôems
 = 0;

2364  
tŸ
;

2365 
	}
}

2370 
	$ˇndo
(
bô
, 
ef„˘ive
, 
°©buÂ
)

2371 
bô
;

2372 
ef„˘ive
;

2373 
°©
 *
°©buÂ
;

2375 #ifde‡
MSDOS


2394  (
bô
 & 
°©buÂ
->
°_mode
Ë? 
TRUE
 : 
FALSE
;

2397 i‡((
ef„˘ive
 ? 
euid
 : 
uid
) == 0) {

2398 i‡(
bô
 =
S_IXUSR
) {

2399 i‡(
°©buÂ
->
°_mode
 & 0111 || 
	`S_ISDIR
(statbufp->st_mode))

2400  
TRUE
;

2403  
TRUE
;

2404  
FALSE
;

2406 i‡(
°©buÂ
->
°_uid
 =(
ef„˘ive
 ? 
euid
 : 
uid
) ) {

2407 i‡(
°©buÂ
->
°_mode
 & 
bô
)

2408  
TRUE
;

2410 i‡(
	`ögroup
(()
°©buÂ
->
°_gid
,
ef„˘ive
)) {

2411 i‡(
°©buÂ
->
°_mode
 & 
bô
 >> 3)

2412  
TRUE
;

2414 i‡(
°©buÂ
->
°_mode
 & 
bô
 >> 6)

2415  
TRUE
;

2416  
FALSE
;

2418 
	}
}

2421 
	$ögroup
(
ã°gid
,
ef„˘ive
)

2422 
ã°gid
;

2423 
ef„˘ive
;

2425 i‡(
ã°gid
 =(
ef„˘ive
 ? 
egid
 : 
gid
))

2426  
TRUE
;

2427 #ifde‡
HAS_GETGROUPS


2428 #i‚de‡
NGROUPS


2429 
	#NGROUPS
 32

	)

2432 
GROUPSTYPE
 
g¨y
[
NGROUPS
];

2433 
™um
;

2435 
™um
 = 
	`gëgroups
(
NGROUPS
,
g¨y
);

2436 --
™um
 >= 0)

2437 i‡(
g¨y
[
™um
] =
ã°gid
)

2438  
TRUE
;

2441  
FALSE
;

2442 
	}
}

2444 #i‡
deföed
(
HAS_MSG
Ë|| deföed(
HAS_SEM
Ë|| deföed(
HAS_SHM
)

2447 
	$do_ùcgë
(
›ty≥
, 
¨gœ°
)

2448 
›ty≥
;

2449 *
¨gœ°
;

2451 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2452 
•
 = 
¨gœ°
[0];

2453 
key_t
 
key
;

2454 
n
, 
Êags
;

2456 
key
 = (
key_t
)
	`°r_gnum
(
°
[++
•
]);

2457 
n
 = (
›ty≥
 =
O_MSGGET
Ë? 0 : ()
	`°r_gnum
(
°
[++
•
]);

2458 
Êags
 = ()
	`°r_gnum
(
°
[++
•
]);

2459 
î∫o
 = 0;

2460 
›ty≥
)

2462 #ifde‡
HAS_MSG


2463 
O_MSGGET
:

2464  
	`msggë
(
key
, 
Êags
);

2466 #ifde‡
HAS_SEM


2467 
O_SEMGET
:

2468  
	`£mgë
(
key
, 
n
, 
Êags
);

2470 #ifde‡
HAS_SHM


2471 
O_SHMGET
:

2472  
	`shmgë
(
key
, 
n
, 
Êags
);

2474 #i‡!
	`deföed
(
HAS_MSG
Ë|| !deföed(
HAS_SEM
Ë|| !deföed(
HAS_SHM
)

2476 
	`Áèl
("%†nŸ im∂emíãd", 
›«me
[
›ty≥
]);

2480 
	}
}

2483 
	$do_ùc˘l
(
›ty≥
, 
¨gœ°
)

2484 
›ty≥
;

2485 *
¨gœ°
;

2487 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2488 
•
 = 
¨gœ°
[0];

2489 
STR
 *
a°r
;

2490 *
a
;

2491 
id
, 
n
, 
cmd
, 
öfosize
, 
gëöfo
, 
ªt
;

2493 
id
 = ()
	`°r_gnum
(
°
[++
•
]);

2494 
n
 = (
›ty≥
 =
O_SEMCTL
Ë? ()
	`°r_gnum
(
°
[++
•
]) : 0;

2495 
cmd
 = ()
	`°r_gnum
(
°
[++
•
]);

2496 
a°r
 = 
°
[++
•
];

2498 
öfosize
 = 0;

2499 
gëöfo
 = (
cmd
 =
IPC_STAT
);

2501 
›ty≥
)

2503 #ifde‡
HAS_MSG


2504 
O_MSGCTL
:

2505 i‡(
cmd
 =
IPC_STAT
 || cmd =
IPC_SET
)

2506 
öfosize
 = (
msqid_ds
);

2509 #ifde‡
HAS_SHM


2510 
O_SHMCTL
:

2511 i‡(
cmd
 =
IPC_STAT
 || cmd =
IPC_SET
)

2512 
öfosize
 = (
shmid_ds
);

2515 #ifde‡
HAS_SEM


2516 
O_SEMCTL
:

2517 i‡(
cmd
 =
IPC_STAT
 || cmd =
IPC_SET
)

2518 
öfosize
 = (
£mid_ds
);

2519 i‡(
cmd
 =
GETALL
 || cmd =
SETALL
)

2521 
£mid_ds
 
£mds
;

2522 i‡(
	`£m˘l
(
id
, 0, 
IPC_STAT
, &
£mds
) == -1)

2524 
gëöfo
 = (
cmd
 =
GETALL
);

2525 #ifde‡
_POSIX_SOURCE


2526 
ush‹t
 
	tush‹t_t
;

2527 
öfosize
 = 
£mds
.
£m_n£ms
 * (
ush‹t_t
);

2529 
öfosize
 = 
£mds
.
£m_n£ms
 * (
ush‹t
);

2534 #i‡!
	`deföed
(
HAS_MSG
Ë|| !deföed(
HAS_SEM
Ë|| !deföed(
HAS_SHM
)

2536 
	`Áèl
("%†nŸ im∂emíãd", 
›«me
[
›ty≥
]);

2540 i‡(
öfosize
)

2542 i‡(
gëöfo
)

2544 
	`STR_GROW
(
a°r
, 
öfosize
+1);

2545 
a
 = 
	`°r_gë
(
a°r
);

2549 
a
 = 
	`°r_gë
(
a°r
);

2550 i‡(
a°r
->
°r_cur
 !
öfosize
)

2552 
î∫o
 = 
EINVAL
;

2559 
i
 = ()
	`°r_gnum
(
a°r
);

2560 
a
 = (*)
i
;

2562 
î∫o
 = 0;

2563 
›ty≥
)

2565 #ifde‡
HAS_MSG


2566 
O_MSGCTL
:

2567 
ªt
 = 
	`msg˘l
(
id
, 
cmd
, 
a
);

2570 #ifde‡
HAS_SEM


2571 
O_SEMCTL
:

2572 
ªt
 = 
	`£m˘l
(
id
, 
n
, 
cmd
, 
a
);

2575 #ifde‡
HAS_SHM


2576 
O_SHMCTL
:

2577 
ªt
 = 
	`shm˘l
(
id
, 
cmd
, 
a
);

2581 i‡(
gëöfo
 && 
ªt
 >= 0) {

2582 
a°r
->
°r_cur
 = 
öfosize
;

2583 
a°r
->
°r_±r
[
öfosize
] = '\0';

2585  
ªt
;

2586 
	}
}

2589 
	$do_msg¢d
(
¨gœ°
)

2590 *
¨gœ°
;

2592 #ifde‡
HAS_MSG


2593 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2594 
•
 = 
¨gœ°
[0];

2595 
STR
 *
m°r
;

2596 *
mbuf
;

2597 
id
, 
msize
, 
Êags
;

2599 
id
 = ()
	`°r_gnum
(
°
[++
•
]);

2600 
m°r
 = 
°
[++
•
];

2601 
Êags
 = ()
	`°r_gnum
(
°
[++
•
]);

2602 
mbuf
 = 
	`°r_gë
(
m°r
);

2603 i‡((
msize
 = 
m°r
->
°r_cur
 - ()) < 0) {

2604 
î∫o
 = 
EINVAL
;

2607 
î∫o
 = 0;

2608  
	`msg¢d
(
id
, 
mbuf
, 
msize
, 
Êags
);

2610 
	`Áèl
("msgsndÇot implemented");

2612 
	}
}

2615 
	$do_msgrcv
(
¨gœ°
)

2616 *
¨gœ°
;

2618 #ifde‡
HAS_MSG


2619 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2620 
•
 = 
¨gœ°
[0];

2621 
STR
 *
m°r
;

2622 *
mbuf
;

2623 
mty≥
;

2624 
id
, 
msize
, 
Êags
, 
ªt
;

2626 
id
 = ()
	`°r_gnum
(
°
[++
•
]);

2627 
m°r
 = 
°
[++
•
];

2628 
msize
 = ()
	`°r_gnum
(
°
[++
•
]);

2629 
mty≥
 = ()
	`°r_gnum
(
°
[++
•
]);

2630 
Êags
 = ()
	`°r_gnum
(
°
[++
•
]);

2631 
mbuf
 = 
	`°r_gë
(
m°r
);

2632 i‡(
m°r
->
°r_cur
 < ()+
msize
+1) {

2633 
	`STR_GROW
(
m°r
, ()+
msize
+1);

2634 
mbuf
 = 
	`°r_gë
(
m°r
);

2636 
î∫o
 = 0;

2637 
ªt
 = 
	`msgrcv
(
id
, 
mbuf
, 
msize
, 
mty≥
, 
Êags
);

2638 i‡(
ªt
 >= 0) {

2639 
m°r
->
°r_cur
 = ()+
ªt
;

2640 
m°r
->
°r_±r
[()+
ªt
] = '\0';

2642  
ªt
;

2644 
	`Áèl
("msgrcvÇot implemented");

2646 
	}
}

2649 
	$do_£m›
(
¨gœ°
)

2650 *
¨gœ°
;

2652 #ifde‡
HAS_SEM


2653 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2654 
•
 = 
¨gœ°
[0];

2655 
STR
 *
›°r
;

2656 *
›buf
;

2657 
id
, 
›size
;

2659 
id
 = ()
	`°r_gnum
(
°
[++
•
]);

2660 
›°r
 = 
°
[++
•
];

2661 
›buf
 = 
	`°r_gë
(
›°r
);

2662 
›size
 = 
›°r
->
°r_cur
;

2663 i‡(
›size
 < (
£mbuf
)

2664 || (
›size
 % (
£mbuf
)) != 0) {

2665 
î∫o
 = 
EINVAL
;

2668 
î∫o
 = 0;

2669  
	`£m›
(
id
, 
›buf
, 
›size
/(
£mbuf
));

2671 
	`Áèl
("semopÇot implemented");

2673 
	}
}

2676 
	$do_shmio
(
›ty≥
, 
¨gœ°
)

2677 
›ty≥
;

2678 *
¨gœ°
;

2680 #ifde‡
HAS_SHM


2681 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

2682 
•
 = 
¨gœ°
[0];

2683 
STR
 *
m°r
;

2684 *
mbuf
, *
shm
;

2685 
id
, 
mpos
, 
msize
;

2686 
shmid_ds
 
shmds
;

2687 
*
	`shm©
();

2689 
id
 = ()
	`°r_gnum
(
°
[++
•
]);

2690 
m°r
 = 
°
[++
•
];

2691 
mpos
 = ()
	`°r_gnum
(
°
[++
•
]);

2692 
msize
 = ()
	`°r_gnum
(
°
[++
•
]);

2693 
î∫o
 = 0;

2694 i‡(
	`shm˘l
(
id
, 
IPC_STAT
, &
shmds
) == -1)

2696 i‡(
mpos
 < 0 || 
msize
 < 0 || mpo†+ msizê> 
shmds
.
shm_£gsz
) {

2697 
î∫o
 = 
EFAULT
;

2700 
shm
 = 
	`shm©
(
id
, (*)
NULL
, (
›ty≥
 =
O_SHMREAD
Ë? 
SHM_RDONLY
 : 0);

2701 i‡(
shm
 == (*)-1)

2703 
mbuf
 = 
	`°r_gë
(
m°r
);

2704 i‡(
›ty≥
 =
O_SHMREAD
) {

2705 i‡(
m°r
->
°r_cur
 < 
msize
) {

2706 
	`STR_GROW
(
m°r
, 
msize
+1);

2707 
mbuf
 = 
	`°r_gë
(
m°r
);

2709 
	`bc›y
(
shm
 + 
mpos
, 
mbuf
, 
msize
);

2710 
m°r
->
°r_cur
 = 
msize
;

2711 
m°r
->
°r_±r
[
msize
] = '\0';

2714 
n
;

2716 i‡((
n
 = 
m°r
->
°r_cur
Ë> 
msize
)

2717 
n
 = 
msize
;

2718 
	`bc›y
(
mbuf
, 
shm
 + 
mpos
, 
n
);

2719 i‡(
n
 < 
msize
)

2720 
	`bzîo
(
shm
 + 
mpos
 + 
n
, 
msize
 -Ç);

2722  
	`shmdt
(
shm
);

2724 
	`Áèl
("shm I/OÇot implemented");

2726 
	}
}

	@dolist.c

14 
	~"EXTERN.h
"

15 
	~"≥æ.h
"

18 #ifde‡
BUGGY_MSC


19 #¥agm®
fun˘i⁄
(
memcmp
)

23 
	$do_m©ch
(
°r
,
¨g
,
gimme
,
¨gœ°
)

24 
STR
 *
°r
;

25 
ARG
 *
¨g
;

26 
gimme
;

27 *
¨gœ°
;

29 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

30 
SPAT
 *
•©
 = 
¨g
[2].
¨g_±r
.
¨g_•©
;

31 *
t
;

32 
•
 = 
¨gœ°
[0] + 1;

33 
STR
 *
§ch°r
 = 
°
[
•
];

34 *
s
 = 
	`°r_gë
(
°
[
•
]);

35 *
°ªnd
 = 
s
 + 
°
[
•
]->
°r_cur
;

36 
STR
 *
tmp°r
;

37 *
myhöt
 = 
höt
;

39 
höt
 = 
NuŒch
;

40 i‡(!
•©
) {

41 i‡(
gimme
 =
G_ARRAY
)

42  --
•
;

43 
	`°r_£t
(
°r
,
Yes
);

44 
	`STABSET
(
°r
);

45 
°
[
•
] = 
°r
;

46  
•
;

48 i‡(!
s
)

49 
	`Áèl
("panic: do_match");

50 i‡(
•©
->
•©_Êags
 & 
SPAT_USED
) {

51 #ifde‡
DEBUGGING


52 i‡(
debug
 & 8)

53 
	`deb
("2.SPAT USED\n");

55 i‡(
gimme
 =
G_ARRAY
)

56  --
•
;

57 
	`°r_£t
(
°r
,
No
);

58 
	`STABSET
(
°r
);

59 
°
[
•
] = 
°r
;

60  
•
;

62 --
•
;

63 i‡(
•©
->
•©_ru¡ime
) {

64 
noöåp
 = "|)";

65 
•
 = 
	`evÆ
(
•©
->
•©_ru¡ime
,
G_SCALAR
,sp);

66 
°
 = 
°ack
->
¨y_¨øy
;

67 
t
 = 
	`°r_gë
(
tmp°r
 = 
°
[
•
--]);

68 
noöåp
 = "";

69 #ifde‡
DEBUGGING


70 i‡(
debug
 & 8)

71 
	`deb
("2.SPAT /%s/\n",
t
);

73 i‡(
•©
->
•©_ªgexp
) {

74 
	`ªg‰ì
(
•©
->
•©_ªgexp
);

75 
•©
->
•©_ªgexp
 = 
	`NuŒ
(
REGEXP
*);

77 
•©
->
•©_ªgexp
 = 
	`ªgcomp
(
t
,t+
tmp°r
->
°r_cur
,

78 
•©
->
•©_Êags
 & 
SPAT_FOLD
);

79 i‡(!*
•©
->
•©_ªgexp
->
¥ecomp
 && 
œ°•©
)

80 
•©
 = 
œ°•©
;

81 i‡(
•©
->
•©_Êags
 & 
SPAT_KEEP
) {

82 i‡(
•©
->
•©_ru¡ime
)

83 
	`¨g_‰ì
(
•©
->
•©_ru¡ime
);

84 
•©
->
•©_ru¡ime
 = 
NuŒ¨g
;

86 i‡(!
•©
->
•©_ªgexp
->
≈¨ís
)

87 
gimme
 = 
G_SCALAR
;

88 i‡(
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, s, 0,

89 
§ch°r
->
°r_pok
 & 
SP_STUDIED
 ? srch°∏: 
NuŒ°r
,

90 
gimme
 =
G_ARRAY
)) {

91 i‡(
•©
->
•©_ªgexp
->
subba£
)

92 
cur•©
 = 
•©
;

93 
œ°•©
 = 
•©
;

94 
gŸcha
;

97 i‡(
gimme
 =
G_ARRAY
)

98  
•
;

99 
	`°r_s£t
(
°r
,&
°r_no
);

100 
	`STABSET
(
°r
);

101 
°
[++
•
] = 
°r
;

102  
•
;

106 #ifde‡
DEBUGGING


107 i‡(
debug
 & 8) {

108 
ch
;

110 i‡(
•©
->
•©_Êags
 & 
SPAT_ONCE
)

111 
ch
 = '?';

113 
ch
 = '/';

114 
	`deb
("2.SPAT %c%s%c\n",
ch
,
•©
->
•©_ªgexp
->
¥ecomp
,ch);

117 i‡(!*
•©
->
•©_ªgexp
->
¥ecomp
 && 
œ°•©
)

118 
•©
 = 
œ°•©
;

119 
t
 = 
s
;

120 i‡(
myhöt
) {

121 i‡(
myhöt
 < 
s
 || myhöà> 
°ªnd
)

122 
	`Áèl
("panic: hint in do_match");

123 
s
 = 
myhöt
;

124 i‡(
•©
->
•©_ªgexp
->
ªgback
 >= 0) {

125 
s
 -
•©
->
•©_ªgexp
->
ªgback
;

126 i‡(
s
 < 
t
)

127 
s
 = 
t
;

130 
s
 = 
t
;

132 i‡(
•©
->
•©_sh‹t
) {

133 i‡(
•©
->
•©_Êags
 & 
SPAT_SCANFIRST
) {

134 i‡(
§ch°r
->
°r_pok
 & 
SP_STUDIED
) {

135 i‡(
s¸ómfú°
[
•©
->
•©_sh‹t
->
°r_øª
] < 0)

136 
n›e
;

137 i‡(!(
s
 = 
	`s¸ómö°r
(
§ch°r
,
•©
->
•©_sh‹t
)))

138 
n›e
;

139 i‡(
•©
->
•©_Êags
 & 
SPAT_ALL
)

140 
yup
;

142 #i‚de‡
löt


143 i‡(!(
s
 = 
	`fbmö°r
((*)s,

144 (*)
°ªnd
, 
•©
->
•©_sh‹t
)))

145 
n›e
;

147 i‡(
•©
->
•©_Êags
 & 
SPAT_ALL
)

148 
yup
;

149 i‡(
s
 && 
•©
->
•©_ªgexp
->
ªgback
 >= 0) {

150 ++
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
;

151 
s
 -
•©
->
•©_ªgexp
->
ªgback
;

152 i‡(
s
 < 
t
)

153 
s
 = 
t
;

156 
s
 = 
t
;

158 i‡(!
mu…ûöe
 && (*
•©
->
•©_sh‹t
->
°r_±r
 !*
s
 ||

159 
	`bcmp
(
•©
->
•©_sh‹t
->
°r_±r
, 
s
, s∑t->
•©_¶í
) ))

160 
n›e
;

161 i‡(--
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
 < 0) {

162 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

163 
•©
->
•©_sh‹t
 = 
NuŒ°r
;

166 i‡(!
•©
->
•©_ªgexp
->
≈¨ís
)

167 
gimme
 = 
G_SCALAR
;

168 i‡(
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, 
t
, 0,

169 
§ch°r
->
°r_pok
 & 
SP_STUDIED
 ? srch°∏: 
NuŒ°r
,

170 
gimme
 =
G_ARRAY
)) {

171 i‡(
•©
->
•©_ªgexp
->
subba£
)

172 
cur•©
 = 
•©
;

173 
œ°•©
 = 
•©
;

174 i‡(
•©
->
•©_Êags
 & 
SPAT_ONCE
)

175 
•©
->
•©_Êags
 |
SPAT_USED
;

176 
gŸcha
;

179 i‡(
gimme
 =
G_ARRAY
)

180  
•
;

181 
	`°r_s£t
(
°r
,&
°r_no
);

182 
	`STABSET
(
°r
);

183 
°
[++
•
] = 
°r
;

184  
•
;

189 
gŸcha
:

190 i‡(
gimme
 =
G_ARRAY
) {

191 
ôîs
, 
i
, 
Àn
;

193 
ôîs
 = 
•©
->
•©_ªgexp
->
≈¨ís
;

194 i‡(
•
 + 
ôîs
 >
°ack
->
¨y_max
) {

195 
	`a°‹e
(
°ack
,
•
 + 
ôîs
, 
NuŒ°r
);

196 
°
 = 
°ack
->
¨y_¨øy
;

199 
i
 = 1; i <
ôîs
; i++) {

200 
°
[++
•
] = 
	`°r_m‹èl
(&
°r_no
);

201 i‡(
s
 = 
•©
->
•©_ªgexp
->
°¨ç
[
i
]) {

202 
Àn
 = 
•©
->
•©_ªgexp
->
ídp
[
i
] - 
s
;

203 i‡(
Àn
 > 0)

204 
	`°r_n£t
(
°
[
•
],
s
,
Àn
);

207  
•
;

210 
	`°r_s£t
(
°r
,&
°r_yes
);

211 
	`STABSET
(
°r
);

212 
°
[++
•
] = 
°r
;

213  
•
;

216 
yup
:

217 ++
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
;

218 
œ°•©
 = 
•©
;

219 i‡(
•©
->
•©_Êags
 & 
SPAT_ONCE
)

220 
•©
->
•©_Êags
 |
SPAT_USED
;

221 i‡(
ßwam≥rßnd
) {

222 *
tmps
;

224 i‡(
•©
->
•©_ªgexp
->
subba£
)

225 
	`Sa„‰ì
(
•©
->
•©_ªgexp
->
subba£
);

226 
tmps
 = 
•©
->
•©_ªgexp
->
subba£
 = 
	`nßve°r
(
t
,
°ªnd
-t);

227 
•©
->
•©_ªgexp
->
subíd
 = 
tmps
 + (
°ªnd
-
t
);

228 
tmps
 = 
•©
->
•©_ªgexp
->
°¨ç
[0] =Åmp†+ (
s
 - 
t
);

229 
•©
->
•©_ªgexp
->
ídp
[0] = 
tmps
 + s∑t->
•©_sh‹t
->
°r_cur
;

230 
cur•©
 = 
•©
;

232 
	`°r_s£t
(
°r
,&
°r_yes
);

233 
	`STABSET
(
°r
);

234 
°
[++
•
] = 
°r
;

235  
•
;

237 
n›e
:

238 ++
•©
->
•©_sh‹t
->
°r_u
.
°r_u£ful
;

239 i‡(
gimme
 =
G_ARRAY
)

240  
•
;

241 
	`°r_s£t
(
°r
,&
°r_no
);

242 
	`STABSET
(
°r
);

243 
°
[++
•
] = 
°r
;

244  
•
;

245 
	}
}

247 #ifde‡
BUGGY_MSC


248 #¥agm®
öåösic
(
memcmp
)

252 
	$do_•lô
(
°r
,
•©
,
limô
,
gimme
,
¨gœ°
)

253 
STR
 *
°r
;

254 
SPAT
 *
•©
;

255 
limô
;

256 
gimme
;

257 *
¨gœ°
;

259 
ARRAY
 *
¨y
 = 
°ack
;

260 
STR
 **
°
 = 
¨y
->
¨y_¨øy
;

261 
•
 = 
¨gœ°
[0] + 1;

262 *
s
 = 
	`°r_gë
(
°
[
•
]);

263 *
°ªnd
 = 
s
 + 
°
[
•
--]->
°r_cur
;

264 
STR
 *
d°r
;

265 *
m
;

266 
ôîs
 = 0;

267 
maxôîs
 = (
°ªnd
 - 
s
) + 10;

268 
i
;

269 *
‹ig
;

270 
‹iglimô
 = 
limô
;

271 
ªÆ¨øy
 = 0;

273 i‡(!
•©
 || !
s
)

274 
	`Áèl
("panic: do_split");

275 i‡(
•©
->
•©_ru¡ime
) {

276 
noöåp
 = "|)";

277 
•
 = 
	`evÆ
(
•©
->
•©_ru¡ime
,
G_SCALAR
,sp);

278 
°
 = 
°ack
->
¨y_¨øy
;

279 
m
 = 
	`°r_gë
(
d°r
 = 
°
[
•
--]);

280 
noöåp
 = "";

281 i‡(*
m
 =' ' && 
d°r
->
°r_cur
 == 1) {

282 
	`°r_£t
(
d°r
,"\\s+");

283 
m
 = 
d°r
->
°r_±r
;

284 
•©
->
•©_Êags
 |
SPAT_SKIPWHITE
;

286 i‡(
•©
->
•©_ªgexp
) {

287 
	`ªg‰ì
(
•©
->
•©_ªgexp
);

288 
•©
->
•©_ªgexp
 = 
	`NuŒ
(
REGEXP
*);

290 
•©
->
•©_ªgexp
 = 
	`ªgcomp
(
m
,m+
d°r
->
°r_cur
,

291 
•©
->
•©_Êags
 & 
SPAT_FOLD
);

292 i‡(
•©
->
•©_Êags
 & 
SPAT_KEEP
 ||

293 (
•©
->
•©_ru¡ime
->
¨g_ty≥
 =
O_ITEM
 &&

294 (
•©
->
•©_ru¡ime
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
) ) {

295 
	`¨g_‰ì
(
•©
->
•©_ru¡ime
);

296 
•©
->
•©_ru¡ime
 = 
NuŒ¨g
;

299 #ifde‡
DEBUGGING


300 i‡(
debug
 & 8) {

301 
	`deb
("2.SPAT /%s/\n",
•©
->
•©_ªgexp
->
¥ecomp
);

304 
¨y
 = 
	`°ab_x¨øy
(
•©
->
•©_ª∂
[1].
¨g_±r
.
¨g_°ab
);

305 i‡(
¨y
 && (
gimme
 !
G_ARRAY
 || (
•©
->
•©_Êags
 & 
SPAT_ONCE
))) {

306 
ªÆ¨øy
 = 1;

307 i‡(!(
¨y
->
¨y_Êags
 & 
ARF_REAL
)) {

308 
¨y
->
¨y_Êags
 |
ARF_REAL
;

309 
i
 = 
¨y
->
¨y_fûl
; i >= 0; i--)

310 
¨y
->
¨y_¨øy
[
i
] = 
NuŒ°r
;

312 
¨y
->
¨y_fûl
 = -1;

313 
•
 = -1;

316 
¨y
 = 
°ack
;

317 
‹ig
 = 
s
;

318 i‡(
•©
->
•©_Êags
 & 
SPAT_SKIPWHITE
) {

319 
	`ißscii
(*
s
Ë&& 
	`is•a˚
(*s))

320 
s
++;

322 i‡(!
limô
)

323 
limô
 = 
maxôîs
 + 2;

324 i‡(
	`°rEQ
("\\s+",
•©
->
•©_ªgexp
->
¥ecomp
)) {

325 --
limô
) {

326 
m
 = 
s
; m < 
°ªnd
 && !(
	`ißscii
(*m)&&
	`is•a˚
(*m)); m++) ;

327 i‡(
m
 >
°ªnd
)

329 
d°r
 = 
	`Så_√w
(30,
m
-
s
);

330 
	`°r_n£t
(
d°r
,
s
,
m
-s);

331 i‡(!
ªÆ¨øy
)

332 
	`°r_2m‹èl
(
d°r
);

333 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

334 
s
 = 
m
 + 1; s < 
°ªnd
 && 
	`ißscii
(*sË&& 
	`is•a˚
(*s); s++) ;

337 i‡(
	`°rEQ
("^",
•©
->
•©_ªgexp
->
¥ecomp
)) {

338 --
limô
) {

339 
m
 = 
s
; m < 
°ªnd
 && *m != '\n'; m++) ;

340 
m
++;

341 i‡(
m
 >
°ªnd
)

343 
d°r
 = 
	`Så_√w
(30,
m
-
s
);

344 
	`°r_n£t
(
d°r
,
s
,
m
-s);

345 i‡(!
ªÆ¨øy
)

346 
	`°r_2m‹èl
(
d°r
);

347 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

348 
s
 = 
m
;

351 i‡(
•©
->
•©_sh‹t
) {

352 
i
 = 
•©
->
•©_sh‹t
->
°r_cur
;

353 i‡(
i
 == 1) {

354 
fﬁd
 = (
•©
->
•©_Êags
 & 
SPAT_FOLD
);

356 
i
 = *
•©
->
•©_sh‹t
->
°r_±r
;

357 i‡(
fﬁd
 && 
	`isuµî
(
i
))

358 
i
 = 
	`tﬁowî
(i);

359 --
limô
) {

360 i‡(
fﬁd
) {

361  
m
 = 
s
;

362 
m
 < 
°ªnd
 && *m !
i
 &&

363 (!
	`isuµî
(*
m
Ë|| 
	`tﬁowî
(*mË!
i
);

364 
m
++)

368 
m
 = 
s
; m < 
°ªnd
 && *m !
i
; m++) ;

369 i‡(
m
 >
°ªnd
)

371 
d°r
 = 
	`Så_√w
(30,
m
-
s
);

372 
	`°r_n£t
(
d°r
,
s
,
m
-s);

373 i‡(!
ªÆ¨øy
)

374 
	`°r_2m‹èl
(
d°r
);

375 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

376 
s
 = 
m
 + 1;

380 #i‚de‡
löt


381 
s
 < 
°ªnd
 && --
limô
 &&

382 (
m
=
	`fbmö°r
((*)
s
, (*)
°ªnd
,

383 
•©
->
•©_sh‹t
)) )

386 
d°r
 = 
	`Så_√w
(31,
m
-
s
);

387 
	`°r_n£t
(
d°r
,
s
,
m
-s);

388 i‡(!
ªÆ¨øy
)

389 
	`°r_2m‹èl
(
d°r
);

390 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

391 
s
 = 
m
 + 
i
;

396 
maxôîs
 +(
°ªnd
 - 
s
Ë* 
•©
->
•©_ªgexp
->
≈¨ís
;

397 
s
 < 
°ªnd
 && --
limô
 &&

398 
	`ªgexec
(
•©
->
•©_ªgexp
, 
s
, 
°ªnd
, 
‹ig
, 1, 
NuŒ°r
, 
TRUE
) ) {

399 i‡(
•©
->
•©_ªgexp
->
subba£


400 && 
•©
->
•©_ªgexp
->
subba£
 !
‹ig
) {

401 
m
 = 
s
;

402 
s
 = 
‹ig
;

403 
‹ig
 = 
•©
->
•©_ªgexp
->
subba£
;

404 
s
 = 
‹ig
 + (
m
 - s);

405 
°ªnd
 = 
s
 + (°ªnd - 
m
);

407 
m
 = 
•©
->
•©_ªgexp
->
°¨ç
[0];

408 
d°r
 = 
	`Så_√w
(32,
m
-
s
);

409 
	`°r_n£t
(
d°r
,
s
,
m
-s);

410 i‡(!
ªÆ¨øy
)

411 
	`°r_2m‹èl
(
d°r
);

412 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

413 i‡(
•©
->
•©_ªgexp
->
≈¨ís
) {

414 
i
 = 1; i <
•©
->
•©_ªgexp
->
≈¨ís
; i++) {

415 
s
 = 
•©
->
•©_ªgexp
->
°¨ç
[
i
];

416 
m
 = 
•©
->
•©_ªgexp
->
ídp
[
i
];

417 
d°r
 = 
	`Så_√w
(33,
m
-
s
);

418 
	`°r_n£t
(
d°r
,
s
,
m
-s);

419 i‡(!
ªÆ¨øy
)

420 
	`°r_2m‹èl
(
d°r
);

421 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

424 
s
 = 
•©
->
•©_ªgexp
->
ídp
[0];

427 i‡(
ªÆ¨øy
)

428 
ôîs
 = 
•
 + 1;

430 
ôîs
 = 
•
 - 
¨gœ°
[0];

431 i‡(
ôîs
 > 
maxôîs
)

432 
	`Áèl
("SplitÜoop");

433 i‡(
s
 < 
°ªnd
 || 
‹iglimô
) {

434 
d°r
 = 
	`Så_√w
(34,
°ªnd
-
s
);

435 
	`°r_n£t
(
d°r
,
s
,
°ªnd
-s);

436 i‡(!
ªÆ¨øy
)

437 
	`°r_2m‹èl
(
d°r
);

438 ()
	`a°‹e
(
¨y
, ++
•
, 
d°r
);

439 
ôîs
++;

442 #i‚de‡
I286x


443 
ôîs
 > 0 && 
¨y
->
¨y_¨øy
[
•
]->
°r_cur
 == 0)

444 
ôîs
--,
•
--;

446 *
z≠s
;

447 
z≠b
;

449 i‡(
ôîs
 > 0) {

450 
z≠s
 = 
	`°r_gë
(
	`a„tch
(
¨y
,
•
,
FALSE
));

451 
z≠b
 = (Ë*
z≠s
;

454 
ôîs
 > 0 && (!
z≠b
)) {

455 
ôîs
--,
•
--;

456 i‡(
ôîs
 > 0) {

457 
z≠s
 = 
	`°r_gë
(
	`a„tch
(
¨y
,
ôîs
-1,
FALSE
));

458 
z≠b
 = (Ë*
z≠s
;

463 i‡(
ªÆ¨øy
) {

464 
¨y
->
¨y_fûl
 = 
•
;

465 i‡(
gimme
 =
G_ARRAY
) {

466 
•
++;

467 
	`a°‹e
(
°ack
, 
¨gœ°
[0] + 1 + 
•
, 
NuŒ°r
);

468 
	`C›y
(
¨y
->
¨y_¨øy
, 
°ack
->¨y_¨øy + 
¨gœ°
[0] + 1, 
•
, 
STR
*);

469  
¨gœ°
[0] + 
•
;

473 i‡(
gimme
 =
G_ARRAY
)

474  
•
;

476 
•
 = 
¨gœ°
[0] + 1;

477 
	`°r_num£t
(
°r
,()
ôîs
);

478 
	`STABSET
(
°r
);

479 
°
[
•
] = 
°r
;

480  
•
;

481 
	}
}

484 
	$do_u≈ack
(
°r
,
gimme
,
¨gœ°
)

485 
STR
 *
°r
;

486 
gimme
;

487 *
¨gœ°
;

489 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

490 
•
 = 
¨gœ°
[0] + 1;

491 *
∑t
 = 
	`°r_gë
(
°
[
•
++]);

492 *
s
 = 
	`°r_gë
(
°
[
•
]);

493 *
°ªnd
 = 
s
 + 
°
[
•
--]->
°r_cur
;

494 *
°rbeg
 = 
s
;

495 *
∑ãnd
 = 
∑t
 + 
°
[
•
]->
°r_cur
;

496 
d©umty≥
;

497 
Àn
;

498 
bôs
;

501 
ash‹t
;

502 
aöt
;

503 
Æ⁄g
;

504 
aush‹t
;

505 
auöt
;

506 
aul⁄g
;

507 *
≠å
;

508 
aÊﬂt
;

509 
adoubÀ
;

510 
checksum
 = 0;

511 
cul⁄g
;

512 
cdoubÀ
;

514 i‡(
gimme
 !
G_ARRAY
) {

515 
∑ãnd
 = 
∑t
; !
	`ißÕha
(*patend);Öatend++);

516 i‡(
	`ödex
("aAbBhH", *
∑ãnd
Ë|| *
∑t
 == '%') {

517 
∑ãnd
++;

518 
	`isdigô
(*
∑ãnd
) || *patend == '*')

519 
∑ãnd
++;

522 
∑ãnd
++;

524 
•
--;

525 
∑t
 < 
∑ãnd
) {

526 
ª∑r£
:

527 
d©umty≥
 = *
∑t
++;

528 i‡(
∑t
 >
∑ãnd
)

529 
Àn
 = 1;

530 i‡(*
∑t
 == '*') {

531 
Àn
 = 
°ªnd
 - 
°rbeg
;

532 
∑t
++;

534 i‡(
	`isdigô
(*
∑t
)) {

535 
Àn
 = *
∑t
++ - '0';

536 
	`isdigô
(*
∑t
))

537 
Àn
 = (À¿* 10Ë+ (*
∑t
++ - '0');

540 
Àn
 = (
d©umty≥
 != '@');

541 
d©umty≥
) {

545 i‡(
Àn
 =1 && 
∑t
[-1] != '1')

546 
Àn
 = 16;

547 
checksum
 = 
Àn
;

548 
cul⁄g
 = 0;

549 
cdoubÀ
 = 0;

550 i‡(
∑t
 < 
∑ãnd
)

551 
ª∑r£
;

554 i‡(
Àn
 > 
°ªnd
 - 
s
)

555 
	`Áèl
("@ outside of string");

556 
s
 = 
°rbeg
 + 
Àn
;

559 i‡(
Àn
 > 
s
 - 
°rbeg
)

560 
	`Áèl
("X outside of string");

561 
s
 -
Àn
;

564 i‡(
Àn
 > 
°ªnd
 - 
s
)

565 
	`Áèl
("x outside of string");

566 
s
 +
Àn
;

570 i‡(
Àn
 > 
°ªnd
 - 
s
)

571 
Àn
 = 
°ªnd
 - 
s
;

572 i‡(
checksum
)

573 
uch¨_checksum
;

574 
°r
 = 
	`Så_√w
(35,
Àn
);

575 
	`°r_n£t
(
°r
,
s
,
Àn
);

576 
s
 +
Àn
;

577 i‡(
d©umty≥
 == 'A') {

578 
≠å
 = 
s
;

579 
s
 = 
°r
->
°r_±r
 + 
Àn
 - 1;

580 
s
 >
°r
->
°r_±r
 && (!*†|| (
	`ißscii
(*s)&&
	`is•a˚
(*s))))

581 
s
--;

582 *++
s
 = '\0';

583 
°r
->
°r_cur
 = 
s
 - så->
°r_±r
;

584 
s
 = 
≠å
;

586 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

590 i‡(
∑t
[-1] ='*' || 
Àn
 > (
°ªnd
 - 
s
) * 8)

591 
Àn
 = (
°ªnd
 - 
s
) * 8;

592 
°r
 = 
	`Så_√w
(35, 
Àn
 + 1);

593 
°r
->
°r_cur
 = 
Àn
;

594 
°r
->
°r_pok
 = 1;

595 
≠å
 = 
∑t
;

596 
∑t
 = 
°r
->
°r_±r
;

597 i‡(
d©umty≥
 == 'b') {

598 
aöt
 = 
Àn
;

599 
Àn
 = 0;Üí < 
aöt
;Üen++) {

600 i‡(
Àn
 & 7)

601 
bôs
 >>= 1;

603 
bôs
 = *
s
++;

604 *
∑t
++ = '0' + (
bôs
 & 1);

608 
aöt
 = 
Àn
;

609 
Àn
 = 0;Üí < 
aöt
;Üen++) {

610 i‡(
Àn
 & 7)

611 
bôs
 <<= 1;

613 
bôs
 = *
s
++;

614 *
∑t
++ = '0' + ((
bôs
 & 128) != 0);

617 *
∑t
 = '\0';

618 
∑t
 = 
≠å
;

619 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

623 i‡(
∑t
[-1] ='*' || 
Àn
 > (
°ªnd
 - 
s
) * 2)

624 
Àn
 = (
°ªnd
 - 
s
) * 2;

625 
°r
 = 
	`Så_√w
(35, 
Àn
 + 1);

626 
°r
->
°r_cur
 = 
Àn
;

627 
°r
->
°r_pok
 = 1;

628 
≠å
 = 
∑t
;

629 
∑t
 = 
°r
->
°r_±r
;

630 i‡(
d©umty≥
 == 'h') {

631 
aöt
 = 
Àn
;

632 
Àn
 = 0;Üí < 
aöt
;Üen++) {

633 i‡(
Àn
 & 1)

634 
bôs
 >>= 4;

636 
bôs
 = *
s
++;

637 *
∑t
++ = 
hexdigô
[
bôs
 & 15];

641 
aöt
 = 
Àn
;

642 
Àn
 = 0;Üí < 
aöt
;Üen++) {

643 i‡(
Àn
 & 1)

644 
bôs
 <<= 4;

646 
bôs
 = *
s
++;

647 *
∑t
++ = 
hexdigô
[(
bôs
 >> 4) & 15];

650 *
∑t
 = '\0';

651 
∑t
 = 
≠å
;

652 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

655 i‡(
Àn
 > 
°ªnd
 - 
s
)

656 
Àn
 = 
°ªnd
 - 
s
;

657 i‡(
checksum
) {

658 
Àn
-- > 0) {

659 
aöt
 = *
s
++;

660 i‡(
aöt
 >= 128)

661 
aöt
 -= 256;

662 
cul⁄g
 +
aöt
;

666 
Àn
-- > 0) {

667 
aöt
 = *
s
++;

668 i‡(
aöt
 >= 128)

669 
aöt
 -= 256;

670 
°r
 = 
	`Så_√w
(36,0);

671 
	`°r_num£t
(
°r
,()
aöt
);

672 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

677 i‡(
Àn
 > 
°ªnd
 - 
s
)

678 
Àn
 = 
°ªnd
 - 
s
;

679 i‡(
checksum
) {

680 
uch¨_checksum
:

681 
Àn
-- > 0) {

682 
auöt
 = *
s
++ & 255;

683 
cul⁄g
 +
auöt
;

687 
Àn
-- > 0) {

688 
auöt
 = *
s
++ & 255;

689 
°r
 = 
	`Så_√w
(37,0);

690 
	`°r_num£t
(
°r
,()
auöt
);

691 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

696 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

697 i‡(
Àn
 > 
Æ⁄g
)

698 
Àn
 = 
Æ⁄g
;

699 i‡(
checksum
) {

700 
Àn
-- > 0) {

701 
	`bc›y
(
s
,(*)&
ash‹t
,());

702 
s
 += ();

703 
cul⁄g
 +
ash‹t
;

707 
Àn
-- > 0) {

708 
	`bc›y
(
s
,(*)&
ash‹t
,());

709 
s
 += ();

710 
°r
 = 
	`Så_√w
(38,0);

711 
	`°r_num£t
(
°r
,()
ash‹t
);

712 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

718 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

719 i‡(
Àn
 > 
Æ⁄g
)

720 
Àn
 = 
Æ⁄g
;

721 i‡(
checksum
) {

722 
Àn
-- > 0) {

723 
	`bc›y
(
s
,(*)&
aush‹t
,());

724 
s
 += ();

725 #ifde‡
HAS_NTOHS


726 i‡(
d©umty≥
 == 'n')

727 
aush‹t
 = 
	`¡ohs
(aushort);

729 
cul⁄g
 +
aush‹t
;

733 
Àn
-- > 0) {

734 
	`bc›y
(
s
,(*)&
aush‹t
,());

735 
s
 += ();

736 
°r
 = 
	`Så_√w
(39,0);

737 #ifde‡
HAS_NTOHS


738 i‡(
d©umty≥
 == 'n')

739 
aush‹t
 = 
	`¡ohs
(aushort);

741 
	`°r_num£t
(
°r
,()
aush‹t
);

742 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

747 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

748 i‡(
Àn
 > 
Æ⁄g
)

749 
Àn
 = 
Æ⁄g
;

750 i‡(
checksum
) {

751 
Àn
-- > 0) {

752 
	`bc›y
(
s
,(*)&
aöt
,());

753 
s
 += ();

754 i‡(
checksum
 > 32)

755 
cdoubÀ
 +()
aöt
;

757 
cul⁄g
 +
aöt
;

761 
Àn
-- > 0) {

762 
	`bc›y
(
s
,(*)&
aöt
,());

763 
s
 += ();

764 
°r
 = 
	`Så_√w
(40,0);

765 
	`°r_num£t
(
°r
,()
aöt
);

766 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

771 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

772 i‡(
Àn
 > 
Æ⁄g
)

773 
Àn
 = 
Æ⁄g
;

774 i‡(
checksum
) {

775 
Àn
-- > 0) {

776 
	`bc›y
(
s
,(*)&
auöt
,());

777 
s
 += ();

778 i‡(
checksum
 > 32)

779 
cdoubÀ
 +()
auöt
;

781 
cul⁄g
 +
auöt
;

785 
Àn
-- > 0) {

786 
	`bc›y
(
s
,(*)&
auöt
,());

787 
s
 += ();

788 
°r
 = 
	`Så_√w
(41,0);

789 
	`°r_num£t
(
°r
,()
auöt
);

790 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

795 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

796 i‡(
Àn
 > 
Æ⁄g
)

797 
Àn
 = 
Æ⁄g
;

798 i‡(
checksum
) {

799 
Àn
-- > 0) {

800 
	`bc›y
(
s
,(*)&
Æ⁄g
,());

801 
s
 += ();

802 i‡(
checksum
 > 32)

803 
cdoubÀ
 +()
Æ⁄g
;

805 
cul⁄g
 +
Æ⁄g
;

809 
Àn
-- > 0) {

810 
	`bc›y
(
s
,(*)&
Æ⁄g
,());

811 
s
 += ();

812 
°r
 = 
	`Så_√w
(42,0);

813 
	`°r_num£t
(
°r
,()
Æ⁄g
);

814 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

820 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

821 i‡(
Àn
 > 
Æ⁄g
)

822 
Àn
 = 
Æ⁄g
;

823 i‡(
checksum
) {

824 
Àn
-- > 0) {

825 
	`bc›y
(
s
,(*)&
aul⁄g
,());

826 
s
 += ();

827 #ifde‡
HAS_NTOHL


828 i‡(
d©umty≥
 == 'N')

829 
aul⁄g
 = 
	`¡ohl
(aulong);

831 i‡(
checksum
 > 32)

832 
cdoubÀ
 +()
aul⁄g
;

834 
cul⁄g
 +
aul⁄g
;

838 
Àn
-- > 0) {

839 
	`bc›y
(
s
,(*)&
aul⁄g
,());

840 
s
 += ();

841 
°r
 = 
	`Så_√w
(43,0);

842 #ifde‡
HAS_NTOHL


843 i‡(
d©umty≥
 == 'N')

844 
aul⁄g
 = 
	`¡ohl
(aulong);

846 
	`°r_num£t
(
°r
,()
aul⁄g
);

847 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

852 
Æ⁄g
 = (
°ªnd
 - 
s
) / (*);

853 i‡(
Àn
 > 
Æ⁄g
)

854 
Àn
 = 
Æ⁄g
;

855 
Àn
-- > 0) {

856 i‡((*Ë> 
°ªnd
 - 
s
)

859 
	`bc›y
(
s
,(*)&
≠å
,(*));

860 
s
 += (*);

862 
°r
 = 
	`Så_√w
(44,0);

863 i‡(
≠å
)

864 
	`°r_£t
(
°r
,
≠å
);

865 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

871 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

872 i‡(
Àn
 > 
Æ⁄g
)

873 
Àn
 = 
Æ⁄g
;

874 i‡(
checksum
) {

875 
Àn
-- > 0) {

876 
	`bc›y
(
s
, (*)&
aÊﬂt
, ());

877 
s
 += ();

878 
cdoubÀ
 +
aÊﬂt
;

882 
Àn
-- > 0) {

883 
	`bc›y
(
s
, (*)&
aÊﬂt
, ());

884 
s
 += ();

885 
°r
 = 
	`Så_√w
(47, 0);

886 
	`°r_num£t
(
°r
, ()
aÊﬂt
);

887 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

893 
Æ⁄g
 = (
°ªnd
 - 
s
) / ();

894 i‡(
Àn
 > 
Æ⁄g
)

895 
Àn
 = 
Æ⁄g
;

896 i‡(
checksum
) {

897 
Àn
-- > 0) {

898 
	`bc›y
(
s
, (*)&
adoubÀ
, ());

899 
s
 += ();

900 
cdoubÀ
 +
adoubÀ
;

904 
Àn
-- > 0) {

905 
	`bc›y
(
s
, (*)&
adoubÀ
, ());

906 
s
 += ();

907 
°r
 = 
	`Så_√w
(48, 0);

908 
	`°r_num£t
(
°r
, ()
adoubÀ
);

909 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

914 
Æ⁄g
 = (
°ªnd
 - 
s
) * 3 / 4;

915 
°r
 = 
	`Så_√w
(42,
Æ⁄g
);

916 
s
 < 
°ªnd
 && *s > ' ' && *s < 'a') {

917 
a
,
b
,
c
,
d
;

918 
hunk
[4];

920 
hunk
[3] = '\0';

921 
Àn
 = (*
s
++ - ' ') & 077;

922 
Àn
 > 0) {

923 i‡(
s
 < 
°ªnd
 && *s >= ' ')

924 
a
 = (*
s
++ - ' ') & 077;

926 
a
 = 0;

927 i‡(
s
 < 
°ªnd
 && *s >= ' ')

928 
b
 = (*
s
++ - ' ') & 077;

930 
b
 = 0;

931 i‡(
s
 < 
°ªnd
 && *s >= ' ')

932 
c
 = (*
s
++ - ' ') & 077;

934 
c
 = 0;

935 i‡(
s
 < 
°ªnd
 && *s >= ' ')

936 
d
 = (*
s
++ - ' ') & 077;

938 
d
 = 0;

939 
hunk
[0] = 
a
 << 2 | 
b
 >> 4;

940 
hunk
[1] = 
b
 << 4 | 
c
 >> 2;

941 
hunk
[2] = 
c
 << 6 | 
d
;

942 
	`°r_nˇt
(
°r
,
hunk
, 
Àn
 > 3 ? 3 :Üen);

943 
Àn
 -= 3;

945 i‡(*
s
 == '\n')

946 
s
++;

947 i‡(
s
[1] == '\n')

948 
s
 += 2;

950 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

953 i‡(
checksum
) {

954 
°r
 = 
	`Så_√w
(42,0);

955 i‡(
	`ödex
("fFdD", 
d©umty≥
) ||

956 (
checksum
 > 32 && 
	`ödex
("iIlLN", 
d©umty≥
)) ) {

957 
	`modf
();

958 
åoubÀ
;

960 
adoubÀ
 = 1.0;

961 
checksum
 >= 16) {

962 
checksum
 -= 16;

963 
adoubÀ
 *= 65536.0;

965 
checksum
 >= 4) {

966 
checksum
 -= 4;

967 
adoubÀ
 *= 16.0;

969 
checksum
--)

970 
adoubÀ
 *= 2.0;

971 
Æ⁄g
 = (1 << 
checksum
) - 1;

972 
cdoubÀ
 < 0.0)

973 
cdoubÀ
 +
adoubÀ
;

974 
cdoubÀ
 = 
	`modf
(cdoubÀ / 
adoubÀ
, &
åoubÀ
) *ádouble;

975 
	`°r_num£t
(
°r
,
cdoubÀ
);

978 i‡(
checksum
 < 32) {

979 
Æ⁄g
 = (1 << 
checksum
) - 1;

980 
cul⁄g
 &()
Æ⁄g
;

982 
	`°r_num£t
(
°r
,()
cul⁄g
);

984 ()
	`a°‹e
(
°ack
, ++
•
, 
	`°r_2m‹èl
(
°r
));

985 
checksum
 = 0;

988  
•
;

989 
	}
}

992 
	$do_¶i˚
(
°ab
,
°r
,
num¨øy
,
lvÆ
,
gimme
,
¨gœ°
)

993 
STAB
 *
°ab
;

994 
STR
 *
°r
;

995 
num¨øy
;

996 
lvÆ
;

997 
gimme
;

998 *
¨gœ°
;

1000 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1001 
•
 = 
¨gœ°
[1];

1002 
max
 = 
¨gœ°
[2];

1003 *
tmps
;

1004 
Àn
;

1005 
magic
 = 0;

1006 
ARRAY
 *
¨y
;

1007 
HASH
 *
hash
;

1008 
ﬁd¨yba£
 = 
¨yba£
;

1010 i‡(
num¨øy
) {

1011 i‡(
num¨øy
 == 2) {

1012 
¨y
 = 
°ack
;

1013 
¨y
->
¨y_fûl
 = 
¨gœ°
[3];

1014 
¨yba£
 -
max
 + 1;

1015 
°
[
•
] = 
°r
;

1016 
	`°r_num£t
(
°r
,()(
•
 - 1));

1019 
¨y
 = 
	`°ab_¨øy
(
°ab
);

1022 i‡(
lvÆ
) {

1023 i‡(
°ab
 =
ív°ab
)

1024 
magic
 = 'E';

1025 i‡(
°ab
 =
sig°ab
)

1026 
magic
 = 'S';

1027 #ifde‡
SOME_DBM


1028 i‡(
	`°ab_hash
(
°ab
)->
tbl_dbm
)

1029 
magic
 = 'D';

1032 
hash
 = 
	`°ab_hash
(
°ab
);

1035 i‡(
gimme
 =
G_ARRAY
) {

1036 i‡(
num¨øy
) {

1037 
•
 < 
max
) {

1038 i‡(
°
[++
•
]) {

1039 
°
[
•
-1] = 
	`a„tch
(
¨y
,

1040 (()
	`°r_gnum
(
°
[
•
])Ë- 
¨yba£
, 
lvÆ
);

1043 
°
[
•
-1] = &
°r_undef
;

1047 
•
 < 
max
) {

1048 i‡(
°
[++
•
]) {

1049 
tmps
 = 
	`°r_gë
(
°
[
•
]);

1050 
Àn
 = 
°
[
•
]->
°r_cur
;

1051 
°
[
•
-1] = 
	`h„tch
(
hash
,
tmps
,
Àn
, 
lvÆ
);

1052 i‡(
magic
)

1053 
	`°r_magic
(
°
[
•
-1],
°ab
,
magic
,
tmps
,
Àn
);

1056 
°
[
•
-1] = &
°r_undef
;

1059 
•
--;

1062 i‡(
num¨øy
) {

1063 i‡(
°
[
max
])

1064 
°
[
•
] = 
	`a„tch
(
¨y
,

1065 (()
	`°r_gnum
(
°
[
max
])Ë- 
¨yba£
, 
lvÆ
);

1067 
°
[
•
] = &
°r_undef
;

1070 i‡(
°
[
max
]) {

1071 
tmps
 = 
	`°r_gë
(
°
[
max
]);

1072 
Àn
 = 
°
[
max
]->
°r_cur
;

1073 
°
[
•
] = 
	`h„tch
(
hash
,
tmps
,
Àn
, 
lvÆ
);

1074 i‡(
magic
)

1075 
	`°r_magic
(
°
[
•
],
°ab
,
magic
,
tmps
,
Àn
);

1078 
°
[
•
] = &
°r_undef
;

1081 
¨yba£
 = 
ﬁd¨yba£
;

1082  
•
;

1083 
	}
}

1086 
	$do_•li˚
(
¨y
,
gimme
,
¨gœ°
)

1087 
ARRAY
 *
¨y
;

1088 
gimme
;

1089 *
¨gœ°
;

1091 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1092 
•
 = 
¨gœ°
[1];

1093 
max
 = 
¨gœ°
[2] + 1;

1094 
STR
 **
§c
;

1095 
STR
 **
d°
;

1096 
i
;

1097 
off£t
;

1098 
Àngth
;

1099 
√wÀn
;

1100 
a·î
;

1101 
diff
;

1102 
STR
 **
tm∑ryvÆ
;

1104 i‡(++
•
 < 
max
) {

1105 
off£t
 = (()
	`°r_gnum
(
°
[
•
])Ë- 
¨yba£
;

1106 i‡(
off£t
 < 0)

1107 
off£t
 +
¨y
->
¨y_fûl
 + 1;

1108 i‡(++
•
 < 
max
) {

1109 
Àngth
 = ()
	`°r_gnum
(
°
[
•
++]);

1110 i‡(
Àngth
 < 0)

1111 
Àngth
 = 0;

1114 
Àngth
 = 
¨y
->
¨y_max
;

1117 
off£t
 = 0;

1118 
Àngth
 = 
¨y
->
¨y_max
;

1120 i‡(
off£t
 < 0) {

1121 
Àngth
 +
off£t
;

1122 
off£t
 = 0;

1123 i‡(
Àngth
 < 0)

1124 
Àngth
 = 0;

1126 i‡(
off£t
 > 
¨y
->
¨y_fûl
 + 1)

1127 
off£t
 = 
¨y
->
¨y_fûl
 + 1;

1128 
a·î
 = 
¨y
->
¨y_fûl
 + 1 - (
off£t
 + 
Àngth
);

1129 i‡(
a·î
 < 0) {

1130 
Àngth
 +
a·î
;

1131 
a·î
 = 0;

1132 i‡(!
¨y
->
¨y_Æloc
) {

1133 
	`afûl
(
¨y
,0);

1134 
	`afûl
(
¨y
,-1);

1140 
√wÀn
 = 
max
 - 
•
;

1141 
diff
 = 
√wÀn
 - 
Àngth
;

1143 i‡(
diff
 < 0) {

1144 i‡(
√wÀn
) {

1145 
	`New
(451, 
tm∑ryvÆ
, 
√wÀn
, 
STR
*);

1146 
	`C›y
(
°
+
•
, 
tm∑ryvÆ
, 
√wÀn
, 
STR
*);

1149 
•
 = 
¨gœ°
[0] + 1;

1150 i‡(
gimme
 =
G_ARRAY
) {

1151 i‡(
•
 + 
Àngth
 >
°ack
->
¨y_max
) {

1152 
	`a°‹e
(
°ack
,
•
 + 
Àngth
, 
NuŒ°r
);

1153 
°
 = 
°ack
->
¨y_¨øy
;

1155 
	`C›y
(
¨y
->
¨y_¨øy
+
off£t
, 
°
+
•
, 
Àngth
, 
STR
*);

1156 i‡(
¨y
->
¨y_Êags
 & 
ARF_REAL
) {

1157 
i
 = 
Àngth
, 
d°
 = 
°
+
•
; i; i--)

1158 
	`°r_2m‹èl
(*
d°
++);

1160 
•
 +
Àngth
 - 1;

1163 
°
[
•
] = 
¨y
->
¨y_¨øy
[
off£t
+
Àngth
-1];

1164 i‡(
¨y
->
¨y_Êags
 & 
ARF_REAL
)

1165 
	`°r_2m‹èl
(
°
[
•
]);

1167 
¨y
->
¨y_fûl
 +
diff
;

1171 i‡(
off£t
 < 
a·î
) {

1172 i‡(
off£t
) {

1173 
§c
 = &
¨y
->
¨y_¨øy
[
off£t
-1];

1174 
d°
 = 
§c
 - 
diff
;

1175 
i
 = 
off£t
; i > 0; i--)

1176 *
d°
-- = *
§c
--;

1178 
	`Zîo
(
¨y
->
¨y_¨øy
, -
diff
, 
STR
*);

1179 
¨y
->
¨y_¨øy
 -
diff
;

1180 
¨y
->
¨y_max
 +
diff
;

1183 i‡(
a·î
) {

1184 
§c
 = 
¨y
->
¨y_¨øy
 + 
off£t
 + 
Àngth
;

1185 
d°
 = 
§c
 + 
diff
;

1186 
	`C›y
(
§c
, 
d°
, 
a·î
, 
STR
*);

1188 
	`Zîo
(&
¨y
->
¨y_¨øy
[¨y->
¨y_fûl
+1], -
diff
, 
STR
*);

1191 i‡(
√wÀn
) {

1192 
§c
 = 
tm∑ryvÆ
, 
d°
 = 
¨y
->
¨y_¨øy
 + 
off£t
;

1193 
√wÀn
;Çewlen--) {

1194 *
d°
 = 
	`Så_√w
(46,0);

1195 
	`°r_s£t
(*
d°
++,*
§c
++);

1197 
	`Sa„‰ì
(
tm∑ryvÆ
);

1201 i‡(
Àngth
) {

1202 
	`New
(452, 
tm∑ryvÆ
, 
Àngth
, 
STR
*);

1203 
	`C›y
(
¨y
->
¨y_¨øy
+
off£t
, 
tm∑ryvÆ
, 
Àngth
, 
STR
*);

1206 i‡(
diff
 > 0) {

1210 i‡(
off£t
 < 
a·î
 && 
diff
 <
¨y
->
¨y_¨øy
 -áry->
¨y_Æloc
) {

1211 i‡(
off£t
) {

1212 
§c
 = 
¨y
->
¨y_¨øy
;

1213 
d°
 = 
§c
 - 
diff
;

1214 
	`C›y
(
§c
, 
d°
, 
off£t
, 
STR
*);

1216 
¨y
->
¨y_¨øy
 -
diff
;

1217 
¨y
->
¨y_max
 +
diff
;

1218 
¨y
->
¨y_fûl
 +
diff
;

1221 i‡(
¨y
->
¨y_fûl
 + 
diff
 >¨y->
¨y_max
)

1222 
	`a°‹e
(
¨y
,áry->
¨y_fûl
 + 
diff
, 
NuŒ°r
);

1224 
¨y
->
¨y_fûl
 +
diff
;

1225 i‡(
a·î
) {

1226 
d°
 = 
¨y
->
¨y_¨øy
 +áry->
¨y_fûl
;

1227 
§c
 = 
d°
 - 
diff
;

1228 
i
 = 
a·î
; i; i--) {

1229 i‡(*
d°
)

1230 
	`°r_‰ì
(*
d°
);

1231 *
d°
-- = *
§c
;

1232 *
§c
-- = 
NuŒ°r
;

1238 
§c
 = 
°
+
•
, 
d°
 = 
¨y
->
¨y_¨øy
 + 
off£t
; 
√wÀn
;Çewlen--) {

1239 *
d°
 = 
	`Så_√w
(46,0);

1240 
	`°r_s£t
(*
d°
++,*
§c
++);

1242 
•
 = 
¨gœ°
[0] + 1;

1243 i‡(
gimme
 =
G_ARRAY
) {

1244 i‡(
Àngth
) {

1245 
	`C›y
(
tm∑ryvÆ
, 
°
+
•
, 
Àngth
, 
STR
*);

1246 i‡(
¨y
->
¨y_Êags
 & 
ARF_REAL
) {

1247 
i
 = 
Àngth
, 
d°
 = 
°
+
•
; i; i--)

1248 
	`°r_2m‹èl
(*
d°
++);

1250 
	`Sa„‰ì
(
tm∑ryvÆ
);

1252 
•
 +
Àngth
 - 1;

1254 i‡(
Àngth
) {

1255 
°
[
•
] = 
tm∑ryvÆ
[
Àngth
-1];

1256 i‡(
¨y
->
¨y_Êags
 & 
ARF_REAL
)

1257 
	`°r_2m‹èl
(
°
[
•
]);

1258 
	`Sa„‰ì
(
tm∑ryvÆ
);

1261 
°
[
•
] = &
°r_undef
;

1263  
•
;

1264 
	}
}

1267 
	$do_gªp
(
¨g
,
°r
,
gimme
,
¨gœ°
)

1268 
ARG
 *
¨g
;

1269 
STR
 *
°r
;

1270 
gimme
;

1271 *
¨gœ°
;

1273 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1274 
d°
 = 
¨gœ°
[1];

1275 
§c
 = 
d°
 + 1;

1276 
•
 = 
¨gœ°
[2];

1277 
i
 = 
•
 - 
¨gœ°
[1];

1278 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

1279 
SPAT
 *
ﬁd•©
 = 
cur•©
;

1280 
ﬁdtmps_ba£
 = 
tmps_ba£
;

1282 
	`ßve•å
(&
	`°ab_vÆ
(
def°ab
));

1283 
tmps_ba£
 = 
tmps_max
;

1284 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë!
A_EXPR
) {

1285 
¨g
[1].
¨g_ty≥
 &
A_MASK
;

1286 
	`dehoi°
(
¨g
,1);

1287 
¨g
[1].
¨g_ty≥
 |
A_DONT
;

1289 
¨g
 =árg[1].
¨g_±r
.
¨g_¨g
;

1290 
i
-- > 0) {

1291 i‡(
°
[
§c
])

1292 
	`°ab_vÆ
(
def°ab
Ë
°
[
§c
];

1294 
	`°ab_vÆ
(
def°ab
Ë
	`°r_m‹èl
(&
°r_undef
);

1295 ()
	`evÆ
(
¨g
,
G_SCALAR
,
•
);

1296 
°
 = 
°ack
->
¨y_¨øy
;

1297 i‡(
	`°r_åue
(
°
[
•
+1]))

1298 
°
[
d°
++] = st[
§c
];

1299 
§c
++;

1300 
cur•©
 = 
ﬁd•©
;

1302 
	`ª°‹ñi°
(
ﬁdßve
);

1303 
tmps_ba£
 = 
ﬁdtmps_ba£
;

1304 i‡(
gimme
 !
G_ARRAY
) {

1305 
	`°r_num£t
(
°r
,()(
d°
 - 
¨gœ°
[1]));

1306 
	`STABSET
(
°r
);

1307 
°
[
¨gœ°
[0]+1] = 
°r
;

1308  
¨gœ°
[0]+1;

1310  
¨gœ°
[0] + (
d°
 -árglast[1]);

1311 
	}
}

1314 
	$do_ªvî£
(
¨gœ°
)

1315 *
¨gœ°
;

1317 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1318 
STR
 **
up
 = &
°
[
¨gœ°
[1]];

1319 
STR
 **
down
 = &
°
[
¨gœ°
[2]];

1320 
i
 = 
¨gœ°
[2] -árglast[1];

1322 
i
-- > 0) {

1323 *
up
++ = *
down
;

1324 i‡(
i
-- > 0)

1325 *
down
-- = *
up
;

1327 
i
 = 
¨gœ°
[2] -árglast[1];

1328 
	`C›y
(
down
+1,
up
,
i
/2,
STR
*);

1329  
¨gœ°
[2] - 1;

1330 
	}
}

1333 
	$do_§evî£
(
°r
,
¨gœ°
)

1334 
STR
 *
°r
;

1335 *
¨gœ°
;

1337 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1338 *
up
;

1339 *
down
;

1340 
tmp
;

1342 
	`°r_s£t
(
°r
,
°
[
¨gœ°
[2]]);

1343 
up
 = 
	`°r_gë
(
°r
);

1344 i‡(
°r
->
°r_cur
 > 1) {

1345 
down
 = 
°r
->
°r_±r
 + så->
°r_cur
 - 1;

1346 
down
 > 
up
) {

1347 
tmp
 = *
up
;

1348 *
up
++ = *
down
;

1349 *
down
-- = 
tmp
;

1352 
	`STABSET
(
°r
);

1353 
°
[
¨gœ°
[0]+1] = 
°r
;

1354  
¨gœ°
[0]+1;

1355 
	}
}

1357 
CMD
 *
	gs‹tcmd
;

1358 
HASH
 *
	gs‹t°ash
 = 
NuŒ
(HASH*);

1359 
STAB
 *
	gfú°°ab
 = 
NuŒ°ab
;

1360 
STAB
 *
	g£c⁄d°ab
 = 
NuŒ°ab
;

1363 
	$do_s‹t
(
°r
,
°ab
,
gimme
,
¨gœ°
)

1364 
STR
 *
°r
;

1365 
STAB
 *
°ab
;

1366 
gimme
;

1367 *
¨gœ°
;

1369 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1370 
•
 = 
¨gœ°
[1];

1371 
STR
 **
up
;

1372 
max
 = 
¨gœ°
[2] - 
•
;

1373 
i
;

1374 
	`s‹tcmp
();

1375 
	`s‹tsub
();

1376 
STR
 *
ﬁdfú°
;

1377 
STR
 *
ﬁd£c⁄d
;

1378 
ARRAY
 *
ﬁd°ack
;

1379 
ARRAY
 *
s‹t°ack
 = 
	`NuŒ
(ARRAY*);

1381 i‡(
gimme
 !
G_ARRAY
) {

1382 
	`°r_s£t
(
°r
,&
°r_undef
);

1383 
	`STABSET
(
°r
);

1384 
°
[
•
] = 
°r
;

1385  
•
;

1387 
up
 = &
°
[
•
];

1388 
°
 +
•
;

1389 
i
 = 1; i <
max
; i++) {

1390 i‡(*
up
 = 
°
[
i
]) {

1391 i‡(!(*
up
)->
°r_pok
)

1392 ()
	`°r_2±r
(*
up
);

1394 (*
up
)->
°r_pok
 &~
SP_TEMP
;

1395 
up
++;

1398 
°
 -
•
;

1399 
max
 = 
up
 - &
°
[
•
];

1400 
•
--;

1401 i‡(
max
 > 1) {

1402 i‡(
°ab
) {

1403 
ﬁdtmps_ba£
 = 
tmps_ba£
;

1405 i‡(!
	`°ab_sub
(
°ab
Ë|| !(
s‹tcmd
 = sèb_sub(°ab)->
cmd
))

1406 
	`Áèl
("Undeföed subroutöê\"%s\" i¿s‹t", 
	`°ab_«me
(
°ab
));

1407 i‡(!
s‹t°ack
) {

1408 
s‹t°ack
 = 
	`™ew
(
NuŒ°ab
);

1409 
	`a°‹e
(
s‹t°ack
, 0, 
NuŒ°r
);

1410 
	`a˛ór
(
s‹t°ack
);

1411 
s‹t°ack
->
¨y_Êags
 = 0;

1413 
ﬁd°ack
 = 
°ack
;

1414 
°ack
 = 
s‹t°ack
;

1415 
tmps_ba£
 = 
tmps_max
;

1416 i‡(
s‹t°ash
 !
	`°ab_°ash
(
°ab
)) {

1417 
fú°°ab
 = 
	`°abít
("a",
TRUE
);

1418 
£c⁄d°ab
 = 
	`°abít
("b",
TRUE
);

1419 
s‹t°ash
 = 
	`°ab_°ash
(
°ab
);

1421 
ﬁdfú°
 = 
	`°ab_vÆ
(
fú°°ab
);

1422 
ﬁd£c⁄d
 = 
	`°ab_vÆ
(
£c⁄d°ab
);

1423 #i‚de‡
löt


1424 
	`qs‹t
((*)(
°
+
•
+1),
max
,(
STR
*),
s‹tsub
);

1426 
	`qs‹t
(
NuŒch
,
max
,(
STR
*),
s‹tsub
);

1428 
	`°ab_vÆ
(
fú°°ab
Ë
ﬁdfú°
;

1429 
	`°ab_vÆ
(
£c⁄d°ab
Ë
ﬁd£c⁄d
;

1430 
tmps_ba£
 = 
ﬁdtmps_ba£
;

1431 
°ack
 = 
ﬁd°ack
;

1433 #i‚de‡
löt


1435 
	`qs‹t
((*)(
°
+
•
+1),
max
,(
STR
*),
s‹tcmp
);

1438  
•
+
max
;

1439 
	}
}

1442 
	$s‹tsub
(
°r1
,
°r2
)

1443 
STR
 **
°r1
;

1444 
STR
 **
°r2
;

1446 
	`°ab_vÆ
(
fú°°ab
Ë*
°r1
;

1447 
	`°ab_vÆ
(
£c⁄d°ab
Ë*
°r2
;

1448 
	`cmd_exec
(
s‹tcmd
,
G_SCALAR
,-1);

1449  ()
	`°r_gnum
(*
°ack
->
¨y_¨øy
);

1450 
	}
}

1452 
	$s‹tcmp
(
°Ω1
,
°Ω2
)

1453 
STR
 **
°Ω1
;

1454 
STR
 **
°Ω2
;

1456 
STR
 *
°r1
 = *
°Ω1
;

1457 
STR
 *
°r2
 = *
°Ω2
;

1458 
ªtvÆ
;

1460 i‡(
°r1
->
°r_cur
 < 
°r2
->str_cur) {

1461 i‡(
ªtvÆ
 = 
	`memcmp
(
°r1
->
°r_±r
, 
°r2
->°r_±r, så1->
°r_cur
))

1462  
ªtvÆ
;

1466 i‡(
ªtvÆ
 = 
	`memcmp
(
°r1
->
°r_±r
, 
°r2
->°r_±r, så2->
°r_cur
))

1467  
ªtvÆ
;

1468 i‡(
°r1
->
°r_cur
 =
°r2
->str_cur)

1472 
	}
}

1475 
	$do_ønge
(
gimme
,
¨gœ°
)

1476 
gimme
;

1477 *
¨gœ°
;

1479 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1480 
•
 = 
¨gœ°
[0];

1481 
i
;

1482 
ARRAY
 *
¨y
 = 
°ack
;

1483 
STR
 *
°r
;

1484 
max
;

1486 i‡(
gimme
 !
G_ARRAY
)

1487 
	`Áèl
("panic: do_range");

1489 i‡(
°
[
•
+1]->
°r_nok
 || !°[•+1]->
°r_pok
 ||

1490 (
	`looks_like_numbî
(
°
[
•
+1]Ë&& *°[•+1]->
°r_±r
 != '0') ) {

1491 
i
 = ()
	`°r_gnum
(
°
[
•
+1]);

1492 
max
 = ()
	`°r_gnum
(
°
[
•
+2]);

1493 
i
 <
max
) {

1494 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
 = 
	`°r_m‹èl
(&
°r_no
));

1495 
	`°r_num£t
(
°r
,()
i
++);

1499 
STR
 *
föÆ
 = 
	`°r_m‹èl
(
°
[
•
+2]);

1500 *
tmps
 = 
	`°r_gë
(
föÆ
);

1502 
°r
 = 
	`°r_m‹èl
(
°
[
•
+1]);

1503 !
°r
->
°r_nok
 && så->
°r_cur
 <
föÆ
->str_cur &&

1504 
	`°rNE
(
°r
->
°r_±r
,
tmps
) ) {

1505 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
);

1506 
°r
 = 
	`°r_2m‹èl
(
	`°r_smake
(str));

1507 
	`°r_öc
(
°r
);

1509 i‡(
	`°rEQ
(
°r
->
°r_±r
,
tmps
))

1510 ()
	`a°‹e
(
¨y
, ++
•
, 
°r
);

1512  
•
;

1513 
	}
}

1516 
	$do_ª≥©¨y
(
¨gœ°
)

1517 *
¨gœ°
;

1519 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1520 
•
 = 
¨gœ°
[0];

1521 
ôems
 = 
¨gœ°
[1] - 
•
;

1522 
cou¡
 = (Ë
	`°r_gnum
(
°
[
¨gœ°
[2]]);

1523 
ARRAY
 *
¨y
 = 
°ack
;

1524 
i
;

1525 
max
;

1527 
max
 = 
ôems
 * 
cou¡
;

1528 i‡(
max
 > 0 && 
•
 + max > 
°ack
->
¨y_max
) {

1529 
	`a°‹e
(
°ack
, 
•
 + 
max
, 
NuŒ°r
);

1530 
°
 = 
°ack
->
¨y_¨øy
;

1532 i‡(
cou¡
 > 1) {

1533 
i
 = 
¨gœ°
[1]; i > 
•
; i--)

1534 
°
[
i
]->
°r_pok
 &~
SP_TEMP
;

1535 
	`ª≥©˝y
((*)&
°
[
¨gœ°
[1]+1], (*)&°[
•
+1],

1536 
ôems
 * (
STR
*), 
cou¡
);

1538 
•
 +
max
;

1540  
•
;

1541 
	}
}

1544 
	$do_ˇŒî
(
¨g
,
max¨g
,
gimme
,
¨gœ°
)

1545 
ARG
 *
¨g
;

1546 
max¨g
;

1547 
gimme
;

1548 *
¨gœ°
;

1550 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1551 
•
 = 
¨gœ°
[0];

1552 
CSV
 *
csv
 = 
curcsv
;

1553 
STR
 *
°r
;

1554 
cou¡
 = 0;

1556 i‡(!
csv
)

1557 
	`Áèl
("There isÇo caller");

1558 i‡(
max¨g
)

1559 
cou¡
 = (Ë
	`°r_gnum
(
°
[
•
+1]);

1561 i‡(!
csv
)

1562  
•
;

1563 i‡(
DBsub
 && 
csv
->
curcsv
 && csv->curcsv->
sub
 =
	`°ab_sub
(DBsub))

1564 
cou¡
++;

1565 i‡(!
cou¡
--)

1567 
csv
 = csv->
curcsv
;

1569 i‡(
gimme
 !
G_ARRAY
) {

1570 
STR
 *
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

1571 
	`°r_£t
(
°r
,
csv
->
curcmd
->
c_°ash
->
tbl_«me
);

1572 
	`STABSET
(
°r
);

1573 
°
[++
•
] = 
°r
;

1574  
•
;

1577 #i‚de‡
löt


1578 ()
	`a°‹e
(
°ack
,++
•
,

1579 
	`°r_2m‹èl
(
	`°r_make
(
csv
->
curcmd
->
c_°ash
->
tbl_«me
,0)) );

1580 ()
	`a°‹e
(
°ack
,++
•
,

1581 
	`°r_2m‹èl
(
	`°r_make
(
	`°ab_vÆ
(
csv
->
curcmd
->
c_fûe°ab
)->
°r_±r
,0)) );

1582 ()
	`a°‹e
(
°ack
,++
•
,

1583 
	`°r_2m‹èl
(
	`°r_nmake
(()
csv
->
curcmd
->
c_löe
)) );

1584 i‡(!
max¨g
)

1585  
•
;

1586 
°r
 = 
	`Så_√w
(49,0);

1587 
	`°ab_fuŒ«me
(
°r
, 
csv
->
°ab
);

1588 ()
	`a°‹e
(
°ack
,++
•
, 
	`°r_2m‹èl
(
°r
));

1589 ()
	`a°‹e
(
°ack
,++
•
,

1590 
	`°r_2m‹èl
(
	`°r_nmake
(()
csv
->
haßrgs
)) );

1591 ()
	`a°‹e
(
°ack
,++
•
,

1592 
	`°r_2m‹èl
(
	`°r_nmake
(()
csv
->
w™èºay
)) );

1593 i‡(
csv
->
haßrgs
) {

1594 
ARRAY
 *
¨y
 = 
csv
->
¨g¨øy
;

1596 i‡(
db¨gs
->
¨y_max
 < 
¨y
->
¨y_fûl
)

1597 
	`a°‹e
(
db¨gs
,
¨y
->
¨y_fûl
,
NuŒ°r
);

1598 
	`C›y
(
¨y
->
¨y_¨øy
, 
db¨gs
->¨y_¨øy,áry->
¨y_fûl
+1, 
STR
*);

1599 
db¨gs
->
¨y_fûl
 = 
¨y
->ary_fill;

1602 ()
	`a°‹e
(
°ack
,++
•
,

1603 
	`°r_2m‹èl
(
	`°r_make
("",0)));

1605  
•
;

1606 
	}
}

1609 
	$do_tms
(
°r
,
gimme
,
¨gœ°
)

1610 
STR
 *
°r
;

1611 
gimme
;

1612 *
¨gœ°
;

1614 #ifde‡
MSDOS


1617 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1618 
•
 = 
¨gœ°
[0];

1620 i‡(
gimme
 !
G_ARRAY
) {

1621 
	`°r_s£t
(
°r
,&
°r_undef
);

1622 
	`STABSET
(
°r
);

1623 
°
[++
•
] = 
°r
;

1624  
•
;

1626 ()
	`times
(&
timesbuf
);

1628 #i‚de‡
HZ


1629 
	#HZ
 60

	)

1632 #i‚de‡
löt


1633 ()
	`a°‹e
(
°ack
,++
•
,

1634 
	`°r_2m‹èl
(
	`°r_nmake
((()
timesbuf
.
tms_utime
)/
HZ
)));

1635 ()
	`a°‹e
(
°ack
,++
•
,

1636 
	`°r_2m‹èl
(
	`°r_nmake
((()
timesbuf
.
tms_°ime
)/
HZ
)));

1637 ()
	`a°‹e
(
°ack
,++
•
,

1638 
	`°r_2m‹èl
(
	`°r_nmake
((()
timesbuf
.
tms_cutime
)/
HZ
)));

1639 ()
	`a°‹e
(
°ack
,++
•
,

1640 
	`°r_2m‹èl
(
	`°r_nmake
((()
timesbuf
.
tms_c°ime
)/
HZ
)));

1642 ()
	`a°‹e
(
°ack
,++
•
,

1643 
	`°r_2m‹èl
(
	`°r_nmake
(0.0)));

1645  
•
;

1647 
	}
}

1650 
	$do_time
(
°r
,
tmbuf
,
gimme
,
¨gœ°
)

1651 
STR
 *
°r
;

1652 
tm
 *
tmbuf
;

1653 
gimme
;

1654 *
¨gœ°
;

1656 
ARRAY
 *
¨y
 = 
°ack
;

1657 
STR
 **
°
 = 
¨y
->
¨y_¨øy
;

1658 
•
 = 
¨gœ°
[0];

1660 i‡(!
tmbuf
 || 
gimme
 !
G_ARRAY
) {

1661 
	`°r_s£t
(
°r
,&
°r_undef
);

1662 
	`STABSET
(
°r
);

1663 
°
[++
•
] = 
°r
;

1664  
•
;

1666 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_£c
)));

1667 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_mö
)));

1668 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_hour
)));

1669 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_mday
)));

1670 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_m⁄
)));

1671 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_yór
)));

1672 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_wday
)));

1673 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_yday
)));

1674 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_nmake
(()
tmbuf
->
tm_isd°
)));

1675  
•
;

1676 
	}
}

1679 
	$do_kv
(
°r
,
hash
,
kv
,
gimme
,
¨gœ°
)

1680 
STR
 *
°r
;

1681 
HASH
 *
hash
;

1682 
kv
;

1683 
gimme
;

1684 *
¨gœ°
;

1686 
ARRAY
 *
¨y
 = 
°ack
;

1687 
STR
 **
°
 = 
¨y
->
¨y_¨øy
;

1688 
•
 = 
¨gœ°
[0];

1689 
i
;

1690 
HENT
 *
íåy
;

1691 *
tmps
;

1692 
STR
 *
tmp°r
;

1693 
dokeys
 = (
kv
 =
O_KEYS
 || kv =
O_HASH
);

1694 
dovÆues
 = (
kv
 =
O_VALUES
 || kv =
O_HASH
);

1696 i‡(
gimme
 !
G_ARRAY
) {

1697 
	`°r_s£t
(
°r
,&
°r_undef
);

1698 
	`STABSET
(
°r
);

1699 
°
[++
•
] = 
°r
;

1700  
•
;

1702 ()
	`hôîöô
(
hash
);

1703 
íåy
 = 
	`hôî√xt
(
hash
)) {

1704 i‡(
dokeys
) {

1705 
tmps
 = 
	`hôîkey
(
íåy
,&
i
);

1706 i‡(!
i
)

1707 
tmps
 = "";

1708 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
	`°r_make
(
tmps
,
i
)));

1710 i‡(
dovÆues
) {

1711 
tmp°r
 = 
	`Så_√w
(45,0);

1712 #ifde‡
DEBUGGING


1713 i‡(
debug
 & 8192) {

1714 
	`•rötf
(
buf
,"%d%%%d=%d\n",
íåy
->
hít_hash
,

1715 
hash
->
tbl_max
+1,
íåy
->
hít_hash
 & hash->tbl_max);

1716 
	`°r_£t
(
tmp°r
,
buf
);

1720 
	`°r_s£t
(
tmp°r
,
	`hôîvÆ
(
hash
,
íåy
));

1721 ()
	`a°‹e
(
¨y
,++
•
,
	`°r_2m‹èl
(
tmp°r
));

1724  
•
;

1725 
	}
}

1728 
	$do_óch
(
°r
,
hash
,
gimme
,
¨gœ°
)

1729 
STR
 *
°r
;

1730 
HASH
 *
hash
;

1731 
gimme
;

1732 *
¨gœ°
;

1734 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

1735 
•
 = 
¨gœ°
[0];

1736 
STR
 *
my°rk
 = 
NuŒ°r
;

1737 
HENT
 *
íåy
 = 
	`hôî√xt
(
hash
);

1738 
i
;

1739 *
tmps
;

1741 i‡(
my°rk
) {

1742 
	`°r_‰ì
(
my°rk
);

1743 
my°rk
 = 
NuŒ°r
;

1746 i‡(
íåy
) {

1747 i‡(
gimme
 =
G_ARRAY
) {

1748 
tmps
 = 
	`hôîkey
(
íåy
, &
i
);

1749 i‡(!
i
)

1750 
tmps
 = "";

1751 
°
[++
•
] = 
my°rk
 = 
	`°r_make
(
tmps
,
i
);

1753 
°
[++
•
] = 
°r
;

1754 
	`°r_s£t
(
°r
,
	`hôîvÆ
(
hash
,
íåy
));

1755 
	`STABSET
(
°r
);

1756  
•
;

1759  
•
;

1760 
	}
}

	@dump.c

14 
	~"EXTERN.h
"

15 
	~"≥æ.h
"

17 #ifde‡
DEBUGGING


18 
	gdum∂vl
 = 0;

20 
	$dump_Æl
()

22 
i
;

23 
STAB
 *
°ab
;

24 
HENT
 *
íåy
;

25 
STR
 *
°r
 = 
	`°r_m‹èl
(&
°r_undef
);

27 
	`dump_cmd
(
maö_roŸ
,
NuŒcmd
);

28 
i
 = 0; i <= 127; i++) {

29 
íåy
 = 
def°ash
->
tbl_¨øy
[
i
];É¡ry;É¡ry =É¡ry->
hít_√xt
) {

30 
°ab
 = (
STAB
*)
íåy
->
hít_vÆ
;

31 i‡(
	`°ab_sub
(
°ab
)) {

32 
	`°ab_fuŒ«me
(
°r
,
°ab
);

33 
	`dump
("\nSUB %†", 
°r
->
°r_±r
);

34 
	`dump_cmd
(
	`°ab_sub
(
°ab
)->
cmd
,
NuŒcmd
);

38 
	}
}

40 
	$dump_cmd
(
cmd
,
Æt
)

41 
CMD
 *
cmd
;

42 
CMD
 *
Æt
;

44 
	`Ârötf
(
°dîr
,"{\n");

45 
cmd
) {

46 
dum∂vl
++;

47 
	`dump
("C_TYPE = %s\n",
cmd«me
[
cmd
->
c_ty≥
]);

48 
	`dump
("C_ADDR = 0x%lx\n",
cmd
);

49 
	`dump
("C_NEXT = 0x%lx\n",
cmd
->
c_√xt
);

50 i‡(
cmd
->
c_löe
)

51 
	`dump
("C_LINE = %d (0x%lx)\n",
cmd
->
c_löe
,cmd);

52 i‡(
cmd
->
c_œbñ
)

53 
	`dump
("C_LABEL = \"%s\"\n",
cmd
->
c_œbñ
);

54 
	`dump
("C_OPT = CFT_%s\n",
cmd›t
[
cmd
->
c_Êags
 & 
CF_OPTIMIZE
]);

55 *
buf
 = '\0';

56 i‡(
cmd
->
c_Êags
 & 
CF_FIRSTNEG
)

57 ()
	`°rˇt
(
buf
,"FIRSTNEG,");

58 i‡(
cmd
->
c_Êags
 & 
CF_NESURE
)

59 ()
	`°rˇt
(
buf
,"NESURE,");

60 i‡(
cmd
->
c_Êags
 & 
CF_EQSURE
)

61 ()
	`°rˇt
(
buf
,"EQSURE,");

62 i‡(
cmd
->
c_Êags
 & 
CF_COND
)

63 ()
	`°rˇt
(
buf
,"COND,");

64 i‡(
cmd
->
c_Êags
 & 
CF_LOOP
)

65 ()
	`°rˇt
(
buf
,"LOOP,");

66 i‡(
cmd
->
c_Êags
 & 
CF_INVERT
)

67 ()
	`°rˇt
(
buf
,"INVERT,");

68 i‡(
cmd
->
c_Êags
 & 
CF_ONCE
)

69 ()
	`°rˇt
(
buf
,"ONCE,");

70 i‡(
cmd
->
c_Êags
 & 
CF_FLIP
)

71 ()
	`°rˇt
(
buf
,"FLIP,");

72 i‡(
cmd
->
c_Êags
 & 
CF_TERM
)

73 ()
	`°rˇt
(
buf
,"TERM,");

74 i‡(*
buf
)

75 
buf
[
	`°æí
(buf)-1] = '\0';

76 
	`dump
("C_FLAGS = (%s)\n",
buf
);

77 i‡(
cmd
->
c_sh‹t
) {

78 
	`dump
("C_SHORT = \"%s\"\n",
	`°r_≥ek
(
cmd
->
c_sh‹t
));

79 
	`dump
("C_SLEN = \"%d\"\n",
cmd
->
c_¶í
);

81 i‡(
cmd
->
c_°ab
) {

82 
	`dump
("C_STAB = ");

83 
	`dump_°ab
(
cmd
->
c_°ab
);

85 i‡(
cmd
->
c_•©
) {

86 
	`dump
("C_SPAT = ");

87 
	`dump_•©
(
cmd
->
c_•©
);

89 i‡(
cmd
->
c_ex¥
) {

90 
	`dump
("C_EXPR = ");

91 
	`dump_¨g
(
cmd
->
c_ex¥
);

93 
	`dump
("C_EXPR = NULL\n");

94 
cmd
->
c_ty≥
) {

95 
C_NEXT
:

96 
C_WHILE
:

97 
C_BLOCK
:

98 
C_ELSE
:

99 
C_IF
:

100 i‡(
cmd
->
ucmd
.
ccmd
.
cc_åue
) {

101 
	`dump
("CC_TRUE = ");

102 
	`dump_cmd
(
cmd
->
ucmd
.
ccmd
.
cc_åue
,cmd->ucmd.ccmd.
cc_Æt
);

105 
	`dump
("CC_TRUE = NULL\n");

106 i‡(
cmd
->
c_ty≥
 =
C_IF
 && cmd->
ucmd
.
ccmd
.
cc_Æt
) {

107 
	`dump
("CC_ENDELSE = 0x%lx\n",
cmd
->
ucmd
.
ccmd
.
cc_Æt
);

109 i‡(
cmd
->
c_ty≥
 =
C_NEXT
 && cmd->
ucmd
.
ccmd
.
cc_Æt
) {

110 
	`dump
("CC_NEXT = 0x%lx\n",
cmd
->
ucmd
.
ccmd
.
cc_Æt
);

113 
	`dump
("CC_ALT = NULL\n");

115 
C_EXPR
:

116 i‡(
cmd
->
ucmd
.
acmd
.
ac_°ab
) {

117 
	`dump
("AC_STAB = ");

118 
	`dump_°ab
(
cmd
->
ucmd
.
acmd
.
ac_°ab
);

120 
	`dump
("AC_STAB = NULL\n");

121 i‡(
cmd
->
ucmd
.
acmd
.
ac_ex¥
) {

122 
	`dump
("AC_EXPR = ");

123 
	`dump_¨g
(
cmd
->
ucmd
.
acmd
.
ac_ex¥
);

125 
	`dump
("AC_EXPR = NULL\n");

127 
C_CSWITCH
:

128 
C_NSWITCH
:

130 
max
, 
i
;

132 
max
 = 
cmd
->
ucmd
.
scmd
.
sc_max
;

133 
	`dump
("SC_MIN = (%d)\n",
cmd
->
ucmd
.
scmd
.
sc_off£t
 + 1);

134 
	`dump
("SC_MAX = (%d)\n", 
max
 + 
cmd
->
ucmd
.
scmd
.
sc_off£t
 - 1);

135 
	`dump
("SC_NEXT[LT] = 0x%lx\n", 
cmd
->
ucmd
.
scmd
.
sc_√xt
[0]);

136 
i
 = 1; i < 
max
; i++)

137 
	`dump
("SC_NEXT[%d] = 0x%lx\n", 
i
 + 
cmd
->
ucmd
.
scmd
.
sc_off£t
,

138 
cmd
->
ucmd
.
scmd
.
sc_√xt
[
i
]);

139 
	`dump
("SC_NEXT[GT] = 0x%lx\n", 
cmd
->
ucmd
.
scmd
.
sc_√xt
[
max
]);

143 
cmd
 = cmd->
c_√xt
;

144 i‡(
cmd
 && cmd->
c_hód
 == cmd) {

145 
	`dump
("C_NEXT = HEAD\n");

146 
dum∂vl
--;

147 
	`dump
("}\n");

150 
dum∂vl
--;

151 
	`dump
("}\n");

152 i‡(
cmd
)

153 i‡(
cmd
 =
Æt
)

154 
	`dump
("CONT 0x%lx {\n",
cmd
);

156 
	`dump
("{\n");

158 
	}
}

160 
	$dump_¨g
(
¨g
)

161 
ARG
 *
¨g
;

163 
i
;

165 
	`Ârötf
(
°dîr
,"{\n");

166 
dum∂vl
++;

167 
	`dump
("OP_TYPE = %s\n",
›«me
[
¨g
->
¨g_ty≥
]);

168 
	`dump
("OP_LEN = %d\n",
¨g
->
¨g_Àn
);

169 i‡(
¨g
->
¨g_Êags
) {

170 
	`dump_Êags
(
buf
,
¨g
->
¨g_Êags
);

171 
	`dump
("OP_FLAGS = (%s)\n",
buf
);

173 
i
 = 1; i <
¨g
->
¨g_Àn
; i++) {

174 
	`dump
("[%d]ARG_TYPE = %s%s\n",
i
,
¨g«me
[
¨g
[i].
¨g_ty≥
 & 
A_MASK
],

175 
¨g
[
i
].
¨g_ty≥
 & 
A_DONT
 ? " (unevaluated)" : "");

176 i‡(
¨g
[
i
].
¨g_Àn
)

177 
	`dump
("[%d]ARG_LEN = %d\n",
i
,
¨g
[i].
¨g_Àn
);

178 i‡(
¨g
[
i
].
¨g_Êags
) {

179 
	`dump_Êags
(
buf
,
¨g
[
i
].
¨g_Êags
);

180 
	`dump
("[%d]ARG_FLAGS = (%s)\n",
i
,
buf
);

182 
¨g
[
i
].
¨g_ty≥
 & 
A_MASK
) {

183 
A_NULL
:

184 i‡(
¨g
->
¨g_ty≥
 =
O_TRANS
) {

185 *
tbl
 = (*)
¨g
[2].
¨g_±r
.
¨g_cvÆ
;

186 
i
;

188 
i
 = 0; i < 256; i++) {

189 i‡(
tbl
[
i
] >= 0)

190 
	`dump
(" %d -> %d\n", 
i
, 
tbl
[i]);

191 i‡(
tbl
[
i
] == -2)

192 
	`dump
(" %d -> DELETE\n", 
i
);

196 
A_LEXPR
:

197 
A_EXPR
:

198 
	`dump
("[%d]ARG_ARG = ",
i
);

199 
	`dump_¨g
(
¨g
[
i
].
¨g_±r
.
¨g_¨g
);

201 
A_CMD
:

202 
	`dump
("[%d]ARG_CMD = ",
i
);

203 
	`dump_cmd
(
¨g
[
i
].
¨g_±r
.
¨g_cmd
,
NuŒcmd
);

205 
A_WORD
:

206 
A_STAB
:

207 
A_LVAL
:

208 
A_READ
:

209 
A_GLOB
:

210 
A_ARYLEN
:

211 
A_ARYSTAB
:

212 
A_LARYSTAB
:

213 
	`dump
("[%d]ARG_STAB = ",
i
);

214 
	`dump_°ab
(
¨g
[
i
].
¨g_±r
.
¨g_°ab
);

216 
A_SINGLE
:

217 
A_DOUBLE
:

218 
A_BACKTICK
:

219 
	`dump
("[%d]ARG_STR = '%s'\n",
i
,
	`°r_≥ek
(
¨g
[i].
¨g_±r
.
¨g_°r
));

221 
A_SPAT
:

222 
	`dump
("[%d]ARG_SPAT = ",
i
);

223 
	`dump_•©
(
¨g
[
i
].
¨g_±r
.
¨g_•©
);

227 
dum∂vl
--;

228 
	`dump
("}\n");

229 
	}
}

231 
	$dump_Êags
(
b
,
Êags
)

232 *
b
;

233 
Êags
;

235 *
b
 = '\0';

236 i‡(
Êags
 & 
AF_ARYOK
)

237 ()
	`°rˇt
(
b
,"ARYOK,");

238 i‡(
Êags
 & 
AF_POST
)

239 ()
	`°rˇt
(
b
,"POST,");

240 i‡(
Êags
 & 
AF_PRE
)

241 ()
	`°rˇt
(
b
,"PRE,");

242 i‡(
Êags
 & 
AF_UP
)

243 ()
	`°rˇt
(
b
,"UP,");

244 i‡(
Êags
 & 
AF_COMMON
)

245 ()
	`°rˇt
(
b
,"COMMON,");

246 i‡(
Êags
 & 
AF_DEPR
)

247 ()
	`°rˇt
(
b
,"DEPR,");

248 i‡(
Êags
 & 
AF_LISTISH
)

249 ()
	`°rˇt
(
b
,"LISTISH,");

250 i‡(
Êags
 & 
AF_LOCAL
)

251 ()
	`°rˇt
(
b
,"LOCAL,");

252 i‡(*
b
)

253 
b
[
	`°æí
(b)-1] = '\0';

254 
	}
}

256 
	$dump_°ab
(
°ab
)

257 
STAB
 *
°ab
;

259 
STR
 *
°r
;

261 i‡(!
°ab
) {

262 
	`Ârötf
(
°dîr
,"{}\n");

265 
°r
 = 
	`°r_m‹èl
(&
°r_undef
);

266 
dum∂vl
++;

267 
	`Ârötf
(
°dîr
,"{\n");

268 
	`°ab_fuŒ«me
(
°r
,
°ab
);

269 
	`dump
("STAB_NAME = %s\n", 
°r
->
°r_±r
);

270 
dum∂vl
--;

271 
	`dump
("}\n");

272 
	}
}

274 
	$dump_•©
(
•©
)

275 
SPAT
 *
•©
;

277 
ch
;

279 i‡(!
•©
) {

280 
	`Ârötf
(
°dîr
,"{}\n");

283 
	`Ârötf
(
°dîr
,"{\n");

284 
dum∂vl
++;

285 i‡(
•©
->
•©_ru¡ime
) {

286 
	`dump
("SPAT_RUNTIME = ");

287 
	`dump_¨g
(
•©
->
•©_ru¡ime
);

289 i‡(
•©
->
•©_Êags
 & 
SPAT_ONCE
)

290 
ch
 = '?';

292 
ch
 = '/';

293 
	`dump
("SPAT_PRE %c%s%c\n",
ch
,
•©
->
•©_ªgexp
->
¥ecomp
,ch);

295 i‡(
•©
->
•©_ª∂
) {

296 
	`dump
("SPAT_REPL = ");

297 
	`dump_¨g
(
•©
->
•©_ª∂
);

299 i‡(
•©
->
•©_sh‹t
) {

300 
	`dump
("SPAT_SHORT = \"%s\"\n",
	`°r_≥ek
(
•©
->
•©_sh‹t
));

302 
dum∂vl
--;

303 
	`dump
("}\n");

304 
	}
}

307 
	$dump
(
¨g1
,
¨g2
,
¨g3
,
¨g4
,
¨g5
)

308 *
¨g1
;

309 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
;

311 
i
;

313 
i
 = 
dum∂vl
*4; i; i--)

314 ()
	`putc
(' ',
°dîr
);

315 
	`Ârötf
(
°dîr
,
¨g1
, 
¨g2
, 
¨g3
, 
¨g4
, 
¨g5
);

316 
	}
}

319 #ifde‡
DEBUG


321 
	$showöput
()

323 *
s
 = 
	`°r_gë
(
löe°r
);

324 
fd
;

325 
cmd
[] =

329 i‡(
rsÂ
 !
°dö
 || 
	`°∫EQ
(
s
,"#!",2))

330  
s
;

331 ; *
s
; s++) {

332 i‡(*
s
 & 0200) {

333 
fd
 = 
	`¸ót
("/tmp/.foo",0600);

334 
	`wrôe
(
fd
,
	`°r_gë
(
löe°r
),löe°r->
°r_cur
);

335 
s
 = 
	`°r_gës
(
löe°r
,
rsÂ
,0)) {

336 
	`wrôe
(
fd
,
s
,
löe°r
->
°r_cur
);

338 ()
	`˛o£
(
fd
);

339 
s
=
cmd
; *s; s++)

340 i‡(*
s
 < ' ')

341 *
s
 += 96;

342 
rsÂ
 = 
	`myp›í
(
cmd
,"r");

343 
s
 = 
	`°r_gës
(
löe°r
,
rsÂ
,0);

344  
s
;

347  
	`°r_gë
(
löe°r
);

348 
	}
}

	@eval.c

18 
	~"EXTERN.h
"

19 
	~"≥æ.h
"

21 #i‡!
deföed
(
NSIG
Ë|| deföed(
M_UNIX
Ë|| deföed(
M_XENIX
)

22 
	~<sig«l.h
>

25 #ifde‡
I_FCNTL


26 
	~<f˙é.h
>

28 #ifde‡
I_SYS_FILE


29 
	~<sys/fûe.h
>

31 #ifde‡
I_VFORK


32 
	~<vf‹k.h
>

35 #ifde‡
VOIDSIG


36 (*
	gih™d
)();

37 (*
	gqh™d
)();

39 (*
	gih™d
)();

40 (*
	gqh™d
)();

43 
ARG
 *
	gdeb¨g
;

44 
STR
 
	g°r_¨gs
;

45 
STAB
 *
	g°ab2
;

46 
STIO
 *
	g°io
;

47 
l°rög
 *
	gl°r
;

48 
	gﬁd_rsch¨
;

49 
	gﬁd_r¶í
;

51 
sö
(), 
cos
(), 
©™2
(), 
pow
();

53 *
gëlogö
();

56 
	$evÆ
(
¨g
,
gimme
,
•
)

57 
ARG
 *
¨g
;

58 
gimme
;

59 
•
;

61 
STR
 *
°r
;

62 
™um
;

63 
›ty≥
;

64 
STR
 **
°
;

65 
max¨g
;

66 
vÆue
;

67 *
tmps
;

68 *
tmps2
;

69 
¨gÊags
;

70 
¨gty≥
;

71 
¨g±r
árgptr;

72 
¨gœ°
[8];

73 
tm∂⁄g
;

74 
whí
;

75 
FILE
 *
Â
;

76 
STR
 *
tmp°r
;

77 
FCMD
 *
f‹m
;

78 
STAB
 *
°ab
;

79 
ARRAY
 *
¨y
;

80 
boﬁ
 
assignög
 = 
FALSE
;

81 
	`exp
(), 
	`log
(), 
	`sqπ
(), 
	`modf
();

82 *
	`¸y±
(), *
	`gëív
();

83 

	`grow_dÀvñ
();

85 i‡(!
¨g
)

86 
ßy_undef
;

87 
›ty≥
 = 
¨g
->
¨g_ty≥
;

88 
max¨g
 = 
¨g
->
¨g_Àn
;

89 
¨gœ°
[0] = 
•
;

90 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

91 i‡(
•
 + 
max¨g
 > 
°ack
->
¨y_max
)

92 
	`a°‹e
(
°ack
, 
•
 + 
max¨g
, 
NuŒ°r
);

93 
°
 = 
°ack
->
¨y_¨øy
;

95 #ifde‡
DEBUGGING


96 i‡(
debug
) {

97 i‡(
debug
 & 8) {

98 
	`deb
("%†(%lxË%dárgs:\n",
›«me
[
›ty≥
],
¨g
,
max¨g
);

100 
deb«me
[
dÀvñ
] = 
›«me
[
›ty≥
][0];

101 
debdñim
[
dÀvñ
] = ':';

102 i‡(++
dÀvñ
 >
dlmax
)

103 
	`grow_dÀvñ
();

107 
™um
 = 1;ánum <
max¨g
;ánum++) {

108 
¨gÊags
 = 
¨g
[
™um
].
¨g_Êags
;

109 
¨gty≥
 = 
¨g
[
™um
].
¨g_ty≥
;

110 
¨g±r
 = 
¨g
[
™um
].
¨g_±r
;

111 
ª_evÆ
:

112 
¨gty≥
) {

114 
°
[++
•
] = &
°r_undef
;

115 #ifde‡
DEBUGGING


116 
tmps
 = "NULL";

119 
A_EXPR
:

120 #ifde‡
DEBUGGING


121 i‡(
debug
 & 8) {

122 
tmps
 = "EXPR";

123 
	`deb
("%d.EXPR =>\n",
™um
);

126 
•
 = 
	`evÆ
(
¨g±r
.
¨g_¨g
,

127 (
¨gÊags
 & 
AF_ARYOK
Ë? 
G_ARRAY
 : 
G_SCALAR
, 
•
);

128 i‡(
•
 + (
max¨g
 - 
™um
Ë> 
°ack
->
¨y_max
)

129 
	`a°‹e
(
°ack
, 
•
 + (
max¨g
 - 
™um
), 
NuŒ°r
);

130 
°
 = 
°ack
->
¨y_¨øy
;

132 
A_CMD
:

133 #ifde‡
DEBUGGING


134 i‡(
debug
 & 8) {

135 
tmps
 = "CMD";

136 
	`deb
("%d.CMD (%lxË=>\n",
™um
,
¨g±r
.
¨g_cmd
);

139 
•
 = 
	`cmd_exec
(
¨g±r
.
¨g_cmd
, 
gimme
, sp);

140 i‡(
•
 + (
max¨g
 - 
™um
Ë> 
°ack
->
¨y_max
)

141 
	`a°‹e
(
°ack
, 
•
 + (
max¨g
 - 
™um
), 
NuŒ°r
);

142 
°
 = 
°ack
->
¨y_¨øy
;

144 
A_LARYSTAB
:

145 ++
•
;

146 
›ty≥
) {

147 
O_ITEM2
: 
¨gty≥
 = 2; ;

148 
O_ITEM3
: 
¨gty≥
 = 3; ;

149 : 
¨gty≥
 = 
™um
; ;

151 
°r
 = 
	`a„tch
(
	`°ab_¨øy
(
¨g±r
.
¨g_°ab
),

152 
¨g
[
¨gty≥
].
¨g_Àn
 - 
¨yba£
, 
TRUE
);

153 #ifde‡
DEBUGGING


154 i‡(
debug
 & 8) {

155 ()
	`•rötf
(
buf
,"LARYSTAB $%s[%d]",
	`°ab_«me
(
¨g±r
.
¨g_°ab
),

156 
¨g
[
¨gty≥
].
¨g_Àn
);

157 
tmps
 = 
buf
;

160 
do_¸emít
;

161 
A_ARYSTAB
:

162 
›ty≥
) {

163 
O_ITEM2
: 
¨gty≥
 = 2; ;

164 
O_ITEM3
: 
¨gty≥
 = 3; ;

165 : 
¨gty≥
 = 
™um
; ;

167 
°
[++
•
] = 
	`a„tch
(
	`°ab_¨øy
(
¨g±r
.
¨g_°ab
),

168 
¨g
[
¨gty≥
].
¨g_Àn
 - 
¨yba£
, 
FALSE
);

169 #ifde‡
DEBUGGING


170 i‡(
debug
 & 8) {

171 ()
	`•rötf
(
buf
,"ARYSTAB $%s[%d]",
	`°ab_«me
(
¨g±r
.
¨g_°ab
),

172 
¨g
[
¨gty≥
].
¨g_Àn
);

173 
tmps
 = 
buf
;

177 
A_STAR
:

178 
°ab
 = 
¨g±r
.
¨g_°ab
;

179 
°
[++
•
] = (
STR
*)
°ab
;

180 i‡(!
	`°ab_x¨øy
(
°ab
))

181 
	`Ødd
(
°ab
);

182 i‡(!
	`°ab_xhash
(
°ab
))

183 
	`hadd
(
°ab
);

184 i‡(!
	`°ab_io
(
°ab
))

185 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

186 #ifde‡
DEBUGGING


187 i‡(
debug
 & 8) {

188 ()
	`•rötf
(
buf
,"STAR *%s",
	`°ab_«me
(
¨g±r
.
¨g_°ab
));

189 
tmps
 = 
buf
;

193 
A_LSTAR
:

194 
°r
 = 
°
[++
•
] = (
STR
*)
¨g±r
.
¨g_°ab
;

195 #ifde‡
DEBUGGING


196 i‡(
debug
 & 8) {

197 ()
	`•rötf
(
buf
,"LSTAR *%s",
	`°ab_«me
(
¨g±r
.
¨g_°ab
));

198 
tmps
 = 
buf
;

202 
A_STAB
:

203 
°
[++
•
] = 
	`STAB_STR
(
¨g±r
.
¨g_°ab
);

204 #ifde‡
DEBUGGING


205 i‡(
debug
 & 8) {

206 ()
	`•rötf
(
buf
,"STAB $%s",
	`°ab_«me
(
¨g±r
.
¨g_°ab
));

207 
tmps
 = 
buf
;

211 
A_LEXPR
:

212 #ifde‡
DEBUGGING


213 i‡(
debug
 & 8) {

214 
tmps
 = "LEXPR";

215 
	`deb
("%d.LEXPR =>\n",
™um
);

218 i‡(
¨gÊags
 & 
AF_ARYOK
) {

219 
•
 = 
	`evÆ
(
¨g±r
.
¨g_¨g
, 
G_ARRAY
, sp);

220 i‡(
•
 + (
max¨g
 - 
™um
Ë> 
°ack
->
¨y_max
)

221 
	`a°‹e
(
°ack
, 
•
 + (
max¨g
 - 
™um
), 
NuŒ°r
);

222 
°
 = 
°ack
->
¨y_¨øy
;

225 
•
 = 
	`evÆ
(
¨g±r
.
¨g_¨g
, 
G_SCALAR
, sp);

226 
°
 = 
°ack
->
¨y_¨øy
;

227 
°r
 = 
°
[
•
];

228 
do_¸emít
;

231 
A_LVAL
:

232 #ifde‡
DEBUGGING


233 i‡(
debug
 & 8) {

234 ()
	`•rötf
(
buf
,"LVAL $%s",
	`°ab_«me
(
¨g±r
.
¨g_°ab
));

235 
tmps
 = 
buf
;

238 ++
•
;

239 
°r
 = 
	`STAB_STR
(
¨g±r
.
¨g_°ab
);

240 i‡(!
°r
)

241 
	`Áèl
("panic: A_LVAL");

242 
do_¸emít
:

243 
assignög
 = 
TRUE
;

244 i‡(
¨gÊags
 & 
AF_PRE
) {

245 i‡(
¨gÊags
 & 
AF_UP
)

246 
	`°r_öc
(
°r
);

248 
	`°r_dec
(
°r
);

249 
	`STABSET
(
°r
);

250 
°
[
•
] = 
°r
;

251 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

253 i‡(
¨gÊags
 & 
AF_POST
) {

254 
°
[
•
] = 
	`°r_m‹èl
(
°r
);

255 i‡(
¨gÊags
 & 
AF_UP
)

256 
	`°r_öc
(
°r
);

258 
	`°r_dec
(
°r
);

259 
	`STABSET
(
°r
);

260 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

263 
°
[
•
] = 
°r
;

265 
A_LARYLEN
:

266 ++
•
;

267 
°ab
 = 
¨g±r
.
¨g_°ab
;

268 
°r
 = 
	`°ab_¨øy
(
¨g±r
.
¨g_°ab
)->
¨y_magic
;

269 i‡(
›ty≥
 !
O_SASSIGN
 || 
¨gÊags
 & (
AF_PRE
|
AF_POST
))

270 
	`°r_num£t
(
°r
,()(
	`°ab_¨øy
(
°ab
)->
¨y_fûl
+
¨yba£
));

271 #ifde‡
DEBUGGING


272 
tmps
 = "LARYLEN";

274 i‡(!
°r
)

275 
	`Áèl
("panic: A_LEXPR");

276 
do_¸emít
;

277 
A_ARYLEN
:

278 
°ab
 = 
¨g±r
.
¨g_°ab
;

279 
°
[++
•
] = 
	`°ab_¨øy
(
°ab
)->
¨y_magic
;

280 
	`°r_num£t
(
°
[
•
],()(
	`°ab_¨øy
(
°ab
)->
¨y_fûl
+
¨yba£
));

281 #ifde‡
DEBUGGING


282 
tmps
 = "ARYLEN";

285 
A_SINGLE
:

286 
°
[++
•
] = 
¨g±r
.
¨g_°r
;

287 #ifde‡
DEBUGGING


288 
tmps
 = "SINGLE";

291 
A_DOUBLE
:

292 (Ë
	`öãΩ
(
°r
,
¨g±r
.
¨g_°r
,
•
);

293 
°
 = 
°ack
->
¨y_¨øy
;

294 
°
[++
•
] = 
°r
;

295 #ifde‡
DEBUGGING


296 
tmps
 = "DOUBLE";

299 
A_BACKTICK
:

300 
tmps
 = 
	`°r_gë
(
	`öãΩ
(
°r
,
¨g±r
.
¨g_°r
,
•
));

301 
°
 = 
°ack
->
¨y_¨øy
;

302 #ifde‡
TAINT


303 
	`èöçr›î
("Insecure dependency in ``");

305 
Â
 = 
	`myp›í
(
tmps
,"r");

306 
	`°r_£t
(
°r
,"");

307 i‡(
Â
) {

308 i‡(
gimme
 =
G_SCALAR
) {

309 
	`°r_gës
(
°r
,
Â
,°r->
°r_cur
Ë!
NuŒch
)

314 i‡(++
•
 > 
°ack
->
¨y_max
) {

315 
	`a°‹e
(
°ack
, 
•
, 
NuŒ°r
);

316 
°
 = 
°ack
->
¨y_¨øy
;

318 
°r
 = 
°
[
•
] = 
	`Så_√w
(56,80);

319 i‡(
	`°r_gës
(
°r
,
Â
,0Ë=
NuŒch
) {

320 
•
--;

323 i‡(
°r
->
°r_Àn
 - så->
°r_cur
 > 20) {

324 
°r
->
°r_Àn
 = så->
°r_cur
+1;

325 
	`Ríew
(
°r
->
°r_±r
, så->
°r_Àn
, );

327 
	`°r_2m‹èl
(
°r
);

330 
°©usvÆue
 = 
	`myp˛o£
(
Â
);

333 
°©usvÆue
 = -1;

335 i‡(
gimme
 =
G_SCALAR
)

336 
°
[++
•
] = 
°r
;

337 #ifde‡
DEBUGGING


338 
tmps
 = "BACK";

341 
A_WANTARRAY
:

343 i‡(
curcsv
->
w™èºay
 =
G_ARRAY
)

344 
°
[++
•
] = &
°r_yes
;

346 
°
[++
•
] = &
°r_no
;

348 #ifde‡
DEBUGGING


349 
tmps
 = "WANTARRAY";

352 
A_INDREAD
:

353 
œ°_ö_°ab
 = 
	`°abít
(
	`°r_gë
(
	`STAB_STR
(
¨g±r
.
¨g_°ab
)),
TRUE
);

354 
ﬁd_rsch¨
 = 
rsch¨
;

355 
ﬁd_r¶í
 = 
r¶í
;

356 
do_ªad
;

357 
A_GLOB
:

358 
¨gÊags
 |
AF_POST
;

359 
œ°_ö_°ab
 = 
¨g±r
.
¨g_°ab
;

360 
ﬁd_rsch¨
 = 
rsch¨
;

361 
ﬁd_r¶í
 = 
r¶í
;

362 
r¶í
 = 1;

363 #ifde‡
MSDOS


364 
rsch¨
 = 0;

366 #ifde‡
CSH


367 
rsch¨
 = 0;

369 
rsch¨
 = '\n';

372 
do_ªad
;

373 
A_READ
:

374 
œ°_ö_°ab
 = 
¨g±r
.
¨g_°ab
;

375 
ﬁd_rsch¨
 = 
rsch¨
;

376 
ﬁd_r¶í
 = 
r¶í
;

377 
do_ªad
:

378 i‡(
™um
 > 1)

379 
gimme
 = 
G_SCALAR
;

380 i‡(
gimme
 =
G_ARRAY
)

381 
°r
 = 
	`Så_√w
(57,0);

382 ++
•
;

383 
Â
 = 
NuŒÂ
;

384 i‡(
	`°ab_io
(
œ°_ö_°ab
)) {

385 
Â
 = 
	`°ab_io
(
œ°_ö_°ab
)->
iÂ
;

386 i‡(!
Â
) {

387 i‡(
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 & 
IOF_ARGV
) {

388 i‡(
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 & 
IOF_START
) {

389 
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 &~
IOF_START
;

390 
	`°ab_io
(
œ°_ö_°ab
)->
löes
 = 0;

391 i‡(
	`Æí
(
	`°ab_¨øy
(
œ°_ö_°ab
)) < 0) {

392 
tmp°r
 = 
	`°r_make
("-",1);

393 ()
	`≠ush
(
	`°ab_¨øy
(
œ°_ö_°ab
), 
tmp°r
);

396 
Â
 = 
	`√xèrgv
(
œ°_ö_°ab
);

397 i‡(!
Â
) {

398 ()
	`do_˛o£
(
œ°_ö_°ab
,
FALSE
);

399 
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 |
IOF_START
;

402 i‡(
¨gty≥
 =
A_GLOB
) {

403 (Ë
	`öãΩ
(
°r
,
	`°ab_vÆ
(
œ°_ö_°ab
),
•
);

404 
°
 = 
°ack
->
¨y_¨øy
;

405 
tmp°r
 = 
	`Så_√w
(55,0);

406 #ifde‡
MSDOS


407 
	`°r_£t
(
tmp°r
, "perlglob ");

408 
	`°r_sˇt
(
tmp°r
,
°r
);

409 
	`°r_ˇt
(
tmp°r
," |");

411 #ifde‡
CSH


412 
	`°r_n£t
(
tmp°r
,
csh«me
,
cshÀn
);

413 
	`°r_ˇt
(
tmp°r
," -cf 'setÇonomatch; glob ");

414 
	`°r_sˇt
(
tmp°r
,
°r
);

415 
	`°r_ˇt
(
tmp°r
,"'|");

417 
	`°r_£t
(
tmp°r
, "echo ");

418 
	`°r_sˇt
(
tmp°r
,
°r
);

419 
	`°r_ˇt
(
tmp°r
,

423 ()
	`do_›í
(
œ°_ö_°ab
,
tmp°r
->
°r_±r
,

424 
tmp°r
->
°r_cur
);

425 
Â
 = 
	`°ab_io
(
œ°_ö_°ab
)->
iÂ
;

426 
	`°r_‰ì
(
tmp°r
);

430 i‡(!
Â
 && 
dow¨n
)

431 
	`w¨n
("Ród o¿˛o£d fûeh™dÀ <%s>",
	`°ab_«me
(
œ°_ö_°ab
));

432 
whí
 = 
°r
->
°r_Àn
;

433 i‡(!
whí
)

434 
	`Så_Grow
(
°r
,80);

435 
kìpgoög
:

436 i‡(!
Â
)

437 
°
[
•
] = &
°r_undef
;

438 i‡(!
	`°r_gës
(
°r
,
Â
, 
›ty≥
 =
O_RCAT
 ? så->
°r_cur
 : 0)) {

439 
	`˛óªº
(
Â
);

440 i‡(
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 & 
IOF_ARGV
) {

441 
Â
 = 
	`√xèrgv
(
œ°_ö_°ab
);

442 i‡(
Â
)

443 
kìpgoög
;

444 ()
	`do_˛o£
(
œ°_ö_°ab
,
FALSE
);

445 
	`°ab_io
(
œ°_ö_°ab
)->
Êags
 |
IOF_START
;

447 i‡(
¨gÊags
 & 
AF_POST
) {

448 ()
	`do_˛o£
(
œ°_ö_°ab
,
FALSE
);

450 
°
[
•
] = &
°r_undef
;

451 
rsch¨
 = 
ﬁd_rsch¨
;

452 
r¶í
 = 
ﬁd_r¶í
;

453 i‡(
gimme
 =
G_ARRAY
) {

454 --
•
;

455 
	`°r_2m‹èl
(
°r
);

456 
¨øy_ªtu∫
;

461 
	`°ab_io
(
œ°_ö_°ab
)->
löes
++;

462 
°
[
•
] = 
°r
;

463 #ifde‡
TAINT


464 
°r
->
°r_èöãd
 = 1;

466 i‡(
¨gÊags
 & 
AF_POST
) {

467 i‡(
°r
->
°r_cur
 > 0)

468 
°r
->
°r_cur
--;

469 i‡(
°r
->
°r_±r
[°r->
°r_cur
] =
rsch¨
)

470 
°r
->
°r_±r
[°r->
°r_cur
] = '\0';

472 
°r
->
°r_cur
++;

473 
tmps
 = 
°r
->
°r_±r
; *tmps;Åmps++)

474 i‡(!
	`ißÕha
(*
tmps
Ë&& !
	`isdigô
(*tmps) &&

475 
	`ödex
("$&*(){}[]'\";\\|?<>~`",*
tmps
))

477 i‡(*
tmps
 && 
	`°©
(
°r
->
°r_±r
,&
°©buf
) < 0)

478 
kìpgoög
;

480 i‡(
gimme
 =
G_ARRAY
) {

481 i‡(
°r
->
°r_Àn
 - så->
°r_cur
 > 20) {

482 
°r
->
°r_Àn
 = så->
°r_cur
+1;

483 
	`Ríew
(
°r
->
°r_±r
, så->
°r_Àn
, );

485 
	`°r_2m‹èl
(
°r
);

486 i‡(++
•
 > 
°ack
->
¨y_max
) {

487 
	`a°‹e
(
°ack
, 
•
, 
NuŒ°r
);

488 
°
 = 
°ack
->
¨y_¨øy
;

490 
°r
 = 
	`Så_√w
(58,80);

491 
kìpgoög
;

493 i‡(!
whí
 && 
°r
->
°r_Àn
 - så->
°r_cur
 > 80) {

495 i‡(
°r
->
°r_cur
 < 60)

496 
°r
->
°r_Àn
 = 80;

498 
°r
->
°r_Àn
 = så->
°r_cur
+40;

499 
	`Ríew
(
°r
->
°r_±r
, så->
°r_Àn
, );

502 
rsch¨
 = 
ﬁd_rsch¨
;

503 
r¶í
 = 
ﬁd_r¶í
;

504 #ifde‡
DEBUGGING


505 
tmps
 = "READ";

509 #ifde‡
DEBUGGING


510 i‡(
debug
 & 8)

511 
	`deb
("%d.%†'%s'\n",
™um
,
tmps
,
	`°r_≥ek
(
°
[
•
]));

513 i‡(
™um
 < 8)

514 
¨gœ°
[
™um
] = 
•
;

517 
°
 +
¨gœ°
[0];

518 #ifde‡
SMALLSWITCHES


519 i‡(
›ty≥
 < 
O_CHOWN
)

521 
›ty≥
) {

522 
O_RCAT
:

523 
	`STABSET
(
°r
);

525 
O_ITEM
:

526 i‡(
gimme
 =
G_ARRAY
)

527 
¨øy_ªtu∫
;

529 
O_SCALAR
:

530 
	`STR_SSET
(
°r
,
°
[1]);

531 
	`STABSET
(
°r
);

533 
O_ITEM2
:

534 i‡(
gimme
 =
G_ARRAY
)

535 
¨øy_ªtu∫
;

536 --
™um
;

537 
	`STR_SSET
(
°r
,
°
[
¨gœ°
[
™um
]-arglast[0]]);

538 
	`STABSET
(
°r
);

540 
O_ITEM3
:

541 i‡(
gimme
 =
G_ARRAY
)

542 
¨øy_ªtu∫
;

543 --
™um
;

544 
	`STR_SSET
(
°r
,
°
[
¨gœ°
[
™um
]-arglast[0]]);

545 
	`STABSET
(
°r
);

547 
O_CONCAT
:

548 
	`STR_SSET
(
°r
,
°
[1]);

549 
	`°r_sˇt
(
°r
,
°
[2]);

550 
	`STABSET
(
°r
);

552 
O_REPEAT
:

553 i‡(
gimme
 =
G_ARRAY
 && 
¨g
[1].
¨g_Êags
 & 
AF_ARYOK
) {

554 
•
 = 
	`do_ª≥©¨y
(
¨gœ°
);

555 
¨øy_ªtu∫
;

557 
	`STR_SSET
(
°r
,
°
[
¨gœ°
[1] -árglast[0]]);

558 
™um
 = ()
	`°r_gnum
(
°
[
¨gœ°
[2] -árglast[0]]);

559 i‡(
™um
 >= 1) {

560 
tmp°r
 = 
	`Så_√w
(50, 0);

561 
tmps
 = 
	`°r_gë
(
°r
);

562 
	`°r_n£t
(
tmp°r
,
tmps
,
°r
->
°r_cur
);

563 
tmps
 = 
	`°r_gë
(
tmp°r
);

564 
	`STR_GROW
(
°r
, (
™um
 * så->
°r_cur
) + 1);

565 
	`ª≥©˝y
(
°r
->
°r_±r
, 
tmps
, 
tmp°r
->
°r_cur
, 
™um
);

566 
°r
->
°r_cur
 *
™um
;

567 
°r
->
°r_±r
[°r->
°r_cur
] = '\0';

568 
°r
->
°r_nok
 = 0;

569 
	`°r_‰ì
(
tmp°r
);

572 
	`°r_s£t
(
°r
,&
°r_no
);

573 
	`STABSET
(
°r
);

575 
O_MATCH
:

576 
•
 = 
	`do_m©ch
(
°r
,
¨g
,

577 
gimme
,
¨gœ°
);

578 i‡(
gimme
 =
G_ARRAY
)

579 
¨øy_ªtu∫
;

580 
	`STABSET
(
°r
);

582 
O_NMATCH
:

583 
•
 = 
	`do_m©ch
(
°r
,
¨g
,

584 
G_SCALAR
,
¨gœ°
);

585 
	`°r_s£t
(
°r
, 
	`°r_åue
(°rË? &
°r_no
 : &
°r_yes
);

586 
	`STABSET
(
°r
);

588 
O_SUBST
:

589 
•
 = 
	`do_sub°
(
°r
,
¨g
,
¨gœ°
[0]);

590 
¨øy_ªtu∫
;

591 
O_NSUBST
:

592 
•
 = 
	`do_sub°
(
°r
,
¨g
,
¨gœ°
[0]);

593 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

594 
	`°r_£t
(
°r
, 
	`°r_åue
(°rË? 
No
 : 
Yes
);

595 
¨øy_ªtu∫
;

596 
O_ASSIGN
:

597 i‡(
¨g
[1].
¨g_Êags
 & 
AF_ARYOK
) {

598 i‡(
¨g
->
¨g_Àn
 == 1) {

599 
¨g
->
¨g_ty≥
 = 
O_LOCAL
;

600 
loˇl
;

603 
¨g
->
¨g_ty≥
 = 
O_AASSIGN
;

604 
Øssign
;

608 
¨g
->
¨g_ty≥
 = 
O_SASSIGN
;

609 
ßssign
;

611 
O_LOCAL
:

612 
loˇl
:

613 
¨gœ°
[2] =árglast[1];

615 
O_AASSIGN
:

616 
Øssign
:

617 
•
 = 
	`do_assign
(
¨g
,

618 
gimme
,
¨gœ°
);

619 
¨øy_ªtu∫
;

620 
O_SASSIGN
:

621 
ßssign
:

622 
	`STR_SSET
(
°r
, 
°
[2]);

623 
	`STABSET
(
°r
);

625 
O_CHOP
:

626 
°
 -
¨gœ°
[0];

627 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

628 
•
 = 
¨gœ°
[0] + 1; sp <=árglast[1]; sp++)

629 
	`do_ch›
(
°r
,
°
[
•
]);

630 
°
 +
¨gœ°
[0];

632 
O_DEFINED
:

633 i‡(
¨g
[1].
¨g_ty≥
 & 
A_DONT
) {

634 
•
 = 
	`do_deföed
(
°r
,
¨g
,

635 
gimme
,
¨gœ°
);

636 
¨øy_ªtu∫
;

638 i‡(
°r
->
°r_pok
 || så->
°r_nok
)

639 
ßy_yes
;

640 
ßy_no
;

641 
O_UNDEF
:

642 i‡(
¨g
[1].
¨g_ty≥
 & 
A_DONT
) {

643 
•
 = 
	`do_undef
(
°r
,
¨g
,

644 
gimme
,
¨gœ°
);

645 
¨øy_ªtu∫
;

647 i‡(
°r
 !
	`°ab_vÆ
(
def°ab
)) {

648 i‡(
°r
->
°r_Àn
) {

649 i‡(
°r
->
°r_°©e
 =
SS_INCR
)

650 
	`Så_Grow
(
°r
,0);

651 
	`Sa„‰ì
(
°r
->
°r_±r
);

652 
°r
->
°r_±r
 = 
NuŒch
;

653 
°r
->
°r_Àn
 = 0;

655 
°r
->
°r_pok
 = så->
°r_nok
 = 0;

656 
	`STABSET
(
°r
);

658 
ßy_undef
;

659 
O_STUDY
:

660 
•
 = 
	`do_°udy
(
°r
,
¨g
,

661 
gimme
,
¨gœ°
);

662 
¨øy_ªtu∫
;

663 
O_POW
:

664 
vÆue
 = 
	`°r_gnum
(
°
[1]);

665 
vÆue
 = 
	`pow
(vÆue,
	`°r_gnum
(
°
[2]));

666 
d⁄um£t
;

667 
O_MULTIPLY
:

668 
vÆue
 = 
	`°r_gnum
(
°
[1]);

669 
vÆue
 *
	`°r_gnum
(
°
[2]);

670 
d⁄um£t
;

671 
O_DIVIDE
:

672 i‡((
vÆue
 = 
	`°r_gnum
(
°
[2])) == 0.0)

673 
	`Áèl
("Illegal division by zero");

674 #ifde‡
¸ay


677 
x
;

678 
k
;

679 
x
 = 
	`°r_gnum
(
°
[1]);

680 i‡(()()
x
 == x &&

681 ()()
vÆue
 == value &&

682 (
k
 = ()
x
/()
vÆue
)*()value == ()x) {

683 
vÆue
 = 
k
;

685 
vÆue
 = 
x
/value;

689 
vÆue
 = 
	`°r_gnum
(
°
[1]) / value;

691 
d⁄um£t
;

692 
O_MODULO
:

693 
tm∂⁄g
 = (Ë
	`°r_gnum
(
°
[2]);

694 i‡(
tm∂⁄g
 == 0L)

695 
	`Áèl
("Illegal modulus zero");

696 
whí
 = ()
	`°r_gnum
(
°
[1]);

697 #i‚de‡
löt


698 i‡(
whí
 >= 0)

699 
vÆue
 = ()(
whí
 % 
tm∂⁄g
);

701 
vÆue
 = ()(
tm∂⁄g
 - ((-
whí
 - 1) %Åmplong)) - 1;

703 
d⁄um£t
;

704 
O_ADD
:

705 
vÆue
 = 
	`°r_gnum
(
°
[1]);

706 
vÆue
 +
	`°r_gnum
(
°
[2]);

707 
d⁄um£t
;

708 
O_SUBTRACT
:

709 
vÆue
 = 
	`°r_gnum
(
°
[1]);

710 
vÆue
 -
	`°r_gnum
(
°
[2]);

711 
d⁄um£t
;

712 
O_LEFT_SHIFT
:

713 
vÆue
 = 
	`°r_gnum
(
°
[1]);

714 
™um
 = ()
	`°r_gnum
(
°
[2]);

715 #i‚de‡
löt


716 
vÆue
 = ()(
	`U_L
(vÆueË<< 
™um
);

718 
d⁄um£t
;

719 
O_RIGHT_SHIFT
:

720 
vÆue
 = 
	`°r_gnum
(
°
[1]);

721 
™um
 = ()
	`°r_gnum
(
°
[2]);

722 #i‚de‡
löt


723 
vÆue
 = ()(
	`U_L
(vÆueË>> 
™um
);

725 
d⁄um£t
;

726 
O_LT
:

727 
vÆue
 = 
	`°r_gnum
(
°
[1]);

728 
vÆue
 = (vÆuê< 
	`°r_gnum
(
°
[2])) ? 1.0 : 0.0;

729 
d⁄um£t
;

730 
O_GT
:

731 
vÆue
 = 
	`°r_gnum
(
°
[1]);

732 
vÆue
 = (vÆuê> 
	`°r_gnum
(
°
[2])) ? 1.0 : 0.0;

733 
d⁄um£t
;

734 
O_LE
:

735 
vÆue
 = 
	`°r_gnum
(
°
[1]);

736 
vÆue
 = (vÆuê<
	`°r_gnum
(
°
[2])) ? 1.0 : 0.0;

737 
d⁄um£t
;

738 
O_GE
:

739 
vÆue
 = 
	`°r_gnum
(
°
[1]);

740 
vÆue
 = (vÆuê>
	`°r_gnum
(
°
[2])) ? 1.0 : 0.0;

741 
d⁄um£t
;

742 
O_EQ
:

743 i‡(
dow¨n
) {

744 i‡((!
°
[1]->
°r_nok
 && !
	`looks_like_numbî
(st[1])) ||

745 (!
°
[2]->
°r_nok
 && !
	`looks_like_numbî
(st[2])) )

746 
	`w¨n
("Possible use of == on string value");

748 
vÆue
 = 
	`°r_gnum
(
°
[1]);

749 
vÆue
 = (vÆuê=
	`°r_gnum
(
°
[2])) ? 1.0 : 0.0;

750 
d⁄um£t
;

751 
O_NE
:

752 
vÆue
 = 
	`°r_gnum
(
°
[1]);

753 
vÆue
 = (vÆuê!
	`°r_gnum
(
°
[2])) ? 1.0 : 0.0;

754 
d⁄um£t
;

755 
O_NCMP
:

756 
vÆue
 = 
	`°r_gnum
(
°
[1]);

757 
vÆue
 -
	`°r_gnum
(
°
[2]);

758 i‡(
vÆue
 > 0.0)

759 
vÆue
 = 1.0;

760 i‡(
vÆue
 < 0.0)

761 
vÆue
 = -1.0;

762 
d⁄um£t
;

763 
O_BIT_AND
:

764 i‡(!
ßwvec
 || 
°
[1]->
°r_nok
 || st[2]->str_nok) {

765 
vÆue
 = 
	`°r_gnum
(
°
[1]);

766 #i‚de‡
löt


767 
vÆue
 = ()(
	`U_L
(vÆueË& U_L(
	`°r_gnum
(
°
[2])));

769 
d⁄um£t
;

772 
	`do_v›
(
›ty≥
,
°r
,
°
[1],st[2]);

774 
O_XOR
:

775 i‡(!
ßwvec
 || 
°
[1]->
°r_nok
 || st[2]->str_nok) {

776 
vÆue
 = 
	`°r_gnum
(
°
[1]);

777 #i‚de‡
löt


778 
vÆue
 = ()(
	`U_L
(vÆueË^ U_L(
	`°r_gnum
(
°
[2])));

780 
d⁄um£t
;

783 
	`do_v›
(
›ty≥
,
°r
,
°
[1],st[2]);

785 
O_BIT_OR
:

786 i‡(!
ßwvec
 || 
°
[1]->
°r_nok
 || st[2]->str_nok) {

787 
vÆue
 = 
	`°r_gnum
(
°
[1]);

788 #i‚de‡
löt


789 
vÆue
 = ()(
	`U_L
(vÆueË| U_L(
	`°r_gnum
(
°
[2])));

791 
d⁄um£t
;

794 
	`do_v›
(
›ty≥
,
°r
,
°
[1],st[2]);

797 
O_AND
:

798 i‡(
	`°r_åue
(
°
[1])) {

799 
™um
 = 2;

800 
›ty≥
 = 
O_ITEM2
;

801 
¨gÊags
 = 
¨g
[
™um
].
¨g_Êags
;

802 i‡(
gimme
 =
G_ARRAY
)

803 
¨gÊags
 |
AF_ARYOK
;

804 
¨gty≥
 = 
¨g
[
™um
].
¨g_ty≥
 & 
A_MASK
;

805 
¨g±r
 = 
¨g
[
™um
].
¨g_±r
;

806 
max¨g
 = 
™um
 = 1;

807 
•
 = 
¨gœ°
[0];

808 
°
 -
•
;

809 
ª_evÆ
;

812 i‡(
assignög
) {

813 
	`°r_s£t
(
°r
, 
°
[1]);

814 
	`STABSET
(
°r
);

817 
°r
 = 
°
[1];

820 
O_OR
:

821 i‡(
	`°r_åue
(
°
[1])) {

822 i‡(
assignög
) {

823 
	`°r_s£t
(
°r
, 
°
[1]);

824 
	`STABSET
(
°r
);

827 
°r
 = 
°
[1];

831 
™um
 = 2;

832 
›ty≥
 = 
O_ITEM2
;

833 
¨gÊags
 = 
¨g
[
™um
].
¨g_Êags
;

834 i‡(
gimme
 =
G_ARRAY
)

835 
¨gÊags
 |
AF_ARYOK
;

836 
¨gty≥
 = 
¨g
[
™um
].
¨g_ty≥
 & 
A_MASK
;

837 
¨g±r
 = 
¨g
[
™um
].
¨g_±r
;

838 
max¨g
 = 
™um
 = 1;

839 
•
 = 
¨gœ°
[0];

840 
°
 -
•
;

841 
ª_evÆ
;

843 
O_COND_EXPR
:

844 
™um
 = (
	`°r_åue
(
°
[1]) ? 2 : 3);

845 
›ty≥
 = (
™um
 =2 ? 
O_ITEM2
 : 
O_ITEM3
);

846 
¨gÊags
 = 
¨g
[
™um
].
¨g_Êags
;

847 i‡(
gimme
 =
G_ARRAY
)

848 
¨gÊags
 |
AF_ARYOK
;

849 
¨gty≥
 = 
¨g
[
™um
].
¨g_ty≥
 & 
A_MASK
;

850 
¨g±r
 = 
¨g
[
™um
].
¨g_±r
;

851 
max¨g
 = 
™um
 = 1;

852 
•
 = 
¨gœ°
[0];

853 
°
 -
•
;

854 
ª_evÆ
;

855 
O_COMMA
:

856 i‡(
gimme
 =
G_ARRAY
)

857 
¨øy_ªtu∫
;

858 
°r
 = 
°
[2];

860 
O_NEGATE
:

861 
vÆue
 = -
	`°r_gnum
(
°
[1]);

862 
d⁄um£t
;

863 
O_NOT
:

864 
vÆue
 = (Ë!
	`°r_åue
(
°
[1]);

865 
d⁄um£t
;

866 
O_COMPLEMENT
:

867 i‡(!
ßwvec
 || 
°
[1]->
°r_nok
) {

868 #i‚de‡
löt


869 
vÆue
 = (Ë~
	`U_L
(
	`°r_gnum
(
°
[1]));

871 
d⁄um£t
;

874 
	`STR_SSET
(
°r
,
°
[1]);

875 
tmps
 = 
	`°r_gë
(
°r
);

876 
™um
 = 
°r
->
°r_cur
;ánum;ánum--, 
tmps
++)

877 *
tmps
 = ~*tmps;

880 
O_SELECT
:

881 
	`°ab_fuŒ«me
(
°r
,
defout°ab
);

882 i‡(
max¨g
 > 0) {

883 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

884 
defout°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

886 
defout°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

887 i‡(!
	`°ab_io
(
defout°ab
))

888 
	`°ab_io
(
defout°ab
Ë
	`°io_√w
();

889 
curout°ab
 = 
defout°ab
;

891 
	`STABSET
(
°r
);

893 
O_WRITE
:

894 i‡(
max¨g
 == 0)

895 
°ab
 = 
defout°ab
;

896 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
) {

897 i‡(!(
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
))

898 
°ab
 = 
defout°ab
;

901 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

902 i‡(!
	`°ab_io
(
°ab
)) {

903 
	`°r_£t
(
°r
, 
No
);

904 
	`STABSET
(
°r
);

907 
curout°ab
 = 
°ab
;

908 
Â
 = 
	`°ab_io
(
°ab
)->
oÂ
;

909 
deb¨g
 = 
¨g
;

910 i‡(
	`°ab_io
(
°ab
)->
fmt_°ab
)

911 
f‹m
 = 
	`°ab_f‹m
(
	`°ab_io
(
°ab
)->
fmt_°ab
);

913 
f‹m
 = 
	`°ab_f‹m
(
°ab
);

914 i‡(!
f‹m
 || !
Â
) {

915 i‡(
dow¨n
) {

916 i‡(
f‹m
)

917 
	`w¨n
("No format for filehandle");

919 i‡(
	`°ab_io
(
°ab
)->
iÂ
)

920 
	`w¨n
("Filehandle only opened for input");

922 
	`w¨n
("Write on closed filehandle");

925 
	`°r_£t
(
°r
, 
No
);

926 
	`STABSET
(
°r
);

929 
	`f‹m©
(&
ouåec
,
f‹m
,
•
);

930 
	`do_wrôe
(&
ouåec
,
	`°ab_io
(
°ab
),
•
);

931 i‡(
	`°ab_io
(
°ab
)->
Êags
 & 
IOF_FLUSH
)

932 ()
	`fÊush
(
Â
);

933 
	`°r_£t
(
°r
, 
Yes
);

934 
	`STABSET
(
°r
);

936 
O_DBMOPEN
:

937 #ifde‡
SOME_DBM


938 
™um
 = 
¨g
[1].
¨g_ty≥
 & 
A_MASK
;

939 i‡(
™um
 =
A_WORD
 ||ánum =
A_STAB
)

940 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

942 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

943 i‡(
°
[3]->
°r_nok
 || st[3]->
°r_pok
)

944 
™um
 = ()
	`°r_gnum
(
°
[3]);

946 
™um
 = -1;

947 
vÆue
 = ()
	`hdbm›í
(
	`°ab_hash
(
°ab
),
	`°r_gë
(
°
[2]),
™um
);

948 
d⁄um£t
;

950 
	`Áèl
("No dbm orÇdbm onÅhis machine");

952 
O_DBMCLOSE
:

953 #ifde‡
SOME_DBM


954 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

955 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

957 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

958 
	`hdbm˛o£
(
	`°ab_hash
(
°ab
));

959 
ßy_yes
;

961 
	`Áèl
("No dbm orÇdbm onÅhis machine");

963 
O_OPEN
:

964 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

965 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

967 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

968 
tmps
 = 
	`°r_gë
(
°
[2]);

969 i‡(
	`do_›í
(
°ab
,
tmps
,
°
[2]->
°r_cur
)) {

970 
vÆue
 = ()
f‹k¥o˚ss
;

971 
	`°ab_io
(
°ab
)->
löes
 = 0;

972 
d⁄um£t
;

974 i‡(
f‹k¥o˚ss
 == 0)

975 
ßy_zîo
;

977 
ßy_undef
;

979 
O_TRANS
:

980 
vÆue
 = (Ë
	`do_å™s
(
°r
,
¨g
);

981 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

982 
d⁄um£t
;

983 
O_NTRANS
:

984 
	`°r_£t
(
¨g
->
¨g_±r
.
¨g_°r
, 
	`do_å™s
(
°r
,¨gË=0 ? 
Yes
 : 
No
);

985 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

987 
O_CLOSE
:

988 i‡(
max¨g
 == 0)

989 
°ab
 = 
defout°ab
;

990 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

991 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

993 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

994 
	`°r_£t
(
°r
, 
	`do_˛o£
(
°ab
,
TRUE
Ë? 
Yes
 : 
No
 );

995 
	`STABSET
(
°r
);

997 
O_EACH
:

998 
•
 = 
	`do_óch
(
°r
,
	`°ab_hash
(
¨g
[1].
¨g_±r
.
¨g_°ab
),

999 
gimme
,
¨gœ°
);

1000 
¨øy_ªtu∫
;

1001 
O_VALUES
:

1002 
O_KEYS
:

1003 
•
 = 
	`do_kv
(
°r
,
	`°ab_hash
(
¨g
[1].
¨g_±r
.
¨g_°ab
), 
›ty≥
,

1004 
gimme
,
¨gœ°
);

1005 
¨øy_ªtu∫
;

1006 
O_LARRAY
:

1007 
°r
->
°r_nok
 = så->
°r_pok
 = 0;

1008 
°r
->
°r_u
.
°r_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1009 
°r
->
°r_°©e
 = 
SS_ARY
;

1011 
O_ARRAY
:

1012 
¨y
 = 
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

1013 
max¨g
 = 
¨y
->
¨y_fûl
 + 1;

1014 i‡(
gimme
 =
G_ARRAY
) {

1015 
•
 = 
¨gœ°
[0];

1016 
°
 -
•
;

1017 i‡(
max¨g
 > 0 && 
•
 + max¨g > 
°ack
->
¨y_max
) {

1018 
	`a°‹e
(
°ack
,
•
 + 
max¨g
, 
NuŒ°r
);

1019 
°
 = 
°ack
->
¨y_¨øy
;

1021 
°
 +
•
;

1022 
	`C›y
(
¨y
->
¨y_¨øy
, &
°
[1], 
max¨g
, 
STR
*);

1023 
•
 +
max¨g
;

1024 
¨øy_ªtu∫
;

1027 
vÆue
 = ()
max¨g
;

1028 
d⁄um£t
;

1030 
O_AELEM
:

1031 
™um
 = (()
	`°r_gnum
(
°
[2])Ë- 
¨yba£
;

1032 
°r
 = 
	`a„tch
(
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
),
™um
,
FALSE
);

1034 
O_DELETE
:

1035 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1036 
tmps
 = 
	`°r_gë
(
°
[2]);

1037 
°r
 = 
	`hdñëe
(
	`°ab_hash
(
tmp°ab
),
tmps
,
°
[2]->
°r_cur
);

1038 i‡(
tmp°ab
 =
ív°ab
)

1039 
	`my_£ãnv
(
tmps
,
NuŒch
);

1040 i‡(!
°r
)

1041 
ßy_undef
;

1043 
O_LHASH
:

1044 
°r
->
°r_nok
 = så->
°r_pok
 = 0;

1045 
°r
->
°r_u
.
°r_°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1046 
°r
->
°r_°©e
 = 
SS_HASH
;

1048 
O_HASH
:

1049 i‡(
gimme
 =
G_ARRAY
) {

1050 
•
 = 
	`do_kv
(
°r
,
	`°ab_hash
(
¨g
[1].
¨g_±r
.
¨g_°ab
), 
›ty≥
,

1051 
gimme
,
¨gœ°
);

1052 
¨øy_ªtu∫
;

1055 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1056 i‡(!
	`°ab_hash
(
tmp°ab
)->
tbl_fûl
)

1057 
ßy_zîo
;

1058 
	`•rötf
(
buf
,"%d/%d",
	`°ab_hash
(
tmp°ab
)->
tbl_fûl
,

1059 
	`°ab_hash
(
tmp°ab
)->
tbl_max
+1);

1060 
	`°r_£t
(
°r
,
buf
);

1063 
O_HELEM
:

1064 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1065 
tmps
 = 
	`°r_gë
(
°
[2]);

1066 
°r
 = 
	`h„tch
(
	`°ab_hash
(
tmp°ab
),
tmps
,
°
[2]->
°r_cur
,
FALSE
);

1068 
O_LAELEM
:

1069 
™um
 = (()
	`°r_gnum
(
°
[2])Ë- 
¨yba£
;

1070 
°r
 = 
	`a„tch
(
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
),
™um
,
TRUE
);

1071 i‡(!
°r
 || så =&
°r_undef
)

1072 
	`Áèl
("Assignmíàtÿn⁄-¸óèbÀ vÆue, subs¸ùà%d",
™um
);

1074 
O_LHELEM
:

1075 
tmp°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1076 
tmps
 = 
	`°r_gë
(
°
[2]);

1077 
™um
 = 
°
[2]->
°r_cur
;

1078 
°r
 = 
	`h„tch
(
	`°ab_hash
(
tmp°ab
),
tmps
,
™um
,
TRUE
);

1079 i‡(!
°r
 || så =&
°r_undef
)

1080 
	`Áèl
("Assignmíàtÿn⁄-¸óèbÀ vÆue, subs¸ùà\"%s\"",
tmps
);

1081 i‡(
tmp°ab
 =
ív°ab
)

1082 
	`°r_magic
(
°r
, 
tmp°ab
, 'E', 
tmps
, 
™um
);

1084 i‡(
tmp°ab
 =
sig°ab
)

1085 
	`°r_magic
(
°r
, 
tmp°ab
, 'S', 
tmps
, 
™um
);

1086 #ifde‡
SOME_DBM


1087 i‡(
	`°ab_hash
(
tmp°ab
)->
tbl_dbm
)

1088 
	`°r_magic
(
°r
, 
tmp°ab
, 'D', 
tmps
, 
™um
);

1090 i‡(
≥ædb
 && 
tmp°ab
 =
DBlöe
)

1091 
	`°r_magic
(
°r
, 
tmp°ab
, 'L', 
tmps
, 
™um
);

1093 
O_LSLICE
:

1094 
™um
 = 2;

1095 
¨gty≥
 = 
FALSE
;

1096 
do_¶i˚_Æªady
;

1097 
O_ASLICE
:

1098 
™um
 = 1;

1099 
¨gty≥
 = 
FALSE
;

1100 
do_¶i˚_Æªady
;

1101 
O_HSLICE
:

1102 
™um
 = 0;

1103 
¨gty≥
 = 
FALSE
;

1104 
do_¶i˚_Æªady
;

1105 
O_LASLICE
:

1106 
™um
 = 1;

1107 
¨gty≥
 = 
TRUE
;

1108 
do_¶i˚_Æªady
;

1109 
O_LHSLICE
:

1110 
™um
 = 0;

1111 
¨gty≥
 = 
TRUE
;

1112 
do_¶i˚_Æªady
:

1113 
•
 = 
	`do_¶i˚
(
¨g
[1].
¨g_±r
.
¨g_°ab
,
°r
,
™um
,
¨gty≥
,

1114 
gimme
,
¨gœ°
);

1115 
¨øy_ªtu∫
;

1116 
O_SPLICE
:

1117 
•
 = 
	`do_•li˚
(
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
),
gimme
,
¨gœ°
);

1118 
¨øy_ªtu∫
;

1119 
O_PUSH
:

1120 i‡(
¨gœ°
[2] -árglast[1] != 1)

1121 
°r
 = 
	`do_push
(
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
),
¨gœ°
);

1123 
°r
 = 
	`Så_√w
(51,0);

1124 
	`°r_s£t
(
°r
,
°
[2]);

1125 ()
	`≠ush
(
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
),
°r
);

1128 
O_POP
:

1129 
°r
 = 
	`≠›
(
¨y
 = 
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
));

1130 
°©iˇliz©i⁄
;

1131 
O_SHIFT
:

1132 
°r
 = 
	`ashi·
(
¨y
 = 
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
));

1133 
°©iˇliz©i⁄
:

1134 i‡(!
°r
)

1135 
ßy_undef
;

1136 i‡(
¨y
->
¨y_Êags
 & 
ARF_REAL
)

1137 ()
	`°r_2m‹èl
(
°r
);

1139 
O_UNPACK
:

1140 
•
 = 
	`do_u≈ack
(
°r
,
gimme
,
¨gœ°
);

1141 
¨øy_ªtu∫
;

1142 
O_SPLIT
:

1143 
vÆue
 = 
	`°r_gnum
(
°
[3]);

1144 
•
 = 
	`do_•lô
(
°r
, 
¨g
[2].
¨g_±r
.
¨g_•©
, ()
vÆue
,

1145 
gimme
,
¨gœ°
);

1146 
¨øy_ªtu∫
;

1147 
O_LENGTH
:

1148 i‡(
max¨g
 < 1)

1149 
vÆue
 = ()
	`°r_Àn
(
	`°ab_vÆ
(
def°ab
));

1151 
vÆue
 = ()
	`°r_Àn
(
°
[1]);

1152 
d⁄um£t
;

1153 
O_SPRINTF
:

1154 
	`do_•rötf
(
°r
, 
•
-
¨gœ°
[0], 
°
+1);

1156 
O_SUBSTR
:

1157 
™um
 = (()
	`°r_gnum
(
°
[2])Ë- 
¨yba£
;

1158 
tmps
 = 
	`°r_gë
(
°
[1]);

1159 i‡(
¨gty≥
 = (
°r
 =
°
[1]))

1160 
°r
 = 
¨g
->
¨g_±r
.
¨g_°r
;

1161 i‡(
™um
 < 0)

1162 
™um
 +
°
[1]->
°r_cur
 + 
¨yba£
;

1163 i‡(
™um
 < 0 ||ánum > 
°
[1]->
°r_cur
)

1164 
	`°r_n£t
(
°r
,"",0);

1166 
›ty≥
 = 
max¨g
 < 3 ? 
°
[1]->
°r_cur
 : ()
	`°r_gnum
(st[3]);

1167 i‡(
›ty≥
 < 0)

1168 
›ty≥
 = 0;

1169 
tmps
 +
™um
;

1170 
™um
 = 
°
[1]->
°r_cur
 -ánum;

1171 i‡(
™um
 > 
›ty≥
)

1172 
™um
 = 
›ty≥
;

1173 
	`°r_n£t
(
°r
, 
tmps
, 
™um
);

1174 i‡(
¨gty≥
) {

1175 
l°r
 = (
l°rög
*)
°r
;

1176 
°r
->
°r_magic
 = 
°
[1];

1177 
°
[1]->
°r_øª
 = 's';

1178 
l°r
->
l°r_off£t
 = 
tmps
 - 
	`°r_gë
(
°
[1]);

1179 
l°r
->
l°r_Àn
 = 
™um
;

1183 
O_PACK
:

1184 ()
	`do_∑ck
(
°r
,
¨gœ°
);

1186 
O_GREP
:

1187 
•
 = 
	`do_gªp
(
¨g
,
°r
,
gimme
,
¨gœ°
);

1188 
¨øy_ªtu∫
;

1189 
O_JOIN
:

1190 
	`do_joö
(
°r
,
¨gœ°
);

1192 
O_SLT
:

1193 
tmps
 = 
	`°r_gë
(
°
[1]);

1194 
vÆue
 = (Ë(
	`°r_cmp
(
°
[1],st[2]) < 0);

1195 
d⁄um£t
;

1196 
O_SGT
:

1197 
tmps
 = 
	`°r_gë
(
°
[1]);

1198 
vÆue
 = (Ë(
	`°r_cmp
(
°
[1],st[2]) > 0);

1199 
d⁄um£t
;

1200 
O_SLE
:

1201 
tmps
 = 
	`°r_gë
(
°
[1]);

1202 
vÆue
 = (Ë(
	`°r_cmp
(
°
[1],st[2]) <= 0);

1203 
d⁄um£t
;

1204 
O_SGE
:

1205 
tmps
 = 
	`°r_gë
(
°
[1]);

1206 
vÆue
 = (Ë(
	`°r_cmp
(
°
[1],st[2]) >= 0);

1207 
d⁄um£t
;

1208 
O_SEQ
:

1209 
tmps
 = 
	`°r_gë
(
°
[1]);

1210 
vÆue
 = (Ë
	`°r_eq
(
°
[1],st[2]);

1211 
d⁄um£t
;

1212 
O_SNE
:

1213 
tmps
 = 
	`°r_gë
(
°
[1]);

1214 
vÆue
 = (Ë!
	`°r_eq
(
°
[1],st[2]);

1215 
d⁄um£t
;

1216 
O_SCMP
:

1217 
tmps
 = 
	`°r_gë
(
°
[1]);

1218 
vÆue
 = (Ë
	`°r_cmp
(
°
[1],st[2]);

1219 
d⁄um£t
;

1220 
O_SUBR
:

1221 
•
 = 
	`do_subr
(
¨g
,
gimme
,
¨gœ°
);

1222 
°
 = 
°ack
->
¨y_¨øy
 + 
¨gœ°
[0];

1223 
¨øy_ªtu∫
;

1224 
O_DBSUBR
:

1225 
•
 = 
	`do_subr
(
¨g
,
gimme
,
¨gœ°
);

1226 
°
 = 
°ack
->
¨y_¨øy
 + 
¨gœ°
[0];

1227 
¨øy_ªtu∫
;

1228 
O_CALLER
:

1229 
•
 = 
	`do_ˇŒî
(
¨g
,
max¨g
,
gimme
,
¨gœ°
);

1230 
°
 = 
°ack
->
¨y_¨øy
 + 
¨gœ°
[0];

1231 
¨øy_ªtu∫
;

1232 
O_SORT
:

1233 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1234 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1236 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1237 
•
 = 
	`do_s‹t
(
°r
,
°ab
,

1238 
gimme
,
¨gœ°
);

1239 
¨øy_ªtu∫
;

1240 
O_REVERSE
:

1241 i‡(
gimme
 =
G_ARRAY
)

1242 
•
 = 
	`do_ªvî£
(
¨gœ°
);

1244 
•
 = 
	`do_§evî£
(
°r
, 
¨gœ°
);

1245 
¨øy_ªtu∫
;

1246 
O_WARN
:

1247 i‡(
¨gœ°
[2] -árglast[1] != 1) {

1248 
	`do_joö
(
°r
,
¨gœ°
);

1249 
tmps
 = 
	`°r_gë
(
°r
);

1252 
°r
 = 
°
[2];

1253 
tmps
 = 
	`°r_gë
(
°
[2]);

1255 i‡(!
tmps
 || !*tmps)

1256 
tmps
 = "Warning: something's wrong";

1257 
	`w¨n
("%s",
tmps
);

1258 
ßy_yes
;

1259 
O_DIE
:

1260 i‡(
¨gœ°
[2] -árglast[1] != 1) {

1261 
	`do_joö
(
°r
,
¨gœ°
);

1262 
tmps
 = 
	`°r_gë
(
°r
);

1265 
°r
 = 
°
[2];

1266 
tmps
 = 
	`°r_gë
(
°
[2]);

1268 i‡(!
tmps
 || !*tmps)

1269 
tmps
 = "Died";

1270 
	`Áèl
("%s",
tmps
);

1271 
ßy_zîo
;

1272 
O_PRTF
:

1273 
O_PRINT
:

1274 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1275 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1277 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1278 i‡(!
°ab
)

1279 
°ab
 = 
defout°ab
;

1280 i‡(!
	`°ab_io
(
°ab
)) {

1281 i‡(
dow¨n
)

1282 
	`w¨n
("FilehandleÇever opened");

1283 
ßy_zîo
;

1285 i‡(!(
Â
 = 
	`°ab_io
(
°ab
)->
oÂ
)) {

1286 i‡(
dow¨n
) {

1287 i‡(
	`°ab_io
(
°ab
)->
iÂ
)

1288 
	`w¨n
("Filehandle opened only for input");

1290 
	`w¨n
("Print on closed filehandle");

1292 
ßy_zîo
;

1295 i‡(
›ty≥
 =
O_PRTF
 || 
¨gœ°
[2] -árglast[1] != 1)

1296 
vÆue
 = ()
	`do_≠röt
(
¨g
,
Â
,
¨gœ°
);

1298 
vÆue
 = ()
	`do_¥öt
(
°
[2],
Â
);

1299 i‡(
‹¶í
 && 
›ty≥
 =
O_PRINT
)

1300 i‡(
	`fwrôe
(
‹s
, 1, 
‹¶í
, 
Â
) == 0)

1301 
ßy_zîo
;

1303 i‡(
	`°ab_io
(
°ab
)->
Êags
 & 
IOF_FLUSH
)

1304 i‡(
	`fÊush
(
Â
Ë=
EOF
)

1305 
ßy_zîo
;

1307 
d⁄um£t
;

1308 
O_CHDIR
:

1309 i‡(
max¨g
 < 1)

1310 
tmps
 = 
NuŒch
;

1312 
tmps
 = 
	`°r_gë
(
°
[1]);

1313 i‡(!
tmps
 || !*tmps) {

1314 
tmp°r
 = 
	`h„tch
(
	`°ab_hash
(
ív°ab
),"HOME",4,
FALSE
);

1315 
tmps
 = 
	`°r_gë
(
tmp°r
);

1317 i‡(!
tmps
 || !*tmps) {

1318 
tmp°r
 = 
	`h„tch
(
	`°ab_hash
(
ív°ab
),"LOGDIR",6,
FALSE
);

1319 
tmps
 = 
	`°r_gë
(
tmp°r
);

1321 #ifde‡
TAINT


1322 
	`èöçr›î
("Insecure dependency in chdir");

1324 
vÆue
 = ()(
	`chdú
(
tmps
) >= 0);

1325 
d⁄um£t
;

1326 
O_EXIT
:

1327 i‡(
max¨g
 < 1)

1328 
™um
 = 0;

1330 
™um
 = ()
	`°r_gnum
(
°
[1]);

1331 
	`exô
(
™um
);

1332 
ßy_zîo
;

1333 
O_RESET
:

1334 i‡(
max¨g
 < 1)

1335 
tmps
 = "";

1337 
tmps
 = 
	`°r_gë
(
°
[1]);

1338 
	`°r_ª£t
(
tmps
,
curcmd
->
c_°ash
);

1339 
vÆue
 = 1.0;

1340 
d⁄um£t
;

1341 
O_LIST
:

1342 i‡(
gimme
 =
G_ARRAY
)

1343 
¨øy_ªtu∫
;

1344 i‡(
max¨g
 > 0)

1345 
°r
 = 
°
[
•
 - 
¨gœ°
[0]];

1347 
°r
 = &
°r_undef
;

1349 
O_EOF
:

1350 i‡(
max¨g
 <= 0)

1351 
°ab
 = 
œ°_ö_°ab
;

1352 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1353 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1355 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1356 
	`°r_£t
(
°r
, 
	`do_eof
(
°ab
Ë? 
Yes
 : 
No
);

1357 
	`STABSET
(
°r
);

1359 
O_GETC
:

1360 i‡(
max¨g
 <= 0)

1361 
°ab
 = 
°dö°ab
;

1362 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1363 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1365 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1366 i‡(!
°ab
)

1367 
°ab
 = 
¨gv°ab
;

1368 i‡(!
°ab
 || 
	`do_eof
(stab))

1369 
ßy_undef
;

1371 #ifde‡
TAINT


1372 
èöãd
 = 1;

1374 
	`°r_£t
(
°r
," ");

1375 *
°r
->
°r_±r
 = 
	`gëc
(
	`°ab_io
(
°ab
)->
iÂ
);

1377 
	`STABSET
(
°r
);

1379 
O_TELL
:

1380 i‡(
max¨g
 <= 0)

1381 
°ab
 = 
œ°_ö_°ab
;

1382 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1383 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1385 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1386 #i‚de‡
löt


1387 
vÆue
 = ()
	`do_ãŒ
(
°ab
);

1389 ()
	`do_ãŒ
(
°ab
);

1391 
d⁄um£t
;

1392 
O_RECV
:

1393 
O_READ
:

1394 
O_SYSREAD
:

1395 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1396 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1398 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1399 
tmps
 = 
	`°r_gë
(
°
[2]);

1400 
™um
 = ()
	`°r_gnum
(
°
[3]);

1401 
î∫o
 = 0;

1402 
max¨g
 = 
•
 - 
¨gœ°
[0];

1403 i‡(
max¨g
 > 4)

1404 
	`w¨n
("Too manyárgs onÑead");

1405 i‡(
max¨g
 == 4)

1406 
max¨g
 = ()
	`°r_gnum
(
°
[4]);

1408 
max¨g
 = 0;

1409 i‡(!
	`°ab_io
(
°ab
Ë|| !°ab_io(°ab)->
iÂ
)

1410 
ßy_undef
;

1411 #ifde‡
HAS_SOCKET


1412 i‡(
›ty≥
 =
O_RECV
) {

1413 
¨gty≥
 =  
buf
;

1414 
	`STR_GROW
(
°
[2], 
™um
+1), (
tmps
 = 
	`°r_gë
(st[2]));

1415 
™um
 = 
	`ªcv‰om
(
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
), 
tmps
,ánum, 
max¨g
,

1416 
buf
, &
¨gty≥
);

1417 i‡(
™um
 >= 0) {

1418 
°
[2]->
°r_cur
 = 
™um
;

1419 
°
[2]->
°r_±r
[
™um
] = '\0';

1420 
	`°r_n£t
(
°r
,
buf
,
¨gty≥
);

1423 
	`°r_s£t
(
°r
,&
°r_undef
);

1427 i‡(
›ty≥
 =
O_RECV
)

1428 
badsock
;

1430 
	`STR_GROW
(
°
[2], 
™um
+
max¨g
+1), (
tmps
 = 
	`°r_gë
(st[2]));

1431 #ifde‡
HAS_SOCKET


1432 i‡(
	`°ab_io
(
°ab
)->
ty≥
 == 's') {

1433 
¨gty≥
 =  
buf
;

1434 
™um
 = 
	`ªcv‰om
(
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
), 
tmps
+
max¨g
,ánum, 0,

1435 
buf
, &
¨gty≥
);

1439 i‡(
›ty≥
 =
O_SYSREAD
) {

1440 
™um
 = 
	`ªad
(
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
), 
tmps
+
max¨g
,ánum);

1443 
™um
 = 
	`‰ód
(
tmps
+
max¨g
, 1,ánum, 
	`°ab_io
(
°ab
)->
iÂ
);

1444 i‡(
™um
 < 0)

1445 
ßy_undef
;

1446 
°
[2]->
°r_cur
 = 
™um
+
max¨g
;

1447 
°
[2]->
°r_±r
[
™um
+
max¨g
] = '\0';

1448 
vÆue
 = ()
™um
;

1449 
d⁄um£t
;

1450 
O_SYSWRITE
:

1451 
O_SEND
:

1452 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1453 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1455 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1456 
tmps
 = 
	`°r_gë
(
°
[2]);

1457 
™um
 = ()
	`°r_gnum
(
°
[3]);

1458 
î∫o
 = 0;

1459 
°io
 = 
	`°ab_io
(
°ab
);

1460 
max¨g
 = 
•
 - 
¨gœ°
[0];

1461 i‡(!
°io
 || !°io->
iÂ
) {

1462 
™um
 = -1;

1463 i‡(
dow¨n
) {

1464 i‡(
›ty≥
 =
O_SYSWRITE
)

1465 
	`w¨n
("Syswrite on closed filehandle");

1467 
	`w¨n
("Send on closed socket");

1470 i‡(
›ty≥
 =
O_SYSWRITE
) {

1471 i‡(
max¨g
 > 4)

1472 
	`w¨n
("Too manyárgs on syswrite");

1473 i‡(
max¨g
 == 4)

1474 
›ty≥
 = ()
	`°r_gnum
(
°
[4]);

1476 
›ty≥
 = 0;

1477 
™um
 = 
	`wrôe
(
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
), 
tmps
+
›ty≥
,ánum);

1479 #ifde‡
HAS_SOCKET


1480 i‡(
max¨g
 >= 4) {

1481 i‡(
max¨g
 > 4)

1482 
	`w¨n
("Too manyárgs on send");

1483 
tmps2
 = 
	`°r_gë
(
°
[4]);

1484 
™um
 = 
	`£ndto
(
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
), 
tmps
, 
°
[2]->
°r_cur
,

1485 
™um
, 
tmps2
, 
°
[4]->
°r_cur
);

1488 
™um
 = 
	`£nd
(
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
), 
tmps
, 
°
[2]->
°r_cur
,ánum);

1491 
badsock
;

1493 i‡(
™um
 < 0)

1494 
ßy_undef
;

1495 
vÆue
 = ()
™um
;

1496 
d⁄um£t
;

1497 
O_SEEK
:

1498 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

1499 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

1501 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

1502 
vÆue
 = 
	`°r_gnum
(
°
[2]);

1503 
	`°r_£t
(
°r
, 
	`do_£ek
(
°ab
,

1504 ()
vÆue
, ()
	`°r_gnum
(
°
[3]ËË? 
Yes
 : 
No
);

1505 
	`STABSET
(
°r
);

1507 
O_RETURN
:

1508 
tmps
 = "_SUB_";

1509 
›ty≥
 = 
O_LAST
;

1510 i‡(
curcsv
 && curcsv->
w™èºay
 =
G_ARRAY
) {

1511 
œ°ªt°r
 = 
NuŒ°r
;

1512 
œ°•ba£
 = 
¨gœ°
[1];

1513 
œ°size
 = 
¨gœ°
[2] -árglast[1];

1516 
œ°ªt°r
 = 
	`°r_m‹èl
(
°
[
¨gœ°
[2] -árglast[0]]);

1517 
d››
;

1518 
O_REDO
:

1519 
O_NEXT
:

1520 
O_LAST
:

1521 i‡(
max¨g
 > 0) {

1522 
tmps
 = 
	`°r_gë
(
¨g
[1].
¨g_±r
.
¨g_°r
);

1523 
d››
:

1524 
lo›_±r
 >0 && (!
lo›_°ack
[lo›_±r].
lo›_œbñ
 ||

1525 
	`°rNE
(
tmps
,
lo›_°ack
[
lo›_±r
].
lo›_œbñ
) )) {

1526 #ifde‡
DEBUGGING


1527 i‡(
debug
 & 4) {

1528 
	`deb
("(SkùpögÜabñ #%d %s)\n",
lo›_±r
,

1529 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
);

1532 
lo›_±r
--;

1534 #ifde‡
DEBUGGING


1535 i‡(
debug
 & 4) {

1536 
	`deb
("(FoundÜabñ #%d %s)\n",
lo›_±r
,

1537 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
);

1541 i‡(
lo›_±r
 < 0) {

1542 i‡(
tmps
 && 
	`°rEQ
(tmps, "_SUB_"))

1543 
	`Áèl
("Can'tÑeturn outsideá subroutine");

1544 
	`Áèl
("BadÜabñ: %s", 
max¨g
 > 0 ? 
tmps
 : "<null>");

1546 i‡(!
œ°ªt°r
 && 
›ty≥
 =
O_LAST
 && 
œ°size
) {

1547 
°
 -
¨gœ°
[0];

1548 
°
 +
œ°•ba£
 + 1;

1549 
›ty≥
 = 
lo›_°ack
[
lo›_±r
].
lo›_•
 - 
œ°•ba£
;

1550 i‡(
›ty≥
) {

1551 
™um
 = 
œ°size
;ánum > 0;ánum--,
°
++)

1552 
°
[
›ty≥
] = 
	`°r_m‹èl
(st[0]);

1554 
	`l⁄gjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
, 
O_LAST
);

1556 
	`l⁄gjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
, 
›ty≥
);

1557 
O_DUMP
:

1558 
O_GOTO
:

1559 
gŸo_èrg
 = 
	`°r_gë
(
¨g
[1].
¨g_±r
.
¨g_°r
);

1560 i‡(!*
gŸo_èrg
)

1561 
gŸo_èrg
 = 
NuŒch
;

1562 i‡(
›ty≥
 =
O_DUMP
) {

1563 
do_undump
 = 1;

1564 
	`my_u√xec
();

1566 
	`l⁄gjmp
(
t›_ív
, 1);

1567 
O_INDEX
:

1568 
tmps
 = 
	`°r_gë
(
°
[1]);

1569 i‡(
max¨g
 < 3)

1570 
™um
 = 0;

1572 
™um
 = (Ë
	`°r_gnum
(
°
[3]Ë- 
¨yba£
;

1573 i‡(
™um
 < 0)

1574 
™um
 = 0;

1575 i‡(
™um
 > 
°
[1]->
°r_cur
)

1576 
™um
 = 
°
[1]->
°r_cur
;

1578 #i‚de‡
löt


1579 i‡(!(
tmps2
 = 
	`fbmö°r
((*)
tmps
 + 
™um
,

1580 (*)
tmps
 + 
°
[1]->
°r_cur
, st[2])))

1582 i‡(
tmps2
 = 
	`fbmö°r
(
	`NuŒ
(*),NuŒ(*),
NuŒ°r
))

1584 
vÆue
 = ()(-1 + 
¨yba£
);

1586 
vÆue
 = ()(
tmps2
 - 
tmps
 + 
¨yba£
);

1587 
d⁄um£t
;

1588 
O_RINDEX
:

1589 
tmps
 = 
	`°r_gë
(
°
[1]);

1590 
tmps2
 = 
	`°r_gë
(
°
[2]);

1591 i‡(
max¨g
 < 3)

1592 
™um
 = 
°
[1]->
°r_cur
;

1594 
™um
 = (Ë
	`°r_gnum
(
°
[3]Ë- 
¨yba£
 + st[2]->
°r_cur
;

1595 i‡(
™um
 < 0)

1596 
™um
 = 0;

1597 i‡(
™um
 > 
°
[1]->
°r_cur
)

1598 
™um
 = 
°
[1]->
°r_cur
;

1600 #i‚de‡
löt


1601 i‡(!(
tmps2
 = 
	`∫ö°r
(
tmps
,Åmp†+ 
™um
,

1602 
tmps2
,Åmps2 + 
°
[2]->
°r_cur
)))

1604 i‡(
tmps2
 = 
	`∫ö°r
(
NuŒch
,Nullch,Nullch,Nullch))

1606 
vÆue
 = ()(-1 + 
¨yba£
);

1608 
vÆue
 = ()(
tmps2
 - 
tmps
 + 
¨yba£
);

1609 
d⁄um£t
;

1610 
O_TIME
:

1611 #i‚de‡
löt


1612 
vÆue
 = (Ë
	`time
(
	`NuŒ
(*));

1614 
d⁄um£t
;

1615 
O_TMS
:

1616 
•
 = 
	`do_tms
(
°r
,
gimme
,
¨gœ°
);

1617 
¨øy_ªtu∫
;

1618 
O_LOCALTIME
:

1619 i‡(
max¨g
 < 1)

1620 ()
	`time
(&
whí
);

1622 
whí
 = ()
	`°r_gnum
(
°
[1]);

1623 
•
 = 
	`do_time
(
°r
,
	`loˇ…ime
(&
whí
),

1624 
gimme
,
¨gœ°
);

1625 
¨øy_ªtu∫
;

1626 
O_GMTIME
:

1627 i‡(
max¨g
 < 1)

1628 ()
	`time
(&
whí
);

1630 
whí
 = ()
	`°r_gnum
(
°
[1]);

1631 
•
 = 
	`do_time
(
°r
,
	`gmtime
(&
whí
),

1632 
gimme
,
¨gœ°
);

1633 
¨øy_ªtu∫
;

1634 
O_TRUNCATE
:

1635 
•
 = 
	`do_åunˇã
(
°r
,
¨g
,

1636 
gimme
,
¨gœ°
);

1637 
¨øy_ªtu∫
;

1638 
O_LSTAT
:

1639 
O_STAT
:

1640 
•
 = 
	`do_°©
(
°r
,
¨g
,

1641 
gimme
,
¨gœ°
);

1642 
¨øy_ªtu∫
;

1643 
O_CRYPT
:

1644 #ifde‡
HAS_CRYPT


1645 
tmps
 = 
	`°r_gë
(
°
[1]);

1646 #ifde‡
FCRYPT


1647 
	`°r_£t
(
°r
,
	`f¸y±
(
tmps
,
	`°r_gë
(
°
[2])));

1649 
	`°r_£t
(
°r
,
	`¸y±
(
tmps
,
	`°r_gë
(
°
[2])));

1652 
	`Áèl
(

1656 
O_ATAN2
:

1657 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1658 
vÆue
 = 
	`©™2
(vÆue,
	`°r_gnum
(
°
[2]));

1659 
d⁄um£t
;

1660 
O_SIN
:

1661 i‡(
max¨g
 < 1)

1662 
vÆue
 = 
	`°r_gnum
(
	`°ab_vÆ
(
def°ab
));

1664 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1665 
vÆue
 = 
	`sö
(value);

1666 
d⁄um£t
;

1667 
O_COS
:

1668 i‡(
max¨g
 < 1)

1669 
vÆue
 = 
	`°r_gnum
(
	`°ab_vÆ
(
def°ab
));

1671 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1672 
vÆue
 = 
	`cos
(value);

1673 
d⁄um£t
;

1674 
O_RAND
:

1675 i‡(
max¨g
 < 1)

1676 
vÆue
 = 1.0;

1678 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1679 i‡(
vÆue
 == 0.0)

1680 
vÆue
 = 1.0;

1681 #i‡
RANDBITS
 == 31

1682 
vÆue
 = 
	`ønd
() * value / 2147483648.0;

1684 #i‡
RANDBITS
 == 16

1685 
vÆue
 = 
	`ønd
() * value / 65536.0;

1687 #i‡
RANDBITS
 == 15

1688 
vÆue
 = 
	`ønd
() * value / 32768.0;

1690 
vÆue
 = 
	`ønd
(Ë* vÆuê/ ()((()1Ë<< 
RANDBITS
);

1694 
d⁄um£t
;

1695 
O_SRAND
:

1696 i‡(
max¨g
 < 1) {

1697 ()
	`time
(&
whí
);

1698 
™um
 = 
whí
;

1701 
™um
 = ()
	`°r_gnum
(
°
[1]);

1702 ()
	`§™d
(
™um
);

1703 
ßy_yes
;

1704 
O_EXP
:

1705 i‡(
max¨g
 < 1)

1706 
vÆue
 = 
	`°r_gnum
(
	`°ab_vÆ
(
def°ab
));

1708 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1709 
vÆue
 = 
	`exp
(value);

1710 
d⁄um£t
;

1711 
O_LOG
:

1712 i‡(
max¨g
 < 1)

1713 
vÆue
 = 
	`°r_gnum
(
	`°ab_vÆ
(
def°ab
));

1715 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1716 i‡(
vÆue
 <= 0.0)

1717 
	`Áèl
("C™'àèkêlog o‡%g\n", 
vÆue
);

1718 
vÆue
 = 
	`log
(value);

1719 
d⁄um£t
;

1720 
O_SQRT
:

1721 i‡(
max¨g
 < 1)

1722 
vÆue
 = 
	`°r_gnum
(
	`°ab_vÆ
(
def°ab
));

1724 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1725 i‡(
vÆue
 < 0.0)

1726 
	`Áèl
("C™'àèkêsqπ o‡%g\n", 
vÆue
);

1727 
vÆue
 = 
	`sqπ
(value);

1728 
d⁄um£t
;

1729 
O_INT
:

1730 i‡(
max¨g
 < 1)

1731 
vÆue
 = 
	`°r_gnum
(
	`°ab_vÆ
(
def°ab
));

1733 
vÆue
 = 
	`°r_gnum
(
°
[1]);

1734 i‡(
vÆue
 >= 0.0)

1735 ()
	`modf
(
vÆue
,&value);

1737 ()
	`modf
(-
vÆue
,&value);

1738 
vÆue
 = -value;

1740 
d⁄um£t
;

1741 
O_ORD
:

1742 i‡(
max¨g
 < 1)

1743 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

1745 
tmps
 = 
	`°r_gë
(
°
[1]);

1746 #i‚de‡
I286


1747 
vÆue
 = (Ë(*
tmps
 & 255);

1749 
™um
 = (Ë*
tmps
;

1750 
vÆue
 = (Ë(
™um
 & 255);

1752 
d⁄um£t
;

1753 
O_ALARM
:

1754 #ifde‡
HAS_ALARM


1755 i‡(
max¨g
 < 1)

1756 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

1758 
tmps
 = 
	`°r_gë
(
°
[1]);

1759 i‡(!
tmps
)

1760 
tmps
 = "0";

1761 
™um
 = 
	`Æ¨m
(()
	`©oi
(
tmps
));

1762 i‡(
™um
 < 0)

1763 
ßy_undef
;

1764 
vÆue
 = ()
™um
;

1765 
d⁄um£t
;

1767 
	`Áèl
("Unsupported functionálarm");

1770 
O_SLEEP
:

1771 i‡(
max¨g
 < 1)

1772 
tmps
 = 
NuŒch
;

1774 
tmps
 = 
	`°r_gë
(
°
[1]);

1775 ()
	`time
(&
whí
);

1776 i‡(!
tmps
 || !*tmps)

1777 
	`¶ìp
((32767<<16)+32767);

1779 
	`¶ìp
(()
	`©oi
(
tmps
));

1780 #i‚de‡
löt


1781 
vÆue
 = ()
whí
;

1782 ()
	`time
(&
whí
);

1783 
vÆue
 = (()
whí
) - value;

1785 
d⁄um£t
;

1786 
O_RANGE
:

1787 
•
 = 
	`do_ønge
(
gimme
,
¨gœ°
);

1788 
¨øy_ªtu∫
;

1789 
O_F_OR_R
:

1790 i‡(
gimme
 =
G_ARRAY
) {

1792 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
 &&

1793 (
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
) {

1794 
°
[2] = 
¨g
[2].
¨g_±r
.
¨g_°r
;

1795 
•
 = 
	`do_ønge
(
gimme
,
¨gœ°
);

1796 
°
 = 
°ack
->
¨y_¨øy
;

1797 
max¨g
 = 
•
 - 
¨gœ°
[0];

1798 
	`°r_‰ì
(
¨g
[1].
¨g_±r
.
¨g_°r
);

1799 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
NuŒ°r
;

1800 
	`°r_‰ì
(
¨g
[2].
¨g_±r
.
¨g_°r
);

1801 
¨g
[2].
¨g_±r
.
¨g_°r
 = 
NuŒ°r
;

1802 
¨g
->
¨g_ty≥
 = 
O_ARRAY
;

1803 
¨g
[1].
¨g_ty≥
 = 
A_STAB
|
A_DONT
;

1804 
¨g
->
¨g_Àn
 = 1;

1805 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
 = 
	`Ødd
(
	`gí°ab
());

1806 
¨y
 = 
	`°ab_¨øy
(
°ab
);

1807 
	`afûl
(
¨y
,
max¨g
 - 1);

1808 
™um
 = 
max¨g
;

1809 
°
 +
¨gœ°
[0]+1;

1810 
max¨g
-- > 0)

1811 
¨y
->
¨y_¨øy
[
max¨g
] = 
	`°r_smake
(
°
[maxarg]);

1812 
°
 -
¨gœ°
[0]+1;

1813 
¨øy_ªtu∫
;

1815 
¨g
->
¨g_ty≥
 = 
›ty≥
 = 
O_RANGE
;

1816 
max¨g
 = 
¨g
->
¨g_Àn
 = 2;

1817 
™um
 = 2;

1818 
¨g
[
™um
].
¨g_Êags
 &~
AF_ARYOK
;

1819 
¨gÊags
 = 
¨g
[
™um
].
¨g_Êags
;

1820 
¨gty≥
 = 
¨g
[
™um
].
¨g_ty≥
 & 
A_MASK
;

1821 
¨g
[
™um
].
¨g_ty≥
 = 
¨gty≥
;

1822 
¨g±r
 = 
¨g
[
™um
].
¨g_±r
;

1823 
•
 = 
¨gœ°
[0];

1824 
°
 -
•
;

1825 
•
++;

1826 
ª_evÆ
;

1828 
¨g
->
¨g_ty≥
 = 
O_FLIP
;

1830 
O_FLIP
:

1831 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
 ?

1832 
œ°_ö_°ab
 && ()
	`°r_gnum
(
°
[1]Ë=
	`°ab_io
÷a°_ö_°ab)->
löes


1834 
	`°r_åue
(
°
[1]) ) {

1835 
	`°r_num£t
(
°r
,0.0);

1836 
™um
 = 2;

1837 
¨g
->
¨g_ty≥
 = 
›ty≥
 = 
O_FLOP
;

1838 
¨g
[2].
¨g_ty≥
 &~
A_DONT
;

1839 
¨g
[1].
¨g_ty≥
 |
A_DONT
;

1840 
¨gÊags
 = 
¨g
[2].
¨g_Êags
;

1841 
¨gty≥
 = 
¨g
[2].
¨g_ty≥
 & 
A_MASK
;

1842 
¨g±r
 = 
¨g
[2].
¨g_±r
;

1843 
•
 = 
¨gœ°
[0];

1844 
°
 -
•
++;

1845 
ª_evÆ
;

1847 
	`°r_£t
(
°r
,"");

1849 
O_FLOP
:

1850 
	`°r_öc
(
°r
);

1851 i‡((
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
 ?

1852 
œ°_ö_°ab
 && ()
	`°r_gnum
(
°
[2]Ë=
	`°ab_io
÷a°_ö_°ab)->
löes


1854 
	`°r_åue
(
°
[2]) ) {

1855 
¨g
->
¨g_ty≥
 = 
O_FLIP
;

1856 
¨g
[1].
¨g_ty≥
 &~
A_DONT
;

1857 
¨g
[2].
¨g_ty≥
 |
A_DONT
;

1858 
	`°r_ˇt
(
°r
,"E0");

1861 
O_FORK
:

1862 #ifde‡
HAS_FORK


1863 
™um
 = 
	`f‹k
();

1864 i‡(
™um
 < 0)

1865 
ßy_undef
;

1866 i‡(!
™um
) {

1867 i‡(
tmp°ab
 = 
	`°abít
("$",
Æl°abs
))

1868 
	`°r_num£t
(
	`STAB_STR
(
tmp°ab
),()
	`gëpid
());

1869 
	`h˛ór
(
pid°©us
);

1871 
vÆue
 = ()
™um
;

1872 
d⁄um£t
;

1874 
	`Áèl
("Unsupported function fork");

1877 
O_WAIT
:

1878 #ifde‡
HAS_WAIT


1879 #i‚de‡
löt


1880 
™um
 = 
	`waô
(&
¨gÊags
);

1881 i‡(
™um
 > 0)

1882 
	`pidg⁄e
(
™um
,
¨gÊags
);

1883 
vÆue
 = ()
™um
;

1885 
°©usvÆue
 = ()
¨gÊags
;

1886 
d⁄um£t
;

1888 
	`Áèl
("Unsupported function wait");

1891 
O_WAITPID
:

1892 #ifde‡
HAS_WAIT


1893 #i‚de‡
löt


1894 
™um
 = ()
	`°r_gnum
(
°
[1]);

1895 
›ty≥
 = ()
	`°r_gnum
(
°
[2]);

1896 
™um
 = 
	`waô4pid
◊num, &
¨gÊags
,
›ty≥
);

1897 
vÆue
 = ()
™um
;

1899 
°©usvÆue
 = ()
¨gÊags
;

1900 
d⁄um£t
;

1902 
	`Áèl
("Unsupported function wait");

1905 
O_SYSTEM
:

1906 #ifde‡
HAS_FORK


1907 #ifde‡
TAINT


1908 i‡(
¨gœ°
[2] -árglast[1] == 1) {

1909 
	`èöãnv
();

1910 
èöãd
 |
°
[2]->
°r_èöãd
;

1911 
	`èöçr›î
("Insecure dependency in system");

1914 (
™um
 = 
	`vf‹k
()) == -1) {

1915 i‡(
î∫o
 !
EAGAIN
) {

1916 
vÆue
 = -1.0;

1917 
d⁄um£t
;

1919 
	`¶ìp
(5);

1921 i‡(
™um
 > 0) {

1922 #i‚de‡
löt


1923 
ih™d
 = 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

1924 
qh™d
 = 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

1925 
¨gty≥
 = 
	`waô4pid
(
™um
, &
¨gÊags
, 0);

1927 
ih™d
 = 
qh™d
 = 0;

1929 ()
	`sig«l
(
SIGINT
, 
ih™d
);

1930 ()
	`sig«l
(
SIGQUIT
, 
qh™d
);

1931 
°©usvÆue
 = ()
¨gÊags
;

1932 i‡(
¨gty≥
 < 0)

1933 
vÆue
 = -1.0;

1935 
vÆue
 = ()(()
¨gÊags
 & 0xffff);

1937 
	`do_exec‰ì
();

1938 
d⁄um£t
;

1940 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
)

1941 
vÆue
 = ()
	`do_´xec
(
°
[1],
¨gœ°
);

1942 i‡(
¨gœ°
[2] -árglast[1] != 1)

1943 
vÆue
 = ()
	`do_´xec
(
NuŒ°r
,
¨gœ°
);

1945 
vÆue
 = ()
	`do_exec
(
	`°r_gë
(
	`°r_m‹èl
(
°
[2])));

1947 
	`_exô
(-1);

1949 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
)

1950 
vÆue
 = ()
	`do_a•awn
(
°
[1],
¨gœ°
);

1951 i‡(
¨gœ°
[2] -árglast[1] != 1)

1952 
vÆue
 = ()
	`do_a•awn
(
NuŒ°r
,
¨gœ°
);

1954 
vÆue
 = ()
	`do_•awn
(
	`°r_gë
(
	`°r_m‹èl
(
°
[2])));

1956 
d⁄um£t
;

1958 
O_EXEC_OP
:

1959 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
)

1960 
vÆue
 = ()
	`do_´xec
(
°
[1],
¨gœ°
);

1961 i‡(
¨gœ°
[2] -árglast[1] != 1)

1962 
vÆue
 = ()
	`do_´xec
(
NuŒ°r
,
¨gœ°
);

1964 
vÆue
 = ()
	`do_exec
(
	`°r_gë
(
	`°r_m‹èl
(
°
[2])));

1966 
d⁄um£t
;

1967 
O_HEX
:

1968 i‡(
max¨g
 < 1)

1969 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

1971 
tmps
 = 
	`°r_gë
(
°
[1]);

1972 
vÆue
 = ()
	`sˇnhex
(
tmps
, 99, &
¨gty≥
);

1973 
d⁄um£t
;

1975 
O_OCT
:

1976 i‡(
max¨g
 < 1)

1977 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

1979 
tmps
 = 
	`°r_gë
(
°
[1]);

1980 *
tmps
 && 
	`ißscii
(*tmpsË&& (
	`is•a˚
(*tmps) || *tmps == '0'))

1981 
tmps
++;

1982 i‡(*
tmps
 == 'x')

1983 
vÆue
 = ()
	`sˇnhex
(++
tmps
, 99, &
¨gty≥
);

1985 
vÆue
 = ()
	`sˇno˘
(
tmps
, 99, &
¨gty≥
);

1986 
d⁄um£t
;

1991 
¨øy_ªtu∫
:

1992 #ifde‡
DEBUGGING


1993 i‡(
debug
) {

1994 
dÀvñ
--;

1995 i‡(
debug
 & 8) {

1996 
™um
 = 
•
 - 
¨gœ°
[0];

1997 
™um
) {

1999 
	`deb
("%†RETURNS ()\n",
›«me
[
›ty≥
]);

2002 
	`deb
("%†RETURNS (\"%s\")\n",
›«me
[
›ty≥
],
	`°r_gë
(
°
[1]));

2005 
tmps
 = 
	`°r_gë
(
°
[1]);

2006 
	`deb
("%†RETURNS %d ARGS (\"%s\",%s\"%s\")\n",
›«me
[
›ty≥
],

2007 
™um
,
tmps
,™um==2?"":"...,",
	`°r_gë
(
°
[anum]));

2013  
•
;

2015 
ßy_yes
:

2016 
°r
 = &
°r_yes
;

2017 
n‹mÆ_ªtu∫
;

2019 
ßy_no
:

2020 
°r
 = &
°r_no
;

2021 
n‹mÆ_ªtu∫
;

2023 
ßy_undef
:

2024 
°r
 = &
°r_undef
;

2025 
n‹mÆ_ªtu∫
;

2027 
ßy_zîo
:

2028 
vÆue
 = 0.0;

2031 
d⁄um£t
:

2032 
	`°r_num£t
(
°r
,
vÆue
);

2033 
	`STABSET
(
°r
);

2034 
°
[1] = 
°r
;

2035 #ifde‡
DEBUGGING


2036 i‡(
debug
) {

2037 
dÀvñ
--;

2038 i‡(
debug
 & 8)

2039 
	`deb
("%†RETURNS \"%f\"\n",
›«me
[
›ty≥
],
vÆue
);

2042  
¨gœ°
[0] + 1;

2043 #ifde‡
SMALLSWITCHES


2046 
›ty≥
) {

2048 
O_CHOWN
:

2049 #ifde‡
HAS_CHOWN


2050 
vÆue
 = ()
	`≠∂y
(
›ty≥
,
¨gœ°
);

2051 
d⁄um£t
;

2053 
	`Áèl
("Unsupported function chown");

2056 
O_KILL
:

2057 #ifde‡
HAS_KILL


2058 
vÆue
 = ()
	`≠∂y
(
›ty≥
,
¨gœ°
);

2059 
d⁄um£t
;

2061 
	`Áèl
("Unsupported function kill");

2064 
O_UNLINK
:

2065 
O_CHMOD
:

2066 
O_UTIME
:

2067 
vÆue
 = ()
	`≠∂y
(
›ty≥
,
¨gœ°
);

2068 
d⁄um£t
;

2069 
O_UMASK
:

2070 #ifde‡
HAS_UMASK


2071 i‡(
max¨g
 < 1) {

2072 
™um
 = 
	`umask
(0);

2073 ()
	`umask
(
™um
);

2076 
™um
 = 
	`umask
(()
	`°r_gnum
(
°
[1]));

2077 
vÆue
 = ()
™um
;

2078 #ifde‡
TAINT


2079 
	`èöçr›î
("Insecure dependency in umask");

2081 
d⁄um£t
;

2083 
	`Áèl
("Unsupported function umask");

2086 #i‡
	`deföed
(
HAS_MSG
Ë|| deföed(
HAS_SEM
Ë|| deföed(
HAS_SHM
)

2087 
O_MSGGET
:

2088 
O_SHMGET
:

2089 
O_SEMGET
:

2090 i‡((
™um
 = 
	`do_ùcgë
(
›ty≥
, 
¨gœ°
)) == -1)

2091 
ßy_undef
;

2092 
vÆue
 = ()
™um
;

2093 
d⁄um£t
;

2094 
O_MSGCTL
:

2095 
O_SHMCTL
:

2096 
O_SEMCTL
:

2097 
™um
 = 
	`do_ùc˘l
(
›ty≥
, 
¨gœ°
);

2098 i‡(
™um
 == -1)

2099 
ßy_undef
;

2100 i‡(
™um
 != 0) {

2101 
vÆue
 = ()
™um
;

2102 
d⁄um£t
;

2104 
	`°r_£t
(
°r
,"0 butÅrue");

2105 
	`STABSET
(
°r
);

2107 
O_MSGSND
:

2108 
vÆue
 = ()(
	`do_msg¢d
(
¨gœ°
) >= 0);

2109 
d⁄um£t
;

2110 
O_MSGRCV
:

2111 
vÆue
 = ()(
	`do_msgrcv
(
¨gœ°
) >= 0);

2112 
d⁄um£t
;

2113 
O_SEMOP
:

2114 
vÆue
 = ()(
	`do_£m›
(
¨gœ°
) >= 0);

2115 
d⁄um£t
;

2116 
O_SHMREAD
:

2117 
O_SHMWRITE
:

2118 
vÆue
 = ()(
	`do_shmio
(
›ty≥
, 
¨gœ°
) >= 0);

2119 
d⁄um£t
;

2121 
O_MSGGET
:

2122 
O_MSGCTL
:

2123 
O_MSGSND
:

2124 
O_MSGRCV
:

2125 
O_SEMGET
:

2126 
O_SEMCTL
:

2127 
O_SEMOP
:

2128 
O_SHMGET
:

2129 
O_SHMCTL
:

2130 
O_SHMREAD
:

2131 
O_SHMWRITE
:

2132 
	`Áèl
("System V IPC isÇot implemented onÅhis machine");

2134 
O_RENAME
:

2135 
tmps
 = 
	`°r_gë
(
°
[1]);

2136 
tmps2
 = 
	`°r_gë
(
°
[2]);

2137 #ifde‡
TAINT


2138 
	`èöçr›î
("Insecure dependency inÑename");

2140 #ifde‡
HAS_RENAME


2141 
vÆue
 = ()(
	`ª«me
(
tmps
,
tmps2
) >= 0);

2143 i‡(
	`ßme_dúít
(
tmps2
, 
tmps
))

2144 
™um
 = 1;

2146 i‡(
euid
 || 
	`°©
(
tmps2
,&
°©buf
Ë< 0 || !
	`S_ISDIR
(°©buf.
°_mode
))

2147 ()
	`UNLINK
(
tmps2
);

2148 i‡(!(
™um
 = 
	`lök
(
tmps
,
tmps2
)))

2149 
™um
 = 
	`UNLINK
(
tmps
);

2151 
vÆue
 = ()(
™um
 >= 0);

2153 
d⁄um£t
;

2154 
O_LINK
:

2155 #ifde‡
HAS_LINK


2156 
tmps
 = 
	`°r_gë
(
°
[1]);

2157 
tmps2
 = 
	`°r_gë
(
°
[2]);

2158 #ifde‡
TAINT


2159 
	`èöçr›î
("Insecure dependency inÜink");

2161 
vÆue
 = ()(
	`lök
(
tmps
,
tmps2
) >= 0);

2162 
d⁄um£t
;

2164 
	`Áèl
("Unsupported functionÜink");

2167 
O_MKDIR
:

2168 
tmps
 = 
	`°r_gë
(
°
[1]);

2169 
™um
 = ()
	`°r_gnum
(
°
[2]);

2170 #ifde‡
TAINT


2171 
	`èöçr›î
("Insecure dependency in mkdir");

2173 #ifde‡
HAS_MKDIR


2174 
vÆue
 = ()(
	`mkdú
(
tmps
,
™um
) >= 0);

2175 
d⁄um£t
;

2177 ()
	`°r˝y
(
buf
,"mkdir ");

2179 #i‡!
	`deföed
(
HAS_MKDIR
Ë|| !deföed(
HAS_RMDIR
)

2180 
⁄e_löî
:

2181 
tmps2
 = 
buf
+6; *
tmps
; ) {

2182 *
tmps2
++ = '\\';

2183 *
tmps2
++ = *
tmps
++;

2185 ()
	`°r˝y
(
tmps2
," 2>&1");

2186 
rsÂ
 = 
	`myp›í
(
buf
,"r");

2187 i‡(
rsÂ
) {

2188 *
buf
 = '\0';

2189 
tmps2
 = 
	`fgës
(
buf
, buf,
rsÂ
);

2190 ()
	`myp˛o£
(
rsÂ
);

2191 i‡(
tmps2
 !
NuŒch
) {

2192 
î∫o
 = 1;Éºnÿ< 
sys_√º
;Érrno++) {

2193 i‡(
	`ö°r
(
buf
,
sys_îæi°
[
î∫o
]))

2194 
ßy_zîo
;

2196 
î∫o
 = 0;

2197 #i‚de‡
EACCES


2198 
	#EACCES
 
EPERM


	)

2200 i‡(
	`ö°r
(
buf
,"cannot make"))

2201 
î∫o
 = 
EEXIST
;

2202 i‡(
	`ö°r
(
buf
,"existing file"))

2203 
î∫o
 = 
EEXIST
;

2204 i‡(
	`ö°r
(
buf
,"ileÉxists"))

2205 
î∫o
 = 
EEXIST
;

2206 i‡(
	`ö°r
(
buf
,"non-exist"))

2207 
î∫o
 = 
ENOENT
;

2208 i‡(
	`ö°r
(
buf
,"doesÇotÉxist"))

2209 
î∫o
 = 
ENOENT
;

2210 i‡(
	`ö°r
(
buf
,"notÉmpty"))

2211 
î∫o
 = 
EBUSY
;

2212 i‡(
	`ö°r
(
buf
,"cannotáccess"))

2213 
î∫o
 = 
EACCES
;

2215 
î∫o
 = 
EPERM
;

2216 
ßy_zîo
;

2219 
tmps
 = 
	`°r_gë
(
°
[1]);

2220 
™um
 = (
	`°©
(
tmps
,&
°©buf
) >= 0);

2221 i‡(
›ty≥
 =
O_RMDIR
)

2222 
™um
 = !anum;

2223 i‡(
™um
)

2224 
î∫o
 = 0;

2226 
î∫o
 = 
EACCES
;

2227 
vÆue
 = ()
™um
;

2229 
d⁄um£t
;

2232 
ßy_zîo
;

2234 
O_RMDIR
:

2235 i‡(
max¨g
 < 1)

2236 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

2238 
tmps
 = 
	`°r_gë
(
°
[1]);

2239 #ifde‡
TAINT


2240 
	`èöçr›î
("Insecure dependency inÑmdir");

2242 #ifde‡
HAS_RMDIR


2243 
vÆue
 = ()(
	`rmdú
(
tmps
) >= 0);

2244 
d⁄um£t
;

2246 ()
	`°r˝y
(
buf
,"rmdir ");

2247 
⁄e_löî
;

2249 
O_GETPPID
:

2250 #ifde‡
HAS_GETPPID


2251 
vÆue
 = ()
	`gëµid
();

2252 
d⁄um£t
;

2254 
	`Áèl
("Unsupported function getppid");

2257 
O_GETPGRP
:

2258 #ifde‡
HAS_GETPGRP


2259 i‡(
max¨g
 < 1)

2260 
™um
 = 0;

2262 
™um
 = ()
	`°r_gnum
(
°
[1]);

2263 
vÆue
 = ()
	`gëpgΩ
(
™um
);

2264 
d⁄um£t
;

2266 
	`Áèl
("The getpgrp() function is unimplemented onÅhis machine");

2269 
O_SETPGRP
:

2270 #ifde‡
HAS_SETPGRP


2271 
¨gty≥
 = ()
	`°r_gnum
(
°
[1]);

2272 
™um
 = ()
	`°r_gnum
(
°
[2]);

2273 #ifde‡
TAINT


2274 
	`èöçr›î
("Insecure dependency in setpgrp");

2276 
vÆue
 = ()(
	`£çgΩ
(
¨gty≥
,
™um
) >= 0);

2277 
d⁄um£t
;

2279 
	`Áèl
("The setpgrp() function is unimplemented onÅhis machine");

2282 
O_GETPRIORITY
:

2283 #ifde‡
HAS_GETPRIORITY


2284 
¨gty≥
 = ()
	`°r_gnum
(
°
[1]);

2285 
™um
 = ()
	`°r_gnum
(
°
[2]);

2286 
vÆue
 = ()
	`gë¥i‹ôy
(
¨gty≥
,
™um
);

2287 
d⁄um£t
;

2289 
	`Áèl
("The getpriority() function is unimplemented onÅhis machine");

2292 
O_SETPRIORITY
:

2293 #ifde‡
HAS_SETPRIORITY


2294 
¨gty≥
 = ()
	`°r_gnum
(
°
[1]);

2295 
™um
 = ()
	`°r_gnum
(
°
[2]);

2296 
›ty≥
 = ()
	`°r_gnum
(
°
[3]);

2297 #ifde‡
TAINT


2298 
	`èöçr›î
("Insecure dependency in setpriority");

2300 
vÆue
 = ()(
	`£çri‹ôy
(
¨gty≥
,
™um
,
›ty≥
) >= 0);

2301 
d⁄um£t
;

2303 
	`Áèl
("The setpriority() function is unimplemented onÅhis machine");

2306 
O_CHROOT
:

2307 #ifde‡
HAS_CHROOT


2308 i‡(
max¨g
 < 1)

2309 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

2311 
tmps
 = 
	`°r_gë
(
°
[1]);

2312 #ifde‡
TAINT


2313 
	`èöçr›î
("Insecure dependency in chroot");

2315 
vÆue
 = ()(
	`chroŸ
(
tmps
) >= 0);

2316 
d⁄um£t
;

2318 
	`Áèl
("Unsupported function chroot");

2321 
O_FCNTL
:

2322 
O_IOCTL
:

2323 i‡(
max¨g
 <= 0)

2324 
°ab
 = 
œ°_ö_°ab
;

2325 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2326 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2328 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2329 
¨gty≥
 = 
	`U_I
(
	`°r_gnum
(
°
[2]));

2330 #ifde‡
TAINT


2331 
	`èöçr›î
("Insecure dependency in ioctl");

2333 
™um
 = 
	`do_˘l
(
›ty≥
,
°ab
,
¨gty≥
,
°
[3]);

2334 i‡(
™um
 == -1)

2335 
ßy_undef
;

2336 i‡(
™um
 != 0) {

2337 
vÆue
 = ()
™um
;

2338 
d⁄um£t
;

2340 
	`°r_£t
(
°r
,"0 butÅrue");

2341 
	`STABSET
(
°r
);

2343 
O_FLOCK
:

2344 #ifde‡
HAS_FLOCK


2345 i‡(
max¨g
 <= 0)

2346 
°ab
 = 
œ°_ö_°ab
;

2347 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2348 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2350 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2351 i‡(
°ab
 && 
	`°ab_io
(stab))

2352 
Â
 = 
	`°ab_io
(
°ab
)->
iÂ
;

2354 
Â
 = 
NuŒÂ
;

2355 i‡(
Â
) {

2356 
¨gty≥
 = ()
	`°r_gnum
(
°
[2]);

2357 
vÆue
 = ()(
	`Êock
(
	`fûío
(
Â
),
¨gty≥
) >= 0);

2360 
vÆue
 = 0;

2361 
d⁄um£t
;

2363 
	`Áèl
("The flock() function is unimplemented onÅhis machine");

2366 
O_UNSHIFT
:

2367 
¨y
 = 
	`°ab_¨øy
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

2368 i‡(
¨gœ°
[2] -árglast[1] != 1)

2369 
	`do_unshi·
(
¨y
,
¨gœ°
);

2371 
STR
 *
tmp°r
 = 
	`Så_√w
(52,0);

2372 
	`°r_s£t
(
tmp°r
,
°
[2]);

2373 
	`aunshi·
(
¨y
,1);

2374 ()
	`a°‹e
(
¨y
,0,
tmp°r
);

2376 
vÆue
 = ()(
¨y
->
¨y_fûl
 + 1);

2377 
d⁄um£t
;

2379 
O_REQUIRE
:

2380 
O_DOFILE
:

2381 
O_EVAL
:

2382 i‡(
max¨g
 < 1)

2383 
tmp°r
 = 
	`°ab_vÆ
(
def°ab
);

2385 
tmp°r
 =

2386 (
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë!
A_NULL
 ? 
°
[1] : 
	`°ab_vÆ
(
def°ab
);

2387 #ifde‡
TAINT


2388 
èöãd
 |
tmp°r
->
°r_èöãd
;

2389 
	`èöçr›î
("Insecure dependency inÉval");

2391 
•
 = 
	`do_evÆ
(
tmp°r
, 
›ty≥
, 
curcmd
->
c_°ash
,

2392 
gimme
,
¨gœ°
);

2393 
¨øy_ªtu∫
;

2395 
O_FTRREAD
:

2396 
¨gty≥
 = 0;

2397 
™um
 = 
S_IRUSR
;

2398 
check_≥rm
;

2399 
O_FTRWRITE
:

2400 
¨gty≥
 = 0;

2401 
™um
 = 
S_IWUSR
;

2402 
check_≥rm
;

2403 
O_FTREXEC
:

2404 
¨gty≥
 = 0;

2405 
™um
 = 
S_IXUSR
;

2406 
check_≥rm
;

2407 
O_FTEREAD
:

2408 
¨gty≥
 = 1;

2409 
™um
 = 
S_IRUSR
;

2410 
check_≥rm
;

2411 
O_FTEWRITE
:

2412 
¨gty≥
 = 1;

2413 
™um
 = 
S_IWUSR
;

2414 
check_≥rm
;

2415 
O_FTEEXEC
:

2416 
¨gty≥
 = 1;

2417 
™um
 = 
S_IXUSR
;

2418 
check_≥rm
:

2419 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2420 
ßy_undef
;

2421 i‡(
	`ˇndo
(
™um
,
¨gty≥
,&
°©ˇche
))

2422 
ßy_yes
;

2423 
ßy_no
;

2425 
O_FTIS
:

2426 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2427 
ßy_undef
;

2428 
ßy_yes
;

2429 
O_FTEOWNED
:

2430 
O_FTROWNED
:

2431 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2432 
ßy_undef
;

2433 i‡(
°©ˇche
.
°_uid
 =(
›ty≥
 =
O_FTEOWNED
 ? 
euid
 : 
uid
) )

2434 
ßy_yes
;

2435 
ßy_no
;

2436 
O_FTZERO
:

2437 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2438 
ßy_undef
;

2439 i‡(!
°©ˇche
.
°_size
)

2440 
ßy_yes
;

2441 
ßy_no
;

2442 
O_FTSIZE
:

2443 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2444 
ßy_undef
;

2445 
vÆue
 = ()
°©ˇche
.
°_size
;

2446 
d⁄um£t
;

2448 
O_FTMTIME
:

2449 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2450 
ßy_undef
;

2451 
vÆue
 = ()(
ba£time
 - 
°©ˇche
.
°_mtime
) / 86400.0;

2452 
d⁄um£t
;

2453 
O_FTATIME
:

2454 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2455 
ßy_undef
;

2456 
vÆue
 = ()(
ba£time
 - 
°©ˇche
.
°_©ime
) / 86400.0;

2457 
d⁄um£t
;

2458 
O_FTCTIME
:

2459 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2460 
ßy_undef
;

2461 
vÆue
 = ()(
ba£time
 - 
°©ˇche
.
°_˘ime
) / 86400.0;

2462 
d⁄um£t
;

2464 
O_FTSOCK
:

2465 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2466 
ßy_undef
;

2467 i‡(
	`S_ISSOCK
(
°©ˇche
.
°_mode
))

2468 
ßy_yes
;

2469 
ßy_no
;

2470 
O_FTCHR
:

2471 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2472 
ßy_undef
;

2473 i‡(
	`S_ISCHR
(
°©ˇche
.
°_mode
))

2474 
ßy_yes
;

2475 
ßy_no
;

2476 
O_FTBLK
:

2477 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2478 
ßy_undef
;

2479 i‡(
	`S_ISBLK
(
°©ˇche
.
°_mode
))

2480 
ßy_yes
;

2481 
ßy_no
;

2482 
O_FTFILE
:

2483 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2484 
ßy_undef
;

2485 i‡(
	`S_ISREG
(
°©ˇche
.
°_mode
))

2486 
ßy_yes
;

2487 
ßy_no
;

2488 
O_FTDIR
:

2489 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2490 
ßy_undef
;

2491 i‡(
	`S_ISDIR
(
°©ˇche
.
°_mode
))

2492 
ßy_yes
;

2493 
ßy_no
;

2494 
O_FTPIPE
:

2495 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2496 
ßy_undef
;

2497 i‡(
	`S_ISFIFO
(
°©ˇche
.
°_mode
))

2498 
ßy_yes
;

2499 
ßy_no
;

2500 
O_FTLINK
:

2501 i‡(
	`myl°©
(
¨g
,
°
[1]) < 0)

2502 
ßy_undef
;

2503 i‡(
	`S_ISLNK
(
°©ˇche
.
°_mode
))

2504 
ßy_yes
;

2505 
ßy_no
;

2506 
O_SYMLINK
:

2507 #ifde‡
HAS_SYMLINK


2508 
tmps
 = 
	`°r_gë
(
°
[1]);

2509 
tmps2
 = 
	`°r_gë
(
°
[2]);

2510 #ifde‡
TAINT


2511 
	`èöçr›î
("Insecure dependency in symlink");

2513 
vÆue
 = ()(
	`symlök
(
tmps
,
tmps2
) >= 0);

2514 
d⁄um£t
;

2516 
	`Áèl
("Unsupported function symlink");

2518 
O_READLINK
:

2519 #ifde‡
HAS_SYMLINK


2520 i‡(
max¨g
 < 1)

2521 
tmps
 = 
	`°r_gë
(
	`°ab_vÆ
(
def°ab
));

2523 
tmps
 = 
	`°r_gë
(
°
[1]);

2524 
™um
 = 
	`ªadlök
(
tmps
,
buf
, buf);

2525 i‡(
™um
 < 0)

2526 
ßy_undef
;

2527 
	`°r_n£t
(
°r
,
buf
,
™um
);

2530 
ßy_undef
;

2532 
O_FTSUID
:

2533 #ifde‡
S_ISUID


2534 
™um
 = 
S_ISUID
;

2535 
check_xid
;

2537 
ßy_no
;

2539 
O_FTSGID
:

2540 #ifde‡
S_ISGID


2541 
™um
 = 
S_ISGID
;

2542 
check_xid
;

2544 
ßy_no
;

2546 
O_FTSVTX
:

2547 #ifde‡
S_ISVTX


2548 
™um
 = 
S_ISVTX
;

2550 
ßy_no
;

2552 
check_xid
:

2553 i‡(
	`my°©
(
¨g
,
°
[1]) < 0)

2554 
ßy_undef
;

2555 i‡(
°©ˇche
.
°_mode
 & 
™um
)

2556 
ßy_yes
;

2557 
ßy_no
;

2558 
O_FTTTY
:

2559 i‡(
¨g
[1].
¨g_ty≥
 & 
A_DONT
) {

2560 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2561 
tmps
 = "";

2564 
°ab
 = 
	`°abít
(
tmps
 = 
	`°r_gë
(
°
[1]),
FALSE
);

2565 i‡(
°ab
 && 
	`°ab_io
(°abË&& sèb_io(°ab)->
iÂ
)

2566 
™um
 = 
	`fûío
(
	`°ab_io
(
°ab
)->
iÂ
);

2567 i‡(
	`isdigô
(*
tmps
))

2568 
™um
 = 
	`©oi
(
tmps
);

2570 
ßy_undef
;

2571 i‡(
	`ißây
(
™um
))

2572 
ßy_yes
;

2573 
ßy_no
;

2574 
O_FTTEXT
:

2575 
O_FTBINARY
:

2576 
°r
 = 
	`do_·ãxt
(
¨g
,
°
[1]);

2578 #ifde‡
HAS_SOCKET


2579 
O_SOCKET
:

2580 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2581 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2583 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2584 #i‚de‡
löt


2585 
vÆue
 = ()
	`do_sockë
(
°ab
,
¨gœ°
);

2587 ()
	`do_sockë
(
°ab
,
¨gœ°
);

2589 
d⁄um£t
;

2590 
O_BIND
:

2591 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2592 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2594 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2595 #i‚de‡
löt


2596 
vÆue
 = ()
	`do_böd
(
°ab
,
¨gœ°
);

2598 ()
	`do_böd
(
°ab
,
¨gœ°
);

2600 
d⁄um£t
;

2601 
O_CONNECT
:

2602 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2603 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2605 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2606 #i‚de‡
löt


2607 
vÆue
 = ()
	`do_c⁄√˘
(
°ab
,
¨gœ°
);

2609 ()
	`do_c⁄√˘
(
°ab
,
¨gœ°
);

2611 
d⁄um£t
;

2612 
O_LISTEN
:

2613 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2614 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2616 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2617 #i‚de‡
löt


2618 
vÆue
 = ()
	`do_li°í
(
°ab
,
¨gœ°
);

2620 ()
	`do_li°í
(
°ab
,
¨gœ°
);

2622 
d⁄um£t
;

2623 
O_ACCEPT
:

2624 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2625 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2627 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2628 i‡((
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2629 
°ab2
 = 
¨g
[2].
¨g_±r
.
¨g_°ab
;

2631 
°ab2
 = 
	`°abít
(
	`°r_gë
(
°
[2]),
TRUE
);

2632 
	`do_ac˚±
(
°r
,
°ab
,
°ab2
);

2633 
	`STABSET
(
°r
);

2635 
O_GHBYNAME
:

2636 i‡(
max¨g
 < 1)

2637 
ßy_undef
;

2638 
O_GHBYADDR
:

2639 
O_GHOSTENT
:

2640 
•
 = 
	`do_ghít
(
›ty≥
,

2641 
gimme
,
¨gœ°
);

2642 
¨øy_ªtu∫
;

2643 
O_GNBYNAME
:

2644 i‡(
max¨g
 < 1)

2645 
ßy_undef
;

2646 
O_GNBYADDR
:

2647 
O_GNETENT
:

2648 
•
 = 
	`do_g√¡
(
›ty≥
,

2649 
gimme
,
¨gœ°
);

2650 
¨øy_ªtu∫
;

2651 
O_GPBYNAME
:

2652 i‡(
max¨g
 < 1)

2653 
ßy_undef
;

2654 
O_GPBYNUMBER
:

2655 
O_GPROTOENT
:

2656 
•
 = 
	`do_g≥¡
(
›ty≥
,

2657 
gimme
,
¨gœ°
);

2658 
¨øy_ªtu∫
;

2659 
O_GSBYNAME
:

2660 i‡(
max¨g
 < 1)

2661 
ßy_undef
;

2662 
O_GSBYPORT
:

2663 
O_GSERVENT
:

2664 
•
 = 
	`do_g£¡
(
›ty≥
,

2665 
gimme
,
¨gœ°
);

2666 
¨øy_ªtu∫
;

2667 
O_SHOSTENT
:

2668 
vÆue
 = (Ë
	`£tho°ít
(()
	`°r_gnum
(
°
[1]));

2669 
d⁄um£t
;

2670 
O_SNETENT
:

2671 
vÆue
 = (Ë
	`£äëít
(()
	`°r_gnum
(
°
[1]));

2672 
d⁄um£t
;

2673 
O_SPROTOENT
:

2674 
vÆue
 = (Ë
	`£çrŸ€¡
(()
	`°r_gnum
(
°
[1]));

2675 
d⁄um£t
;

2676 
O_SSERVENT
:

2677 
vÆue
 = (Ë
	`£t£rvít
(()
	`°r_gnum
(
°
[1]));

2678 
d⁄um£t
;

2679 
O_EHOSTENT
:

2680 
vÆue
 = (Ë
	`ídho°ít
();

2681 
d⁄um£t
;

2682 
O_ENETENT
:

2683 
vÆue
 = (Ë
	`íd√ã¡
();

2684 
d⁄um£t
;

2685 
O_EPROTOENT
:

2686 
vÆue
 = (Ë
	`íd¥Ÿ€¡
();

2687 
d⁄um£t
;

2688 
O_ESERVENT
:

2689 
vÆue
 = (Ë
	`íd£rvít
();

2690 
d⁄um£t
;

2691 
O_SOCKPAIR
:

2692 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2693 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2695 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2696 i‡((
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2697 
°ab2
 = 
¨g
[2].
¨g_±r
.
¨g_°ab
;

2699 
°ab2
 = 
	`°abít
(
	`°r_gë
(
°
[2]),
TRUE
);

2700 #i‚de‡
löt


2701 
vÆue
 = ()
	`do_•aú
(
°ab
,
°ab2
,
¨gœ°
);

2703 ()
	`do_•aú
(
°ab
,
°ab2
,
¨gœ°
);

2705 
d⁄um£t
;

2706 
O_SHUTDOWN
:

2707 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2708 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2710 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2711 #i‚de‡
löt


2712 
vÆue
 = ()
	`do_shutdown
(
°ab
,
¨gœ°
);

2714 ()
	`do_shutdown
(
°ab
,
¨gœ°
);

2716 
d⁄um£t
;

2717 
O_GSOCKOPT
:

2718 
O_SSOCKOPT
:

2719 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2720 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2722 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2723 
•
 = 
	`do_s›t
(
›ty≥
,
°ab
,
¨gœ°
);

2724 
¨øy_ªtu∫
;

2725 
O_GETSOCKNAME
:

2726 
O_GETPEERNAME
:

2727 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2728 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2730 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2731 i‡(!
°ab
)

2732 
ßy_undef
;

2733 
•
 = 
	`do_gësock«me
(
›ty≥
,
°ab
,
¨gœ°
);

2734 
¨øy_ªtu∫
;

2737 
O_SOCKET
:

2738 
O_BIND
:

2739 
O_CONNECT
:

2740 
O_LISTEN
:

2741 
O_ACCEPT
:

2742 
O_SOCKPAIR
:

2743 
O_GHBYNAME
:

2744 
O_GHBYADDR
:

2745 
O_GHOSTENT
:

2746 
O_GNBYNAME
:

2747 
O_GNBYADDR
:

2748 
O_GNETENT
:

2749 
O_GPBYNAME
:

2750 
O_GPBYNUMBER
:

2751 
O_GPROTOENT
:

2752 
O_GSBYNAME
:

2753 
O_GSBYPORT
:

2754 
O_GSERVENT
:

2755 
O_SHOSTENT
:

2756 
O_SNETENT
:

2757 
O_SPROTOENT
:

2758 
O_SSERVENT
:

2759 
O_EHOSTENT
:

2760 
O_ENETENT
:

2761 
O_EPROTOENT
:

2762 
O_ESERVENT
:

2763 
O_SHUTDOWN
:

2764 
O_GSOCKOPT
:

2765 
O_SSOCKOPT
:

2766 
O_GETSOCKNAME
:

2767 
O_GETPEERNAME
:

2768 
badsock
:

2769 
	`Áèl
("Unsupported socket function");

2771 
O_SSELECT
:

2772 #ifde‡
HAS_SELECT


2773 
•
 = 
	`do_£À˘
(
gimme
,
¨gœ°
);

2774 
¨øy_ªtu∫
;

2776 
	`Áèl
("selectÇot implemented");

2778 
O_FILENO
:

2779 i‡(
max¨g
 < 1)

2780 
ßy_undef
;

2781 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2782 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2784 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2785 i‡(!
°ab
 || !(
°io
 = 
	`°ab_io
(°ab)Ë|| !(
Â
 = stio->
iÂ
))

2786 
ßy_undef
;

2787 
vÆue
 = 
	`fûío
(
Â
);

2788 
d⁄um£t
;

2789 
O_BINMODE
:

2790 i‡(
max¨g
 < 1)

2791 
ßy_undef
;

2792 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2793 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2795 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2796 i‡(!
°ab
 || !(
°io
 = 
	`°ab_io
(°ab)Ë|| !(
Â
 = stio->
iÂ
))

2797 
ßy_undef
;

2798 #ifde‡
MSDOS


2799 
	`°r_£t
(
°r
, (
	`£tmode
(
	`fûío
(
Â
), 
O_BINARY
Ë!-1Ë? 
Yes
 : 
No
);

2801 
	`°r_£t
(
°r
, 
Yes
);

2803 
	`STABSET
(
°r
);

2805 
O_VEC
:

2806 
•
 = 
	`do_vec
(
°r
 =
°
[1], 
¨g
->
¨g_±r
.
¨g_°r
, 
¨gœ°
);

2807 
¨øy_ªtu∫
;

2808 
O_GPWNAM
:

2809 
O_GPWUID
:

2810 
O_GPWENT
:

2811 #ifde‡
HAS_PASSWD


2812 
•
 = 
	`do_gpwít
(
›ty≥
,

2813 
gimme
,
¨gœ°
);

2814 
¨øy_ªtu∫
;

2815 
O_SPWENT
:

2816 
vÆue
 = (Ë
	`£çwít
();

2817 
d⁄um£t
;

2818 
O_EPWENT
:

2819 
vÆue
 = (Ë
	`ídpwít
();

2820 
d⁄um£t
;

2822 
O_EPWENT
:

2823 
O_SPWENT
:

2824 
	`Áèl
("UnsupportedÖassword function");

2827 
O_GGRNAM
:

2828 
O_GGRGID
:

2829 
O_GGRENT
:

2830 #ifde‡
HAS_GROUP


2831 
•
 = 
	`do_ggª¡
(
›ty≥
,

2832 
gimme
,
¨gœ°
);

2833 
¨øy_ªtu∫
;

2834 
O_SGRENT
:

2835 
vÆue
 = (Ë
	`£tgª¡
();

2836 
d⁄um£t
;

2837 
O_EGRENT
:

2838 
vÆue
 = (Ë
	`ídgª¡
();

2839 
d⁄um£t
;

2841 
O_EGRENT
:

2842 
O_SGRENT
:

2843 
	`Áèl
("Unsupported group function");

2846 
O_GETLOGIN
:

2847 #ifde‡
HAS_GETLOGIN


2848 i‡(!(
tmps
 = 
	`gëlogö
()))

2849 
ßy_undef
;

2850 
	`°r_£t
(
°r
,
tmps
);

2852 
	`Áèl
("Unsupported function getlogin");

2855 
O_OPENDIR
:

2856 
O_READDIR
:

2857 
O_TELLDIR
:

2858 
O_SEEKDIR
:

2859 
O_REWINDDIR
:

2860 
O_CLOSEDIR
:

2861 i‡(
max¨g
 < 1)

2862 
ßy_undef
;

2863 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2864 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2866 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2867 i‡(!
°ab
)

2868 
ßy_undef
;

2869 
•
 = 
	`do_dú›
(
›ty≥
,
°ab
,
gimme
,
¨gœ°
);

2870 
¨øy_ªtu∫
;

2871 
O_SYSCALL
:

2872 
vÆue
 = ()
	`do_sysˇŒ
(
¨gœ°
);

2873 
d⁄um£t
;

2874 
O_PIPE
:

2875 #ifde‡
HAS_PIPE


2876 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2877 
°ab
 = 
¨g
[1].
¨g_±r
.
¨g_°ab
;

2879 
°ab
 = 
	`°abít
(
	`°r_gë
(
°
[1]),
TRUE
);

2880 i‡((
¨g
[2].
¨g_ty≥
 & 
A_MASK
Ë=
A_WORD
)

2881 
°ab2
 = 
¨g
[2].
¨g_±r
.
¨g_°ab
;

2883 
°ab2
 = 
	`°abít
(
	`°r_gë
(
°
[2]),
TRUE
);

2884 
	`do_pùe
(
°r
,
°ab
,
°ab2
);

2885 
	`STABSET
(
°r
);

2887 
	`Áèl
("Unsupported functionÖipe");

2892 
n‹mÆ_ªtu∫
:

2893 
°
[1] = 
°r
;

2894 #ifde‡
DEBUGGING


2895 i‡(
debug
) {

2896 
dÀvñ
--;

2897 i‡(
debug
 & 8)

2898 
	`deb
("%†RETURNS \"%s\"\n",
›«me
[
›ty≥
],
	`°r_gë
(
°r
));

2901  
¨gœ°
[0] + 1;

2902 
	}
}

	@form.c

14 
	~"EXTERN.h
"

15 
	~"≥æ.h
"

20 
	$f‹m_∑r£¨gs
(
fcmd
)

21 
FCMD
 *
fcmd
;

23 
i
;

24 
ARG
 *
¨g
;

25 
ôems
;

26 
STR
 *
°r
;

27 
ARG
 *
	`∑r£li°
();

28 
löe_t
 
ﬁdlöe
 = 
curcmd
->
c_löe
;

29 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

31 
°r
 = 
fcmd
->
f_u≈¨£d
;

32 
curcmd
->
c_löe
 = 
fcmd
->
f_löe
;

33 
fcmd
->
f_u≈¨£d
 = 
NuŒ°r
;

34 ()
	`ßveh±r
(&
cur°ash
);

35 
cur°ash
 = 
°r
->
°r_u
.
°r_hash
;

36 
¨g
 = 
	`∑r£li°
(
°r
);

37 
	`ª°‹ñi°
(
ﬁdßve
);

39 
ôems
 = 
¨g
->
¨g_Àn
 - 1;

40 
i
 = 1; i <
ôems
; i++) {

41 i‡(!
fcmd
 || fcmd->
f_ty≥
 =
F_NULL
)

42 
	`Áèl
("Too many field values");

43 
	`dehoi°
(
¨g
,
i
);

44 
fcmd
->
f_ex¥
 = 
	`make_›
(
O_ITEM
,1,

45 
¨g
[
i
].
¨g_±r
.
¨g_¨g
,
NuŒ¨g
,Nullarg);

46 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
) {

47 i‡((
fcmd
->
f_ex¥
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_STAB
)

48 
fcmd
->
f_ex¥
[1].
¨g_ty≥
 = 
A_LVAL
;

49 i‡((
fcmd
->
f_ex¥
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_EXPR
)

50 
fcmd
->
f_ex¥
[1].
¨g_ty≥
 = 
A_LEXPR
;

52 
	`Áèl
("^ fieldÑequires scalarÜvalue");

54 
fcmd
 = fcmd->
f_√xt
;

56 i‡(
fcmd
 && fcmd->
f_ty≥
)

57 
	`Áèl
("NotÉnough field values");

58 
curcmd
->
c_löe
 = 
ﬁdlöe
;

59 
	`Sa„‰ì
(
¨g
);

60 
	`°r_‰ì
(
°r
);

61 
	}
}

63 
	g√wsize
;

65 
	#CHKLEN
(
Ælow
) \

66 
√wsize
 = (
d
 - 
‹ec
->
o_°r
Ë+ (
Ælow
); \

67 i‡(
√wsize
 >
cuæí
) { \

68 
cuæí
 = 
d
 - 
‹ec
->
o_°r
; \

69 
	`GROWSTR
(&
‹ec
->
o_°r
,&‹ec->
o_Àn
,‹ec->o_À¿+ (
Ælow
)); \

70 
d
 = 
‹ec
->
o_°r
 + 
cuæí
; \

71 
cuæí
 = 
‹ec
->
o_Àn
 - 2; \

72 }

	)

74 
	$f‹m©
(
‹ec
,
fcmd
,
•
)

75 
ouåec
 *
‹ec
;

76 
FCMD
 *
fcmd
;

77 
•
;

79 *
d
 = 
‹ec
->
o_°r
;

80 *
s
;

81 
cuæí
 = 
‹ec
->
o_Àn
 - 2;

82 
size
;

83 
FCMD
 *
√xtfcmd
;

84 
FCMD
 *
löebeg
 = 
fcmd
;

85 
tmpch¨
;

86 *
t
;

87 
CMD
 
mycmd
;

88 
STR
 *
°r
;

89 *
ch›hîe
;

91 
mycmd
.
c_ty≥
 = 
C_NULL
;

92 
‹ec
->
o_löes
 = 0;

93 ; 
fcmd
; fcmd = 
√xtfcmd
) {

94 
√xtfcmd
 = 
fcmd
->
f_√xt
;

95 
	`CHKLEN
(
fcmd
->
f_¥esize
);

96 i‡(
s
 = 
fcmd
->
f_¥e
) {

97 *
s
) {

98 i‡(*
s
 == '\n') {

99 
d
 > 
‹ec
->
o_°r
 && (d[-1] == ' ' || d[-1] == '\t'))

100 
d
--;

101 i‡(
fcmd
->
f_Êags
 & 
FC_NOBLANK
) {

102 i‡(
d
 =
‹ec
->
o_°r
 || d[-1] == '\n') {

103 
‹ec
->
o_löes
--;

104 
löebeg
 = 
fcmd
->
f_√xt
;

107 i‡(
fcmd
->
f_Êags
 & 
FC_REPEAT
)

108 
√xtfcmd
 = 
löebeg
;

110 
löebeg
 = 
fcmd
->
f_√xt
;

113 
löebeg
 = 
fcmd
->
f_√xt
;

115 *
d
++ = *
s
++;

118 i‡(
fcmd
->
f_u≈¨£d
)

119 
	`f‹m_∑r£¨gs
(
fcmd
);

120 
fcmd
->
f_ty≥
) {

121 
F_NULL
:

122 
‹ec
->
o_löes
++;

124 
F_LEFT
:

125 ()
	`evÆ
(
fcmd
->
f_ex¥
,
G_SCALAR
,
•
);

126 
°r
 = 
°ack
->
¨y_¨øy
[
•
+1];

127 
s
 = 
	`°r_gë
(
°r
);

128 
size
 = 
fcmd
->
f_size
;

129 
	`CHKLEN
(
size
);

130 
ch›hîe
 = 
NuŒch
;

131 
size
 && *
s
 && *s != '\n') {

132 i‡(*
s
 == '\t')

133 *
s
 = ' ';

134 
size
--;

135 i‡(*
s
 && 
	`ödex
(
ch›£t
,(*
d
++ = *s++)))

136 
ch›hîe
 = 
s
;

137 i‡(*
s
 ='\n' && (
fcmd
->
f_Êags
 & 
FC_CHOP
))

138 *
s
 = ' ';

140 i‡(
size
)

141 
ch›hîe
 = 
s
;

142 i‡(
ch›hîe
 && ch›hîê< 
s
 && *†&& 
	`ödex
(
ch›£t
,*s))

143 
ch›hîe
 = 
s
;

144 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
) {

145 i‡(!
ch›hîe
)

146 
ch›hîe
 = 
s
;

147 
size
 +(
s
 - 
ch›hîe
);

148 
d
 -(
s
 - 
ch›hîe
);

149 i‡(
fcmd
->
f_Êags
 & 
FC_MORE
 &&

150 *
ch›hîe
 && 
	`°rNE
(chophere,"\n")) {

151 
size
 < 3) {

152 
d
--;

153 
size
++;

155 
d
[-1] =' ' && 
size
 < 
fcmd
->
f_size
) {

156 
d
--;

157 
size
++;

159 *
d
++ = '.';

160 *
d
++ = '.';

161 *
d
++ = '.';

162 
size
 -= 3;

164 *
ch›hîe
 && 
	`ödex
(
ch›£t
,*chophere))

165 
ch›hîe
++;

166 
	`°r_ch›
(
°r
,
ch›hîe
);

168 i‡(
fcmd
->
f_√xt
 && fcmd->f_√xt->
f_¥e
[0] == '\n')

169 
size
 = 0;

170 
size
) {

171 
size
--;

172 *
d
++ = ' ';

175 
F_RIGHT
:

176 ()
	`evÆ
(
fcmd
->
f_ex¥
,
G_SCALAR
,
•
);

177 
°r
 = 
°ack
->
¨y_¨øy
[
•
+1];

178 
t
 = 
s
 = 
	`°r_gë
(
°r
);

179 
size
 = 
fcmd
->
f_size
;

180 
	`CHKLEN
(
size
);

181 
ch›hîe
 = 
NuŒch
;

182 
size
 && *
s
 && *s != '\n') {

183 i‡(*
s
 == '\t')

184 *
s
 = ' ';

185 
size
--;

186 i‡(*
s
 && 
	`ödex
(
ch›£t
,*s++))

187 
ch›hîe
 = 
s
;

188 i‡(*
s
 ='\n' && (
fcmd
->
f_Êags
 & 
FC_CHOP
))

189 *
s
 = ' ';

191 i‡(
size
)

192 
ch›hîe
 = 
s
;

193 i‡(
ch›hîe
 && ch›hîê< 
s
 && *†&& 
	`ödex
(
ch›£t
,*s))

194 
ch›hîe
 = 
s
;

195 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
) {

196 i‡(!
ch›hîe
)

197 
ch›hîe
 = 
s
;

198 
size
 +(
s
 - 
ch›hîe
);

199 
s
 = 
ch›hîe
;

200 *
ch›hîe
 && 
	`ödex
(
ch›£t
,*chophere))

201 
ch›hîe
++;

203 
tmpch¨
 = *
s
;

204 *
s
 = '\0';

205 
size
) {

206 
size
--;

207 *
d
++ = ' ';

209 
size
 = 
s
 - 
t
;

210 ()
	`bc›y
(
t
,
d
,
size
);

211 
d
 +
size
;

212 *
s
 = 
tmpch¨
;

213 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
)

214 
	`°r_ch›
(
°r
,
ch›hîe
);

216 
F_CENTER
: {

217 
hÆfsize
;

219 ()
	`evÆ
(
fcmd
->
f_ex¥
,
G_SCALAR
,
•
);

220 
°r
 = 
°ack
->
¨y_¨øy
[
•
+1];

221 
t
 = 
s
 = 
	`°r_gë
(
°r
);

222 
size
 = 
fcmd
->
f_size
;

223 
	`CHKLEN
(
size
);

224 
ch›hîe
 = 
NuŒch
;

225 
size
 && *
s
 && *s != '\n') {

226 i‡(*
s
 == '\t')

227 *
s
 = ' ';

228 
size
--;

229 i‡(*
s
 && 
	`ödex
(
ch›£t
,*s++))

230 
ch›hîe
 = 
s
;

231 i‡(*
s
 ='\n' && (
fcmd
->
f_Êags
 & 
FC_CHOP
))

232 *
s
 = ' ';

234 i‡(
size
)

235 
ch›hîe
 = 
s
;

236 i‡(
ch›hîe
 && ch›hîê< 
s
 && *†&& 
	`ödex
(
ch›£t
,*s))

237 
ch›hîe
 = 
s
;

238 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
) {

239 i‡(!
ch›hîe
)

240 
ch›hîe
 = 
s
;

241 
size
 +(
s
 - 
ch›hîe
);

242 
s
 = 
ch›hîe
;

243 *
ch›hîe
 && 
	`ödex
(
ch›£t
,*chophere))

244 
ch›hîe
++;

246 
tmpch¨
 = *
s
;

247 *
s
 = '\0';

248 
hÆfsize
 = 
size
 / 2;

249 
size
 > 
hÆfsize
) {

250 
size
--;

251 *
d
++ = ' ';

253 
size
 = 
s
 - 
t
;

254 ()
	`bc›y
(
t
,
d
,
size
);

255 
d
 +
size
;

256 *
s
 = 
tmpch¨
;

257 i‡(
fcmd
->
f_√xt
 && fcmd->f_√xt->
f_¥e
[0] == '\n')

258 
size
 = 0;

260 
size
 = 
hÆfsize
;

261 
size
) {

262 
size
--;

263 *
d
++ = ' ';

265 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
)

266 
	`°r_ch›
(
°r
,
ch›hîe
);

269 
F_LINES
:

270 ()
	`evÆ
(
fcmd
->
f_ex¥
,
G_SCALAR
,
•
);

271 
°r
 = 
°ack
->
¨y_¨øy
[
•
+1];

272 
s
 = 
	`°r_gë
(
°r
);

273 
size
 = 
	`°r_Àn
(
°r
);

274 
	`CHKLEN
(
size
+1);

275 
‹ec
->
o_löes
 +
	`cou¡löes
(
s
,
size
) - 1;

276 ()
	`bc›y
(
s
,
d
,
size
);

277 
d
 +
size
;

278 i‡(
size
 && 
s
[size-1] != '\n') {

279 *
d
++ = '\n';

280 
‹ec
->
o_löes
++;

282 
löebeg
 = 
fcmd
->
f_√xt
;

284 
F_DECIMAL
: {

285 
vÆue
;

287 ()
	`evÆ
(
fcmd
->
f_ex¥
,
G_SCALAR
,
•
);

288 
°r
 = 
°ack
->
¨y_¨øy
[
•
+1];

289 
size
 = 
fcmd
->
f_size
;

290 
	`CHKLEN
(
size
);

293 i‡((
fcmd
->
f_Êags
 & 
FC_CHOP
Ë&& !
°r
->
°r_pok
 && !°r->
°r_nok
) {

294 
size
) {

295 
size
--;

296 *
d
++ = ' ';

300 
vÆue
 = 
	`°r_gnum
(
°r
);

301 i‡(
fcmd
->
f_Êags
 & 
FC_DP
) {

302 
	`•rötf
(
d
, "%#*.*f", 
size
, 
fcmd
->
f_decimÆs
, 
vÆue
);

304 
	`•rötf
(
d
, "%*.0f", 
size
, 
vÆue
);

306 
d
 +
size
;

311 
	`CHKLEN
(1);

312 *
d
++ = '\0';

313 
	}
}

315 
	$cou¡löes
(
s
,
size
)

316 *
s
;

317 
size
;

319 
cou¡
 = 0;

321 
size
--) {

322 i‡(*
s
++ == '\n')

323 
cou¡
++;

325  
cou¡
;

326 
	}
}

328 
	$do_wrôe
(
‹ec
,
°io
,
•
)

329 
ouåec
 *
‹ec
;

330 
STIO
 *
°io
;

331 
•
;

333 
FILE
 *
oÂ
 = 
°io
->ofp;

335 #ifde‡
DEBUGGING


336 i‡(
debug
 & 256)

337 
	`Ârötf
(
°dîr
,"left=%ld,Åodo=%ld\n",

338 ()
°io
->
löes_À·
, ()
‹ec
->
o_löes
);

340 i‡(
°io
->
löes_À·
 < 
‹ec
->
o_löes
) {

341 i‡(!
°io
->
t›_°ab
) {

342 
STAB
 *
t›°ab
;

344 i‡(!
°io
->
t›_«me
)

345 
°io
->
t›_«me
 = 
	`ßve°r
("top");

346 
t›°ab
 = 
	`°abít
(
°io
->
t›_«me
,
FALSE
);

347 i‡(!
t›°ab
 || !
	`°ab_f‹m
(topstab)) {

348 
°io
->
löes_À·
 = 100000000;

349 
f‹gë_t›
;

351 
°io
->
t›_°ab
 = 
t›°ab
;

353 i‡(
°io
->
löes_À·
 >0 && stio->
∑ge
 > 0)

354 ()
	`putc
('\f',
oÂ
);

355 
°io
->
löes_À·
 = stio->
∑ge_Àn
;

356 
°io
->
∑ge
++;

357 
	`f‹m©
(&
t›ªc
,
	`°ab_f‹m
(
°io
->
t›_°ab
),
•
);

358 
	`Âuts
(
t›ªc
.
o_°r
,
oÂ
);

359 
°io
->
löes_À·
 -
t›ªc
.
o_löes
;

361 
f‹gë_t›
:

362 
	`Âuts
(
‹ec
->
o_°r
,
oÂ
);

363 
°io
->
löes_À·
 -
‹ec
->
o_löes
;

364 
	}
}

	@form.h

14 
	#F_NULL
 0

	)

15 
	#F_LEFT
 1

	)

16 
	#F_RIGHT
 2

	)

17 
	#F_CENTER
 3

	)

18 
	#F_LINES
 4

	)

19 
	#F_DECIMAL
 5

	)

21 
	sf‹mcmd
 {

22 
f‹mcmd
 *
	mf_√xt
;

23 
ARG
 *
	mf_ex¥
;

24 
STR
 *
	mf_u≈¨£d
;

25 
löe_t
 
	mf_löe
;

26 *
	mf_¥e
;

27 
	mf_¥esize
;

28 
	mf_size
;

29 
	mf_decimÆs
;

30 
	mf_ty≥
;

31 
	mf_Êags
;

34 
	#FC_CHOP
 1

	)

35 
	#FC_NOBLANK
 2

	)

36 
	#FC_MORE
 4

	)

37 
	#FC_REPEAT
 8

	)

38 
	#FC_DP
 16

	)

40 
	#NuŒfcmd
 
	`NuŒ
(
FCMD
*)

	)

42 
EXT
 *
ch›£t
 
INIT
(" \n-");

	@handy.h

14 #ifde‡
NULL


15 #unde‡
NULL


17 #i‚de‡
I286


18 
	#NULL
 0

	)

20 
	#NULL
 0L

	)

22 
	#NuŒ
(
ty≥
Ë(—y≥)
NULL
)

	)

23 
	#NuŒch
 
	`NuŒ
(*)

	)

24 
	#NuŒÂ
 
	`NuŒ
(
FILE
*)

	)

26 #ifde‡
UTS


27 
	#boﬁ
 

	)

29 
	#boﬁ
 

	)

32 #ifde‡
TRUE


33 #unde‡
TRUE


35 #ifde‡
FALSE


36 #unde‡
FALSE


38 
	#TRUE
 (1)

	)

39 
	#FALSE
 (0)

	)

41 
	#Cé
(
ch
Ë(ch & 037)

	)

43 
	#°rNE
(
s1
,
s2
Ë(
	`°rcmp
(s1,s2))

	)

44 
	#°rEQ
(
s1
,
s2
Ë(!
	`°rcmp
(s1,s2))

	)

45 
	#°rLT
(
s1
,
s2
Ë(
	`°rcmp
(s1,s2Ë< 0)

	)

46 
	#°rLE
(
s1
,
s2
Ë(
	`°rcmp
(s1,s2Ë<0)

	)

47 
	#°rGT
(
s1
,
s2
Ë(
	`°rcmp
(s1,s2Ë> 0)

	)

48 
	#°rGE
(
s1
,
s2
Ë(
	`°rcmp
(s1,s2Ë>0)

	)

49 
	#°∫NE
(
s1
,
s2
,
l
Ë(
	`°∫cmp
(s1,s2,l))

	)

50 
	#°∫EQ
(
s1
,
s2
,
l
Ë(!
	`°∫cmp
(s1,s2,l))

	)

52 
	#MEM_SIZE
 

	)

55 
	tlöe_t
;

56 #ifde‡
löt


57 
	#NOLINE
 ((
löe_t
)0)

	)

59 
	#NOLINE
 ((
löe_t
Ë65535)

	)

62 #i‚de‡
löt


63 #i‚de‡
LEAKTEST


64 *
ß„mÆloc
();

65 *
ß„ªÆloc
();

66 
ß„‰ì
();

67 #i‚de‡
MSDOS


68 
	#New
(
x
,
v
,
n
,
t
Ë(v = (t*)
	`ß„mÆloc
((
MEM_SIZE
)(“Ë* —))))

	)

69 
	#Newc
(
x
,
v
,
n
,
t
,
c
Ë(v = (c*)
	`ß„mÆloc
((
MEM_SIZE
)(“Ë* —))))

	)

70 
	#Newz
(
x
,
v
,
n
,
t
Ë(v = (t*)
	`ß„mÆloc
((
MEM_SIZE
)((n) * (t)))), \

71 
	`bzîo
((*)(
v
), (
n
Ë* (
t
))

	)

72 
	#Ríew
(
v
,
n
,
t
Ë(v = (t*)
	`ß„ªÆloc
((*)(v),(
MEM_SIZE
)(“)*—))))

	)

73 
	#Ríewc
(
v
,
n
,
t
,
c
Ë(v = (c*)
	`ß„ªÆloc
((*)(v),(
MEM_SIZE
)(“)*—))))

	)

75 
	#New
(
x
,
v
,
n
,
t
Ë(v = (t*)
	`ß„mÆloc
((()“Ë* —))))

	)

76 
	#Newc
(
x
,
v
,
n
,
t
,
c
Ë(v = (c*)
	`ß„mÆloc
((()“Ë* —))))

	)

77 
	#Newz
(
x
,
v
,
n
,
t
Ë(v = (t*)
	`ß„mÆloc
((()(n) * (t)))), \

78 
	`bzîo
((*)(
v
), (
n
Ë* (
t
))

	)

79 
	#Ríew
(
v
,
n
,
t
Ë(v = (t*)
	`ß„ªÆloc
((*)(v),(()“)*—))))

	)

80 
	#Ríewc
(
v
,
n
,
t
,
c
Ë(v = (c*)
	`ß„ªÆloc
((*)(v),(()“)*—))))

	)

83 #ifde‡
IGNOREFREE


84 
	#Sa„‰ì
(
d
Ë{};

	)

86 
	#Sa„‰ì
(
d
Ë
	`ß„‰ì
((*)d)

	)

89 
	#Så_√w
(
x
,
Àn
Ë
	`°r_√w
÷í)

	)

91 *
ß„xmÆloc
();

92 *
ß„xªÆloc
();

93 
ß„x‰ì
();

94 
	#New
(
x
,
v
,
n
,
t
Ë(v = (t*)
	`ß„xmÆloc
(x,(
MEM_SIZE
)(“Ë* —))))

	)

95 
	#Newc
(
x
,
v
,
n
,
t
,
c
Ë(v = (c*)
	`ß„xmÆloc
(x,(
MEM_SIZE
)(“Ë* —))))

	)

96 
	#Newz
(
x
,
v
,
n
,
t
Ë(v = (t*)
	`ß„xmÆloc
(x,(
MEM_SIZE
)((n) * (t)))), \

97 
	`bzîo
((*)(
v
), (
n
Ë* (
t
))

	)

98 
	#Ríew
(
v
,
n
,
t
Ë(v = (t*)
	`ß„xªÆloc
((*)(v),(
MEM_SIZE
)(“)*—))))

	)

99 
	#Ríewc
(
v
,
n
,
t
,
c
Ë(v = (c*)
	`ß„xªÆloc
((*)(v),(
MEM_SIZE
)(“)*—))))

	)

100 
	#Sa„‰ì
(
d
Ë
	`ß„x‰ì
((*)d)

	)

101 
	#Så_√w
(
x
,
Àn
Ë
	`°r_√w
(x,Àn)

	)

102 
	#MAXXCOUNT
 1200

	)

103 
	gxcou¡
[
MAXXCOUNT
];

104 
	gœ°xcou¡
[
MAXXCOUNT
];

106 
	#C›y
(
s
,
d
,
n
,
t
Ë()
	`bc›y
((*)(s),(*)(d), (nË* —))

	)

107 
	#Zîo
(
d
,
n
,
t
Ë()
	`bzîo
((*)(d), (nË* —))

	)

109 
	#New
(
x
,
v
,
n
,
s
Ë(v = 
	`NuŒ
(†*))

	)

110 
	#Newc
(
x
,
v
,
n
,
s
,
c
Ë(v = 
	`NuŒ
(†*))

	)

111 
	#Newz
(
x
,
v
,
n
,
s
Ë(v = 
	`NuŒ
(†*))

	)

112 
	#Ríew
(
v
,
n
,
s
Ë(v = 
	`NuŒ
(†*))

	)

113 
	#C›y
(
s
,
d
,
n
,
t
)

	)

114 
	#Zîo
(
d
,
n
,
t
)

	)

115 
	#Sa„‰ì
(
d
Ëd = 
	)
d

	@hash.c

14 
	~"EXTERN.h
"

15 
	~"≥æ.h
"

17 
	gc€ff
[] = {

27 
h‰ìíåõs
();

29 
STR
 *

30 
	$h„tch
(
tb
,
key
,
kÀn
,
lvÆ
)

31 
HASH
 *
tb
;

32 *
key
;

33 
kÀn
;

34 
lvÆ
;

36 *
s
;

37 
i
;

38 
hash
;

39 
HENT
 *
íåy
;

40 
maxi
;

41 
STR
 *
°r
;

42 #ifde‡
SOME_DBM


43 
d©um
 
dkey
,
dc⁄ã¡
;

46 i‡(!
tb
)

47  &
°r_undef
;

48 i‡(!
tb
->
tbl_¨øy
) {

49 i‡(
lvÆ
)

50 
	`Newz
(503,
tb
->
tbl_¨øy
,Åb->
tbl_max
 + 1, 
HENT
*);

52  &
°r_undef
;

62 i‡(!
tb
->
tbl_c€ffsize
)

63 
hash
 = *
key
 + 128 * key[1] + 128 * key[
kÀn
-1];

65 i‡(
kÀn
 < 
tb
->
tbl_c€ffsize
)

66 
maxi
 = 
kÀn
;

68 
maxi
 = 
tb
->
tbl_c€ffsize
;

69 
s
=
key
, 
i
=0, 
hash
 = 0;

70 
i
 < 
maxi
;

71 
s
++, 
i
++, 
hash
 *= 5) {

72 
hash
 +*
s
 * 
c€ff
[
i
];

76 
íåy
 = 
tb
->
tbl_¨øy
[
hash
 &Åb->
tbl_max
];

77 ; 
íåy
;É¡ry =É¡ry->
hít_√xt
) {

78 i‡(
íåy
->
hít_hash
 !
hash
)

80 i‡(
íåy
->
hít_kÀn
 !
kÀn
)

82 i‡(
	`bcmp
(
íåy
->
hít_key
,
key
,
kÀn
))

84  
íåy
->
hít_vÆ
;

86 #ifde‡
SOME_DBM


87 i‡(
tb
->
tbl_dbm
) {

88 
dkey
.
d±r
 = 
key
;

89 
dkey
.
dsize
 = 
kÀn
;

90 #ifde‡
HAS_GDBM


91 
dc⁄ã¡
 = 
	`gdbm_„tch
(
tb
->
tbl_dbm
,
dkey
);

93 
dc⁄ã¡
 = 
	`dbm_„tch
(
tb
->
tbl_dbm
,
dkey
);

95 i‡(
dc⁄ã¡
.
d±r
) {

96 
°r
 = 
	`Så_√w
(60,
dc⁄ã¡
.
dsize
);

97 
	`°r_n£t
(
°r
,
dc⁄ã¡
.
d±r
,dc⁄ã¡.
dsize
);

98 
	`h°‹e
(
tb
,
key
,
kÀn
,
°r
,
hash
);

99  
°r
;

103 i‡(
lvÆ
) {

104 
°r
 = 
	`Så_√w
(61,0);

105 
	`h°‹e
(
tb
,
key
,
kÀn
,
°r
,
hash
);

106  
°r
;

108  &
°r_undef
;

109 
	}
}

111 
boﬁ


112 
	$h°‹e
(
tb
,
key
,
kÀn
,
vÆ
,
hash
)

113 
HASH
 *
tb
;

114 *
key
;

115 
kÀn
;

116 
STR
 *
vÆ
;

117 
hash
;

119 *
s
;

120 
i
;

121 
HENT
 *
íåy
;

122 
HENT
 **
€¡ry
;

123 
maxi
;

125 i‡(!
tb
)

126  
FALSE
;

128 i‡(
hash
)

130 i‡(!
tb
->
tbl_c€ffsize
)

131 
hash
 = *
key
 + 128 * key[1] + 128 * key[
kÀn
-1];

133 i‡(
kÀn
 < 
tb
->
tbl_c€ffsize
)

134 
maxi
 = 
kÀn
;

136 
maxi
 = 
tb
->
tbl_c€ffsize
;

137 
s
=
key
, 
i
=0, 
hash
 = 0;

138 
i
 < 
maxi
;

139 
s
++, 
i
++, 
hash
 *= 5) {

140 
hash
 +*
s
 * 
c€ff
[
i
];

144 i‡(!
tb
->
tbl_¨øy
)

145 
	`Newz
(505,
tb
->
tbl_¨øy
,Åb->
tbl_max
 + 1, 
HENT
*);

147 
€¡ry
 = &(
tb
->
tbl_¨øy
[
hash
 &Åb->
tbl_max
]);

148 
i
 = 1;

150 
íåy
 = *
€¡ry
;É¡ry; 
i
=0,É¡ry =É¡ry->
hít_√xt
) {

151 i‡(
íåy
->
hít_hash
 !
hash
)

153 i‡(
íåy
->
hít_kÀn
 !
kÀn
)

155 i‡(
	`bcmp
(
íåy
->
hít_key
,
key
,
kÀn
))

157 
	`Sa„‰ì
(
íåy
->
hít_vÆ
);

158 
íåy
->
hít_vÆ
 = 
vÆ
;

159  
TRUE
;

161 
	`New
(501,
íåy
, 1, 
HENT
);

163 
íåy
->
hít_kÀn
 = 
kÀn
;

164 
íåy
->
hít_key
 = 
	`nßve°r
(
key
,
kÀn
);

165 
íåy
->
hít_vÆ
 = 
vÆ
;

166 
íåy
->
hít_hash
 = 
hash
;

167 
íåy
->
hít_√xt
 = *
€¡ry
;

168 *
€¡ry
 = 
íåy
;

172 i‡(
i
) {

173 
tb
->
tbl_fûl
++;

174 #ifde‡
SOME_DBM


175 i‡(
tb
->
tbl_dbm
 &&Åb->
tbl_max
 >
DBM_CACHE_MAX
)

176  
FALSE
;

178 i‡(
tb
->
tbl_fûl
 >Åb->
tbl_do•lô
)

179 
	`h•lô
(
tb
);

181 #ifde‡
SOME_DBM


182 i‡(
tb
->
tbl_dbm
) {

183 
	`hítdñay‰ì
();

185 
íåy
 = 
tb
->
tbl_¨øy
[
hash
 &Åb->
tbl_max
];

186 
€¡ry
 = &
íåy
->
hít_√xt
;

187 
íåy
 = *
€¡ry
;

188 
íåy
) {

189 *
€¡ry
 = 
íåy
->
hít_√xt
;

190 
	`hítdñay‰ì
(
íåy
);

191 
íåy
 = *
€¡ry
;

196  
FALSE
;

197 
	}
}

199 
STR
 *

200 
	$hdñëe
(
tb
,
key
,
kÀn
)

201 
HASH
 *
tb
;

202 *
key
;

203 
kÀn
;

205 *
s
;

206 
i
;

207 
hash
;

208 
HENT
 *
íåy
;

209 
HENT
 **
€¡ry
;

210 
STR
 *
°r
;

211 
maxi
;

212 #ifde‡
SOME_DBM


213 
d©um
 
dkey
;

216 i‡(!
tb
 || !tb->
tbl_¨øy
)

217  
NuŒ°r
;

218 i‡(!
tb
->
tbl_c€ffsize
)

219 
hash
 = *
key
 + 128 * key[1] + 128 * key[
kÀn
-1];

221 i‡(
kÀn
 < 
tb
->
tbl_c€ffsize
)

222 
maxi
 = 
kÀn
;

224 
maxi
 = 
tb
->
tbl_c€ffsize
;

225 
s
=
key
, 
i
=0, 
hash
 = 0;

226 
i
 < 
maxi
;

227 
s
++, 
i
++, 
hash
 *= 5) {

228 
hash
 +*
s
 * 
c€ff
[
i
];

232 
€¡ry
 = &(
tb
->
tbl_¨øy
[
hash
 &Åb->
tbl_max
]);

233 
íåy
 = *
€¡ry
;

234 
i
 = 1;

235 ; 
íåy
; 
i
=0, 
€¡ry
 = &íåy->
hít_√xt
,Éntry = *oentry) {

236 i‡(
íåy
->
hít_hash
 !
hash
)

238 i‡(
íåy
->
hít_kÀn
 !
kÀn
)

240 i‡(
	`bcmp
(
íåy
->
hít_key
,
key
,
kÀn
))

242 *
€¡ry
 = 
íåy
->
hít_√xt
;

243 
°r
 = 
	`°r_m‹èl
(
íåy
->
hít_vÆ
);

244 
	`hít‰ì
(
íåy
);

245 i‡(
i
)

246 
tb
->
tbl_fûl
--;

247 #ifde‡
SOME_DBM


248 
do_dbm_dñëe
:

249 i‡(
tb
->
tbl_dbm
) {

250 
dkey
.
d±r
 = 
key
;

251 
dkey
.
dsize
 = 
kÀn
;

252 #ifde‡
HAS_GDBM


253 
	`gdbm_dñëe
(
tb
->
tbl_dbm
,
dkey
);

255 
	`dbm_dñëe
(
tb
->
tbl_dbm
,
dkey
);

259  
°r
;

261 #ifde‡
SOME_DBM


262 
°r
 = 
NuŒ°r
;

263 
do_dbm_dñëe
;

265  
NuŒ°r
;

267 
	}
}

269 
	$h•lô
(
tb
)

270 
HASH
 *
tb
;

272 
ﬁdsize
 = 
tb
->
tbl_max
 + 1;

273 
√wsize
 = 
ﬁdsize
 * 2;

274 
i
;

275 
HENT
 **
a
;

276 
HENT
 **
b
;

277 
HENT
 *
íåy
;

278 
HENT
 **
€¡ry
;

280 
a
 = 
tb
->
tbl_¨øy
;

281 
	`Ríew
(
a
, 
√wsize
, 
HENT
*);

282 
	`Zîo
(&
a
[
ﬁdsize
], oldsize, 
HENT
*);

283 
tb
->
tbl_max
 = --
√wsize
;

284 
tb
->
tbl_do•lô
 =Åb->
tbl_max
 * 
FILLPCT
 / 100;

285 
tb
->
tbl_¨øy
 = 
a
;

287 
i
=0; i<
ﬁdsize
; i++,
a
++) {

288 i‡(!*
a
)

290 
b
 = 
a
+
ﬁdsize
;

291 
€¡ry
 = 
a
, 
íåy
 = *a;Éntry;Éntry = *oentry) {

292 i‡((
íåy
->
hít_hash
 & 
√wsize
Ë!
i
) {

293 *
€¡ry
 = 
íåy
->
hít_√xt
;

294 
íåy
->
hít_√xt
 = *
b
;

295 i‡(!*
b
)

296 
tb
->
tbl_fûl
++;

297 *
b
 = 
íåy
;

301 
€¡ry
 = &
íåy
->
hít_√xt
;

303 i‡(!*
a
)

304 
tb
->
tbl_fûl
--;

306 
	}
}

308 
HASH
 *

309 
	$h√w
(
look©
)

310 
look©
;

312 
HASH
 *
tb
;

314 
	`Newz
(502,
tb
, 1, 
HASH
);

315 i‡(
look©
) {

316 
tb
->
tbl_c€ffsize
 = 
look©
;

317 
tb
->
tbl_max
 = 7;

318 
tb
->
tbl_do•lô
 =Åb->
tbl_max
 * 
FILLPCT
 / 100;

321 
tb
->
tbl_max
 = 127;

322 
tb
->
tbl_do•lô
 = 128;

324 
tb
->
tbl_fûl
 = 0;

325 #ifde‡
SOME_DBM


326 
tb
->
tbl_dbm
 = 0;

328 ()
	`hôîöô
(
tb
);

329  
tb
;

330 
	}
}

333 
	$hít‰ì
(
hít
)

334 
HENT
 *
hít
;

336 i‡(!
hít
)

338 
	`°r_‰ì
(
hít
->
hít_vÆ
);

339 
	`Sa„‰ì
(
hít
->
hít_key
);

340 
	`Sa„‰ì
(
hít
);

341 
	}
}

344 
	$hítdñay‰ì
(
hít
)

345 
HENT
 *
hít
;

347 i‡(!
hít
)

349 
	`°r_2m‹èl
(
hít
->
hít_vÆ
);

350 
	`Sa„‰ì
(
hít
->
hít_key
);

351 
	`Sa„‰ì
(
hít
);

352 
	}
}

355 
	$h˛ór
(
tb
,
dodbm
)

356 
HASH
 *
tb
;

357 
dodbm
;

359 i‡(!
tb
)

361 
	`h‰ìíåõs
(
tb
,
dodbm
);

362 
tb
->
tbl_fûl
 = 0;

363 #i‚de‡
löt


364 i‡(
tb
->
tbl_¨øy
)

365 ()
	`bzîo
((*)
tb
->
tbl_¨øy
, (tb->
tbl_max
 + 1Ë* (
HENT
*));

367 
	}
}

370 
	$h‰ìíåõs
(
tb
,
dodbm
)

371 
HASH
 *
tb
;

372 
dodbm
;

374 
HENT
 *
hít
;

375 
HENT
 *
ohít
 = 
	`NuŒ
(HENT*);

376 #ifde‡
SOME_DBM


377 
d©um
 
dkey
;

378 
d©um
 
√xtdkey
;

379 #ifde‡
HAS_GDBM


380 
GDBM_FILE
 
ﬁd_dbm
;

382 #ifde‡
HAS_NDBM


383 
DBM
 *
ﬁd_dbm
;

385 
ﬁd_dbm
;

390 i‡(!
tb
 || !tb->
tbl_¨øy
)

392 #ifde‡
SOME_DBM


393 i‡((
ﬁd_dbm
 = 
tb
->
tbl_dbm
Ë&& 
dodbm
) {

394 #ifde‡
HAS_GDBM


395 
dkey
 = 
	`gdbm_fú°key
(
tb
->
tbl_dbm
), dkey.
d±r
) {

397 
dkey
 = 
	`dbm_fú°key
(
tb
->
tbl_dbm
), dkey.
d±r
) {

400 #ifde‡
HAS_GDBM


401 
√xtdkey
 = 
	`gdbm_√xtkey
(
tb
->
tbl_dbm
, 
dkey
);

403 #ifde‡
HAS_NDBM


404 #ifde‡
_CX_UX


405 
√xtdkey
 = 
	`dbm_√xtkey
(
tb
->
tbl_dbm
, 
dkey
);

407 
√xtdkey
 = 
	`dbm_√xtkey
(
tb
->
tbl_dbm
);

410 
√xtdkey
 = 
	`√xtkey
(
dkey
);

413 #ifde‡
HAS_GDBM


414 
	`gdbm_dñëe
(
tb
->
tbl_dbm
,
dkey
);

416 
	`dbm_dñëe
(
tb
->
tbl_dbm
,
dkey
);

418 
dkey
 = 
√xtdkey
;

419 } 
dkey
.
d±r
);

422 
tb
->
tbl_dbm
 = 0;

424 ()
	`hôîöô
(
tb
);

425 
hít
 = 
	`hôî√xt
(
tb
)) {

426 
	`hít‰ì
(
ohít
);

427 
ohít
 = 
hít
;

429 
	`hít‰ì
(
ohít
);

430 #ifde‡
SOME_DBM


431 
tb
->
tbl_dbm
 = 
ﬁd_dbm
;

433 
	}
}

436 
	$h‰ì
(
tb
,
dodbm
)

437 
HASH
 *
tb
;

438 
dodbm
;

440 i‡(!
tb
)

442 
	`h‰ìíåõs
(
tb
,
dodbm
);

443 
	`Sa„‰ì
(
tb
->
tbl_¨øy
);

444 
	`Sa„‰ì
(
tb
);

445 
	}
}

448 
	$hôîöô
(
tb
)

449 
HASH
 *
tb
;

451 
tb
->
tbl_rôî
 = -1;

452 
tb
->
tbl_eôî
 = 
	`NuŒ
(
HENT
*);

453  
tb
->
tbl_fûl
;

454 
	}
}

456 
HENT
 *

457 
	$hôî√xt
(
tb
)

458 
HASH
 *
tb
;

460 
HENT
 *
íåy
;

461 #ifde‡
SOME_DBM


462 
d©um
 
key
;

465 
íåy
 = 
tb
->
tbl_eôî
;

466 #ifde‡
SOME_DBM


467 i‡(
tb
->
tbl_dbm
) {

468 i‡(
íåy
) {

469 #ifde‡
HAS_GDBM


470 
key
.
d±r
 = 
íåy
->
hít_key
;

471 
key
.
dsize
 = 
íåy
->
hít_kÀn
;

472 
key
 = 
	`gdbm_√xtkey
(
tb
->
tbl_dbm
, key);

474 #ifde‡
HAS_NDBM


475 #ifde‡
_CX_UX


476 
key
.
d±r
 = 
íåy
->
hít_key
;

477 
key
.
dsize
 = 
íåy
->
hít_kÀn
;

478 
key
 = 
	`dbm_√xtkey
(
tb
->
tbl_dbm
, key);

480 
key
 = 
	`dbm_√xtkey
(
tb
->
tbl_dbm
);

483 
key
.
d±r
 = 
íåy
->
hít_key
;

484 
key
.
dsize
 = 
íåy
->
hít_kÀn
;

485 
key
 = 
	`√xtkey
(key);

490 
	`Newz
(504,
íåy
, 1, 
HENT
);

491 
tb
->
tbl_eôî
 = 
íåy
;

492 #ifde‡
HAS_GDBM


493 
key
 = 
	`gdbm_fú°key
(
tb
->
tbl_dbm
);

495 
key
 = 
	`dbm_fú°key
(
tb
->
tbl_dbm
);

498 
íåy
->
hít_key
 = 
key
.
d±r
;

499 
íåy
->
hít_kÀn
 = 
key
.
dsize
;

500 i‡(!
key
.
d±r
) {

501 i‡(
íåy
->
hít_vÆ
)

502 
	`°r_‰ì
(
íåy
->
hít_vÆ
);

503 
	`Sa„‰ì
(
íåy
);

504 
tb
->
tbl_eôî
 = 
	`NuŒ
(
HENT
*);

505  
	`NuŒ
(
HENT
*);

507  
íåy
;

510 i‡(!
tb
->
tbl_¨øy
)

511 
	`Newz
(506,
tb
->
tbl_¨øy
,Åb->
tbl_max
 + 1, 
HENT
*);

513 i‡(
íåy
)

514 
íåy
 =É¡ry->
hít_√xt
;

515 i‡(!
íåy
) {

516 
tb
->
tbl_rôî
++;

517 i‡(
tb
->
tbl_rôî
 >Åb->
tbl_max
) {

518 
tb
->
tbl_rôî
 = -1;

521 
íåy
 = 
tb
->
tbl_¨øy
[tb->
tbl_rôî
];

523 } !
íåy
);

525 
tb
->
tbl_eôî
 = 
íåy
;

526  
íåy
;

527 
	}
}

530 
	$hôîkey
(
íåy
,
ªéí
)

531 
HENT
 *
íåy
;

532 *
ªéí
;

534 *
ªéí
 = 
íåy
->
hít_kÀn
;

535  
íåy
->
hít_key
;

536 
	}
}

538 
STR
 *

539 
	$hôîvÆ
(
tb
,
íåy
)

540 
HASH
 *
tb
;

541 
HENT
 *
íåy
;

543 #ifde‡
SOME_DBM


544 
d©um
 
key
, 
c⁄ã¡
;

546 i‡(
tb
->
tbl_dbm
) {

547 
key
.
d±r
 = 
íåy
->
hít_key
;

548 
key
.
dsize
 = 
íåy
->
hít_kÀn
;

549 #ifde‡
HAS_GDBM


550 
c⁄ã¡
 = 
	`gdbm_„tch
(
tb
->
tbl_dbm
,
key
);

552 
c⁄ã¡
 = 
	`dbm_„tch
(
tb
->
tbl_dbm
,
key
);

554 i‡(!
íåy
->
hít_vÆ
)

555 
íåy
->
hít_vÆ
 = 
	`Så_√w
(62,0);

556 
	`°r_n£t
(
íåy
->
hít_vÆ
,
c⁄ã¡
.
d±r
,c⁄ã¡.
dsize
);

559  
íåy
->
hít_vÆ
;

560 
	}
}

562 #ifde‡
SOME_DBM


564 #i‚de‡
O_CREAT


565 #ifde‡
I_FCNTL


566 
	~<f˙é.h
>

568 #ifde‡
I_SYS_FILE


569 
	~<sys/fûe.h
>

573 #i‚de‡
O_RDONLY


574 
	#O_RDONLY
 0

	)

576 #i‚de‡
O_RDWR


577 
	#O_RDWR
 2

	)

579 #i‚de‡
O_CREAT


580 
	#O_CREAT
 01000

	)

583 #ifde‡
HAS_ODBM


584 
	gdbmªf˙t
 = 0;

587 
boﬁ


588 
	$hdbm›í
(
tb
,
‚ame
,
mode
)

589 
HASH
 *
tb
;

590 *
‚ame
;

591 
mode
;

593 i‡(!
tb
)

594  
FALSE
;

595 #ifde‡
HAS_ODBM


596 i‡(
tb
->
tbl_dbm
)

597  
TRUE
;

599 i‡(
tb
->
tbl_dbm
) {

600 
	`hdbm˛o£
(
tb
);

601 
tb
->
tbl_dbm
 = 0;

603 
	`h˛ór
(
tb
, 
FALSE
);

604 #ifde‡
HAS_GDBM


605 i‡(
mode
 >= 0)

606 
tb
->
tbl_dbm
 = 
	`gdbm_›í
(
‚ame
, 0, 
GDBM_WRCREAT
,
mode
, (*Ë
NULL
);

607 i‡(!
tb
->
tbl_dbm
)

608 
tb
->
tbl_dbm
 = 
	`gdbm_›í
(
‚ame
, 0, 
GDBM_WRITER
, 
mode
, (*Ë
NULL
);

609 i‡(!
tb
->
tbl_dbm
)

610 
tb
->
tbl_dbm
 = 
	`gdbm_›í
(
‚ame
, 0, 
GDBM_READER
, 
mode
, (*Ë
NULL
);

612 #ifde‡
HAS_NDBM


613 i‡(
mode
 >= 0)

614 
tb
->
tbl_dbm
 = 
	`dbm_›í
(
‚ame
, 
O_RDWR
|
O_CREAT
, 
mode
);

615 i‡(!
tb
->
tbl_dbm
)

616 
tb
->
tbl_dbm
 = 
	`dbm_›í
(
‚ame
, 
O_RDWR
, 
mode
);

617 i‡(!
tb
->
tbl_dbm
)

618 
tb
->
tbl_dbm
 = 
	`dbm_›í
(
‚ame
, 
O_RDONLY
, 
mode
);

620 i‡(
dbmªf˙t
++)

621 
	`Áèl
("Old dbm can only open one database");

622 
	`•rötf
(
buf
,"%s.dú",
‚ame
);

623 i‡(
	`°©
(
buf
, &
°©buf
) < 0) {

624 i‡(
mode
 < 0 || 
	`˛o£
(
	`¸ót
(
buf
,mode)) < 0)

625  
FALSE
;

626 
	`•rötf
(
buf
,"%s.∑g",
‚ame
);

627 i‡(
	`˛o£
(
	`¸ót
(
buf
,
mode
)) < 0)

628  
FALSE
;

630 
tb
->
tbl_dbm
 = 
	`dbmöô
(
‚ame
) >= 0;

633 i‡(!
tb
->
tbl_¨øy
 &&Åb->
tbl_dbm
 != 0)

634 
	`Newz
(507,
tb
->
tbl_¨øy
,Åb->
tbl_max
 + 1, 
HENT
*);

635  
tb
->
tbl_dbm
 != 0;

636 
	}
}

639 
	$hdbm˛o£
(
tb
)

640 
HASH
 *
tb
;

642 i‡(
tb
 &&Åb->
tbl_dbm
) {

643 #ifde‡
HAS_GDBM


644 
	`gdbm_˛o£
(
tb
->
tbl_dbm
);

645 
tb
->
tbl_dbm
 = 0;

647 #ifde‡
HAS_NDBM


648 
	`dbm_˛o£
(
tb
->
tbl_dbm
);

649 
tb
->
tbl_dbm
 = 0;

655 i‡(
dow¨n
)

656 
	`w¨n
("Close on unopened dbm file");

657 
	}
}

659 
boﬁ


660 
	$hdbm°‹e
(
tb
,
key
,
kÀn
,
°r
)

661 
HASH
 *
tb
;

662 *
key
;

663 
kÀn
;

664 
STR
 *
°r
;

666 
d©um
 
dkey
, 
dc⁄ã¡
;

667 
îr‹
;

669 i‡(!
tb
 || !tb->
tbl_dbm
)

670  
FALSE
;

671 
dkey
.
d±r
 = 
key
;

672 
dkey
.
dsize
 = 
kÀn
;

673 
dc⁄ã¡
.
d±r
 = 
	`°r_gë
(
°r
);

674 
dc⁄ã¡
.
dsize
 = 
°r
->
°r_cur
;

675 #ifde‡
HAS_GDBM


676 
îr‹
 = 
	`gdbm_°‹e
(
tb
->
tbl_dbm
, 
dkey
, 
dc⁄ã¡
, 
GDBM_REPLACE
);

678 
îr‹
 = 
	`dbm_°‹e
(
tb
->
tbl_dbm
, 
dkey
, 
dc⁄ã¡
, 
DBM_REPLACE
);

680 i‡(
îr‹
) {

681 i‡(
î∫o
 =
EPERM
)

682 
	`Áèl
("No writeÖermissionÅo dbm file");

683 
	`w¨n
("dbm st‹êªtu∫ed %d,Éºnÿ%d, key \"%s\"",
îr‹
,
î∫o
,
key
);

684 #ifde‡
HAS_NDBM


685 
	`dbm_˛óªº
(
tb
->
tbl_dbm
);

688  !
îr‹
;

689 
	}
}

	@hash.h

14 
	#FILLPCT
 80

	)

15 
	#DBM_CACHE_MAX
 63

	)

18 
	#COEFFSIZE
 (16 * 8Ë

	)

20 
híåy
 
	tHENT
;

22 
	shíåy
 {

23 
HENT
 *
	mhít_√xt
;

24 *
	mhít_key
;

25 
STR
 *
	mhít_vÆ
;

26 
	mhít_hash
;

27 
	mhít_kÀn
;

30 
	shtbl
 {

31 
HENT
 **
	mtbl_¨øy
;

32 
	mtbl_max
;

33 
	mtbl_do•lô
;

34 
	mtbl_fûl
;

35 
	mtbl_rôî
;

36 
HENT
 *
	mtbl_eôî
;

37 
SPAT
 *
	mtbl_•©roŸ
;

38 *
	mtbl_«me
;

39 #ifde‡
SOME_DBM


40 #ifde‡
HAS_GDBM


41 
GDBM_FILE
 
	mtbl_dbm
;

43 #ifde‡
HAS_NDBM


44 
DBM
 *
	mtbl_dbm
;

46 
	mtbl_dbm
;

50 
	mtbl_c€ffsize
;

53 
STR
 *
h„tch
();

54 
boﬁ
 
h°‹e
();

55 
STR
 *
hdñëe
();

56 
HASH
 *
h√w
();

57 
h˛ór
();

58 
hít‰ì
();

59 
hôîöô
();

60 
HENT
 *
hôî√xt
();

61 *
hôîkey
();

62 
STR
 *
hôîvÆ
();

63 
boﬁ
 
hdbm›í
();

64 
hdbm˛o£
();

65 
boﬁ
 
hdbm°‹e
();

	@malloc.c

12 #i‚de‡
löt


13 
	gsccsid
[] = "@(#)malloc.c 4.3 (Berkeley) 9/16/83";

15 #ifde‡
DEBUGGING


16 
	#RCHECK


	)

30 
	~"EXTERN.h
"

31 
	~"≥æ.h
"

33 
födbuckë
(), 
m‹ec‹e
();

37 
	#u_ch¨
 

	)

38 
	#u_öt
 

	)

39 
	#u_sh‹t
 

	)

50 
	uovîhód
 {

51 
ovîhód
 *
	mov_√xt
;

52 #i‡
ALIGNBYTES
 > 4

53 
	m°rut
;

56 
u_ch¨
 
	movu_magic
;

57 
u_ch¨
 
	movu_ödex
;

58 #ifde‡
RCHECK


59 
u_sh‹t
 
	movu_size
;

60 
u_öt
 
	movu_rmagic
;

62 } 
	movu
;

63 
	#ov_magic
 
ovu
.
ovu_magic


	)

64 
	#ov_ödex
 
ovu
.
ovu_ödex


	)

65 
	#ov_size
 
ovu
.
ovu_size


	)

66 
	#ov_rmagic
 
ovu
.
ovu_rmagic


	)

69 
	#MAGIC
 0xf‡

	)

70 
	#OLDMAGIC
 0x7‡

	)

71 
	#RMAGIC
 0x55555555

	)

72 #ifde‡
RCHECK


73 
	#RSLOP
  (
u_öt
)

	)

75 
	#RSLOP
 0

	)

83 
	#NBUCKETS
 30

	)

84 
ovîhód
 *
	g√xtf
[
NBUCKETS
];

85 
*
sbrk
();

87 #ifde‡
MSTATS


92 
u_öt
 
	gnmÆloc
[
NBUCKETS
];

93 
	~<°dio.h
>

96 #ifde‡
debug


97 
	#ASSERT
(
p
Ëi‡(!’)Ë
	`bŸch
("p"); 

	)

99 
	$bŸch
(
s
)

100 *
s
;

103 
	`¥ötf
("as£πi⁄ bŸched: %s\n", 
s
);

104 
	`ab‹t
();

105 
	}
}

107 
	#ASSERT
(
p
)

	)

110 
MALLOCPTRTYPE
 *

111 
	$mÆloc
(
nbyãs
)

112 
nbyãs
;

114 
ovîhód
 *
p
;

115 
buckë
 = 0;

116 
shi·r
;

124 
nbyãs
 + (
ovîhód
Ë+ 
RSLOP
;

125 
nbyãs
 = (nbytes + 3) &~ 3;

126 
shi·r
 = (
nbyãs
 - 1) >> 2;

128 
shi·r
 >>= 1)

129 
buckë
++;

134 i‡(
√xtf
[
buckë
] =
NULL
)

135 
	`m‹ec‹e
(
buckë
);

136 i‡((
p
 = (
ovîhód
 *)
√xtf
[
buckë
]Ë=
NULL
)

137  (
NULL
);

139 #ifde‡
RCHECK


140 i‡(*((*)
p
Ë& ((
ovîhód
) - 1))

141 #i‚de‡
I286


142 
	`Ârötf
(
°dîr
,"C‹ru± mÆlo¯±∏0x%xáà0x%x\n",*((*)
p
),p);

144 
	`Ârötf
(
°dîr
,"C‹ru± mÆlo¯±∏0x%lxáà0x%lx\n",*((*)
p
),p);

147 
√xtf
[
buckë
] = 
p
->
ov_√xt
;

148 
p
->
ov_magic
 = 
MAGIC
;

149 
p
->
ov_ödex

buckë
;

150 #ifde‡
MSTATS


151 
nmÆloc
[
buckë
]++;

153 #ifde‡
RCHECK


158 i‡(
nbyãs
 <= 0x10000)

159 
p
->
ov_size
 = 
nbyãs
 - 1;

160 
p
->
ov_rmagic
 = 
RMAGIC
;

161 *((
u_öt
 *)((
ˇddr_t
)
p
 + 
nbyãs
 - 
RSLOP
)Ë
RMAGIC
;

163  ((*)(
p
 + 1));

164 
	}
}

170 
	$m‹ec‹e
(
buckë
)

171 
buckë
;

173 
ovîhód
 *
›
;

174 
∫u
;

175 
nblks
;

176 
siz
;

178 i‡(
√xtf
[
buckë
])

185 
›
 = (
ovîhód
 *)
	`sbrk
(0);

186 #i‚de‡
I286


187 i‡(()
›
 & 0x3ff)

188 ()
	`sbrk
(1024 - (()
›
 & 0x3ff));

193 #i‚de‡
I286


195 
∫u
 = (
buckë
 <= 8) ? 11 : bucket + 3;

199 
∫u
 = (
buckë
 <= 11) ? 14 : bucket + 3;

201 
nblks
 = 1 << (
∫u
 - (
buckë
 + 3));

202 i‡(
∫u
 < 
buckë
)

203 
∫u
 = 
buckë
;

204 
›
 = (
ovîhód
 *)
	`sbrk
(1 << 
∫u
);

206 i‡(()
›
 == -1)

212 #i‚de‡
I286


213 i‡(()
›
 & 7) {

214 
›
 = (
ovîhód
 *)((()op + 8) &~ 7);

215 
nblks
--;

224 
√xtf
[
buckë
] = 
›
;

225 
siz
 = 1 << (
buckë
 + 3);

226 --
nblks
 > 0) {

227 
›
->
ov_√xt
 = (
ovîhód
 *)((
ˇddr_t
)› + 
siz
);

228 
›
 = (
ovîhód
 *)((
ˇddr_t
)› + 
siz
);

230 
	}
}

233 
	$‰ì
(
t˝
)

234 *
t˝
;

236 * 
˝
 = 
t˝
;

237 
size
;

238 
ovîhód
 *
›
;

240 #ifde‡
IGNOREFREE


243 i‡(
˝
 =
NULL
)

245 
›
 = (
ovîhód
 *)((
ˇddr_t
)
˝
 -  (overhead));

246 #ifde‡
debug


247 
	`ASSERT
(
›
->
ov_magic
 =
MAGIC
);

249 i‡(
›
->
ov_magic
 !
MAGIC
) {

250 
	`w¨n
("%s free() ignored",

251 
›
->
ov_magic
 =
OLDMAGIC
 ? "Duplicate" : "Bad");

254 
›
->
ov_magic
 = 
OLDMAGIC
;

256 #ifde‡
RCHECK


257 
	`ASSERT
(
›
->
ov_rmagic
 =
RMAGIC
);

258 i‡(
›
->
ov_ödex
 <= 13)

259 
	`ASSERT
(*(
u_öt
 *)((
ˇddr_t
)
›
 + op->
ov_size
 + 1 - 
RSLOP
Ë=
RMAGIC
);

261 
	`ASSERT
(
›
->
ov_ödex
 < 
NBUCKETS
);

262 
size
 = 
›
->
ov_ödex
;

263 
›
->
ov_√xt
 = 
√xtf
[
size
];

264 
√xtf
[
size
] = 
›
;

265 #ifde‡
MSTATS


266 
nmÆloc
[
size
]--;

269 
	}
}

282 
	gªÆl_§chÀn
 = 4;

284 
MALLOCPTRTYPE
 *

285 
	$ªÆloc
(
t˝
, 
nbyãs
)

286 *
t˝
;

287 
nbyãs
;

289 * 
˝
 = 
t˝
;

290 
u_öt
 
⁄b
;

291 
ovîhód
 *
›
;

292 *
ªs
;

293 
i
;

294 
was_Ælo˚d
 = 0;

296 i‡(
˝
 =
NULL
)

297  (
	`mÆloc
(
nbyãs
));

298 
›
 = (
ovîhód
 *)((
ˇddr_t
)
˝
 -  (overhead));

299 i‡(
›
->
ov_magic
 =
MAGIC
) {

300 
was_Ælo˚d
++;

301 
i
 = 
›
->
ov_ödex
;

314 i‡((
i
 = 
	`födbuckë
(
›
, 1)) < 0 &&

315 (
i
 = 
	`födbuckë
(
›
, 
ªÆl_§chÀn
)) < 0)

316 
i
 = 0;

318 
⁄b
 = (1 << (
i
 + 3)Ë-  (*
›
Ë- 
RSLOP
;

320 i‡(
was_Ælo˚d
 &&

321 
nbyãs
 <
⁄b
 &&Çbyã†> (⁄b >> 1Ë- (*
›
Ë- 
RSLOP
) {

322 #ifde‡
RCHECK


327 i‡(
›
->
ov_ödex
 <= 13) {

334 
nbyãs
 + (
ovîhód
Ë+ 
RSLOP
;

335 
nbyãs
 = (nbytes + 3) &~ 3;

336 
›
->
ov_size
 = 
nbyãs
 - 1;

337 *((
u_öt
 *)((
ˇddr_t
)
›
 + 
nbyãs
 - 
RSLOP
)Ë
RMAGIC
;

340 (
˝
);

342 i‡((
ªs
 = 
	`mÆloc
(
nbyãs
)Ë=
NULL
)

343  (
NULL
);

344 i‡(
˝
 !
ªs
)

345 ()
	`bc›y
(
˝
, 
ªs
, ()((
nbyãs
 < 
⁄b
) ?Çbytes : onb));

346 i‡(
was_Ælo˚d
)

347 
	`‰ì
(
˝
);

348  (
ªs
);

349 
	}
}

357 
	$födbuckë
(
‰ìp
, 
§chÀn
)

358 
ovîhód
 *
‰ìp
;

359 
§chÀn
;

361 
ovîhód
 *
p
;

362 
i
, 
j
;

364 
i
 = 0; i < 
NBUCKETS
; i++) {

365 
j
 = 0;

366 
p
 = 
√xtf
[
i
];Ö && 
j
 !
§chÀn
;Ö =Ö->
ov_√xt
) {

367 i‡(
p
 =
‰ìp
)

368  (
i
);

369 
j
++;

373 
	}
}

375 #ifde‡
MSTATS


383 
	$m°©s
(
s
)

384 *
s
;

386 
i
, 
j
;

387 
ovîhód
 *
p
;

388 
tŸ‰ì
 = 0,

389 
tŸu£d
 = 0;

391 
	`Ârötf
(
°dîr
, "Mem‹yáŒoˇti⁄ sèti°ic†%s\n‰ì:\t", 
s
);

392 
i
 = 0; i < 
NBUCKETS
; i++) {

393 
j
 = 0, 
p
 = 
√xtf
[
i
];Ö;Ö =Ö->
ov_√xt
, j++)

395 
	`Ârötf
(
°dîr
, " %d", 
j
);

396 
tŸ‰ì
 +
j
 * (1 << (
i
 + 3));

398 
	`Ârötf
(
°dîr
, "\nused:\t");

399 
i
 = 0; i < 
NBUCKETS
; i++) {

400 
	`Ârötf
(
°dîr
, " %d", 
nmÆloc
[
i
]);

401 
tŸu£d
 +
nmÆloc
[
i
] * (1 << (i + 3));

403 
	`Ârötf
(
°dîr
, "\n\tTotal in use: %d,Åotal free: %d\n",

404 
tŸu£d
, 
tŸ‰ì
);

405 
	}
}

	@patch-malloc.c

1 
*
mÆloc
();

2 
*
bZa
(), *
bZr
(), *
bZc
();

3 

‰ì
();

6 
	$mÆloc
(
n
)

7 
n
;

9  
	`bZa
(
n
);

10 
	}
}

13 
	$ˇŒoc
(
n
)

14 
n
;

18 
	}
}

20 
	$‰ì
(
p
)

21 *
p
;

23 
	`bZf
(
p
);

24 
	}
}

27 
	$ªÆloc
(
˝
, 
nbyãs
)

28 *
˝
;

29 
nbyãs
;

31  
	`bZr
(
˝
, 
nbyãs
);

32 
	}
}

	@patchlevel.h

1 
	#PATCHLEVEL
 3

	)

	@perl.c

1 
	grcsid
[] = "$RCSfile$$Revision$$Date$\nPatchÜevel: ###\n";

17 
	~"EXTERN.h
"

18 
	~"≥æ.h
"

19 
	~"≥æy.h
"

20 #ifde‡
MSDOS


21 
	~"∑tchÀv.h
"

23 
	~"∑tchÀvñ.h
"

26 #ifde‡
IAMSUID


27 #i‚de‡
DOSUID


28 
	#DOSUID


	)

32 #ifde‡
SETUID_SCRIPTS_ARE_SECURE_NOW


33 #ifde‡
DOSUID


34 #unde‡
DOSUID


38 * 
m‹eswôches
();

39 * 
	gcddú
;

40 
boﬁ
 
	gmöus_c
;

41 
	g∑tchÀvñ
[6];

42 *
	gƒs
 = "\n";

43 
	gƒsch¨
 = '\n';

44 
	gƒ¶í
 = 1;

46 
	$maö
(
¨gc
,
¨gv
,
ív
)

47 
¨gc
;

48 **
¨gv
;

49 **
ív
;

51 
STR
 *
°r
;

52 *
s
;

53 *
	`ödex
(), *
	`°r˝y
(), *
	`gëív
();

54 
boﬁ
 
do£¨ch
 = 
FALSE
;

55 #ifde‡
DOSUID


56 *
vÆid¨g
 = "";

59 #ifde‡
SETUID_SCRIPTS_ARE_SECURE_NOW


60 #ifde‡
IAMSUID


61 #unde‡
IAMSUID


62 
	`Áèl
("suidperl isÇoÜongerÇeeded sinceÅhe kernel canÇowÉxecute\n\
Öerl scripts securely.\n");

67 #ifde‡
BWGC


69 
	`gc_öô
();

70 
	`gc_öô
();

74 
‹ig¨gv
 = 
¨gv
;

75 
‹ig¨gc
 = 
¨gc
;

76 
‹igívú⁄
 = 
ívú⁄
;

77 
uid
 = ()
	`gëuid
();

78 
euid
 = ()
	`gëeuid
();

79 
gid
 = ()
	`gëgid
();

80 
egid
 = ()
	`gëegid
();

81 
	`•rötf
(
∑tchÀvñ
,"%3.3s%2.2d", 
	`ödex
(
rcsid
,'4'), 
PATCHLEVEL
);

82 #ifde‡
MSDOS


88 ()
	`f˛o£
(
°daux
);

89 ()
	`f˛o£
(
°d¥n
);

91 i‡(
do_undump
) {

92 
‹igfûíame
 = 
	`ßve°r
(
¨gv
[0]);

93 
do_undump
 = 0;

94 
lo›_±r
 = -1;

95 
ju°_doô
;

97 ()
	`•rötf
(
	`ödex
(
rcsid
,'#'), "%d\n", 
PATCHLEVEL
);

98 
löe°r
 = 
	`Så_√w
(65,80);

99 
	`°r_n£t
(
löe°r
,"",0);

100 
°r
 = 
	`°r_make
("",0);

101 
cur°ash
 = 
def°ash
 = 
	`h√w
(0);

102 
cur°«me
 = 
	`°r_make
("main",4);

103 
	`°ab_xhash
(
	`°abít
("_maö",
TRUE
)Ë
def°ash
;

104 
def°ash
->
tbl_«me
 = "main";

105 
öc°ab
 = 
	`hadd
(
	`Ødd
(
	`°abít
("INC",
TRUE
)));

106 
öc°ab
->
°r_pok
 |
SP_MULTI
;

107 
¨gc
--,
¨gv
++;árgc > 0;árgc--,argv++) {

108 i‡(
¨gv
[0][0] != '-' || !argv[0][1])

110 #ifde‡
DOSUID


111 i‡(*
vÆid¨g
)

112 
vÆid¨g
 = " PHOOEY ";

114 
vÆid¨g
 = 
¨gv
[0];

116 
s
 = 
¨gv
[0]+1;

117 
ªswôch
:

118 *
s
) {

132 i‡(
s
 = 
	`m‹eswôches
(s))

133 
ªswôch
;

137 #ifde‡
TAINT


138 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

139 
	`Áèl
("No -eállowed in setuid scripts");

141 i‡(!
e_Â
) {

142 
e_tm≤ame
 = 
	`ßve°r
(
TMPPATH
);

143 ()
	`mkãmp
(
e_tm≤ame
);

144 
e_Â
 = 
	`f›í
(
e_tm≤ame
,"w");

145 i‡(!
e_Â
)

146 
	`Áèl
("Cannot openÅemporary file");

148 i‡(
¨gv
[1]) {

149 
	`Âuts
(
¨gv
[1],
e_Â
);

150 
¨gc
--,
¨gv
++;

152 ()
	`putc
('\n', 
e_Â
);

155 #ifde‡
TAINT


156 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

157 
	`Áèl
("No -Iállowed in setuid scripts");

159 
	`°r_ˇt
(
°r
,"-");

160 
	`°r_ˇt
(
°r
,
s
);

161 
	`°r_ˇt
(
°r
," ");

162 i‡(*++
s
) {

163 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(
s
,0));

165 i‡(
¨gv
[1]) {

166 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(
¨gv
[1],0));

167 
	`°r_ˇt
(
°r
,
¨gv
[1]);

168 
¨gc
--,
¨gv
++;

169 
	`°r_ˇt
(
°r
," ");

173 #ifde‡
TAINT


174 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

175 
	`Áèl
("No -Pállowed in setuid scripts");

177 
¥ïro˚ss
 = 
TRUE
;

178 
s
++;

179 
ªswôch
;

181 #ifde‡
TAINT


182 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

183 
	`Áèl
("No -sállowed in setuid scripts");

185 
doswôches
 = 
TRUE
;

186 
s
++;

187 
ªswôch
;

189 
do£¨ch
 = 
TRUE
;

190 
s
++;

191 
ªswôch
;

193 
d€xåa˘
 = 
TRUE
;

194 
s
++;

195 i‡(*
s
)

196 
cddú
 = 
	`ßve°r
(
s
);

199 
¨gc
--,
¨gv
++;

200 
swôch_íd
;

204 
	`Áèl
("Uƒecognized swôch: -%s",
s
);

207 
swôch_íd
:

208 i‡(
e_Â
) {

209 ()
	`f˛o£
(
e_Â
);

210 
¨gc
++,
¨gv
--;

211 
¨gv
[0] = 
e_tm≤ame
;

214 #ifde‡
MSDOS


215 
	#PERLLIB_SEP
 ';'

	)

217 
	#PERLLIB_SEP
 ':'

	)

219 #i‚de‡
TAINT


221 * 
s2
 = 
	`gëív
("PERLLIB");

223 i‡–
s2
 ) {

225  *
s2
 ) {

227  *
s2
 =
PERLLIB_SEP
 ) {

230 
s2
++;

232 i‡–(
s
 = 
	`ödex
(
s2
,
PERLLIB_SEP
)Ë!
NuŒch
 ) {

233 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(
s2
,()(
s
-s2)));

234 
s2
 = 
s
+1;

236 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(
s2
,0));

244 #i‚de‡
PRIVLIB


245 
	#PRIVLIB
 "/u§/loˇl/lib/≥æ"

	)

247 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(
PRIVLIB
,0));

248 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(".",1));

250 
	`°r_£t
(&
°r_no
,
No
);

251 
	`°r_£t
(&
°r_yes
,
Yes
);

255 i‡(
¨gv
[0] =
NuŒch
)

256 #ifde‡
MSDOS


258 i‡–
	`ißây
(
	`fûío
(
°dö
)) )

259 
	`m‹eswôches
("v");

260 
¨gv
[0] = "-";

263 
¨gv
[0] = "-";

265 i‡(
do£¨ch
 && !
	`ödex
(
¨gv
[0], '/'Ë&& (
s
 = 
	`gëív
("PATH"))) {

266 *
xfound
 = 
NuŒch
, *
xÁûed
 = Nullch;

267 
Àn
;

269 
bu„nd
 = 
s
 + 
	`°æí
(s);

270 *
s
) {

271 #i‚de‡
MSDOS


272 
s
 = 
	`˝ytûl
(
tokíbuf
,s,
bu„nd
,':',&
Àn
);

274 
Àn
 = 0; *
s
 && *†!';'; 
tokíbuf
[len++] = *s++);

275 
tokíbuf
[
Àn
] = '\0';

277 i‡(*
s
)

278 
s
++;

279 #i‚de‡
MSDOS


280 i‡(
Àn
 && 
tokíbuf
[len-1] != '/')

282 i‡(
Àn
 && 
tokíbuf
[len-1] != '\\')

284 ()
	`°rˇt
(
tokíbuf
+
Àn
,"/");

285 ()
	`°rˇt
(
tokíbuf
+
Àn
,
¨gv
[0]);

286 #ifde‡
DEBUGGING


287 i‡(
debug
 & 1)

288 
	`Ârötf
(
°dîr
,"Lookög f‹ %s\n",
tokíbuf
);

290 i‡(
	`°©
(
tokíbuf
,&
°©buf
) < 0)

292 i‡(
	`S_ISREG
(
°©buf
.
°_mode
)

293 && 
	`ˇndo
(
S_IRUSR
,
TRUE
,&
°©buf
Ë&& c™do(
S_IXUSR
,TRUE,&statbuf)) {

294 
xfound
 = 
tokíbuf
;

297 i‡(!
xÁûed
)

298 
xÁûed
 = 
	`ßve°r
(
tokíbuf
);

300 i‡(!
xfound
)

301 
	`Áèl
("C™'àexecuã %s", 
xÁûed
 ? xÁûed : 
¨gv
[0] );

302 i‡(
xÁûed
)

303 
	`Sa„‰ì
(
xÁûed
);

304 
¨gv
[0] = 
	`ßve°r
(
xfound
);

307 
fdpid
 = 
	`™ew
(
NuŒ°ab
);

308 
pid°©us
 = 
	`h√w
(
COEFFSIZE
);

310 
‹igfûíame
 = 
	`ßve°r
(
¨gv
[0]);

311 
curcmd
->
c_fûe°ab
 = 
	`f°ab
(
‹igfûíame
);

312 i‡(
	`°rEQ
(
‹igfûíame
,"-"))

313 
¨gv
[0] = "";

314 i‡(
¥ïro˚ss
) {

315 
	`°r_ˇt
(
°r
,"-I");

316 
	`°r_ˇt
(
°r
,
PRIVLIB
);

317 ()
	`•rötf
(
buf
, "\
%ssed %s -e '/^[^#]/b' \
-e '/^#[ ]*include[ ]/b' \
-e '/^#[ ]*define[ ]/b' \
-e '/^#[ ]*if[ ]/b' \
-e '/^#[ ]*ifdef[ ]/b' \
-e '/^#[ ]*ifndef[ ]/b' \
-e '/^#[ ]*else/b' \
-e '/^#[ ]*endif/b' \
-e 's/^#.*//' \
%s | %s -C %s %s",

328 #ifde‡
MSDOS


333 (
d€xåa˘
 ? "-e '1,/^#/d\n'" : ""),

334 
¨gv
[0], 
CPPSTDIN
, 
	`°r_gë
(
°r
), 
CPPMINUS
);

335 #ifde‡
DEBUGGING


336 i‡(
debug
 & 64) {

337 
	`Âuts
(
buf
,
°dîr
);

338 
	`Âuts
("\n",
°dîr
);

341 
d€xåa˘
 = 
FALSE
;

342 #ifde‡
IAMSUID


343 i‡(
euid
 !
uid
 && !euid)

344 #ifde‡
HAS_SETEUID


345 ()
	`£ãuid
(
uid
);

347 #ifde‡
HAS_SETREUID


348 ()
	`£åeuid
(-1, 
uid
);

350 
	`£tuid
(
uid
);

354 
rsÂ
 = 
	`myp›í
(
buf
,"r");

356 i‡(!*
¨gv
[0])

357 
rsÂ
 = 
°dö
;

359 
rsÂ
 = 
	`f›í
(
¨gv
[0],"r");

360 i‡(
rsÂ
 =
NuŒÂ
) {

361 #ifde‡
DOSUID


362 #i‚de‡
IAMSUID


363 i‡(
euid
 && 
	`°©
(
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
,&
°©buf
) >= 0 &&

364 
°©buf
.
°_mode
 & (
S_ISUID
|
S_ISGID
)) {

365 ()
	`•rötf
(
buf
, "%s/•îl%s", 
BIN
, 
∑tchÀvñ
);

366 
	`execv
(
buf
, 
‹ig¨gv
);

367 
	`Áèl
("Can't do setuid\n");

371 
	`Áèl
("Can't openÖerl script \"%s\": %s\n",

372 
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
, 
	`°ªº‹
(
î∫o
));

374 
	`°r_‰ì
(
°r
);

375 
°r
 = 
NuŒ°r
;

404 #ifde‡
DOSUID


405 i‡(
	`f°©
(
	`fûío
(
rsÂ
),&
°©buf
) < 0)

406 
	`Áèl
("C™'à°© s¸ùà\"%s\"",
‹igfûíame
);

407 i‡(
°©buf
.
°_mode
 & (
S_ISUID
|
S_ISGID
)) {

408 
Àn
;

410 #ifde‡
IAMSUID


411 #i‚de‡
HAS_SETREUID


420 i‡(
	`ac˚ss
(
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
,1))

421 
	`Áèl
("Permission denied");

429 
°©
 
tmp°©buf
;

431 i‡(
	`£åeuid
(
euid
,
uid
Ë< 0 || 
	`gëuid
(Ë!euid || 
	`gëeuid
() != uid)

432 
	`Áèl
("Can't swap uidándÉuid");

433 i‡(
	`°©
(
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
,&
tmp°©buf
) < 0)

434 
	`Áèl
("Permission denied");

435 i‡(
tmp°©buf
.
°_dev
 !
°©buf
.st_dev ||

436 
tmp°©buf
.
°_öo
 !
°©buf
.st_ino) {

437 ()
	`f˛o£
(
rsÂ
);

438 i‡(
rsÂ
 = 
	`myp›í
("/bin/mailÑoot","w")) {

439 
	`Ârötf
(
rsÂ
,

442 
uid
,
tmp°©buf
.
°_dev
,Åmp°©buf.
°_öo
,

443 
°©buf
.
°_dev
, sètbuf.
°_öo
,

444 
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
,

445 
°©buf
.
°_uid
, sètbuf.
°_gid
);

446 ()
	`myp˛o£
(
rsÂ
);

448 
	`Áèl
("Permission denied\n");

450 i‡(
	`£åeuid
(
uid
,
euid
Ë< 0 || 
	`gëuid
(Ë!uid || 
	`gëeuid
() !=Éuid)

451 
	`Áèl
("Can'tÑeswap uidándÉuid");

452 i‡(!
	`ˇndo
(
S_IXUSR
,
FALSE
,&
°©buf
))

453 
	`Áèl
("Permission denied\n");

458 i‡(!
	`S_ISREG
(
°©buf
.
°_mode
))

459 
	`Áèl
("Permission denied");

460 i‡(
°©buf
.
°_mode
 & 
S_IWOTH
)

461 
	`Áèl
("Setuid/gid script is writable by world");

462 
doswôches
 = 
FALSE
;

463 
curcmd
->
c_löe
++;

464 i‡(
	`fgës
(
tokíbuf
,Åokíbuf, 
rsÂ
Ë=
NuŒch
 ||

465 
	`°∫NE
(
tokíbuf
,"#!",2) )

466 
	`Áèl
("No #!Üine");

467 
s
 = 
tokíbuf
+2;

468 i‡(*
s
 == ' ') s++;

469 !
	`is•a˚
(*
s
)) s++;

470 i‡(
	`°∫NE
(
s
-4,"perl",4) && strnNE(s-9,"perl",4))

471 
	`Áèl
("NotáÖerl script");

472 *
s
 == ' ' || *s == '\t') s++;

478 
Àn
 = 
	`°æí
(
vÆid¨g
);

479 i‡(
	`°rEQ
(
vÆid¨g
," PHOOEY ") ||

480 
	`°∫NE
(
s
,
vÆid¨g
,
Àn
Ë|| !
	`is•a˚
(s[len]))

481 
	`Áèl
("Args must match #!Üine");

483 #i‚de‡
IAMSUID


484 i‡(
euid
 !
uid
 && (
°©buf
.
°_mode
 & 
S_ISUID
) &&

485 
euid
 =
°©buf
.
°_uid
)

486 i‡(!
do_undump
)

487 
	`Áèl
("YOU HAVEN'T DISABLED SET-ID SCRIPTS IN THE KERNEL YET!\n\
 YOUR KERNEL, PUT A C WRAPPER AROUND THIS SCRIPT, OR USE -u AND UNDUMP!\n");

491 i‡(
euid
) {

492 ()
	`f˛o£
(
rsÂ
);

493 #i‚de‡
IAMSUID


494 ()
	`•rötf
(
buf
, "%s/•îl%s", 
BIN
, 
∑tchÀvñ
);

495 
	`execv
(
buf
, 
‹ig¨gv
);

497 
	`Áèl
("Can't do setuid\n");

500 i‡(
°©buf
.
°_mode
 & 
S_ISGID
 && sètbuf.
°_gid
 !
egid
)

501 #ifde‡
HAS_SETEGID


502 ()
	`£ãgid
(
°©buf
.
°_gid
);

504 #ifde‡
HAS_SETREGID


505 ()
	`£åegid
((
GIDTYPE
)-1,
°©buf
.
°_gid
);

507 
	`£tgid
(
°©buf
.
°_gid
);

510 i‡(
°©buf
.
°_mode
 & 
S_ISUID
) {

511 i‡(
°©buf
.
°_uid
 !
euid
)

512 #ifde‡
HAS_SETEUID


513 ()
	`£ãuid
(
°©buf
.
°_uid
);

515 #ifde‡
HAS_SETREUID


516 ()
	`£åeuid
((
UIDTYPE
)-1,
°©buf
.
°_uid
);

518 
	`£tuid
(
°©buf
.
°_uid
);

522 i‡(
uid
)

523 #ifde‡
HAS_SETEUID


524 ()
	`£ãuid
((
UIDTYPE
)
uid
);

526 #ifde‡
HAS_SETREUID


527 ()
	`£åeuid
((
UIDTYPE
)-1,(UIDTYPE)
uid
);

529 
	`£tuid
((
UIDTYPE
)
uid
);

532 
uid
 = ()
	`gëuid
();

533 
euid
 = ()
	`gëeuid
();

534 
gid
 = ()
	`gëgid
();

535 
egid
 = ()
	`gëegid
();

536 i‡(!
	`ˇndo
(
S_IXUSR
,
TRUE
,&
°©buf
))

537 
	`Áèl
("Permission denied\n");

539 #ifde‡
IAMSUID


540 i‡(
¥ïro˚ss
)

541 
	`Áèl
("-PÇotállowed for setuid/setgid script\n");

543 
	`Áèl
("Script isÇot setuid/setgid in suidperl\n");

545 #i‚de‡
TAINT


547 i‡(
euid
 !
uid
 || 
egid
 !
gid
) {

548 ()
	`f˛o£
(
rsÂ
);

549 ()
	`•rötf
(
buf
, "%s/çîl%s", 
BIN
, 
∑tchÀvñ
);

550 
	`execv
(
buf
, 
‹ig¨gv
);

551 
	`Áèl
("Can'tÑun setuid script withÅaint checks");

556 #i‚de‡
TAINT


557 i‡(
euid
 !
uid
 || 
egid
 !
gid
) {

558 #i‚de‡
SETUID_SCRIPTS_ARE_SECURE_NOW


559 
	`f°©
(
	`fûío
(
rsÂ
),&
°©buf
);

560 i‡((
euid
 !
uid
 &&Éuid =
°©buf
.
°_uid
 && sètbuf.
°_mode
 & 
S_ISUID
)

562 (
egid
 !
gid
 &&Égid =
°©buf
.
°_gid
 && sètbuf.
°_mode
 & 
S_ISGID
)

564 i‡(!
do_undump
)

565 
	`Áèl
("YOU HAVEN'T DISABLED SET-ID SCRIPTS IN THE KERNEL YET!\n\
 YOUR KERNEL, PUT A C WRAPPER AROUND THIS SCRIPT, OR USE -u AND UNDUMP!\n");

569 ()
	`f˛o£
(
rsÂ
);

570 ()
	`•rötf
(
buf
, "%s/çîl%s", 
BIN
, 
∑tchÀvñ
);

571 
	`execv
(
buf
, 
‹ig¨gv
);

572 
	`Áèl
("Can'tÑun setuid script withÅaint checks");

577 #i‡!
	`deföed
(
IAMSUID
Ë&& !deföed(
TAINT
)

581 
d€xåa˘
) {

582 i‡((
s
 = 
	`°r_gës
(
löe°r
, 
rsÂ
, 0)Ë=
NuŒch
)

583 
	`Áèl
("No Perl script found in input\n");

584 i‡(*
s
 ='#' && s[1] ='!' && 
	`ö°r
(s,"perl")) {

585 
	`ungëc
('\n',
rsÂ
);

586 
d€xåa˘
 = 
FALSE
;

587 i‡(
s
 = 
	`ö°r
(s,"perl -")) {

588 
s
 += 6;

589 
s
 = 
	`m‹eswôches
(s)) ;

591 i‡(
cddú
 && 
	`chdú
(cddir) < 0)

592 
	`Áèl
("C™'àchdúÅÿ%s",
cddú
);

597 
def°ab
 = 
	`°abít
("_",
TRUE
);

599 i‡(
≥ædb
) {

600 
deb°ash
 = 
	`h√w
(0);

601 
	`°ab_xhash
(
	`°abít
("_DB",
TRUE
)Ë
deb°ash
;

602 
cur°ash
 = 
deb°ash
;

603 
db¨gs
 = 
	`°ab_x¨øy
(
	`Ødd
((
tmp°ab
 = 
	`°abít
("¨gs",
TRUE
))));

604 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

605 
db¨gs
->
¨y_Êags
 = 0;

606 
sub«me
 = 
	`°r_make
("main",4);

607 
DB°ab
 = 
	`°abít
("DB",
TRUE
);

608 
DB°ab
->
°r_pok
 |
SP_MULTI
;

609 
DBlöe
 = 
	`°abít
("dblöe",
TRUE
);

610 
DBlöe
->
°r_pok
 |
SP_MULTI
;

611 
DBsub
 = 
	`hadd
(
tmp°ab
 = 
	`°abít
("sub",
TRUE
));

612 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

613 
DBsögÀ
 = 
	`°ab_vÆ
((
tmp°ab
 = 
	`°abít
("sögÀ",
TRUE
)));

614 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

615 
DBåa˚
 = 
	`°ab_vÆ
((
tmp°ab
 = 
	`°abít
("åa˚",
TRUE
)));

616 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

617 
DBsig«l
 = 
	`°ab_vÆ
((
tmp°ab
 = 
	`°abít
("sig«l",
TRUE
)));

618 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

619 
cur°ash
 = 
def°ash
;

624 
bu„nd
 = 
buÂå
 = 
	`°r_gë
(
löe°r
);

626 
ßve°ack
 = 
	`™ew
(
NuŒ°ab
);

627 
°ack
 = 
	`™ew
(
NuŒ°ab
);

628 
°ack
->
¨y_Êags
 = 0;

629 
	`afûl
(
°ack
,63);áfill(stack,-1);

630 
	`afûl
(
ßve°ack
,63);áfill(savestack,-1);

634 
îr‹_cou¡
 = 0;

635 i‡(
	`yy∑r£
(Ë|| 
îr‹_cou¡
) {

636 i‡(
möus_c
)

637 
	`Áèl
("%†had compû©i⁄Éº‹s.\n", 
‹igfûíame
);

639 
	`Áèl
("Execution of %sáborted dueÅo compilationÉrrors.\n",

640 
‹igfûíame
);

644 
	`New
(50,
lo›_°ack
,128,
lo›
);

645 #ifde‡
DEBUGGING


646 i‡(
debug
) {

647 
	`New
(51,
deb«me
,128,);

648 
	`New
(52,
debdñim
,128,);

651 
cur°ash
 = 
def°ash
;

653 
¥ïro˚ss
 = 
FALSE
;

654 i‡(
e_Â
) {

655 
e_Â
 = 
NuŒÂ
;

656 ()
	`UNLINK
(
e_tm≤ame
);

661 i‡(
sig°ab
 = 
	`°abít
("SIG",
Æl°abs
)) {

662 
sig°ab
->
°r_pok
 |
SP_MULTI
;

663 ()
	`hadd
(
sig°ab
);

666 
	`magiˇlize
("!#?^~=-%.+&*()<>,\\/[|`':\004\t\024\027");

667 
	`u£röô
();

669 
am≥r°ab
 = 
	`°abít
("&",
Æl°abs
);

670 
À·°ab
 = 
	`°abít
("`",
Æl°abs
);

671 
right°ab
 = 
	`°abít
("'",
Æl°abs
);

672 
ßwam≥rßnd
 = (
am≥r°ab
 || 
À·°ab
 || 
right°ab
);

673 i‡(
tmp°ab
 = 
	`°abít
(":",
Æl°abs
))

674 
	`°r_£t
(
	`STAB_STR
(
tmp°ab
),
ch›£t
);

675 i‡(
tmp°ab
 = 
	`°abít
("\024",
Æl°abs
))

676 
	`time
(&
ba£time
);

679 i‡(
tmp°ab
 = 
	`°abít
(";",
Æl°abs
))

680 
	`°r_£t
(
	`STAB_STR
(
tmp°ab
),"\034");

681 i‡(
tmp°ab
 = 
	`°abít
("]",
Æl°abs
)) {

682 
°r
 = 
	`STAB_STR
(
tmp°ab
);

683 
	`°r_£t
(
°r
,
rcsid
);

684 
°r
->
°r_u
.
°r_nvÆ
 = 
	`©of
(
∑tchÀvñ
);

685 
°r
->
°r_nok
 = 1;

687 
	`°r_n£t
(
	`°ab_vÆ
(
	`°abít
("\"", 
TRUE
)), " ", 1);

689 
°dö°ab
 = 
	`°abít
("STDIN",
TRUE
);

690 
°dö°ab
->
°r_pok
 |
SP_MULTI
;

691 
	`°ab_io
(
°dö°ab
Ë
	`°io_√w
();

692 
	`°ab_io
(
°dö°ab
)->
iÂ
 = 
°dö
;

693 
tmp°ab
 = 
	`°abít
("°dö",
TRUE
);

694 
	`°ab_io
(
tmp°ab
Ë°ab_io(
°dö°ab
);

695 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

697 
tmp°ab
 = 
	`°abít
("STDOUT",
TRUE
);

698 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

699 
	`°ab_io
(
tmp°ab
Ë
	`°io_√w
();

700 
	`°ab_io
(
tmp°ab
)->
oÂ
 = sèb_io—mp°ab)->
iÂ
 = 
°dout
;

701 
defout°ab
 = 
tmp°ab
;

702 
tmp°ab
 = 
	`°abít
("°dout",
TRUE
);

703 
	`°ab_io
(
tmp°ab
Ë°ab_io(
defout°ab
);

704 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

706 
curout°ab
 = 
	`°abít
("STDERR",
TRUE
);

707 
curout°ab
->
°r_pok
 |
SP_MULTI
;

708 
	`°ab_io
(
curout°ab
Ë
	`°io_√w
();

709 
	`°ab_io
(
curout°ab
)->
oÂ
 = sèb_io(curout°ab)->
iÂ
 = 
°dîr
;

710 
tmp°ab
 = 
	`°abít
("°dîr",
TRUE
);

711 
	`°ab_io
(
tmp°ab
Ë°ab_io(
curout°ab
);

712 
tmp°ab
->
°r_pok
 |
SP_MULTI
;

713 
curout°ab
 = 
defout°ab
;

715 
°©«me
 = 
	`Så_√w
(66,0);

719 
rs
 = 
ƒs
;

720 
r¶í
 = 
ƒ¶í
;

721 
rsch¨
 = 
ƒsch¨
;

722 
	`°r_n£t
(
	`°ab_vÆ
(
	`°abít
("/", 
TRUE
)), 
rs
, 
r¶í
);

724 i‡(
do_undump
)

725 
	`my_u√xec
();

727 
ju°_doô
:

728 
¨gc
--,
¨gv
++;

729 i‡(
doswôches
) {

730 ; 
¨gc
 > 0 && **
¨gv
 == '-';árgc--,argv++) {

731 i‡(
¨gv
[0][1] == '-') {

732 
¨gc
--,
¨gv
++;

735 i‡(
s
 = 
	`ödex
(
¨gv
[0], '=')) {

736 *
s
++ = '\0';

737 
	`°r_£t
(
	`°ab_vÆ
(
	`°abít
(
¨gv
[0]+1,
TRUE
)),
s
);

740 
	`°r_num£t
(
	`°ab_vÆ
(
	`°abít
(
¨gv
[0]+1,
TRUE
)),()1.0);

743 #ifde‡
TAINT


744 
èöãd
 = 1;

746 i‡(
tmp°ab
 = 
	`°abít
("0",
Æl°abs
)) {

747 
	`°r_£t
(
	`°ab_vÆ
(
tmp°ab
),
‹igfûíame
);

748 
	`magi˙ame
("0", 
NuŒch
, 0);

750 i‡(
tmp°ab
 = 
	`°abít
("\020",
Æl°abs
))

751 
	`°r_£t
(
	`°ab_vÆ
(
tmp°ab
),
‹ig¨gv
[0]);

752 i‡(
¨gv°ab
 = 
	`°abít
("ARGV",
Æl°abs
)) {

753 
¨gv°ab
->
°r_pok
 |
SP_MULTI
;

754 ()
	`Ødd
(
¨gv°ab
);

755 
	`a˛ór
(
	`°ab_¨øy
(
¨gv°ab
));

756 ; 
¨gc
 > 0;árgc--,
¨gv
++) {

757 ()
	`≠ush
(
	`°ab_¨øy
(
¨gv°ab
),
	`°r_make
(
¨gv
[0],0));

760 #ifde‡
TAINT


761 (Ë
	`°abít
("ENV",
TRUE
);

763 i‡(
ív°ab
 = 
	`°abít
("ENV",
Æl°abs
)) {

764 
ív°ab
->
°r_pok
 |
SP_MULTI
;

765 ()
	`hadd
(
ív°ab
);

766 
	`h˛ór
(
	`°ab_hash
(
ív°ab
), 
FALSE
);

767 i‡(
ív
 !
ívú⁄
)

768 
ívú⁄
[0] = 
NuŒch
;

769 ; *
ív
;Énv++) {

770 i‡(!(
s
 = 
	`ödex
(*
ív
,'=')))

772 *
s
++ = '\0';

773 
°r
 = 
	`°r_make
(
s
--,0);

774 
	`°r_magic
(
°r
, 
ív°ab
, 'E', *
ív
, 
s
 - *env);

775 ()
	`h°‹e
(
	`°ab_hash
(
ív°ab
), *
ív
, 
s
 - *ív, 
°r
, 0);

776 *
s
 = '=';

779 #ifde‡
TAINT


780 
èöãd
 = 0;

782 i‡(
tmp°ab
 = 
	`°abít
("$",
Æl°abs
))

783 
	`°r_num£t
(
	`STAB_STR
(
tmp°ab
),()
	`gëpid
());

785 i‡(
dow¨n
) {

786 
	`°ab_check
('A','Z');

787 
	`°ab_check
('a','z');

790 i‡(
	`£tjmp
(
t›_ív
))

791 
lo›_±r
 = -1;

793 #ifde‡
DEBUGGING


794 i‡(
debug
 & 1024)

795 
	`dump_Æl
();

796 i‡(
debug
)

797 
	`Ârötf
(
°dîr
,"\nEXECUTING...\n\n");

800 i‡(
möus_c
) {

801 
	`Ârötf
(
°dîr
,"%†sy¡ax OK\n", 
‹igfûíame
);

802 
	`exô
(0);

807 (Ë
	`cmd_exec
(
maö_roŸ
,
G_SCALAR
,-1);

809 i‡(
gŸo_èrg
)

810 
	`Áèl
("C™'àfödÜabñ \"%s\"--ab‹tög",
gŸo_èrg
);

811 
	`exô
(0);

813 
	}
}

816 
	$magiˇlize
(
li°
)

817 *
li°
;

819 
sym
[2];

821 
sym
[1] = '\0';

822 *
sym
 = *
li°
++)

823 
	`magi˙ame
(
sym
, 
NuŒch
, 0);

824 
	}
}

827 
	$magi˙ame
(
sym
,
«me
,
«mÀn
)

828 *
sym
;

829 *
«me
;

830 
«mÀn
;

832 
STAB
 *
°ab
;

834 i‡(
°ab
 = 
	`°abít
(
sym
,
Æl°abs
)) {

835 
	`°ab_Êags
(
°ab
Ë
SF_VMAGIC
;

836 
	`°r_magic
(
	`°ab_vÆ
(
°ab
), sèb, 0, 
«me
, 
«mÀn
);

838 
	}
}

843 
	$do_evÆ
(
°r
,
›ty≥
,
°ash
,
gimme
,
¨gœ°
)

844 
STR
 *
°r
;

845 
›ty≥
;

846 
HASH
 *
°ash
;

847 
gimme
;

848 *
¨gœ°
;

850 
STR
 **
°
 = 
°ack
->
¨y_¨øy
;

851 
ªtvÆ
;

852 
CMD
 *
myroŸ
 = 
NuŒcmd
;

853 
ARRAY
 *
¨
;

854 
i
;

855 
CMD
 * 
VOLATILE
 
ﬁdcurcmd
 = 
curcmd
;

856 
VOLATILE
 
ﬁdtmps_ba£
 = 
tmps_ba£
;

857 
VOLATILE
 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

858 
VOLATILE
 
ﬁd≥ædb
 = 
≥ædb
;

859 
SPAT
 * 
VOLATILE
 
ﬁd•©
 = 
cur•©
;

860 
SPAT
 * 
VOLATILE
 
ﬁdl•©
 = 
œ°•©
;

861 *
œ°_evÆ
 = 
NuŒch
;

862 
CMD
 *
œ°_roŸ
 = 
NuŒcmd
;

863 
VOLATILE
 
•
 = 
¨gœ°
[0];

864 *
•ecfûíame
;

865 *
tmpfûíame
;

866 
∑rsög
 = 1;

868 
tmps_ba£
 = 
tmps_max
;

869 i‡(
cur°ash
 !
°ash
) {

870 ()
	`ßveh±r
(&
cur°ash
);

871 
cur°ash
 = 
°ash
;

873 
	`°r_£t
(
	`°ab_vÆ
(
	`°abít
("@",
TRUE
)),"");

874 i‡(
curcmd
->
c_löe
 == 0)

875 
≥ædb
 = 
FALSE
;

876 
curcmd
 = &
compûög
;

877 i‡(
›ty≥
 =
O_EVAL
) {

878 
curcmd
->
c_fûe°ab
 = 
	`f°ab
("(eval)");

879 
curcmd
->
c_löe
 = 1;

880 
	`°r_s£t
(
löe°r
,
°r
);

881 
	`°r_ˇt
(
löe°r
,";");

884 i‡(
œ°_roŸ
 && !
ö_evÆ
) {

885 
	`Sa„‰ì
(
œ°_evÆ
);

886 
œ°_evÆ
 = 
NuŒch
;

887 
	`cmd_‰ì
(
œ°_roŸ
);

888 
œ°_roŸ
 = 
NuŒcmd
;

890 
•ecfûíame
 = 
	`°r_gë
(
°r
);

891 
	`°r_£t
(
löe°r
,"");

892 i‡(
›ty≥
 =
O_REQUIRE
 && &
°r_undef
 !=

893 
	`h„tch
(
	`°ab_hash
(
öc°ab
), 
•ecfûíame
, 
	`°æí
(specfilename), 0)) {

894 
curcmd
 = 
ﬁdcurcmd
;

895 
tmps_ba£
 = 
ﬁdtmps_ba£
;

896 
°
[++
•
] = &
°r_yes
;

897 
≥ædb
 = 
ﬁd≥ædb
;

898  
•
;

900 
tmpfûíame
 = 
	`ßve°r
(
•ecfûíame
);

901 i‡(
	`ödex
("/.", *
tmpfûíame
))

902 
rsÂ
 = 
	`f›í
(
tmpfûíame
,"r");

904 
¨
 = 
	`°ab_¨øy
(
öc°ab
);

905 
i
 = 0; i <
¨
->
¨y_fûl
; i++) {

906 ()
	`•rötf
(
buf
, "%s/%s",

907 
	`°r_gë
(
	`a„tch
(
¨
,
i
,
TRUE
)), 
•ecfûíame
);

908 
rsÂ
 = 
	`f›í
(
buf
,"r");

909 i‡(
rsÂ
) {

910 *
s
 = 
buf
;

912 i‡(*
s
 == '.' && s[1] == '/')

913 
s
 += 2;

914 
	`Sa„‰ì
(
tmpfûíame
);

915 
tmpfûíame
 = 
	`ßve°r
(
s
);

920 
curcmd
->
c_fûe°ab
 = 
	`f°ab
(
tmpfûíame
);

921 
	`Sa„‰ì
(
tmpfûíame
);

922 
tmpfûíame
 = 
NuŒch
;

923 i‡(!
rsÂ
) {

924 
curcmd
 = 
ﬁdcurcmd
;

925 
tmps_ba£
 = 
ﬁdtmps_ba£
;

926 i‡(
›ty≥
 =
O_REQUIRE
) {

927 
	`•rötf
(
tokíbuf
,"C™'àloˇã %†ö @INC", 
•ecfûíame
);

928 i‡(
	`ö°r
(
tokíbuf
,".h "))

929 
	`°rˇt
(
tokíbuf
," (change .hÅo .ph maybe?)");

930 i‡(
	`ö°r
(
tokíbuf
,".ph "))

931 
	`°rˇt
(
tokíbuf
," (did youÑun h2ph?)");

932 
	`Áèl
("%s",
tokíbuf
);

934 i‡(
gimme
 !
G_ARRAY
)

935 
°
[++
•
] = &
°r_undef
;

936 
≥ædb
 = 
ﬁd≥ædb
;

937  
•
;

939 
curcmd
->
c_löe
 = 0;

941 
ö_evÆ
++;

942 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
buÂå
 = 
	`°r_gë
(
löe°r
);

943 
bu„nd
 = 
buÂå
 + 
löe°r
->
°r_cur
;

944 i‡(++
lo›_±r
 >
lo›_max
) {

945 
lo›_max
 += 128;

946 
	`Ríew
(
lo›_°ack
, 
lo›_max
, 
lo›
);

948 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
 = "_EVAL_";

949 
lo›_°ack
[
lo›_±r
].
lo›_•
 = 
•
;

950 #ifde‡
DEBUGGING


951 i‡(
debug
 & 4) {

952 
	`deb
("(PushögÜabñ #%d _EVAL_)\n", 
lo›_±r
);

955 
evÆ_roŸ
 = 
NuŒcmd
;

956 i‡(
	`£tjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
)) {

957 
ªtvÆ
 = 1;

960 
îr‹_cou¡
 = 0;

961 i‡(
rsÂ
) {

962 
ªtvÆ
 = 
	`yy∑r£
();

963 
ªtvÆ
 |
îr‹_cou¡
;

965 i‡(
œ°_roŸ
 && *
buÂå
 =*
œ°_evÆ
 && 
	`°rEQ
(bufptr,last_eval)){

966 
ªtvÆ
 = 0;

967 
evÆ_roŸ
 = 
œ°_roŸ
;

969 i‡(
ö_evÆ
 == 1) {

970 i‡(
œ°_roŸ
) {

971 
	`Sa„‰ì
(
œ°_evÆ
);

972 
œ°_evÆ
 = 
NuŒch
;

973 
	`cmd_‰ì
(
œ°_roŸ
);

975 
œ°_roŸ
 = 
NuŒcmd
;

976 
œ°_evÆ
 = 
	`ßve°r
(
buÂå
);

977 
ªtvÆ
 = 
	`yy∑r£
();

978 
ªtvÆ
 |
îr‹_cou¡
;

979 i‡(!
ªtvÆ
)

980 
œ°_roŸ
 = 
evÆ_roŸ
;

981 i‡(!
œ°_roŸ
) {

982 
	`Sa„‰ì
(
œ°_evÆ
);

983 
œ°_evÆ
 = 
NuŒch
;

987 
ªtvÆ
 = 
	`yy∑r£
();

989 
myroŸ
 = 
evÆ_roŸ
;

991 i‡(
ªtvÆ
) {

992 
°
 = 
°ack
->
¨y_¨øy
;

993 
•
 = 
¨gœ°
[0];

994 i‡(
gimme
 !
G_ARRAY
)

995 
°
[++
•
] = &
°r_undef
;

996 i‡(
∑rsög
) {

997 #i‚de‡
MANGLEDPARSE


998 #ifde‡
DEBUGGING


999 i‡(
debug
 & 128)

1000 
	`Ârötf
(
°dîr
,"FªeögÉvÆ_roŸ %lx\n",()
evÆ_roŸ
);

1002 
	`cmd_‰ì
(
evÆ_roŸ
);

1004 i‡(
evÆ_roŸ
 =
œ°_roŸ
)

1005 
œ°_roŸ
 = 
NuŒcmd
;

1006 
evÆ_roŸ
 = 
myroŸ
 = 
NuŒcmd
;

1008 i‡(
rsÂ
) {

1009 
	`f˛o£
(
rsÂ
);

1010 
rsÂ
 = 0;

1014 
∑rsög
 = 0;

1015 
•
 = 
	`cmd_exec
(
evÆ_roŸ
,
gimme
,sp);

1016 
°
 = 
°ack
->
¨y_¨øy
;

1017 
i
 = 
¨gœ°
[0] + 1; i <
•
; i++)

1018 
°
[
i
] = 
	`°r_m‹èl
(st[i]);

1020 i‡(
ö_evÆ
 !1 && 
myroŸ
 !
œ°_roŸ
)

1021 
	`cmd_‰ì
(
myroŸ
);

1024 
≥ædb
 = 
ﬁd≥ædb
;

1025 
ö_evÆ
--;

1026 #ifde‡
DEBUGGING


1027 i‡(
debug
 & 4) {

1028 *
tmps
 = 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
;

1029 
	`deb
("(P›pögÜabñ #%d %s)\n",
lo›_±r
,

1030 
tmps
 ?Åmps : "" );

1033 
lo›_±r
--;

1034 
tmps_ba£
 = 
ﬁdtmps_ba£
;

1035 
cur•©
 = 
ﬁd•©
;

1036 
œ°•©
 = 
ﬁdl•©
;

1037 i‡(
ßve°ack
->
¨y_fûl
 > 
ﬁdßve
)

1038 
	`ª°‹ñi°
(
ﬁdßve
);

1040 i‡(
›ty≥
 !
O_EVAL
) {

1041 i‡(
ªtvÆ
) {

1042 i‡(
›ty≥
 =
O_REQUIRE
)

1043 
	`Áèl
("%s", 
	`°r_gë
(
	`°ab_vÆ
(
	`°abít
("@",
TRUE
))));

1046 
curcmd
 = 
ﬁdcurcmd
;

1047 i‡(
gimme
 =
G_SCALAR
 ? 
	`°r_åue
(
°
[
•
]Ë: s∞> 
¨gœ°
[0]) {

1048 ()
	`h°‹e
(
	`°ab_hash
(
öc°ab
), 
•ecfûíame
,

1049 
	`°æí
(
•ecfûíame
), 
	`°r_smake
(
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)),

1052 i‡(
›ty≥
 =
O_REQUIRE
)

1053 
	`Áèl
("%†didÇŸÑëu∫áÅruêvÆue", 
•ecfûíame
);

1056 
curcmd
 = 
ﬁdcurcmd
;

1057  
•
;

1058 
	}
}

1063 
	$m‹eswôches
(
s
)

1064 *
s
;

1066 
numÀn
;

1068 
ªswôch
:

1069 *
s
) {

1071 
ƒsch¨
 = 
	`sˇno˘
(
s
, 4, &
numÀn
);

1072 
ƒs
 = 
	`nßve°r
("\n",1);

1073 *
ƒs
 = 
ƒsch¨
;

1074 i‡(
ƒsch¨
 > 0377) {

1075 
ƒ¶í
 = 0;

1076 
ƒs
 = "";

1078 i‡(!
ƒsch¨
 && 
numÀn
 >= 2) {

1079 
ƒ¶í
 = 2;

1080 
ƒs
 = "\n\n";

1081 
ƒsch¨
 = '\n';

1083  
s
 + 
numÀn
;

1085 
möus_a
 = 
TRUE
;

1086 
s
++;

1087  
s
;

1089 
möus_c
 = 
TRUE
;

1090 
s
++;

1091  
s
;

1093 #ifde‡
TAINT


1094 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

1095 
	`Áèl
("No -dállowed in setuid scripts");

1097 
≥ædb
 = 
TRUE
;

1098 
s
++;

1099  
s
;

1101 #ifde‡
DEBUGGING


1102 #ifde‡
TAINT


1103 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

1104 
	`Áèl
("No -Dállowed in setuid scripts");

1106 
debug
 = 
	`©oi
(
s
+1) | 32768;

1108 
	`w¨n
("RecompileÖerl with -DDEBUGGINGÅo use -D switch\n");

1110 
s
++; 
	`isdigô
(*s); s++) ;

1111  
s
;

1113 
ö∂a˚
 = 
	`ßve°r
(
s
+1);

1114 
s
 = 
ö∂a˚
; *†&& !
	`is•a˚
(*s); s++) ;

1115 *
s
 = '\0';

1118 #ifde‡
TAINT


1119 i‡(
euid
 !
uid
 || 
egid
 !
gid
)

1120 
	`Áèl
("No -Iállowed in setuid scripts");

1122 i‡(*++
s
) {

1123 ()
	`≠ush
(
	`°ab_¨øy
(
öc°ab
),
	`°r_make
(
s
,0));

1126 
	`Áèl
("No spaceállowedáfter -I");

1129 
möus_l
 = 
TRUE
;

1130 
s
++;

1131 i‡(
	`isdigô
(*
s
)) {

1132 
‹s
 = 
	`ßve°r
("\n");

1133 
‹¶í
 = 1;

1134 *
‹s
 = 
	`sˇno˘
(
s
, 3 + (*†='0'), &
numÀn
);

1135 
s
 +
numÀn
;

1138 
‹s
 = 
	`nßve°r
(
ƒs
,
ƒ¶í
);

1139 
‹¶í
 = 
ƒ¶í
;

1141  
s
;

1143 
möus_n
 = 
TRUE
;

1144 
s
++;

1145  
s
;

1147 
möus_p
 = 
TRUE
;

1148 
s
++;

1149  
s
;

1151 
do_undump
 = 
TRUE
;

1152 
s
++;

1153  
s
;

1155 
unß„
 = 
TRUE
;

1156 
s
++;

1157  
s
;

1159 
	`Âuts
("\nThi†i†≥æ, vîsi⁄ 4.0\n\n",
°dout
);

1160 
	`Âuts
(
rcsid
,
°dout
);

1161 
	`Âuts
("\nC›yrighà(cË1989, 1990, 1991, L¨ry WÆl\n",
°dout
);

1162 #ifde‡
MSDOS


1163 
	`Âuts
("MS-DOSÖort Copyright (c) 1989, 1990, Diomidis Spinellis\n",

1164 
°dout
);

1165 #ifde‡
OS2


1166 
	`Âuts
("OS/2Öort Copyright (c) 1990, Raymond Chen, Kai Uwe Rommel\n",

1167 
°dout
);

1170 
	`Âuts
("\n\
 may bêc›õd o∆y undîÅhêãrm†o‡thêGNU GíîÆ Publi¯Li˚n£,\n\
 c›y o‡which c™ bêfound wôhÅhêPî»4.0 di°ributi⁄ kô.\n",
°dout
);

1173 #ifde‡
MSDOS


1174 
	`ußge
(
‹ig¨gv
[0]);

1176 
	`exô
(0);

1178 
dow¨n
 = 
TRUE
;

1179 
s
++;

1180  
s
;

1186 
	`Áèl
("Swôch mónögÀs†a·î -x: -%s",
s
);

1188  
NuŒch
;

1189 
	}
}

1195 
	$my_u√xec
()

1197 #ifde‡
UNEXEC


1198 
°©us
;

1199 

ëext
;

1200 
dum≤ame
[
BUFSIZ
];

1201 
≥æ∑th
[256];

1203 
	`•rötf
 (
dum≤ame
, "%s.≥ædump", 
‹igfûíame
);

1204 
	`•rötf
 (
≥æ∑th
, "%s/≥æ", 
BIN
);

1206 
°©us
 = 
	`u√xec
(
dum≤ame
, 
≥æ∑th
, &
ëext
, 
	`sbrk
(0), 0);

1207 i‡(
°©us
)

1208 
	`Ârötf
(
°dîr
, "u√xe¯o‡%†ötÿ%†Áûed!\n", 
≥æ∑th
, 
dum≤ame
);

1209 
	`exô
(
°©us
);

1211 #i‚de‡
SIGABRT


1212 
	#SIGABRT
 
SIGILL


	)

1214 #i‚de‡
SIGILL


1215 
	#SIGILL
 6

	)

1217 
	`kûl
(
	`gëpid
(),
SIGABRT
);

1219 
	}
}

	@perl.h

17 
	#VOIDWANT
 1

	)

18 
	~"c⁄fig.h
"

20 #ifde‡
MSDOS


30 
	#HAS_ALARM


	)

31 
	#HAS_CHOWN


	)

32 
	#HAS_CHROOT


	)

33 
	#HAS_FORK


	)

34 
	#HAS_GETLOGIN


	)

35 
	#HAS_GETPPID


	)

36 
	#HAS_KILL


	)

37 
	#HAS_LINK


	)

38 
	#HAS_PIPE


	)

39 
	#HAS_WAIT


	)

40 
	#HAS_UMASK


	)

45 
	#HAS_GROUP


	)

46 
	#HAS_PASSWD


	)

50 #i‡
deföed
(
HASVOLATILE
Ë|| deföed(
__STDC__
)

51 
	#VOLATILE
 vﬁ©ûe

	)

53 
	#VOLATILE


	)

56 #ifde‡
IAMSUID


57 #i‚de‡
TAINT


58 
	#TAINT


	)

62 #i‚de‡
HAS_VFORK


63 
	#vf‹k
 
f‹k


	)

66 #ifde‡
HAS_GETPGRP2


67 #i‚de‡
HAS_GETPGRP


68 
	#HAS_GETPGRP


	)

70 
	#gëpgΩ
 
gëpgΩ2


	)

73 #ifde‡
HAS_SETPGRP2


74 #i‚de‡
HAS_SETPGRP


75 
	#HAS_SETPGRP


	)

77 
	#£çgΩ
 
£çgΩ2


	)

80 
	~<°dio.h
>

81 
	~<˘y≥.h
>

82 
	~<£tjmp.h
>

83 #i‚de‡
MSDOS


84 
	~<sys/∑øm.h
>

86 #ifde‡
__STDC__


89 
	~<°rög.h
>

92 #i‡
deföed
(
HAS_MEMCMP
Ë&& deföed(
mùs
Ë&& 
BYTEORDER
 == 0x1234

93 #unde‡
HAS_MEMCMP


96 #ifde‡
HAS_MEMCPY


98 #i‚de‡
__STDC__


99 #i‚de‡
mem˝y


100 
* 
mem˝y
(), *
mem£t
();

101 

memcmp
();

105 
	#bc›y
(
s1
,
s2
,
l
Ë
	`mem˝y
(s2,s1,l)

	)

106 
	#bzîo
(
s
,
l
Ë
	`mem£t
(s,0,l)

	)

109 #i‚de‡
HAS_BCMP


110 
	#bcmp
(
s1
,
s2
,
l
Ë
	`memcmp
(s1,s2,l)

	)

113 #i‚de‡
_TYPES_


114 #i‚de‡
maj‹


115 
	~<sys/ty≥s.h
>

119 #ifde‡
I_NETINET_IN


120 
	~<√töë/ö.h
>

123 
	~<sys/°©.h
>

125 #ifde‡
I_TIME


126 
	~<time.h
>

129 #ifde‡
I_SYS_TIME


130 #ifde‡
SYSTIMEKERNEL


131 
	#KERNEL


	)

133 
	~<sys/time.h
>

134 #ifde‡
SYSTIMEKERNEL


135 #unde‡
KERNEL


139 #i‚de‡
MSDOS


140 
	~<sys/times.h
>

143 #i‡
deföed
(
HAS_STRERROR
Ë&& (!deföed(
HAS_MKDIR
Ë|| !deföed(
HAS_RMDIR
))

144 #unde‡
HAS_STRERROR


147 
	~<î∫o.h
>

148 #i‚de‡
MSDOS


149 #i‚de‡
î∫o


150 

î∫o
;

154 #i‚de‡
°ªº‹


155 #ifde‡
HAS_STRERROR


156 *
°ªº‹
();

158 

sys_√º
;

159 
*
sys_îæi°
[];

160 
	#°ªº‹
(
e
Ë(”Ë< 0 || (eË>
sys_√º
 ? "(unknown)" : 
sys_îæi°
[e])

	)

164 #ifde‡
I_SYSIOCTL


165 #i‚de‡
_IOCTL_


166 
	~<sys/io˘l.h
>

170 #i‡
deföed
(
mc300
Ë|| deföed(
mc500
Ë|| deföed(
mc700
)

171 #ifde‡
HAS_SOCKETPAIR


172 #unde‡
HAS_SOCKETPAIR


174 #ifde‡
HAS_NDBM


175 #unde‡
HAS_NDBM


179 #ifde‡
HAS_GDBM


180 #ifde‡
I_GDBM


181 
	~<gdbm.h
>

183 
	#SOME_DBM


	)

184 #ifde‡
HAS_NDBM


185 #unde‡
HAS_NDBM


187 #ifde‡
HAS_ODBM


188 #unde‡
HAS_ODBM


191 #ifde‡
HAS_NDBM


192 
	~<ndbm.h
>

193 
	#SOME_DBM


	)

194 #ifde‡
HAS_ODBM


195 #unde‡
HAS_ODBM


198 #ifde‡
HAS_ODBM


199 #ifde‡
NULL


200 #unde‡
NULL


202 
	~<dbm.h
>

203 #ifde‡
NULL


204 #unde‡
NULL


206 
	#NULL
 0

	)

207 
	#SOME_DBM


	)

208 
	#dbm_„tch
(
db
,
dkey
Ë
	`„tch
(dkey)

	)

209 
	#dbm_dñëe
(
db
,
dkey
Ë
	`dñëe
(dkey)

	)

210 
	#dbm_°‹e
(
db
,
dkey
,
dc⁄ã¡
,
Êags
Ë
	`°‹e
(dkey,dc⁄ã¡)

	)

211 
	#dbm_˛o£
(
db
Ë
	`dbm˛o£
()

	)

212 
	#dbm_fú°key
(
db
Ë
	`fú°key
()

	)

216 #ifde‡
SOME_DBM


217 
EXT
 *
	gdbmkey
;

218 
EXT
 
	gdbmÀn
;

221 #i‡
INTSIZE
 == 2

222 
	#ht⁄i
 
ht⁄s


	)

223 
	#¡ohi
 
¡ohs


	)

225 
	#ht⁄i
 
ht⁄l


	)

226 
	#¡ohi
 
¡ohl


	)

229 #i‡
deföed
(
I_DIRENT
)

230 
	~<dúít.h
>

231 
	#DIRENT
 
dúít


	)

233 #ifde‡
I_SYS_NDIR


234 
	~<sys/ndú.h
>

235 
	#DIRENT
 
dúe˘


	)

237 #ifde‡
I_SYS_DIR


238 #ifde‡
hp9000s500


239 
	~<ndú.h
>

241 
	~<sys/dú.h
>

243 
	#DIRENT
 
dúe˘


	)

254 #i‚de‡
S_IFMT


255 #ifde‡
_S_IFMT


256 
	#S_IFMT
 
_S_IFMT


	)

258 
	#S_IFMT
 0170000

	)

262 #i‚de‡
S_ISDIR


263 
	#S_ISDIR
(
m
Ë((m & 
S_IFMT
Ë=
S_IFDIR
)

	)

266 #i‚de‡
S_ISCHR


267 
	#S_ISCHR
(
m
Ë((m & 
S_IFMT
Ë=
S_IFCHR
)

	)

270 #i‚de‡
S_ISBLK


271 #ifde‡
S_IFBLK


272 
	#S_ISBLK
(
m
Ë((m & 
S_IFMT
Ë=
S_IFBLK
)

	)

274 
	#S_ISBLK
(
m
Ë(0)

	)

278 #i‚de‡
S_ISREG


279 
	#S_ISREG
(
m
Ë((m & 
S_IFMT
Ë=
S_IFREG
)

	)

282 #i‚de‡
S_ISFIFO


283 #ifde‡
S_IFIFO


284 
	#S_ISFIFO
(
m
Ë((m & 
S_IFMT
Ë=
S_IFIFO
)

	)

286 
	#S_ISFIFO
(
m
Ë(0)

	)

290 #i‚de‡
S_ISLNK


291 #ifde‡
_S_ISLNK


292 
	#S_ISLNK
(
m
Ë
	`_S_ISLNK
(m)

	)

294 #ifde‡
_S_IFLNK


295 
	#S_ISLNK
(
m
Ë((m & 
S_IFMT
Ë=
_S_IFLNK
)

	)

297 #ifde‡
S_IFLNK


298 
	#S_ISLNK
(
m
Ë((m & 
S_IFMT
Ë=
S_IFLNK
)

	)

300 
	#S_ISLNK
(
m
Ë(0)

	)

306 #i‚de‡
S_ISSOCK


307 #ifde‡
_S_ISSOCK


308 
	#S_ISSOCK
(
m
Ë
	`_S_ISSOCK
(m)

	)

310 #ifde‡
_S_IFSOCK


311 
	#S_ISSOCK
(
m
Ë((m & 
S_IFMT
Ë=
_S_IFSOCK
)

	)

313 #ifde‡
S_IFSOCK


314 
	#S_ISSOCK
(
m
Ë((m & 
S_IFMT
Ë=
S_IFSOCK
)

	)

316 
	#S_ISSOCK
(
m
Ë(0)

	)

322 #i‚de‡
S_IRUSR


323 #ifde‡
S_IREAD


324 
	#S_IRUSR
 
S_IREAD


	)

325 
	#S_IWUSR
 
S_IWRITE


	)

326 
	#S_IXUSR
 
S_IEXEC


	)

328 
	#S_IRUSR
 0400

	)

329 
	#S_IWUSR
 0200

	)

330 
	#S_IXUSR
 0100

	)

332 
	#S_IRGRP
 (
S_IRUSR
>>3)

	)

333 
	#S_IWGRP
 (
S_IWUSR
>>3)

	)

334 
	#S_IXGRP
 (
S_IXUSR
>>3)

	)

335 
	#S_IROTH
 (
S_IRUSR
>>6)

	)

336 
	#S_IWOTH
 (
S_IWUSR
>>6)

	)

337 
	#S_IXOTH
 (
S_IXUSR
>>6)

	)

340 #i‚de‡
S_ISUID


341 
	#S_ISUID
 04000

	)

344 #i‚de‡
S_ISGID


345 
	#S_ISGID
 02000

	)

348 
	tSTRLEN
;

350 
¨g
 
	tARG
;

351 
cmd
 
	tCMD
;

352 
f‹mcmd
 
	tFCMD
;

353 
sˇ≈©
 
	tSPAT
;

354 
°io
 
	tSTIO
;

355 
sub
 
	tSUBR
;

356 
°rög
 
	tSTR
;

357 
©bl
 
	tARRAY
;

358 
htbl
 
	tHASH
;

359 
ªgexp
 
	tREGEXP
;

360 
°ab±rs
 
	tSTBP
;

361 
°ab
 
	tSTAB
;

362 
ˇŒßve
 
	tCSV
;

364 
	~"h™dy.h
"

365 
	~"ªgexp.h
"

366 
	~"°r.h
"

367 
	~"utû.h
"

368 
	~"f‹m.h
"

369 
	~"°ab.h
"

370 
	~"•©.h
"

371 
	~"¨g.h
"

372 
	~"cmd.h
"

373 
	~"¨øy.h
"

374 
	~"hash.h
"

376 #i‡
deföed
(
iAPX286
Ë|| deföed(
M_I286
Ë|| deföed(
I80286
)

377 
	#I286


	)

380 #i‚def 
__STDC__


381 #ifde‡
CHARSPRINTF


382 *
•rötf
();

384 
•rötf
();

388 
EXT
 *
Yes
 
INIT
("1");

389 
EXT
 *
No
 
INIT
("");

394 
	#G_SCALAR
 0

	)

395 
	#G_ARRAY
 1

	)

397 #ifde‡
CRIPPLED_CC


398 
°r_åue
();

400 
	#°r_åue
(
°r
Ë(
Så
 = (str), \

401 (
Så
->
°r_pok
 ? \

402 ((*
Så
->
°r_±r
 > '0' || \

403 
Så
->
°r_cur
 > 1 || \

404 (
Så
->
°r_cur
 && *Så->
°r_±r
 != '0')) ? 1 : 0) \

406 (
Så
->
°r_nok
 ? (Så->
°r_u
.
°r_nvÆ
 !0.0Ë: 0 ) ))

	)

409 #ifde‡
DEBUGGING


410 
	#°r_≥ek
(
°r
Ë(
Så
 = (str), \

411 (
Så
->
°r_pok
 ? \

412 
Så
->
°r_±r
 : \

413 (
Så
->
°r_nok
 ? \

414 (
	`•rötf
(
tokíbuf
,"num(%g)",
Så
->
°r_u
.
°r_nvÆ
), \

415 (*)
tokíbuf
) : \

416 "" )))

	)

419 #ifde‡
CRIPPLED_CC


420 *
°r_gë
();

422 #ifde‡
TAINT


423 
	#°r_gë
(
°r
Ë(
Så
 = (°r), 
èöãd
 |Så->
°r_èöãd
, \

424 (
Så
->
°r_pok
 ? Så->
°r_±r
 : 
	`°r_2±r
(Så)))

	)

426 
	#°r_gë
(
°r
Ë(
Så
 = (°r), (Så->
°r_pok
 ? Så->
°r_±r
 : 
	`°r_2±r
(Så)))

	)

430 #ifde‡
CRIPPLED_CC


431 
°r_gnum
();

433 #ifde‡
TAINT


434 
	#°r_gnum
(
°r
Ë(
Så
 = (°r), 
èöãd
 |Så->
°r_èöãd
, \

435 (
Så
->
°r_nok
 ? Så->
°r_u
.
°r_nvÆ
 : 
	`°r_2num
(Så)))

	)

437 
	#°r_gnum
(
°r
Ë(
Så
 = (°r), (Så->
°r_nok
 ? Så->
°r_u
.
°r_nvÆ
 : 
	`°r_2num
(Så)))

	)

440 
EXT
 
STR
 *
	gSå
;

442 
	#GROWSTR
(
µ
,
Õ
,
Àn
Ëi‡(*÷pË< (Àn)Ë
	`grow°r
’p,Õ,Àn)

	)

444 #i‚de‡
MSDOS


445 
	#STR_GROW
(
°r
,
Àn
Ëi‡((°r)->
°r_Àn
 < (Àn)Ë
	`°r_grow
(°r,Àn)

	)

446 
	#Så_Grow
 
°r_grow


	)

449 
	#STR_GROW
(
°r
,
Àn
Ëi‡((°r)->
°r_Àn
 < ()len) \

450 
	`°r_grow
(
°r
,()
Àn
)

	)

451 
	#Så_Grow
(
°r
,
Àn
Ë
	`°r_grow
(°r,()÷í))

	)

454 #i‚de‡
BYTEORDER


455 
	#BYTEORDER
 0x1234

	)

458 #i‡
deföed
(
ht⁄l
Ë&& !deföed(
HAS_HTONL
)

459 
	#HAS_HTONL


	)

461 #i‡
deföed
(
ht⁄s
Ë&& !deföed(
HAS_HTONS
)

462 
	#HAS_HTONS


	)

464 #i‡
deföed
(
¡ohl
Ë&& !deföed(
HAS_NTOHL
)

465 
	#HAS_NTOHL


	)

467 #i‡
deföed
(
¡ohs
Ë&& !deföed(
HAS_NTOHS
)

468 
	#HAS_NTOHS


	)

470 #i‚de‡
HAS_HTONL


471 #i‡(
BYTEORDER
 & 0xffff) != 0x4321

472 
	#HAS_HTONS


	)

473 
	#HAS_HTONL


	)

474 
	#HAS_NTOHS


	)

475 
	#HAS_NTOHL


	)

476 
	#MYSWAP


	)

477 
	#ht⁄s
 
my_sw≠


	)

478 
	#ht⁄l
 
my_ht⁄l


	)

479 
	#¡ohs
 
my_sw≠


	)

480 
	#¡ohl
 
my_¡ohl


	)

483 #i‡(
BYTEORDER
 & 0xffff) == 0x4321

484 #unde‡
HAS_HTONS


485 #unde‡
HAS_HTONL


486 #unde‡
HAS_NTOHS


487 #unde‡
HAS_NTOHL


491 #ifde‡
CASTNEGFLOAT


492 
	#U_S
(
wh©
Ë(()(wh©))

	)

493 
	#U_I
(
wh©
Ë(()(wh©))

	)

494 
	#U_L
(
wh©
Ë(()(wh©))

	)

496 
ˇ°ul⁄g
();

497 
	#U_S
(
wh©
Ë(()
	`ˇ°ul⁄g
(wh©))

	)

498 
	#U_I
(
wh©
Ë(()
	`ˇ°ul⁄g
(wh©))

	)

499 
	#U_L
(
wh©
Ë(
	`ˇ°ul⁄g
(wh©))

	)

502 
CMD
 *
add_œbñ
();

503 
CMD
 *
block_hód
();

504 
CMD
 *
≠≥nd_löe
();

505 
CMD
 *
make_acmd
();

506 
CMD
 *
make_ccmd
();

507 
CMD
 *
make_icmd
();

508 
CMD
 *
övît
();

509 
CMD
 *
addc⁄d
();

510 
CMD
 *
addlo›
();

511 
CMD
 *
w›t
();

512 
CMD
 *
ovî
();

514 
STAB
 *
°abít
();

515 
STAB
 *
gí°ab
();

517 
ARG
 *
°ab2¨g
();

518 
ARG
 *
›_√w
();

519 
ARG
 *
make_›
();

520 
ARG
 *
make_m©ch
();

521 
ARG
 *
make_•lô
();

522 
ARG
 *
rˇtmaybe
();

523 
ARG
 *
li°ish
();

524 
ARG
 *
maybñi°ish
();

525 
ARG
 *
loˇlize
();

526 
ARG
 *
fixevÆ
();

527 
ARG
 *
jmaybe
();

528 
ARG
 *
l
();

529 
ARG
 *
fixl
();

530 
ARG
 *
mod_m©ch
();

531 
ARG
 *
make_li°
();

532 
ARG
 *
cmd_to_¨g
();

533 
ARG
 *
addÊags
();

534 
ARG
 *
hide_¨y
();

535 
ARG
 *
cvÆ_to_¨g
();

537 
STR
 *
°r_√w
();

538 
STR
 *
°ab_°r
();

540 
do_óch
();

541 
do_subr
();

542 
do_m©ch
();

543 
do_u≈ack
();

544 
evÆ
();

545 
do_evÆ
();

546 
do_assign
();

548 
SUBR
 *
make_sub
();

550 
FCMD
 *
lﬂd_f‹m©
();

552 *
sˇ≈©
();

553 *
sˇnsub°
();

554 *
sˇ¡øns
();

555 *
sˇn°r
();

556 *
sˇnidít
();

557 *
°r_≠≥nd_tûl
();

558 *
°r_gës
();

559 *
°r_grow
();

561 
boﬁ
 
do_›í
();

562 
boﬁ
 
do_˛o£
();

563 
boﬁ
 
do_¥öt
();

564 
boﬁ
 
do_≠röt
();

565 
boﬁ
 
do_exec
();

566 
boﬁ
 
do_´xec
();

568 
do_sub°
();

569 
ˇndo
();

570 
ögroup
();

572 
°r_ª∂a˚
();

573 
°r_öc
();

574 
°r_dec
();

575 
°r_‰ì
();

576 
°ab_˛ór
();

577 
do_joö
();

578 
do_•rötf
();

579 
do_ac˚±
();

580 
do_pùe
();

581 
do_vec£t
();

582 
do_unshi·
();

583 
do_exec‰ì
();

584 
magiˇlize
();

585 
magi˙ame
();

586 
ßvñi°
();

587 
ßveôem
();

588 
ßveöt
();

589 
ßvñ⁄g
();

590 
ßve•å
();

591 
ßveh±r
();

592 
ª°‹ñi°
();

593 
ª≥©˝y
();

594 
HASH
 *
ßvehash
();

595 
ARRAY
 *
ßvóry
();

597 
EXT
 **
	g‹ig¨gv
;

598 
EXT
 
	g‹ig¨gc
;

599 
EXT
 **
	g‹igívú⁄
;

600 
**
ívú⁄
;

602 
EXT
 
löe_t
 
sublöe
 
INIT
(0);

603 
EXT
 
STR
 *
sub«me
 
INIT
(
NuŒ°r
);

604 
EXT
 
¨yba£
 
INIT
(0);

606 
	souåec
 {

607 
	mo_löes
;

608 *
	mo_°r
;

609 
	mo_Àn
;

612 
EXT
 
ouåec
 
	gouåec
;

613 
EXT
 
ouåec
 
	gt›ªc
;

615 
EXT
 
STAB
 *
°dö°ab
 
INIT
(
NuŒ°ab
);

616 
EXT
 
STAB
 *
œ°_ö_°ab
 
INIT
(
NuŒ°ab
);

617 
EXT
 
STAB
 *
def°ab
 
INIT
(
NuŒ°ab
);

618 
EXT
 
STAB
 *
¨gv°ab
 
INIT
(
NuŒ°ab
);

619 
EXT
 
STAB
 *
ív°ab
 
INIT
(
NuŒ°ab
);

620 
EXT
 
STAB
 *
sig°ab
 
INIT
(
NuŒ°ab
);

621 
EXT
 
STAB
 *
defout°ab
 
INIT
(
NuŒ°ab
);

622 
EXT
 
STAB
 *
curout°ab
 
INIT
(
NuŒ°ab
);

623 
EXT
 
STAB
 *
¨gvout°ab
 
INIT
(
NuŒ°ab
);

624 
EXT
 
STAB
 *
öc°ab
 
INIT
(
NuŒ°ab
);

625 
EXT
 
STAB
 *
À·°ab
 
INIT
(
NuŒ°ab
);

626 
EXT
 
STAB
 *
am≥r°ab
 
INIT
(
NuŒ°ab
);

627 
EXT
 
STAB
 *
right°ab
 
INIT
(
NuŒ°ab
);

628 
EXT
 
STAB
 *
DB°ab
 
INIT
(
NuŒ°ab
);

629 
EXT
 
STAB
 *
DBlöe
 
INIT
(
NuŒ°ab
);

630 
EXT
 
STAB
 *
DBsub
 
INIT
(
NuŒ°ab
);

632 
EXT
 
HASH
 *
	gdef°ash
;

633 
EXT
 
HASH
 *
	gcur°ash
;

634 
EXT
 
HASH
 *
	gdeb°ash
;

636 
EXT
 
STR
 *
	gcur°«me
;

638 
EXT
 
STR
 *
‰ì°ºoŸ
 
INIT
(
NuŒ°r
);

639 
EXT
 
STR
 *
œ°ªt°r
 
INIT
(
NuŒ°r
);

640 
EXT
 
STR
 *
DBsögÀ
 
INIT
(
NuŒ°r
);

641 
EXT
 
STR
 *
DBåa˚
 
INIT
(
NuŒ°r
);

642 
EXT
 
STR
 *
DBsig«l
 
INIT
(
NuŒ°r
);

644 
EXT
 
	gœ°•ba£
;

645 
EXT
 
	gœ°size
;

647 
EXT
 *
hexdigô
 
INIT
("0123456789abcdef0123456789ABCDEF");

648 
EXT
 *
	g‹igfûíame
;

649 
EXT
 
FILE
 * 
VOLATILE
 
	grsÂ
;

650 
EXT
 
	gbuf
[1024];

651 
EXT
 *
	gbuÂå
;

652 
EXT
 *
	gﬁdbuÂå
;

653 
EXT
 *
	gﬁdﬁdbuÂå
;

654 
EXT
 *
	gbu„nd
;

656 
EXT
 
STR
 *
löe°r
 
INIT
(
NuŒ°r
);

658 
EXT
 *
rs
 
INIT
("\n");

659 
EXT
 
rsch¨
 
INIT
('\n');

660 
EXT
 
r¶í
 
INIT
(1);

661 
EXT
 *
ofs
 
INIT
(
NuŒch
);

662 
EXT
 
of¶í
 
INIT
(0);

663 
EXT
 *
‹s
 
INIT
(
NuŒch
);

664 
EXT
 
‹¶í
 
INIT
(0);

665 
EXT
 *
ofmt
 
INIT
(
NuŒch
);

666 
EXT
 *
ö∂a˚
 
INIT
(
NuŒch
);

667 
EXT
 *
noöåp
 
INIT
("");

669 
EXT
 
boﬁ
 
¥ïro˚ss
 
INIT
(
FALSE
);

670 
EXT
 
boﬁ
 
möus_n
 
INIT
(
FALSE
);

671 
EXT
 
boﬁ
 
möus_p
 
INIT
(
FALSE
);

672 
EXT
 
boﬁ
 
möus_l
 
INIT
(
FALSE
);

673 
EXT
 
boﬁ
 
möus_a
 
INIT
(
FALSE
);

674 
EXT
 
boﬁ
 
doswôches
 
INIT
(
FALSE
);

675 
EXT
 
boﬁ
 
dow¨n
 
INIT
(
FALSE
);

676 
EXT
 
boﬁ
 
d€xåa˘
 
INIT
(
FALSE
);

677 
EXT
 
boﬁ
 
Æl°abs
 
INIT
(
FALSE
);

678 
EXT
 
boﬁ
 
ßwam≥rßnd
 
INIT
(
FALSE
);

679 
EXT
 
boﬁ
 
ßw°udy
 
INIT
(
FALSE
);

680 
EXT
 
boﬁ
 
ßwi
 
INIT
(
FALSE
);

681 
EXT
 
boﬁ
 
ßwvec
 
INIT
(
FALSE
);

682 
EXT
 
boﬁ
 
loˇlizög
 
INIT
(
FALSE
);

684 #ifde‡
CSH


685 *
csh«me
 
INIT
(
CSH
);

686 
cshÀn
 
INIT
(0);

689 #ifde‡
TAINT


690 
EXT
 
boﬁ
 
èöãd
 
INIT
(
FALSE
);

693 #i‚de‡
MSDOS


694 
	#TMPPATH
 "/tmp/≥æ-eXXXXXX"

	)

696 
	#TMPPATH
 "∂XXXXXX"

	)

698 
EXT
 *
	ge_tm≤ame
;

699 
EXT
 
FILE
 *
e_Â
 
INIT
(
NuŒÂ
);

701 
EXT
 
	gtokíbuf
[256];

702 
EXT
 
ex≥˘ãrm
 
INIT
(
TRUE
);

703 
EXT
 
VOLATILE
 
ö_evÆ
 
INIT
(
FALSE
);

704 
EXT
 
mu…ûöe
 
INIT
(0);

705 
EXT
 
	gf‹k¥o˚ss
;

706 
EXT
 
do_undump
 
INIT
(0);

707 
EXT
 
îr‹_cou¡
 
INIT
(0);

708 
EXT
 
mu…i_°¨t
 
INIT
(0);

709 
EXT
 
mu…i_íd
 
INIT
(0);

710 
EXT
 
mu…i_›í
 
INIT
(0);

711 
EXT
 
mu…i_˛o£
 
INIT
(0);

713 
FILE
 *
p›í
();

715 
STR
 *
öãΩ
();

716 
‰ì_¨g
();

717 
STIO
 *
°io_√w
();

719 
EXT
 
°©
 
	g°©buf
;

720 
EXT
 
°©
 
	g°©ˇche
;

721 
STAB
 *
°©°ab
 
INIT
(
NuŒ°ab
);

722 
STR
 *
	g°©«me
;

723 #i‚de‡
MSDOS


724 
EXT
 
tms
 
	gtimesbuf
;

726 
EXT
 
	guid
;

727 
EXT
 
	geuid
;

728 
EXT
 
	ggid
;

729 
EXT
 
	gegid
;

730 
UIDTYPE
 
gëuid
();

731 
UIDTYPE
 
gëeuid
();

732 
GIDTYPE
 
gëgid
();

733 
GIDTYPE
 
gëegid
();

734 
EXT
 
	gunß„
;

736 #ifde‡
DEBUGGING


737 
EXT
 
VOLATILE
 
debug
 
INIT
(0);

738 
EXT
 
dÀvñ
 
INIT
(0);

739 
EXT
 
dlmax
 
INIT
(128);

740 
EXT
 *
	gdeb«me
;

741 
EXT
 *
	gdebdñim
;

742 
	#YYDEBUG
 1

	)

744 
EXT
 
≥ædb
 
INIT
(0);

745 
	#YYMAXDEPTH
 300

	)

747 
EXT
 
löe_t
 
cmdlöe
 
INIT
(
NOLINE
);

749 
EXT
 
STR
 
	g°r_undef
;

750 
EXT
 
STR
 
	g°r_no
;

751 
EXT
 
STR
 
	g°r_yes
;

755 
EXT
 
	slo›
 {

756 *
	mlo›_œbñ
;

757 
	mlo›_•
;

758 
jmp_buf
 
	mlo›_ív
;

759 } *
	glo›_°ack
;

761 
EXT
 
lo›_±r
 
INIT
(-1);

762 
EXT
 
lo›_max
 
INIT
(128);

764 
EXT
 
jmp_buf
 
	gt›_ív
;

766 
EXT
 * 
VOLATILE
 
gŸo_èrg
 
INIT
(
NuŒch
);

768 
	sufuncs
 {

769 (*
	muf_vÆ
)();

770 (*
	muf_£t
)();

771 
	muf_ödex
;

774 
EXT
 
ARRAY
 *
	g°ack
;

776 
EXT
 
ARRAY
 * 
VOLATILE
 
	gßve°ack
;

778 
EXT
 
ARRAY
 *
	gtoßve
;

780 
EXT
 
ARRAY
 *
	glöóry
;

781 
EXT
 
ARRAY
 *
	gdb¨gs
;

783 
EXT
 
ARRAY
 *
	gfdpid
;

784 
EXT
 
HASH
 *
	gpid°©us
;

786 
EXT
 *
	gdi
;

787 
EXT
 *
	gdc
;

788 
EXT
 *
	gds
;

791 
EXT
 
ba£time
 
INIT
(0);

792 *
mkãmp
();

793 #i‚de‡
__STDC__


795 
©of
();

796 
time
();

797 
tm
 *
gmtime
(), *
loˇ…ime
();

798 *
ödex
(), *
rödex
();

799 *
°r˝y
(), *
°rˇt
();

802 #ifde‡
EUNICE


803 
	#UNLINK
 
u∆nk


	)

804 
u∆nk
();

806 
	#UNLINK
 
u∆ök


	)

809 #i‚de‡
HAS_SETREUID


810 #ifde‡
HAS_SETRESUID


811 
	#£åeuid
(
r
,
e
Ë
	`£åesuid
‘,e,-1)

	)

812 
	#HAS_SETREUID


	)

815 #i‚de‡
HAS_SETREGID


816 #ifde‡
HAS_SETRESGID


817 
	#£åegid
(
r
,
e
Ë
	`£åesgid
‘,e,-1)

	)

818 
	#HAS_SETREGID


	)

822 #i‚de‡
Âuts


823 
	#Âuts
(
°r
,
Â
Ë
	`Ârötf
(Â,"%s",°r)

	)

	@perly.c

1 #i‚de‡
löt


3 
	gyyrcsid
[] = "$FreeBSD: src/usr.bin/yacc/skeleton.c,v 1.28 2000/01/17 02:04:06 bde Exp $";

5 
	~<°dlib.h
>

6 
	#YYBYACC
 1

	)

7 
	#YYMAJOR
 1

	)

8 
	#YYMINOR
 9

	)

9 
	#YYLEX
 
	`yyÀx
()

	)

10 
	#YYEMPTY
 -1

	)

11 
	#yy˛órö
 (
yych¨
=(
YYEMPTY
))

	)

12 
	#yyîrok
 (
yyîrÊag
=0)

	)

13 
	#YYRECOVERING
(Ë(
yyîrÊag
!=0)

	)

14 
yygrow°ack
();

15 
	#YYPREFIX
 "yy"

	)

17 
	~"INTERN.h
"

18 
	~"≥æ.h
"

20 
STAB
 *
	gs¸°ab
;

21 
ARG
 *
	g¨g4
;

22 
ARG
 *
	g¨g5
;

26 
	mivÆ
;

27 *
	mcvÆ
;

28 
ARG
 *
	m¨g
;

29 
CMD
 *
	mcmdvÆ
;

30 
compcmd
 
	mcompvÆ
;

31 
STAB
 *
	m°abvÆ
;

32 
FCMD
 *
	mf‹mvÆ
;

33 } 
	tYYSTYPE
;

35 
	#YYERRCODE
 256

	)

36 
	#WORD
 257

	)

37 
	#APPEND
 258

	)

38 
	#OPEN
 259

	)

39 
	#SSELECT
 260

	)

40 
	#LOOPEX
 261

	)

41 
	#USING
 262

	)

42 
	#FORMAT
 263

	)

43 
	#DO
 264

	)

44 
	#SHIFT
 265

	)

45 
	#PUSH
 266

	)

46 
	#POP
 267

	)

47 
	#LVALFUN
 268

	)

48 
	#WHILE
 269

	)

49 
	#UNTIL
 270

	)

50 
	#IF
 271

	)

51 
	#UNLESS
 272

	)

52 
	#ELSE
 273

	)

53 
	#ELSIF
 274

	)

54 
	#CONTINUE
 275

	)

55 
	#SPLIT
 276

	)

56 
	#FLIST
 277

	)

57 
	#FOR
 278

	)

58 
	#FILOP
 279

	)

59 
	#FILOP2
 280

	)

60 
	#FILOP3
 281

	)

61 
	#FILOP4
 282

	)

62 
	#FILOP22
 283

	)

63 
	#FILOP25
 284

	)

64 
	#FUNC0
 285

	)

65 
	#FUNC1
 286

	)

66 
	#FUNC2
 287

	)

67 
	#FUNC2x
 288

	)

68 
	#FUNC3
 289

	)

69 
	#FUNC4
 290

	)

70 
	#FUNC5
 291

	)

71 
	#HSHFUN
 292

	)

72 
	#HSHFUN3
 293

	)

73 
	#FLIST2
 294

	)

74 
	#SUB
 295

	)

75 
	#FILETEST
 296

	)

76 
	#LOCAL
 297

	)

77 
	#DELETE
 298

	)

78 
	#RELOP
 299

	)

79 
	#EQOP
 300

	)

80 
	#MULOP
 301

	)

81 
	#ADDOP
 302

	)

82 
	#PACKAGE
 303

	)

83 
	#AMPER
 304

	)

84 
	#FORMLIST
 305

	)

85 
	#REG
 306

	)

86 
	#ARYLEN
 307

	)

87 
	#ARY
 308

	)

88 
	#HSH
 309

	)

89 
	#STAR
 310

	)

90 
	#SUBST
 311

	)

91 
	#PATTERN
 312

	)

92 
	#RSTRING
 313

	)

93 
	#TRANS
 314

	)

94 
	#LISTOP
 315

	)

95 
	#DOTDOT
 316

	)

96 
	#OROR
 317

	)

97 
	#ANDAND
 318

	)

98 
	#UNIOP
 319

	)

99 
	#LS
 320

	)

100 
	#RS
 321

	)

101 
	#MATCH
 322

	)

102 
	#NMATCH
 323

	)

103 
	#UMINUS
 324

	)

104 
	#POW
 325

	)

105 
	#INC
 326

	)

106 
	#DEC
 327

	)

107 c⁄° 
	gyylhs
[] = { -1,

128 c⁄° 
	gyyÀn
[] = { 2,

149 c⁄° 
	gyyde‰ed
[] = { 1,

192 c⁄° 
	gyydgŸo
[] = { 1,

197 c⁄° 
	gyysödex
[] = { 0,

240 c⁄° 
	gyyrödex
[] = { 0,

283 c⁄° 
	gyygödex
[] = { 0,

288 
	#YYTABLESIZE
 6272

	)

289 c⁄° 
	gyyèbÀ
[] = { 88,

919 c⁄° 
	gyycheck
[] = { 18,

1549 
	#YYFINAL
 1

	)

1550 #i‚de‡
YYDEBUG


1551 
	#YYDEBUG
 0

	)

1553 
	#YYMAXTOKEN
 327

	)

1554 #i‡
YYDEBUG


1555 c⁄° * c⁄° 
	gyy«me
[] = {

1572 c⁄° * c⁄° 
	gyyruÀ
[] = {

1757 #i‡
YYDEBUG


1758 
	~<°dio.h
>

1760 #ifde‡
YYSTACKSIZE


1761 #unde‡
YYMAXDEPTH


1762 
	#YYMAXDEPTH
 
YYSTACKSIZE


	)

1764 #ifde‡
YYMAXDEPTH


1765 
	#YYSTACKSIZE
 
YYMAXDEPTH


	)

1767 
	#YYSTACKSIZE
 10000

	)

1768 
	#YYMAXDEPTH
 10000

	)

1771 
	#YYINITSTACKSIZE
 200

	)

1772 
	gyydebug
;

1773 
	gyy√ºs
;

1774 
	gyyîrÊag
;

1775 
	gyych¨
;

1776 *
	gyys•
;

1777 
YYSTYPE
 *
	gyyv•
;

1778 
YYSTYPE
 
	gyyvÆ
;

1779 
YYSTYPE
 
	gyylvÆ
;

1780 *
	gyyss
;

1781 *
	gyys¶im
;

1782 
YYSTYPE
 *
	gyyvs
;

1783 
	gyy°acksize
;

1788 
	$yygrow°ack
()

1790 
√wsize
, 
i
;

1791 *
√wss
;

1792 
YYSTYPE
 *
√wvs
;

1794 i‡((
√wsize
 = 
yy°acksize
) == 0)

1795 
√wsize
 = 
YYINITSTACKSIZE
;

1796 i‡(
√wsize
 >
YYMAXDEPTH
)

1798 i‡((
√wsize
 *2Ë> 
YYMAXDEPTH
)

1799 
√wsize
 = 
YYMAXDEPTH
;

1800 
i
 = 
yys•
 - 
yyss
;

1801 
√wss
 = 
yyss
 ? (*)
	`ªÆloc
(yyss, 
√wsize
 *  *newss) :

1802 (*)
	`mÆloc
(
√wsize
 *  *
√wss
);

1803 i‡(
√wss
 =
NULL
)

1805 
yyss
 = 
√wss
;

1806 
yys•
 = 
√wss
 + 
i
;

1807 
√wvs
 = 
yyvs
 ? (
YYSTYPE
 *)
	`ªÆloc
(yyvs, 
√wsize
 *  *newvs) :

1808 (
YYSTYPE
 *)
	`mÆloc
(
√wsize
 *  *
√wvs
);

1809 i‡(
√wvs
 =
NULL
)

1811 
yyvs
 = 
√wvs
;

1812 
yyv•
 = 
√wvs
 + 
i
;

1813 
yy°acksize
 = 
√wsize
;

1814 
yys¶im
 = 
yyss
 + 
√wsize
 - 1;

1816 
	}
}

1818 
	#YYABORT
 
yyab‹t


	)

1819 
	#YYREJECT
 
yyab‹t


	)

1820 
	#YYACCEPT
 
yyac˚±


	)

1821 
	#YYERROR
 
yyîæab


	)

1823 #i‚de‡
YYPARSE_PARAM


1824 #i‡
deföed
(
__˝lu•lus
Ë|| 
__STDC__


1825 
	#YYPARSE_PARAM_ARG
 

	)

1826 
	#YYPARSE_PARAM_DECL


	)

1828 
	#YYPARSE_PARAM_ARG


	)

1829 
	#YYPARSE_PARAM_DECL


	)

1832 #i‚de‡
YYPARSE_PARAM_TYPE


1833 
	#YYPARSE_PARAM_TYPE
 *

	)

1835 #i‡
deföed
(
__˝lu•lus
Ë|| 
__STDC__


1836 
	#YYPARSE_PARAM_ARG
 
YYPARSE_PARAM_TYPE
 
YYPARSE_PARAM


	)

1837 
	#YYPARSE_PARAM_DECL


	)

1839 
	#YYPARSE_PARAM_ARG
 
YYPARSE_PARAM


	)

1840 
	#YYPARSE_PARAM_DECL
 
YYPARSE_PARAM_TYPE
 
YYPARSE_PARAM
;

	)

1845 
	$yy∑r£
 (
YYPARSE_PARAM_ARG
)

1846 
YYPARSE_PARAM_DECL


1848 
yym
, 
yyn
, 
yy°©e
;

1849 #i‡
YYDEBUG


1850 c⁄° *
yys
;

1852 i‡((
yys
 = 
	`gëív
("YYDEBUG")))

1854 
yyn
 = *
yys
;

1855 i‡(
yyn
 >= '0' && yyn <= '9')

1856 
yydebug
 = 
yyn
 - '0';

1860 
yy√ºs
 = 0;

1861 
yyîrÊag
 = 0;

1862 
yych¨
 = (-1);

1864 i‡(
yyss
 =
NULL
 && 
	`yygrow°ack
()Ë
yyovîÊow
;

1865 
yys•
 = 
yyss
;

1866 
yyv•
 = 
yyvs
;

1867 *
yys•
 = 
yy°©e
 = 0;

1869 
yylo›
:

1870 i‡((
yyn
 = 
yyde‰ed
[
yy°©e
])Ë
yyªdu˚
;

1871 i‡(
yych¨
 < 0)

1873 i‡((
yych¨
 = 
	`yyÀx
()) < 0) yychar = 0;

1874 #i‡
YYDEBUG


1875 i‡(
yydebug
)

1877 
yys
 = 0;

1878 i‡(
yych¨
 <
YYMAXTOKEN
Ë
yys
 = 
yy«me
[yychar];

1879 i‡(!
yys
) yys = "illegal-symbol";

1880 
	`¥ötf
("%sdebug: state %d,Ñeading %d (%s)\n",

1881 
YYPREFIX
, 
yy°©e
, 
yych¨
, 
yys
);

1885 i‡((
yyn
 = 
yysödex
[
yy°©e
]Ë&& (yy¿+
yych¨
) >= 0 &&

1886 
yyn
 <
YYTABLESIZE
 && 
yycheck
[yyn] =
yych¨
)

1888 #i‡
YYDEBUG


1889 i‡(
yydebug
)

1890 
	`¥ötf
("%sdebug: state %d, shiftingÅo state %d\n",

1891 
YYPREFIX
, 
yy°©e
, 
yyèbÀ
[
yyn
]);

1893 i‡(
yys•
 >
yys¶im
 && 
	`yygrow°ack
())

1895 
yyovîÊow
;

1897 *++
yys•
 = 
yy°©e
 = 
yyèbÀ
[
yyn
];

1898 *++
yyv•
 = 
yylvÆ
;

1899 
yych¨
 = (-1);

1900 i‡(
yyîrÊag
 > 0) --yyerrflag;

1901 
yylo›
;

1903 i‡((
yyn
 = 
yyrödex
[
yy°©e
]Ë&& (yy¿+
yych¨
) >= 0 &&

1904 
yyn
 <
YYTABLESIZE
 && 
yycheck
[yyn] =
yych¨
)

1906 
yyn
 = 
yyèbÀ
[yyn];

1907 
yyªdu˚
;

1909 i‡(
yyîrÊag
Ë
yyöªcovîy
;

1910 #i‡
	`deföed
(
löt
Ë|| deföed(
__GNUC__
)

1911 
yy√wîr‹
;

1913 
yy√wîr‹
:

1914 
	`yyîr‹
("syntaxÉrror");

1915 #i‡
	`deföed
(
löt
Ë|| deföed(
__GNUC__
)

1916 
yyîæab
;

1918 
yyîæab
:

1919 ++
yy√ºs
;

1920 
yyöªcovîy
:

1921 i‡(
yyîrÊag
 < 3)

1923 
yyîrÊag
 = 3;

1926 i‡((
yyn
 = 
yysödex
[*
yys•
]Ë&& (yy¿+
YYERRCODE
) >= 0 &&

1927 
yyn
 <
YYTABLESIZE
 && 
yycheck
[yyn] =
YYERRCODE
)

1929 #i‡
YYDEBUG


1930 i‡(
yydebug
)

1931 
	`¥ötf
("%sdebug: sèã %d,Éº‹Ñecovîy shi·ög\
 sèã %d\n", 
YYPREFIX
, *
yys•
, 
yyèbÀ
[
yyn
]);

1934 i‡(
yys•
 >
yys¶im
 && 
	`yygrow°ack
())

1936 
yyovîÊow
;

1938 *++
yys•
 = 
yy°©e
 = 
yyèbÀ
[
yyn
];

1939 *++
yyv•
 = 
yylvÆ
;

1940 
yylo›
;

1944 #i‡
YYDEBUG


1945 i‡(
yydebug
)

1946 
	`¥ötf
("%sdebug:ÉrrorÑecovery discarding state %d\n",

1947 
YYPREFIX
, *
yys•
);

1949 i‡(
yys•
 <
yyss
Ë
yyab‹t
;

1950 --
yys•
;

1951 --
yyv•
;

1957 i‡(
yych¨
 =0Ë
yyab‹t
;

1958 #i‡
YYDEBUG


1959 i‡(
yydebug
)

1961 
yys
 = 0;

1962 i‡(
yych¨
 <
YYMAXTOKEN
Ë
yys
 = 
yy«me
[yychar];

1963 i‡(!
yys
) yys = "illegal-symbol";

1964 
	`¥ötf
("%sdebug: state %d,ÉrrorÑecovery discardsÅoken %d (%s)\n",

1965 
YYPREFIX
, 
yy°©e
, 
yych¨
, 
yys
);

1968 
yych¨
 = (-1);

1969 
yylo›
;

1971 
yyªdu˚
:

1972 #i‡
YYDEBUG


1973 i‡(
yydebug
)

1974 
	`¥ötf
("%sdebug: state %d,Ñeducing byÑule %d (%s)\n",

1975 
YYPREFIX
, 
yy°©e
, 
yyn
, 
yyruÀ
[yyn]);

1977 
yym
 = 
yyÀn
[
yyn
];

1978 
yyvÆ
 = 
yyv•
[1-
yym
];

1979 
yyn
)

1984 #i‡
	`deföed
(
YYDEBUG
Ë&& deföed(
DEBUGGING
)

1985 
yydebug
 = (
debug
 & 1);

1991 { i‡(
ö_evÆ
)

1992 
evÆ_roŸ
 = 
	`block_hód
(
yyv•
[0].
cmdvÆ
);

1994 
maö_roŸ
 = 
	`block_hód
(
yyv•
[0].
cmdvÆ
); }

1998 { 
yyvÆ
.
compvÆ
.
comp_åue
 = 
yyv•
[-2].
cmdvÆ
; yyvÆ.compvÆ.
comp_Æt
 = yyvsp[0].cmdval; }

2002 { 
yyvÆ
.
compvÆ
.
comp_åue
 = 
yyv•
[-1].
cmdvÆ
; yyvÆ.compvÆ.
comp_Æt
 = yyvsp[0].cmdval; }

2006 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; }

2010 { 
yyvÆ
.
cmdvÆ
 = 
yyv•
[0].cmdval; }

2014 { 
cmdlöe
 = 
yyv•
[-4].
ivÆ
;

2015 
yyvÆ
.
cmdvÆ
 = 
	`make_ccmd
(
C_ELSIF
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
); }

2019 { 
yyvÆ
.
cmdvÆ
 = 
	`block_hód
(
yyv•
[-1].cmdval);

2020 i‡(
ßve°ack
->
¨y_fûl
 > 
yyv•
[-2].
ivÆ
)

2021 
	`ª°‹ñi°
(
yyv•
[-2].
ivÆ
); }

2025 { 
yyvÆ
.
ivÆ
 = 
ßve°ack
->
¨y_fûl
; }

2029 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; }

2033 { 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(
yyv•
[-1].cmdval,yyvsp[0].cmdval); }

2037 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; }

2041 { 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yyv•
[-1].
cvÆ
,yyvsp[0].cmdval); }

2045 { i‡(
yyv•
[-1].
cvÆ
 !
NuŒch
) {

2046 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yyv•
[-1].
cvÆ
, 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
,

2047 
NuŒ¨g
, Nullarg) );

2050 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
;

2051 
cmdlöe
 = 
NOLINE
;

2056 { 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yyv•
[-2].
cvÆ
,yyvsp[-1].cmdval); }

2060 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; }

2064 { 
yyvÆ
.
cmdvÆ
 = 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
yyv•
[0].
¨g
, 
NuŒ¨g
); }

2068 { 
yyvÆ
.
cmdvÆ
 = 
	`addc⁄d
(

2069 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yyv•
[-2].
¨g
), yyvsp[0].arg); }

2073 { 
yyvÆ
.
cmdvÆ
 = 
	`addc⁄d
(
	`övît
(

2074 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yyv•
[-2].
¨g
)), yyvsp[0].arg); }

2078 { 
yyvÆ
.
cmdvÆ
 = 
	`addlo›
(

2079 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yyv•
[-2].
¨g
), yyvsp[0].arg); }

2083 { 
yyvÆ
.
cmdvÆ
 = 
	`addlo›
(
	`övît
(

2084 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yyv•
[-2].
¨g
)), yyvsp[0].arg); }

2088 { 
cmdlöe
 = 
yyv•
[-4].
ivÆ
;

2089 
yyvÆ
.
cmdvÆ
 = 
	`make_icmd
(
C_IF
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
); }

2093 { 
cmdlöe
 = 
yyv•
[-4].
ivÆ
;

2094 
yyvÆ
.
cmdvÆ
 = 
	`övît
(
	`make_icmd
(
C_IF
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
)); }

2098 { 
cmdlöe
 = 
yyv•
[-2].
ivÆ
;

2099 
yyvÆ
.
cmdvÆ
 = 
	`make_ccmd
(
C_IF
,
	`cmd_to_¨g
(
yyv•
[-1].cmdvÆ),yyv•[0].
compvÆ
); }

2103 { 
cmdlöe
 = 
yyv•
[-2].
ivÆ
;

2104 
yyvÆ
.
cmdvÆ
 = 
	`övît
(
	`make_ccmd
(
C_IF
,
	`cmd_to_¨g
(
yyv•
[-1].cmdvÆ),yyv•[0].
compvÆ
)); }

2108 { 
cmdlöe
 = 
yyv•
[-4].
ivÆ
;

2109 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yyv•
[-5].
cvÆ
,

2110 
	`make_ccmd
(
C_WHILE
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
) )); }

2114 { 
cmdlöe
 = 
yyv•
[-4].
ivÆ
;

2115 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yyv•
[-5].
cvÆ
,

2116 
	`övît
(
	`make_ccmd
(
C_WHILE
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
)) )); }

2120 { 
cmdlöe
 = 
yyv•
[-2].
ivÆ
;

2121 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yyv•
[-3].
cvÆ
,

2122 
	`make_ccmd
(
C_WHILE
, 
	`cmd_to_¨g
(
yyv•
[-1].
cmdvÆ
),yyv•[0].
compvÆ
) )); }

2126 { 
cmdlöe
 = 
yyv•
[-2].
ivÆ
;

2127 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yyv•
[-3].
cvÆ
,

2128 
	`övît
(
	`make_ccmd
(
C_WHILE
, 
	`cmd_to_¨g
(
yyv•
[-1].
cmdvÆ
),yyv•[0].
compvÆ
)) )); }

2132 { 
cmdlöe
 = 
yyv•
[-5].
ivÆ
;

2145 i‡(
yyv•
[-2].
¨g
->
¨g_ty≥
 !
O_ARRAY
) {

2146 
s¸°ab
 = 
	`Ødd
(
	`gí°ab
());

2147 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(

2148 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
,

2149 
	`l
(
	`make_›
(
O_ASSIGN
,2,

2150 
	`li°ish
(
	`make_›
(
O_ARRAY
, 1,

2151 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

2152 
NuŒ¨g
,Nullarg )),

2153 
	`li°ish
(
	`make_li°
(
yyv•
[-2].
¨g
)),

2154 
NuŒ¨g
)),

2155 
NuŒ¨g
),

2156 
	`w›t
(
	`ovî
(
yyv•
[-4].
°abvÆ
,
	`add_œbñ
(yyv•[-6].
cvÆ
,

2157 
	`make_ccmd
(
C_WHILE
,

2158 
	`make_›
(
O_ARRAY
, 1,

2159 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

2160 
NuŒ¨g
,Nullarg ),

2161 
yyv•
[0].
compvÆ
)))));

2162 
yyvÆ
.
cmdvÆ
->
c_löe
 = 
yyv•
[-5].
ivÆ
;

2163 
yyvÆ
.
cmdvÆ
->
c_hód
->
c_löe
 = 
yyv•
[-5].
ivÆ
;

2166 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`ovî
(
yyv•
[-4].
°abvÆ
,
	`add_œbñ
(yyv•[-6].
cvÆ
,

2167 
	`make_ccmd
(
C_WHILE
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
) )));

2173 { 
cmdlöe
 = 
yyv•
[-4].
ivÆ
;

2174 i‡(
yyv•
[-2].
¨g
->
¨g_ty≥
 !
O_ARRAY
) {

2175 
s¸°ab
 = 
	`Ødd
(
	`gí°ab
());

2176 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(

2177 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
,

2178 
	`l
(
	`make_›
(
O_ASSIGN
,2,

2179 
	`li°ish
(
	`make_›
(
O_ARRAY
, 1,

2180 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

2181 
NuŒ¨g
,Nullarg )),

2182 
	`li°ish
(
	`make_li°
(
yyv•
[-2].
¨g
)),

2183 
NuŒ¨g
)),

2184 
NuŒ¨g
),

2185 
	`w›t
(
	`ovî
(
def°ab
,
	`add_œbñ
(
yyv•
[-5].
cvÆ
,

2186 
	`make_ccmd
(
C_WHILE
,

2187 
	`make_›
(
O_ARRAY
, 1,

2188 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

2189 
NuŒ¨g
,Nullarg ),

2190 
yyv•
[0].
compvÆ
)))));

2191 
yyvÆ
.
cmdvÆ
->
c_löe
 = 
yyv•
[-4].
ivÆ
;

2192 
yyvÆ
.
cmdvÆ
->
c_hód
->
c_löe
 = 
yyv•
[-4].
ivÆ
;

2195 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`ovî
(
def°ab
,
	`add_œbñ
(
yyv•
[-5].
cvÆ
,

2196 
	`make_ccmd
(
C_WHILE
,
yyv•
[-2].
¨g
,yyv•[0].
compvÆ
) )));

2202 { 
yyvÆ
.
compvÆ
.
comp_åue
 = 
yyv•
[0].
cmdvÆ
;

2203 
yyvÆ
.
compvÆ
.
comp_Æt
 = 
yyv•
[-2].
cmdvÆ
;

2204 
cmdlöe
 = 
yyv•
[-8].
ivÆ
;

2205 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(
yyv•
[-6].cmdvÆ,
	`w›t
(
	`add_œbñ
(yyv•[-9].
cvÆ
,

2206 
	`make_ccmd
(
C_WHILE
,
yyv•
[-4].
¨g
,
yyvÆ
.
compvÆ
) ))); }

2210 { 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yyv•
[-1].
cvÆ
,
	`make_ccmd
(
C_BLOCK
,
NuŒ¨g
,yyv•[0].
compvÆ
)); }

2214 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; }

2218 { ()
	`sˇn°r
("1"); 
yyvÆ
.
¨g
 = 
yylvÆ
.arg; }

2222 { 
yyvÆ
.
cvÆ
 = 
NuŒch
; }

2226 { 
yyvÆ
.
ivÆ
 = 0; }

2230 { 
yyvÆ
.
ivÆ
 = 0; }

2234 { 
yyvÆ
.
ivÆ
 = 0; }

2238 { i‡(
	`°rEQ
(
yyv•
[-2].
cvÆ
,"stdout"))

2239 
	`make_f‹m
(
	`°abít
("STDOUT",
TRUE
),
yyv•
[0].
f‹mvÆ
);

2240 i‡(
	`°rEQ
(
yyv•
[-2].
cvÆ
,"stderr"))

2241 
	`make_f‹m
(
	`°abít
("STDERR",
TRUE
),
yyv•
[0].
f‹mvÆ
);

2243 
	`make_f‹m
(
	`°abít
(
yyv•
[-2].
cvÆ
,
TRUE
),yyv•[0].
f‹mvÆ
);

2244 
	`Sa„‰ì
(
yyv•
[-2].
cvÆ
); yyv•[-2].cvÆ = 
NuŒch
; }

2248 { 
	`make_f‹m
(
	`°abít
("STDOUT",
TRUE
),
yyv•
[0].
f‹mvÆ
); }

2252 { 
	`make_sub
(
yyv•
[-1].
cvÆ
,yyv•[0].
cmdvÆ
); }

2256 { 
tmpbuf
[256];

2257 
STAB
 *
tmp°ab
;

2259 
	`ßveh±r
(&
cur°ash
);

2260 
	`ßveôem
(
cur°«me
);

2261 
	`°r_£t
(
cur°«me
,
yyv•
[-1].
cvÆ
);

2262 
	`•rötf
(
tmpbuf
,"'_%s",
yyv•
[-1].
cvÆ
);

2263 
tmp°ab
 = 
	`°abít
(
tmpbuf
,
TRUE
);

2264 i‡(!
	`°ab_xhash
(
tmp°ab
))

2265 
	`°ab_xhash
(
tmp°ab
Ë
	`h√w
(0);

2266 
cur°ash
 = 
	`°ab_xhash
(
tmp°ab
);

2267 i‡(!
cur°ash
->
tbl_«me
)

2268 
cur°ash
->
tbl_«me
 = 
	`ßve°r
(
yyv•
[-1].
cvÆ
);

2269 
cur°ash
->
tbl_c€ffsize
 = 0;

2270 
	`Sa„‰ì
(
yyv•
[-1].
cvÆ
); yyv•[-1].cvÆ = 
NuŒch
;

2271 
cmdlöe
 = 
NOLINE
;

2276 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2280 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_COMMA
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2284 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2288 { 
yyv•
[-2].
¨g
 = 
	`li°ish
(yyvsp[-2].arg);

2289 i‡(
yyv•
[-2].
¨g
->
¨g_ty≥
 =
O_ASSIGN
 && yyv•[-2].¨g->
¨g_Àn
 == 1)

2290 
yyv•
[-2].
¨g
->
¨g_ty≥
 = 
O_ITEM
;

2291 i‡(
yyv•
[-2].
¨g
->
¨g_ty≥
 =
O_LIST
)

2292 
yyv•
[0].
¨g
 = 
	`li°ish
(yyvsp[0].arg);

2293 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_ASSIGN
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2297 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_POW
, 2, 
yyv•
[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2301 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
yyv•
[-2].
ivÆ
, 2, yyv•[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2305 { 
yyvÆ
.
¨g
 = 
	`rˇtmaybe
(
	`l
(
	`make_›
(
yyv•
[-2].
ivÆ
, 2, yyv•[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)));}

2309 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_LEFT_SHIFT
, 2, 
yyv•
[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2313 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_RIGHT_SHIFT
, 2, 
yyv•
[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2317 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_BIT_AND
, 2, 
yyv•
[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2321 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_XOR
, 2, 
yyv•
[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2325 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_BIT_OR
, 2, 
yyv•
[-3].¨g, yyv•[0].¨g, 
NuŒ¨g
)); }

2329 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_POW
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2333 { i‡(
yyv•
[-1].
ivÆ
 =
O_REPEAT
)

2334 
yyv•
[-2].
¨g
 = 
	`li°ish
(yyvsp[-2].arg);

2335 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 2, yyv•[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
);

2336 i‡(
yyv•
[-1].
ivÆ
 =
O_REPEAT
) {

2337 i‡(
yyvÆ
.
¨g
[1].
¨g_ty≥
 !
A_EXPR
 ||

2338 
yyvÆ
.
¨g
[1].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 !
O_LIST
)

2339 
yyvÆ
.
¨g
[1].
¨g_Êags
 &~
AF_ARYOK
;

2344 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 2, yyv•[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2348 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_LEFT_SHIFT
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2352 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_RIGHT_SHIFT
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2356 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 2, yyv•[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2360 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 2, yyv•[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2364 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_BIT_AND
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2368 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_XOR
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2372 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_BIT_OR
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2376 { 
¨g4
 = 
NuŒ¨g
;

2377 
yyvÆ
.
¨g
 = 
	`make_›
(
O_F_OR_R
, 4, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2381 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_AND
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2385 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OR
, 2, 
yyv•
[-2].¨g, yyv•[0].¨g, 
NuŒ¨g
); }

2389 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_COND_EXPR
, 3, 
yyv•
[-4].arg, yyvsp[-2].arg, yyvsp[0].arg); }

2393 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
, 
yyv•
[-2].arg, yyvsp[0].arg); }

2397 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_NMATCH
, 
yyv•
[-2].arg, yyvsp[0].arg); }

2401 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2405 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_NEGATE
, 1, 
yyv•
[0].¨g, 
NuŒ¨g
, Nullarg); }

2409 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2413 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_NOT
, 1, 
yyv•
[0].¨g, 
NuŒ¨g
, Nullarg); }

2417 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_COMPLEMENT
, 1, 
yyv•
[0].¨g, 
NuŒ¨g
, Nullarg);}

2421 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_POST
|
AF_UP
,

2422 
	`l
(
	`make_›
(
O_ITEM
,1,
yyv•
[-1].
¨g
,
NuŒ¨g
,Nullarg))); }

2426 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_POST
,

2427 
	`l
(
	`make_›
(
O_ITEM
,1,
yyv•
[-1].
¨g
,
NuŒ¨g
,Nullarg))); }

2431 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_PRE
|
AF_UP
,

2432 
	`l
(
	`make_›
(
O_ITEM
,1,
yyv•
[0].
¨g
,
NuŒ¨g
,Nullarg))); }

2436 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_PRE
,

2437 
	`l
(
	`make_›
(
O_ITEM
,1,
yyv•
[0].
¨g
,
NuŒ¨g
,Nullarg))); }

2441 { 
›¨gs
[
yyv•
[-1].
ivÆ
] = 0;

2442 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 1,

2443 
	`°ab2¨g
(
A_STAB
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)),

2444 
NuŒ¨g
, Nullarg);

2449 { 
›¨gs
[
yyv•
[-1].
ivÆ
] = 1;

2450 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 1, yyv•[0].¨g, 
NuŒ¨g
, Nullarg); }

2454 { 
›¨gs
[
yyv•
[0].
ivÆ
] = (yyv•[0].ivÆ !
O_FTTTY
);

2455 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[0].
ivÆ
, 1,

2456 
	`°ab2¨g
(
A_STAB
,

2457 
yyv•
[0].
ivÆ
 =
O_FTTTY
?
	`°abít
("STDIN",
TRUE
):
def°ab
),

2458 
NuŒ¨g
, Nullarg); }

2462 { 
yyvÆ
.
¨g
 = 
	`l
(
	`loˇlize
(
	`make_›
(
O_ASSIGN
, 1,

2463 
	`loˇlize
(
	`li°ish
(
	`make_li°
(
yyv•
[-1].
¨g
))),

2464 
NuŒ¨g
,Nullarg))); }

2468 { 
yyvÆ
.
¨g
 = 
	`make_li°
(
yyv•
[-2].arg); }

2472 { 
yyvÆ
.
¨g
 = 
	`make_li°
(
yyv•
[-1].arg); }

2476 { 
yyvÆ
.
¨g
 = 
	`make_li°
(
NuŒ¨g
); }

2480 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_DOFILE
,2,
yyv•
[0].¨g,
NuŒ¨g
,Nullarg);

2481 
Æl°abs
 = 
TRUE
;}

2485 { 
yyvÆ
.
¨g
 = 
	`cmd_to_¨g
(
yyv•
[0].
cmdvÆ
); }

2489 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
); }

2493 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAR
,
yyv•
[0].
°abvÆ
); }

2497 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_AELEM
, 2,

2498 
	`°ab2¨g
(
A_STAB
,
	`Ødd
(
yyv•
[-3].
°abvÆ
)), yyv•[-1].
¨g
, 
NuŒ¨g
); }

2502 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_HASH
, 1,

2503 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
),

2504 
NuŒ¨g
, Nullarg); }

2508 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_ARRAY
, 1,

2509 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
),

2510 
NuŒ¨g
, Nullarg); }

2514 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_HELEM
, 2,

2515 
	`°ab2¨g
(
A_STAB
,
	`hadd
(
yyv•
[-3].
°abvÆ
)),

2516 
	`jmaybe
(
yyv•
[-1].
¨g
),

2517 
NuŒ¨g
); }

2521 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_LSLICE
, 3,

2522 
NuŒ¨g
,

2523 
	`li°ish
(
	`make_li°
(
yyv•
[-1].
¨g
)),

2524 
	`li°ish
(
	`make_li°
(
yyv•
[-4].
¨g
))); }

2528 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_LSLICE
, 3,

2529 
NuŒ¨g
,

2530 
	`li°ish
(
	`make_li°
(
yyv•
[-1].
¨g
)),

2531 
NuŒ¨g
); }

2535 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_ASLICE
, 2,

2536 
	`°ab2¨g
(
A_STAB
,
	`Ødd
(
yyv•
[-3].
°abvÆ
)),

2537 
	`li°ish
(
	`make_li°
(
yyv•
[-1].
¨g
)),

2538 
NuŒ¨g
); }

2542 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_HSLICE
, 2,

2543 
	`°ab2¨g
(
A_STAB
,
	`hadd
(
yyv•
[-3].
°abvÆ
)),

2544 
	`li°ish
(
	`make_li°
(
yyv•
[-1].
¨g
)),

2545 
NuŒ¨g
); }

2549 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_DELETE
, 2,

2550 
	`°ab2¨g
(
A_STAB
,
	`hadd
(
yyv•
[-3].
°abvÆ
)),

2551 
	`jmaybe
(
yyv•
[-1].
¨g
),

2552 
NuŒ¨g
); }

2556 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_ARYLEN
,
yyv•
[0].
°abvÆ
); }

2560 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2564 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2568 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2572 { 
yyvÆ
.
¨g
 = 
yyv•
[0].arg; }

2576 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2577 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[-3].
cvÆ
,
TRUE
)),

2578 
	`make_li°
(
yyv•
[-1].
¨g
),

2579 
NuŒ¨g
); 
	`Sa„‰ì
(
yyv•
[-3].
cvÆ
); yyv•[-3].cvÆ = 
NuŒch
;

2580 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; }

2584 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2585 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[-3].
cvÆ
,
TRUE
)),

2586 
	`make_li°
(
yyv•
[-1].
¨g
),

2587 
NuŒ¨g
); 
	`Sa„‰ì
(
yyv•
[-3].
cvÆ
); yyv•[-3].cvÆ = 
NuŒch
; }

2591 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2592 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[-2].
cvÆ
,
TRUE
)),

2593 
	`make_li°
(
NuŒ¨g
),

2594 
NuŒ¨g
);

2595 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; }

2599 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2600 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[-2].
cvÆ
,
TRUE
)),

2601 
	`make_li°
(
NuŒ¨g
),

2602 
NuŒ¨g
); }

2606 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2607 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)),

2608 
NuŒ¨g
,

2609 
NuŒ¨g
); }

2613 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2614 
	`°ab2¨g
(
A_STAB
,
yyv•
[-3].
°abvÆ
),

2615 
	`make_li°
(
yyv•
[-1].
¨g
),

2616 
NuŒ¨g
);

2617 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; }

2621 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2622 
	`°ab2¨g
(
A_STAB
,
yyv•
[-3].
°abvÆ
),

2623 
	`make_li°
(
yyv•
[-1].
¨g
),

2624 
NuŒ¨g
); }

2628 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2629 
	`°ab2¨g
(
A_STAB
,
yyv•
[-2].
°abvÆ
),

2630 
	`make_li°
(
NuŒ¨g
),

2631 
NuŒ¨g
);

2632 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; }

2636 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2637 
	`°ab2¨g
(
A_STAB
,
yyv•
[-2].
°abvÆ
),

2638 
	`make_li°
(
NuŒ¨g
),

2639 
NuŒ¨g
); }

2643 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

2644 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
),

2645 
NuŒ¨g
,

2646 
NuŒ¨g
); }

2650 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[0].
ivÆ
,0,
NuŒ¨g
,Nullarg,Nullarg); }

2654 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
,1,
	`cvÆ_to_¨g
(yyv•[0].
cvÆ
),

2655 
NuŒ¨g
,Nullarg); }

2659 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[0].
ivÆ
,0,
NuŒ¨g
,Nullarg,Nullarg); }

2663 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
,1,yyv•[0].¨g,
NuŒ¨g
,Nullarg); }

2667 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SELECT
, 0, 
NuŒ¨g
, Nullarg, Nullarg);}

2671 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SELECT
, 1, 
yyv•
[-1].¨g, 
NuŒ¨g
, Nullarg); }

2675 { 
¨g4
 = 
yyv•
[-1].
¨g
;

2676 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SSELECT
, 4, 
yyv•
[-4].arg, yyvsp[-3].arg, yyvsp[-2].arg); }

2680 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OPEN
, 2,

2681 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)),

2682 
	`°ab2¨g
(
A_STAB
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)),

2683 
NuŒ¨g
); }

2687 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OPEN
, 2,

2688 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[-1].
cvÆ
,
TRUE
)),

2689 
	`°ab2¨g
(
A_STAB
,
	`°abít
(
yyv•
[-1].
cvÆ
,
TRUE
)),

2690 
NuŒ¨g
); }

2694 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OPEN
, 2,

2695 
yyv•
[-2].
¨g
,

2696 
yyv•
[-1].
¨g
, 
NuŒ¨g
); }

2700 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-3].
ivÆ
, 1,

2701 
yyv•
[-1].
¨g
,

2702 
NuŒ¨g
, Nullarg); }

2706 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 1,

2707 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)),

2708 
NuŒ¨g
, Nullarg);

2709 
	`Sa„‰ì
(
yyv•
[0].
cvÆ
); yyv•[0].cvÆ = 
NuŒch
; }

2713 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 1,

2714 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
),

2715 
NuŒ¨g
, Nullarg); }

2719 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-2].
ivÆ
, 1,

2720 
	`°ab2¨g
(
A_WORD
,
NuŒ°ab
),

2721 
NuŒ¨g
, Nullarg); }

2725 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[0].
ivÆ
, 0,

2726 
NuŒ¨g
, Nullarg, Nullarg); }

2730 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-4].
ivÆ
, 2, yyv•[-2].¨g, yyv•[-1].¨g, 
NuŒ¨g
); }

2734 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-5].
ivÆ
, 3, yyv•[-3].¨g, yyv•[-2].¨g, 
	`make_li°
(yyvsp[-1].arg)); }

2738 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-5].
ivÆ
, 2, yyv•[-3].¨g, yyv•[-1].¨g, 
NuŒ¨g
); }

2742 { 
¨g4
 = 
yyv•
[-1].
¨g
; 
yyvÆ
.¨g = 
	`make_›
(yyv•[-6].
ivÆ
, 4, yyvsp[-4].arg, yyvsp[-3].arg, yyvsp[-2].arg); }

2746 { 
¨g4
 = 
yyv•
[-2].
¨g
; 
¨g5
 = yyvsp[-1].arg;

2747 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-8].
ivÆ
, 5, yyvsp[-6].arg, yyvsp[-4].arg, yyvsp[-3].arg); }

2751 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-4].
ivÆ
, 2,

2752 
yyv•
[-2].
¨g
,

2753 
	`make_li°
(
yyv•
[-1].
¨g
),

2754 
NuŒ¨g
); }

2758 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_POP
, 1, 
yyv•
[0].¨g, 
NuŒ¨g
, Nullarg); }

2762 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_POP
, 1, 
yyv•
[-1].¨g, 
NuŒ¨g
, Nullarg); }

2766 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SHIFT
, 1, 
yyv•
[0].¨g, 
NuŒ¨g
, Nullarg); }

2770 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SHIFT
, 1, 
yyv•
[-1].¨g, 
NuŒ¨g
, Nullarg); }

2774 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SHIFT
, 1,

2775 
	`°ab2¨g
(
A_STAB
,

2776 
	`Ødd
(
	`°abít
(
sublöe
 ? "_" : "ARGV", 
TRUE
))),

2777 
NuŒ¨g
, Nullarg); }

2781 { 
p
[]="/\\s+/";

2782 *
ﬁdíd
 = 
bu„nd
;

2783 
ARG
 *
ﬁd¨g
 = 
yylvÆ
.
¨g
;

2785 
bu„nd
=
p
+5;

2786 ()
	`sˇ≈©
(
p
);

2787 
bu„nd
=
ﬁdíd
;

2788 
yyvÆ
.
¨g
 = 
	`make_•lô
(
def°ab
,
yylvÆ
.¨g,
NuŒ¨g
);

2789 
yylvÆ
.
¨g
 = 
ﬁd¨g
; }

2793 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
, 
yyv•
[-2].arg,

2794 
	`make_•lô
(
def°ab
,
yyv•
[-3].
¨g
,yyvsp[-1].arg));}

2798 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
, 
yyv•
[-1].arg,

2799 
	`make_•lô
(
def°ab
,
yyv•
[-2].
¨g
,
NuŒ¨g
) ); }

2803 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
,

2804 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2805 
	`make_•lô
(
def°ab
,
yyv•
[-1].
¨g
,
NuŒ¨g
) ); }

2809 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-4].
ivÆ
, 2,

2810 
yyv•
[-2].
¨g
,

2811 
	`li°ish
(
	`make_li°
(
yyv•
[-1].
¨g
)),

2812 
NuŒ¨g
); }

2816 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-3].
ivÆ
, 1,

2817 
	`make_li°
(
yyv•
[-1].
¨g
),

2818 
NuŒ¨g
,

2819 
NuŒ¨g
); }

2823 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
yyv•
[-1].
ivÆ
, 1, 
	`fixl
(yyvsp[-1].ival,yyvsp[0].arg),

2824 
NuŒ¨g
, Nullarg)); }

2828 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
yyv•
[0].
ivÆ
, 1,

2829 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2830 
NuŒ¨g
, Nullarg)); }

2834 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[0].
ivÆ
, 0, 
NuŒ¨g
, Nullarg, Nullarg); }

2838 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-2].
ivÆ
, 0, 
NuŒ¨g
, Nullarg, Nullarg); }

2842 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-2].
ivÆ
, 0, 
NuŒ¨g
, Nullarg, Nullarg); }

2846 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-3].
ivÆ
, 1, yyv•[-1].¨g, 
NuŒ¨g
, Nullarg); }

2850 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-4].
ivÆ
, 2, yyv•[-2].¨g, yyv•[-1].¨g, 
NuŒ¨g
);

2851 i‡(
yyv•
[-4].
ivÆ
 =
O_INDEX
 && 
yyvÆ
.
¨g
[2].
¨g_ty≥
 =
A_SINGLE
)

2852 
	`fbmcompûe
(
yyvÆ
.
¨g
[2].
¨g_±r
.
¨g_°r
,0); }

2856 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-4].
ivÆ
, 2, yyv•[-2].¨g, yyv•[-1].¨g, 
NuŒ¨g
);

2857 i‡(
yyv•
[-4].
ivÆ
 =
O_INDEX
 && 
yyvÆ
.
¨g
[2].
¨g_ty≥
 =
A_SINGLE
)

2858 
	`fbmcompûe
(
yyvÆ
.
¨g
[2].
¨g_±r
.
¨g_°r
,0); }

2862 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-5].
ivÆ
, 3, yyvsp[-3].arg, yyvsp[-2].arg, yyvsp[-1].arg);

2863 i‡(
yyv•
[-5].
ivÆ
 =
O_INDEX
 && 
yyvÆ
.
¨g
[2].
¨g_ty≥
 =
A_SINGLE
)

2864 
	`fbmcompûe
(
yyvÆ
.
¨g
[2].
¨g_±r
.
¨g_°r
,0); }

2868 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-5].
ivÆ
, 3, yyvsp[-3].arg, yyvsp[-2].arg, yyvsp[-1].arg); }

2872 { 
¨g4
 = 
yyv•
[-1].
¨g
;

2873 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-6].
ivÆ
, 4, yyvsp[-4].arg, yyvsp[-3].arg, yyvsp[-2].arg); }

2877 { 
¨g4
 = 
yyv•
[-2].
¨g
; 
¨g5
 = yyvsp[-1].arg;

2878 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-7].
ivÆ
, 5, yyvsp[-5].arg, yyvsp[-4].arg, yyvsp[-3].arg); }

2882 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-3].
ivÆ
, 1,

2883 
yyv•
[-1].
¨g
,

2884 
NuŒ¨g
,

2885 
NuŒ¨g
); }

2889 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
, 1,

2890 
yyv•
[0].
¨g
,

2891 
NuŒ¨g
,

2892 
NuŒ¨g
); }

2896 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-5].
ivÆ
, 3, yyvsp[-3].arg, yyvsp[-2].arg, yyvsp[-1].arg); }

2900 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[0].
ivÆ
,2,

2901 
	`°ab2¨g
(
A_WORD
,
NuŒ°ab
),

2902 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2903 
NuŒ¨g
); }

2907 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
,2,

2908 
	`°ab2¨g
(
A_WORD
,
NuŒ°ab
),

2909 
	`maybñi°ish
(
yyv•
[-1].
ivÆ
,
	`make_li°
(yyv•[0].
¨g
)),

2910 
NuŒ¨g
); }

2914 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-1].
ivÆ
,2,

2915 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)),

2916 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2917 
NuŒ¨g
); }

2921 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-2].
ivÆ
,2,

2922 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[-1].
cvÆ
,
TRUE
)),

2923 
	`maybñi°ish
(
yyv•
[-2].
ivÆ
,
	`make_li°
(yyv•[0].
¨g
)),

2924 
NuŒ¨g
); 
	`Sa„‰ì
(
yyv•
[-1].
cvÆ
); yyv•[-1].cvÆ = 
NuŒch
; }

2928 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yyv•
[-2].
ivÆ
,2,

2929 
	`°ab2¨g
(
A_STAB
,
yyv•
[-1].
°abvÆ
),

2930 
	`maybñi°ish
(
yyv•
[-2].
ivÆ
,
	`make_li°
(yyv•[0].
¨g
)),

2931 
NuŒ¨g
); }

2935 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
));

2936 
	`Sa„‰ì
(
yyv•
[0].
cvÆ
); yyv•[0].cvÆ = 
NuŒch
;}

2940 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_WORD
,
	`Ødd
(
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)));

2941 
	`Sa„‰ì
(
yyv•
[0].
cvÆ
); yyv•[0].cvÆ = 
NuŒch
; }

2945 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
); }

2949 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_WORD
,
	`hadd
(
	`°abít
(
yyv•
[0].
cvÆ
,
TRUE
)));

2950 
	`Sa„‰ì
(
yyv•
[0].
cvÆ
); yyv•[0].cvÆ = 
NuŒch
; }

2954 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAB
,
yyv•
[0].
°abvÆ
); }

2958 { *
s
;

2959 
yyvÆ
.
¨g
 = 
	`›_√w
(1);

2960 
yyvÆ
.
¨g
->
¨g_ty≥
 = 
O_ITEM
;

2961 
yyvÆ
.
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

2962 
yyvÆ
.
¨g
[1].
¨g_±r
.
¨g_°r
 = 
	`°r_make
(
yyv•
[0].
cvÆ
,0);

2963 
s
 = 
yyv•
[0].
cvÆ
; *†&& 
	`i¶owî
(*s); s++) ;

2964 i‡(
dow¨n
 && !*
s
)

2965 
	`w¨n
(

2967 
yyv•
[0].
cvÆ
 );

2972 
yys•
 -
yym
;

2973 
yy°©e
 = *
yys•
;

2974 
yyv•
 -
yym
;

2975 
yym
 = 
yylhs
[
yyn
];

2976 i‡(
yy°©e
 =0 && 
yym
 == 0)

2978 #i‡
YYDEBUG


2979 i‡(
yydebug
)

2980 
	`¥ötf
("%sdebug:á·îÑedu˘i⁄, shi·ög from sèã 0Åo\
 %d\n", 
YYPREFIX
, 
YYFINAL
);

2983 
yy°©e
 = 
YYFINAL
;

2984 *++
yys•
 = 
YYFINAL
;

2985 *++
yyv•
 = 
yyvÆ
;

2986 i‡(
yych¨
 < 0)

2988 i‡((
yych¨
 = 
	`yyÀx
()) < 0) yychar = 0;

2989 #i‡
YYDEBUG


2990 i‡(
yydebug
)

2992 
yys
 = 0;

2993 i‡(
yych¨
 <
YYMAXTOKEN
Ë
yys
 = 
yy«me
[yychar];

2994 i‡(!
yys
) yys = "illegal-symbol";

2995 
	`¥ötf
("%sdebug: state %d,Ñeading %d (%s)\n",

2996 
YYPREFIX
, 
YYFINAL
, 
yych¨
, 
yys
);

3000 i‡(
yych¨
 =0Ë
yyac˚±
;

3001 
yylo›
;

3003 i‡((
yyn
 = 
yygödex
[
yym
]Ë&& (yy¿+
yy°©e
) >= 0 &&

3004 
yyn
 <
YYTABLESIZE
 && 
yycheck
[yyn] =
yy°©e
)

3005 
yy°©e
 = 
yyèbÀ
[
yyn
];

3007 
yy°©e
 = 
yydgŸo
[
yym
];

3008 #i‡
YYDEBUG


3009 i‡(
yydebug
)

3010 
	`¥ötf
("%sdebug:á·îÑedu˘i⁄, shi·ög from sèã %d \
 sèã %d\n", 
YYPREFIX
, *
yys•
, 
yy°©e
);

3013 i‡(
yys•
 >
yys¶im
 && 
	`yygrow°ack
())

3015 
yyovîÊow
;

3017 *++
yys•
 = 
yy°©e
;

3018 *++
yyv•
 = 
yyvÆ
;

3019 
yylo›
;

3020 
yyovîÊow
:

3021 
	`yyîr‹
("yacc stack overflow");

3022 
yyab‹t
:

3024 
yyac˚±
:

3026 
	}
}

	@perly.h

1 #i‚de‡
YYERRCODE


2 
	#YYERRCODE
 256

	)

5 
	#WORD
 257

	)

6 
	#APPEND
 258

	)

7 
	#OPEN
 259

	)

8 
	#SSELECT
 260

	)

9 
	#LOOPEX
 261

	)

10 
	#USING
 262

	)

11 
	#FORMAT
 263

	)

12 
	#DO
 264

	)

13 
	#SHIFT
 265

	)

14 
	#PUSH
 266

	)

15 
	#POP
 267

	)

16 
	#LVALFUN
 268

	)

17 
	#WHILE
 269

	)

18 
	#UNTIL
 270

	)

19 
	#IF
 271

	)

20 
	#UNLESS
 272

	)

21 
	#ELSE
 273

	)

22 
	#ELSIF
 274

	)

23 
	#CONTINUE
 275

	)

24 
	#SPLIT
 276

	)

25 
	#FLIST
 277

	)

26 
	#FOR
 278

	)

27 
	#FILOP
 279

	)

28 
	#FILOP2
 280

	)

29 
	#FILOP3
 281

	)

30 
	#FILOP4
 282

	)

31 
	#FILOP22
 283

	)

32 
	#FILOP25
 284

	)

33 
	#FUNC0
 285

	)

34 
	#FUNC1
 286

	)

35 
	#FUNC2
 287

	)

36 
	#FUNC2x
 288

	)

37 
	#FUNC3
 289

	)

38 
	#FUNC4
 290

	)

39 
	#FUNC5
 291

	)

40 
	#HSHFUN
 292

	)

41 
	#HSHFUN3
 293

	)

42 
	#FLIST2
 294

	)

43 
	#SUB
 295

	)

44 
	#FILETEST
 296

	)

45 
	#LOCAL
 297

	)

46 
	#DELETE
 298

	)

47 
	#RELOP
 299

	)

48 
	#EQOP
 300

	)

49 
	#MULOP
 301

	)

50 
	#ADDOP
 302

	)

51 
	#PACKAGE
 303

	)

52 
	#AMPER
 304

	)

53 
	#FORMLIST
 305

	)

54 
	#REG
 306

	)

55 
	#ARYLEN
 307

	)

56 
	#ARY
 308

	)

57 
	#HSH
 309

	)

58 
	#STAR
 310

	)

59 
	#SUBST
 311

	)

60 
	#PATTERN
 312

	)

61 
	#RSTRING
 313

	)

62 
	#TRANS
 314

	)

63 
	#LISTOP
 315

	)

64 
	#DOTDOT
 316

	)

65 
	#OROR
 317

	)

66 
	#ANDAND
 318

	)

67 
	#UNIOP
 319

	)

68 
	#LS
 320

	)

69 
	#RS
 321

	)

70 
	#MATCH
 322

	)

71 
	#NMATCH
 323

	)

72 
	#UMINUS
 324

	)

73 
	#POW
 325

	)

74 
	#INC
 326

	)

75 
	#DEC
 327

	)

77 
	mivÆ
;

78 *
	mcvÆ
;

79 
ARG
 *
	m¨g
;

80 
CMD
 *
	mcmdvÆ
;

81 
compcmd
 
	mcompvÆ
;

82 
STAB
 *
	m°abvÆ
;

83 
FCMD
 *
	mf‹mvÆ
;

84 } 
	tYYSTYPE
;

85 
YYSTYPE
 
yylvÆ
;

86 
YYSTYPE
 
yylvÆ
;

	@regcomp.c

53 
	~"EXTERN.h
"

54 
	~"≥æ.h
"

55 
	~"INTERN.h
"

56 
	~"ªgcomp.h
"

58 #ifde‡
MSDOS


59 #i‡
deföed
(
BUGGY_MSC6
)

61 #¥agm®
›timize
("a",
off
)

63 #¥agm®
›timize
("w",
⁄
 )

67 #i‚de‡
STATIC


68 
	#STATIC
 

	)

71 
	#ISMULT1
(
c
Ë((cË='*' || (cË='+' || (cË='?')

	)

72 
	#ISMULT2
(
s
) ((*s) == '*' || (*s) == '+' || (*s) == '?' || \

73 ((*
s
Ë='{' && 
	`ªgcuæy
(s)))

	)

74 
	#META
 "^$.[()|?+*\\"

	)

76 #ifde‡
SPSTART


77 #unde‡
SPSTART


82 
	#HASWIDTH
 01

	)

83 
	#SIMPLE
 02

	)

84 
	#SPSTART
 04

	)

85 
	#WORST
 0

	)

90 *
	gªg¥ecomp
;

91 *
	gªg∑r£
;

92 *
	gªgxíd
;

93 
	gªg≈¨
;

94 *
	gªgcode
;

95 
	gªgsize
;

96 
	gªgfﬁd
;

97 
	gªgßwbøckë
;

102 
STATIC
 
ªgcuæy
();

103 
STATIC
 *
ªg
();

104 
STATIC
 *
ªgbønch
();

105 
STATIC
 *
ªgpõ˚
();

106 
STATIC
 *
ªg©om
();

107 
STATIC
 *
ªg˛ass
();

108 
STATIC
 *
ªgnode
();

109 
STATIC
 *
ªg™ode
();

110 
STATIC
 
ªgc
();

111 
STATIC
 
ªgö£π
();

112 
STATIC
 
ªgèû
();

113 
STATIC
 
ªg›èû
();

130 
ªgexp
 *

131 
	$ªgcomp
(
exp
,
xíd
,
fﬁd
)

132 *
exp
;

133 *
xíd
;

134 
fﬁd
;

136 
ªgexp
 *
r
;

137 *
sˇn
;

138 
STR
 *
l⁄gish
;

139 
STR
 *
l⁄ge°
;

140 
Àn
;

141 *
fú°
;

142 
Êags
;

143 
backish
;

144 
backe°
;

145 
curback
;

146 
*
	`ß„mÆloc
();

147 
*
	`ßve°r
();

148 
ßw∂us
 = 0;

150 i‡(
exp
 =
NULL
)

151 
	`Áèl
("NULLÑegexpárgument");

154 
ªgfﬁd
 = 
fﬁd
;

155 
ªg∑r£
 = 
exp
;

156 
ªgxíd
 = 
xíd
;

157 
ªg¥ecomp
 = 
	`nßve°r
(
exp
,
xíd
-exp);

158 
ªgßwbøckë
 = 0;

159 
ªg≈¨
 = 1;

160 
ªgsize
 = 0L;

161 
ªgcode
 = &
ªgdummy
;

162 
	`ªgc
(
MAGIC
);

163 i‡(
	`ªg
(0, &
Êags
Ë=
NULL
) {

164 
	`Sa„‰ì
(
ªg¥ecomp
);

165 
ªg¥ecomp
 = 
NuŒch
;

166 (
NULL
);

170 i‡(
ªgsize
 >= 32767L)

171 
	`FAIL
("regexpÅoo big");

174 
	`Newc
(1001, 
r
, (
ªgexp
Ë+ ()
ªgsize
, ,Ñegexp);

175 i‡(
r
 =
NULL
)

176 
	`FAIL
("regexp out of space");

179 i‡(
ªgßwbøckë
)

180 
	`bc›y
(
ªg¥ecomp
,
exp
,
xíd
-exp);

181 
r
->
¥ecomp
 = 
ªg¥ecomp
;

182 
r
->
subba£
 = 
NULL
;

183 
ªg∑r£
 = 
exp
;

184 
ªg≈¨
 = 1;

185 
ªgcode
 = 
r
->
¥ogøm
;

186 
	`ªgc
(
MAGIC
);

187 i‡(
	`ªg
(0, &
Êags
Ë=
NULL
)

188 (
NULL
);

191 
r
->
ªg°¨t
 = 
NuŒ°r
;

192 
r
->
ªg™ch
 = 0;

193 
r
->
ªgmu°
 = 
NuŒ°r
;

194 
r
->
ªgback
 = -1;

195 
r
->
ªg°˛ass
 = 
NuŒch
;

196 
sˇn
 = 
r
->
¥ogøm
+1;

197 i‡(
	`OP
(
	`ªg√xt
(
sˇn
)Ë=
END
) {

198 
sˇn
 = 
	`NEXTOPER
(scan);

200 
fú°
 = 
sˇn
;

201 
	`OP
(
fú°
Ë=
OPEN
 ||

202 (
	`OP
(
fú°
Ë=
BRANCH
 && OP(
	`ªg√xt
(first)) != BRANCH) ||

203 (
	`OP
(
fú°
Ë=
PLUS
) ||

204 (
	`OP
(
fú°
Ë=
CURLY
 && 
	`ARG1
(first) > 0) ) {

205 i‡(
	`OP
(
fú°
Ë=
PLUS
)

206 
ßw∂us
 = 2;

208 
fú°
 +
ªg¨gÀn
[
	`OP
(first)];

209 
fú°
 = 
	`NEXTOPER
(first);

213 i‡(
	`OP
(
fú°
Ë=
EXACTLY
) {

214 
r
->
ªg°¨t
 =

215 
	`°r_make
(
	`OPERAND
(
fú°
)+1,*OPERAND(first));

216 i‡(
r
->
ªg°¨t
->
°r_cur
 > !(
ßw°udy
|
fﬁd
))

217 
	`fbmcompûe
(
r
->
ªg°¨t
,
fﬁd
);

219 i‡((
exp
 = 
	`ödex
(
sim∂e
,
	`OP
(
fú°
))) &&Éxp > simple)

220 
r
->
ªg°˛ass
 = 
fú°
;

221 i‡(
	`OP
(
fú°
Ë=
BOUND
 || OP(fú°Ë=
NBOUND
)

222 
r
->
ªg°˛ass
 = 
fú°
;

223 i‡(
	`OP
(
fú°
Ë=
BOL
 ||

224 (
	`OP
(
fú°
Ë=
STAR
 && OP(
	`NEXTOPER
(fú°)Ë=
ANY
) )

225 
r
->
ªg™ch
 = 1;

226 
r
->
ªg™ch
 |
ßw∂us
;

228 #ifde‡
DEBUGGING


229 i‡(
debug
 & 512)

230 
	`Ârötf
(
°dîr
,"first %dÇext %d offset %d\n",

231 
	`OP
(
fú°
), OP(
	`NEXTOPER
(fú°)), fú° - 
sˇn
);

244 
l⁄gish
 = 
	`°r_make
("",0);

245 
l⁄ge°
 = 
	`°r_make
("",0);

246 
Àn
 = 0;

247 
curback
 = 0;

248 
backish
 = 0;

249 
backe°
 = 0;

250 
	`OP
(
sˇn
Ë!
END
) {

251 i‡(
	`OP
(
sˇn
Ë=
BRANCH
) {

252 i‡(
	`OP
(
	`ªg√xt
(
sˇn
)Ë=
BRANCH
) {

253 
curback
 = -30000;

254 
	`OP
(
sˇn
Ë=
BRANCH
)

255 
sˇn
 = 
	`ªg√xt
(scan);

258 
sˇn
 = 
	`NEXTOPER
(scan);

260 i‡(
	`OP
(
sˇn
Ë=
EXACTLY
) {

261 *
t
;

263 
fú°
 = 
sˇn
;

264 
	`OP
(
t
 = 
	`ªg√xt
(
sˇn
)Ë=
CLOSE
)

265 
sˇn
 = 
t
;

266 i‡(
curback
 - 
backish
 =
Àn
) {

267 
	`°r_nˇt
(
l⁄gish
, 
	`OPERAND
(
fú°
)+1,

268 *
	`OPERAND
(
fú°
));

269 
Àn
 +*
	`OPERAND
(
fú°
);

270 
curback
 +*
	`OPERAND
(
fú°
);

271 
fú°
 = 
	`ªg√xt
(
sˇn
);

273 i‡(*
	`OPERAND
(
fú°
Ë>
Àn
 + (
curback
 >= 0)) {

274 
Àn
 = *
	`OPERAND
(
fú°
);

275 
	`°r_n£t
(
l⁄gish
, 
	`OPERAND
(
fú°
)+1,
Àn
);

276 
backish
 = 
curback
;

277 
curback
 +
Àn
;

278 
fú°
 = 
	`ªg√xt
(
sˇn
);

281 
curback
 +*
	`OPERAND
(
fú°
);

283 i‡(
	`ödex
(
v¨õs
,
	`OP
(
sˇn
))) {

284 
curback
 = -30000;

285 
Àn
 = 0;

286 i‡(
l⁄gish
->
°r_cur
 > 
l⁄ge°
->str_cur) {

287 
	`°r_s£t
(
l⁄ge°
,
l⁄gish
);

288 
backe°
 = 
backish
;

290 
	`°r_n£t
(
l⁄gish
,"",0);

292 i‡(
	`ödex
(
sim∂e
,
	`OP
(
sˇn
))) {

293 
curback
++;

294 
Àn
 = 0;

295 i‡(
l⁄gish
->
°r_cur
 > 
l⁄ge°
->str_cur) {

296 
	`°r_s£t
(
l⁄ge°
,
l⁄gish
);

297 
backe°
 = 
backish
;

299 
	`°r_n£t
(
l⁄gish
,"",0);

301 
sˇn
 = 
	`ªg√xt
(scan);

306 i‡(
l⁄gish
->
°r_cur
 + (
	`OP
(
fú°
Ë=
EOL
Ë> 
l⁄ge°
->str_cur) {

307 
	`°r_s£t
(
l⁄ge°
,
l⁄gish
);

308 
backe°
 = 
backish
;

311 
	`°r_n£t
(
l⁄gish
,"",0);

312 i‡(
l⁄ge°
->
°r_cur


314 (!
r
->
ªg°¨t


316 !
	`fbmö°r
(
r
->
ªg°¨t
->
°r_±r
,

317 
r
->
ªg°¨t
->
°r_±r
 +Ñ->ªg°¨t->
°r_cur
,

318 
l⁄ge°
)

322 
r
->
ªgmu°
 = 
l⁄ge°
;

323 i‡(
backe°
 < 0)

324 
backe°
 = -1;

325 
r
->
ªgback
 = 
backe°
;

326 i‡(
l⁄ge°
->
°r_cur


327 > !(
ßw°udy
 || 
fﬁd
 || 
	`OP
(
fú°
Ë=
EOL
) )

328 
	`fbmcompûe
(
r
->
ªgmu°
,
fﬁd
);

329 
r
->
ªgmu°
->
°r_u
.
°r_u£ful
 = 100;

330 i‡(
	`OP
(
fú°
Ë=
EOL
 && 
l⁄gish
->
°r_cur
)

331 
r
->
ªgmu°
->
°r_pok
 |
SP_TAIL
;

334 
	`°r_‰ì
(
l⁄ge°
);

335 
l⁄ge°
 = 
NuŒ°r
;

337 
	`°r_‰ì
(
l⁄gish
);

340 
r
->
do_fﬁdög
 = 
fﬁd
;

341 
r
->
≈¨ís
 = 
ªg≈¨
 - 1;

342 
	`New
(1002, 
r
->
°¨ç
, 
ªg≈¨
, *);

343 
	`New
(1002, 
r
->
ídp
, 
ªg≈¨
, *);

344 #ifde‡
DEBUGGING


345 i‡(
debug
 & 512)

346 
	`ªgdump
(
r
);

348 (
r
);

349 
	}
}

361 
	$ªg
(
∑ªn
, 
Êagp
)

362 
∑ªn
;

363 *
Êagp
;

365 *
ªt
;

366 *
br
;

367 *
ídî
;

368 
∑∫o
;

369 
Êags
;

371 *
Êagp
 = 
HASWIDTH
;

374 i‡(
∑ªn
) {

375 
∑∫o
 = 
ªg≈¨
;

376 
ªg≈¨
++;

377 
ªt
 = 
	`ªg™ode
(
OPEN
, 
∑∫o
);

379 
ªt
 = 
NULL
;

382 
br
 = 
	`ªgbønch
(&
Êags
);

383 i‡(
br
 =
NULL
)

384 (
NULL
);

385 i‡(
ªt
 !
NULL
)

386 
	`ªgèû
(
ªt
, 
br
);

388 
ªt
 = 
br
;

389 i‡(!(
Êags
&
HASWIDTH
))

390 *
Êagp
 &~
HASWIDTH
;

391 *
Êagp
 |
Êags
&
SPSTART
;

392 *
ªg∑r£
 == '|') {

393 
ªg∑r£
++;

394 
br
 = 
	`ªgbønch
(&
Êags
);

395 i‡(
br
 =
NULL
)

396 (
NULL
);

397 
	`ªgèû
(
ªt
, 
br
);

398 i‡(!(
Êags
&
HASWIDTH
))

399 *
Êagp
 &~
HASWIDTH
;

400 *
Êagp
 |
Êags
&
SPSTART
;

404 i‡(
∑ªn
)

405 
ídî
 = 
	`ªg™ode
(
CLOSE
, 
∑∫o
);

407 
ídî
 = 
	`ªgnode
(
END
);

408 
	`ªgèû
(
ªt
, 
ídî
);

411 
br
 = 
ªt
; b∏!
NULL
; b∏
	`ªg√xt
(br))

412 
	`ªg›èû
(
br
, 
ídî
);

415 i‡(
∑ªn
 && *
ªg∑r£
++ != ')') {

416 
	`FAIL
("unmatched () inÑegexp");

417 } i‡(!
∑ªn
 && 
ªg∑r£
 < 
ªgxíd
) {

418 i‡(*
ªg∑r£
 == ')') {

419 
	`FAIL
("unmatched () inÑegexp");

421 
	`FAIL
("junk onÉnd ofÑegexp");

425 (
ªt
);

426 
	}
}

434 
	$ªgbønch
(
Êagp
)

435 *
Êagp
;

437 *
ªt
;

438 *
chaö
;

439 *
œã°
;

440 
Êags
;

442 *
Êagp
 = 
WORST
;

444 
ªt
 = 
	`ªgnode
(
BRANCH
);

445 
chaö
 = 
NULL
;

446 
ªg∑r£
 < 
ªgxíd
 && *regparse != '|' && *regparse != ')') {

447 
œã°
 = 
	`ªgpõ˚
(&
Êags
);

448 i‡(
œã°
 =
NULL
)

449 (
NULL
);

450 *
Êagp
 |
Êags
&
HASWIDTH
;

451 i‡(
chaö
 =
NULL
)

452 *
Êagp
 |
Êags
&
SPSTART
;

454 
	`ªgèû
(
chaö
, 
œã°
);

455 
chaö
 = 
œã°
;

457 i‡(
chaö
 =
NULL
)

458 (Ë
	`ªgnode
(
NOTHING
);

460 (
ªt
);

461 
	}
}

473 
	$ªgpõ˚
(
Êagp
)

474 *
Êagp
;

476 *
ªt
;

477 
›
;

478 *
√xt
;

479 
Êags
;

480 *
‹ig∑r£
 = 
ªg∑r£
;

481 
‹ig≈¨
 = 
ªg≈¨
;

482 *
max
;

483 
ôî
;

484 
ch
;

486 
ªt
 = 
	`ªg©om
(&
Êags
);

487 i‡(
ªt
 =
NULL
)

488 (
NULL
);

490 
›
 = *
ªg∑r£
;

500 i‡(
›
 ='{' && 
	`ªgcuæy
(
ªg∑r£
)) {

501 
√xt
 = 
ªg∑r£
 + 1;

502 
max
 = 
NuŒch
;

503 
	`isdigô
(*
√xt
) || *next == ',') {

504 i‡(*
√xt
 == ',') {

505 i‡(
max
)

508 
max
 = 
√xt
;

510 
√xt
++;

512 i‡(*
√xt
 == '}') {

513 i‡(!
max
)

514 
max
 = 
√xt
;

515 
ªg∑r£
++;

516 
ôî
 = 
	`©oi
(
ªg∑r£
);

517 i‡(
Êags
&
SIMPLE
) {

518 
tmp
;

520 
	`ªgö£π
(
CURLY
, 
ªt
);

521 i‡(
ôî
 > 0)

522 *
Êagp
 = (
WORST
|
HASWIDTH
);

523 i‡(*
max
 == ',')

524 
max
++;

526 
max
 = 
ªg∑r£
;

527 
tmp
 = 
	`©oi
(
max
);

528 i‡(
tmp
 &&Åm∞< 
ôî
)

529 
	`Áèl
("Can't do {n,m} withÇ > m");

530 i‡(
ªgcode
 !&
ªgdummy
) {

531 #ifde‡
REGALIGN


532 *(*)(
ªt
+3Ë
ôî
;

533 *(*)(
ªt
+5Ë
tmp
;

535 
ªt
[3] = 
ôî
 >> 8;Ñet[4] = iter & 0377;

536 
ªt
[5] = 
tmp
 >> 8;Ñet[6] =Åmp & 0377;

539 
ªg∑r£
 = 
√xt
;

540 
√°_check
;

542 
ªgßwbøckë
++;

543 i‡(
ôî
 > 0) {

544 
ch
 = *
max
;

545 
	`•rötf
(
ªg∑r£
,"%.*d", 
max
-ªg∑r£, 
ôî
 - 1);

546 *
max
 = 
ch
;

547 i‡(*
max
 == ',' && max[1] != '}') {

548 i‡(
	`©oi
(
max
+1) <= 0)

549 
	`Áèl
("Can't do {n,m} withÇ > m");

550 
ch
 = *
√xt
;

551 
	`•rötf
(
max
+1,"%.*d", 
√xt
-(max+1), 
	`©oi
(max+1) - 1);

552 *
√xt
 = 
ch
;

554 i‡(
ôî
 !1 || *
max
 == ',') {

555 
ªg∑r£
 = 
‹ig∑r£
;

556 
ªg≈¨
 = 
‹ig≈¨
;

559 
ªg∑r£
 = 
√xt
;

560 
√°_check
;

562 *
Êagp
 = 
Êags
;

563  
ªt
;

565 i‡(*
max
 == ',') {

566 
max
++;

567 
ôî
 = 
	`©oi
(
max
);

568 i‡(
max
 =
√xt
) {

569 
ªg∑r£
 = 
√xt
;

570 
›
 = '*';

572 i‡(
ôî
 > 0) {

573 
›
 = '?';

574 
ch
 = *
√xt
;

575 
	`•rötf
(
max
,"%.*d", 
√xt
-max, 
ôî
 - 1);

576 *
√xt
 = 
ch
;

577 i‡(
ôî
 == 1)

578 
ªg∑r£
 = 
√xt
;

580 
ªg∑r£
 = 
‹ig∑r£
 - 1;

581 
ªg≈¨
 = 
‹ig≈¨
;

585 
	`Áèl
("Can't do {n,0}");

588 
	`Áèl
("Can't do {0}");

592 i‡(!
	`ISMULT1
(
›
)) {

593 *
Êagp
 = 
Êags
;

594 (
ªt
);

597 i‡(!(
Êags
&
HASWIDTH
Ë&& 
›
 != '?')

598 
	`FAIL
("regexp *+ operand could beÉmpty");

599 *
Êagp
 = (
›
 !'+'Ë? (
WORST
|
SPSTART
Ë: (WORST|
HASWIDTH
);

601 i‡(
›
 ='*' && (
Êags
&
SIMPLE
))

602 
	`ªgö£π
(
STAR
, 
ªt
);

603 i‡(
›
 == '*') {

605 
	`ªgö£π
(
BRANCH
, 
ªt
);

606 
	`ªg›èû
(
ªt
, 
	`ªgnode
(
BACK
));

607 
	`ªg›èû
(
ªt
,Ñet);

608 
	`ªgèû
(
ªt
, 
	`ªgnode
(
BRANCH
));

609 
	`ªgèû
(
ªt
, 
	`ªgnode
(
NOTHING
));

610 } i‡(
›
 ='+' && (
Êags
&
SIMPLE
))

611 
	`ªgö£π
(
PLUS
, 
ªt
);

612 i‡(
›
 == '+') {

614 
√xt
 = 
	`ªgnode
(
BRANCH
);

615 
	`ªgèû
(
ªt
, 
√xt
);

616 
	`ªgèû
(
	`ªgnode
(
BACK
), 
ªt
);

617 
	`ªgèû
(
√xt
, 
	`ªgnode
(
BRANCH
));

618 
	`ªgèû
(
ªt
, 
	`ªgnode
(
NOTHING
));

619 } i‡(
›
 == '?') {

621 
	`ªgö£π
(
BRANCH
, 
ªt
);

622 
	`ªgèû
(
ªt
, 
	`ªgnode
(
BRANCH
));

623 
√xt
 = 
	`ªgnode
(
NOTHING
);

624 
	`ªgèû
(
ªt
, 
√xt
);

625 
	`ªg›èû
(
ªt
, 
√xt
);

627 
√°_check
:

628 
ªg∑r£
++;

629 i‡(
	`ISMULT2
(
ªg∑r£
))

630 
	`FAIL
("nested *?+ inÑegexp");

632 (
ªt
);

633 
	}
}

646 
	$ªg©om
(
Êagp
)

647 *
Êagp
;

649 *
ªt
;

650 
Êags
;

652 *
Êagp
 = 
WORST
;

654 *
ªg∑r£
++) {

656 
ªt
 = 
	`ªgnode
(
BOL
);

659 
ªt
 = 
	`ªgnode
(
EOL
);

662 
ªt
 = 
	`ªgnode
(
ANY
);

663 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

666 
ªt
 = 
	`ªg˛ass
();

667 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

670 
ªt
 = 
	`ªg
(1, &
Êags
);

671 i‡(
ªt
 =
NULL
)

672 (
NULL
);

673 *
Êagp
 |
Êags
&(
HASWIDTH
|
SPSTART
);

677 
	`FAIL
("internal urp inÑegexp");

682 
	`FAIL
("?+* followsÇothing inÑegexp");

685 *
ªg∑r£
) {

687 
ªt
 = 
	`ªgnode
(
ALNUM
);

688 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

689 
ªg∑r£
++;

692 
ªt
 = 
	`ªgnode
(
NALNUM
);

693 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

694 
ªg∑r£
++;

697 
ªt
 = 
	`ªgnode
(
BOUND
);

698 *
Êagp
 |
SIMPLE
;

699 
ªg∑r£
++;

702 
ªt
 = 
	`ªgnode
(
NBOUND
);

703 *
Êagp
 |
SIMPLE
;

704 
ªg∑r£
++;

707 
ªt
 = 
	`ªgnode
(
SPACE
);

708 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

709 
ªg∑r£
++;

712 
ªt
 = 
	`ªgnode
(
NSPACE
);

713 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

714 
ªg∑r£
++;

717 
ªt
 = 
	`ªgnode
(
DIGIT
);

718 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

719 
ªg∑r£
++;

722 
ªt
 = 
	`ªgnode
(
NDIGIT
);

723 *
Êagp
 |
HASWIDTH
|
SIMPLE
;

724 
ªg∑r£
++;

735 
defch¨
;

739 
num
 = 
	`©oi
(
ªg∑r£
);

741 i‡(
num
 > 9 &&Çum >
ªg≈¨
)

742 
defch¨
;

744 
ªt
 = 
	`ªg™ode
(
REF
, 
num
);

745 
	`ißscii
(*
ªg∑r£
Ë&& 
	`isdigô
(*regparse))

746 
ªg∑r£
++;

747 *
Êagp
 |
SIMPLE
;

752 i‡(
ªg∑r£
 >
ªgxíd
)

753 
	`FAIL
("trailing \\ inÑegexp");

756 
defch¨
;

760 
Àn
;

761 
ídî
;

762 *
p
;

763 *
ﬁdp
;

764 
numÀn
;

766 
defch¨
:

767 
ªt
 = 
	`ªgnode
(
EXACTLY
);

768 
	`ªgc
(0);

769 
Àn
=0, 
p
=
ªg∑r£
-1;

770 
Àn
 < 127 && 
p
 < 
ªgxíd
;

771 
Àn
++)

773 
ﬁdp
 = 
p
;

774 *
p
) {

782 
lo›d⁄e
;

784 *++
p
) {

793 --
p
;

794 
lo›d⁄e
;

796 
ídî
 = '\n';

797 
p
++;

800 
ídî
 = '\r';

801 
p
++;

804 
ídî
 = '\t';

805 
p
++;

808 
ídî
 = '\f';

809 
p
++;

812 
ídî
 = '\033';

813 
p
++;

816 
ídî
 = '\007';

817 
p
++;

820 
ídî
 = 
	`sˇnhex
(++
p
, 2, &
numÀn
);

821 
p
 +
numÀn
;

824 
p
++;

825 
ídî
 = *
p
++;

826 i‡(
	`i¶owî
(
ídî
))

827 
ídî
 = 
	`touµî
(ender);

828 
ídî
 ^= 64;

832 i‡(*
p
 == '0' ||

833 (
	`isdigô
(
p
[1]Ë&& 
	`©oi
’Ë>
ªg≈¨
) ) {

834 
ídî
 = 
	`sˇno˘
(
p
, 3, &
numÀn
);

835 
p
 +
numÀn
;

838 --
p
;

839 
lo›d⁄e
;

843 i‡(
p
 >
ªgxíd
)

844 
	`FAIL
("trailing \\ inÑegexp");

847 
ídî
 = *
p
++;

852 
ídî
 = *
p
++;

855 i‡(
ªgfﬁd
 && 
	`isuµî
(
ídî
))

856 
ídî
 = 
	`tﬁowî
(ender);

857 i‡(
	`ISMULT2
(
p
)) {

858 i‡(
Àn
)

859 
p
 = 
ﬁdp
;

861 
Àn
++;

862 
	`ªgc
(
ídî
);

866 
	`ªgc
(
ídî
);

868 
lo›d⁄e
:

869 
ªg∑r£
 = 
p
;

870 i‡(
Àn
 <= 0)

871 
	`FAIL
("internal disaster inÑegexp");

872 *
Êagp
 |
HASWIDTH
;

873 i‡(
Àn
 == 1)

874 *
Êagp
 |
SIMPLE
;

875 i‡(
ªgcode
 !&
ªgdummy
)

876 *
	`OPERAND
(
ªt
Ë
Àn
;

877 
	`ªgc
('\0');

882 (
ªt
);

883 
	}
}

886 
	$ªg£t
(
bôs
,
def
,
c
)

887 *
bôs
;

888 
def
;

889 
c
;

891 i‡(
ªgcode
 =&
ªgdummy
)

893 
c
 &= 255;

894 i‡(
def
)

895 
bôs
[
c
 >> 3] &= ~(1 << (c & 7));

897 
bôs
[
c
 >> 3] |= (1 << (c & 7));

898 
	}
}

901 
	$ªg˛ass
()

903 *
bôs
;

904 
˛ass
;

905 
œ°˛ass
;

906 
ønge
 = 0;

907 *
ªt
;

908 
def
;

909 
numÀn
;

911 
ªt
 = 
	`ªgnode
(
ANYOF
);

912 i‡(*
ªg∑r£
 == '^') {

913 
ªg∑r£
++;

914 
def
 = 0;

916 
def
 = 255;

918 
bôs
 = 
ªgcode
;

919 
˛ass
 = 0; class < 32; class++)

920 
	`ªgc
(
def
);

921 i‡(*
ªg∑r£
 == ']' || *regparse == '-')

922 
skùc⁄d
;

923 
ªg∑r£
 < 
ªgxíd
 && *regparse != ']') {

924 
skùc⁄d
:

925 
˛ass
 = 
	`UCHARAT
(
ªg∑r£
++);

926 i‡(
˛ass
 == '\\') {

927 
˛ass
 = 
	`UCHARAT
(
ªg∑r£
++);

928 
˛ass
) {

930 
˛ass
 = 'a'; class <= 'z'; class++)

931 
	`ªg£t
(
bôs
,
def
,
˛ass
);

932 
˛ass
 = 'A'; class <= 'Z'; class++)

933 
	`ªg£t
(
bôs
,
def
,
˛ass
);

934 
˛ass
 = '0'; class <= '9'; class++)

935 
	`ªg£t
(
bôs
,
def
,
˛ass
);

936 
	`ªg£t
(
bôs
,
def
,'_');

937 
œ°˛ass
 = 1234;

940 
	`ªg£t
(
bôs
,
def
,' ');

941 
	`ªg£t
(
bôs
,
def
,'\t');

942 
	`ªg£t
(
bôs
,
def
,'\r');

943 
	`ªg£t
(
bôs
,
def
,'\f');

944 
	`ªg£t
(
bôs
,
def
,'\n');

945 
œ°˛ass
 = 1234;

948 
˛ass
 = '0'; class <= '9'; class++)

949 
	`ªg£t
(
bôs
,
def
,
˛ass
);

950 
œ°˛ass
 = 1234;

953 
˛ass
 = '\n';

956 
˛ass
 = '\r';

959 
˛ass
 = '\t';

962 
˛ass
 = '\f';

965 
˛ass
 = '\b';

968 
˛ass
 = '\033';

971 
˛ass
 = '\007';

974 
˛ass
 = 
	`sˇnhex
(
ªg∑r£
, 2, &
numÀn
);

975 
ªg∑r£
 +
numÀn
;

978 
˛ass
 = *
ªg∑r£
++;

979 i‡(
	`i¶owî
(
˛ass
))

980 
˛ass
 = 
	`touµî
(class);

981 
˛ass
 ^= 64;

985 
˛ass
 = 
	`sˇno˘
(--
ªg∑r£
, 3, &
numÀn
);

986 
ªg∑r£
 +
numÀn
;

990 i‡(
ønge
) {

991 i‡(
œ°˛ass
 > 
˛ass
)

992 
	`FAIL
("invalid []Ñange inÑegexp");

993 
ønge
 = 0;

996 
œ°˛ass
 = 
˛ass
;

997 i‡(*
ªg∑r£
 ='-' &&Ñeg∑r£+1 < 
ªgxíd
 &&

998 
ªg∑r£
[1] != ']') {

999 
ªg∑r£
++;

1000 
ønge
 = 1;

1004  ; 
œ°˛ass
 <
˛ass
;Üastclass++) {

1005 
	`ªg£t
(
bôs
,
def
,
œ°˛ass
);

1006 i‡(
ªgfﬁd
 && 
	`isuµî
(
œ°˛ass
))

1007 
	`ªg£t
(
bôs
,
def
,
	`tﬁowî
(
œ°˛ass
));

1009 
œ°˛ass
 = 
˛ass
;

1011 i‡(*
ªg∑r£
 != ']')

1012 
	`FAIL
("unmatched [] inÑegexp");

1013 
ªg∑r£
++;

1014  
ªt
;

1015 
	}
}

1021 
	$ªgnode
(
›
)

1022 
›
;

1024 *
ªt
;

1025 *
±r
;

1027 
ªt
 = 
ªgcode
;

1028 i‡(
ªt
 =&
ªgdummy
) {

1029 #ifde‡
REGALIGN


1030 i‡(!(
ªgsize
 & 1))

1031 
ªgsize
++;

1033 
ªgsize
 += 3;

1034 (
ªt
);

1037 #ifde‡
REGALIGN


1038 #i‚de‡
löt


1039 i‡(!(()
ªt
 & 1))

1040 *
ªt
++ = 127;

1043 
±r
 = 
ªt
;

1044 *
±r
++ = 
›
;

1045 *
±r
++ = '\0';

1046 *
±r
++ = '\0';

1047 
ªgcode
 = 
±r
;

1049 (
ªt
);

1050 
	}
}

1056 
	$ªg™ode
(
›
, 
¨g
)

1057 
›
;

1058 
¨g
;

1060 *
ªt
;

1061 *
±r
;

1063 
ªt
 = 
ªgcode
;

1064 i‡(
ªt
 =&
ªgdummy
) {

1065 #ifde‡
REGALIGN


1066 i‡(!(
ªgsize
 & 1))

1067 
ªgsize
++;

1069 
ªgsize
 += 5;

1070 (
ªt
);

1073 #ifde‡
REGALIGN


1074 #i‚de‡
löt


1075 i‡(!(()
ªt
 & 1))

1076 *
ªt
++ = 127;

1079 
±r
 = 
ªt
;

1080 *
±r
++ = 
›
;

1081 *
±r
++ = '\0';

1082 *
±r
++ = '\0';

1083 #ifde‡
REGALIGN


1084 *(*)(
ªt
+3Ë
¨g
;

1086 
ªt
[3] = 
¨g
 >> 8;Ñet[4] =árg & 0377;

1088 
±r
 += 2;

1089 
ªgcode
 = 
±r
;

1091 (
ªt
);

1092 
	}
}

1098 
	$ªgc
(
b
)

1099 
b
;

1101 i‡(
ªgcode
 !&
ªgdummy
)

1102 *
ªgcode
++ = 
b
;

1104 
ªgsize
++;

1105 
	}
}

1113 
	$ªgö£π
(
›
, 
›nd
)

1114 
›
;

1115 *
›nd
;

1117 *
§c
;

1118 *
d°
;

1119 *
∂a˚
;

1120 
off£t
 = (
›
 =
CURLY
 ? 4 : 0);

1122 i‡(
ªgcode
 =&
ªgdummy
) {

1123 #ifde‡
REGALIGN


1124 
ªgsize
 +4 + 
off£t
;

1126 
ªgsize
 +3 + 
off£t
;

1131 
§c
 = 
ªgcode
;

1132 #ifde‡
REGALIGN


1133 
ªgcode
 +4 + 
off£t
;

1135 
ªgcode
 +3 + 
off£t
;

1137 
d°
 = 
ªgcode
;

1138 
§c
 > 
›nd
)

1139 *--
d°
 = *--
§c
;

1141 
∂a˚
 = 
›nd
;

1142 *
∂a˚
++ = 
›
;

1143 *
∂a˚
++ = '\0';

1144 *
∂a˚
++ = '\0';

1145 
off£t
-- > 0)

1146 *
∂a˚
++ = '\0';

1147 
	}
}

1153 
	$ªgèû
(
p
, 
vÆ
)

1154 *
p
;

1155 *
vÆ
;

1157 *
sˇn
;

1158 *
ãmp
;

1159 
off£t
;

1161 i‡(
p
 =&
ªgdummy
)

1165 
sˇn
 = 
p
;

1167 
ãmp
 = 
	`ªg√xt
(
sˇn
);

1168 i‡(
ãmp
 =
NULL
)

1170 
sˇn
 = 
ãmp
;

1173 #ifde‡
REGALIGN


1174 
off£t
 = 
vÆ
 - 
sˇn
;

1175 #i‚de‡
löt


1176 *(*)(
sˇn
+1Ë
off£t
;

1178 
off£t
 = offset;

1181 i‡(
	`OP
(
sˇn
Ë=
BACK
)

1182 
off£t
 = 
sˇn
 - 
vÆ
;

1184 
off£t
 = 
vÆ
 - 
sˇn
;

1185 *(
sˇn
+1Ë(
off£t
>>8)&0377;

1186 *(
sˇn
+2Ë
off£t
&0377;

1188 
	}
}

1194 
	$ªg›èû
(
p
, 
vÆ
)

1195 *
p
;

1196 *
vÆ
;

1199 i‡(
p
 =
NULL
 ||Ö =&
ªgdummy
 || 
	`OP
’Ë!
BRANCH
)

1201 
	`ªgèû
(
	`NEXTOPER
(
p
), 
vÆ
);

1202 
	}
}

1207 
STATIC
 

1208 
	$ªgcuæy
(
s
)

1209 *
s
;

1211 i‡(*
s
++ != '{')

1212  
FALSE
;

1213 i‡(!
	`isdigô
(*
s
))

1214  
FALSE
;

1215 
	`isdigô
(*
s
))

1216 
s
++;

1217 i‡(*
s
 == ',')

1218 
s
++;

1219 
	`isdigô
(*
s
))

1220 
s
++;

1221 i‡(*
s
 != '}')

1222  
FALSE
;

1223  
TRUE
;

1224 
	}
}

1226 #ifde‡
DEBUGGING


1232 
	$ªgdump
(
r
)

1233 
ªgexp
 *
r
;

1235 *
s
;

1236 
›
 = 
EXACTLY
;

1237 *
√xt
;

1240 
s
 = 
r
->
¥ogøm
 + 1;

1241 
›
 !
END
) {

1242 #ifde‡
REGALIGN


1243 i‡(!(()
s
 & 1))

1244 
s
++;

1246 
›
 = 
	`OP
(
s
);

1247 
	`Ârötf
(
°dîr
,"%2d%s", 
s
-
r
->
¥ogøm
, 
	`ªg¥›
(s));

1248 
√xt
 = 
	`ªg√xt
(
s
);

1249 
s
 +
ªg¨gÀn
[
›
];

1250 i‡(
√xt
 =
NULL
)

1251 
	`Ârötf
(
°dîr
,"(0)");

1253 
	`Ârötf
(
°dîr
,"(%d)", (
s
-
r
->
¥ogøm
)+(
√xt
-s));

1254 
s
 += 3;

1255 i‡(
›
 =
ANYOF
) {

1256 
s
 += 32;

1258 i‡(
›
 =
EXACTLY
) {

1260 
s
++;

1261 *
s
 != '\0') {

1262 ()
	`putch¨
(*
s
);

1263 
s
++;

1265 
s
++;

1267 ()
	`putch¨
('\n');

1271 i‡(
r
->
ªg°¨t
)

1272 
	`Ârötf
(
°dîr
,"°¨à`%s' ", 
r
->
ªg°¨t
->
°r_±r
);

1273 i‡(
r
->
ªg°˛ass
)

1274 
	`Ârötf
(
°dîr
,"°˛as†`%s' ", 
	`ªg¥›
(
r
->
ªg°˛ass
));

1275 i‡(
r
->
ªg™ch
 & 1)

1276 
	`Ârötf
(
°dîr
,"anchored ");

1277 i‡(
r
->
ªg™ch
 & 2)

1278 
	`Ârötf
(
°dîr
,"plus ");

1279 i‡(
r
->
ªgmu°
 !
NULL
)

1280 
	`Ârötf
(
°dîr
,"mu° havê\"%s\" back %d ", 
r
->
ªgmu°
->
°r_±r
,

1281 
r
->
ªgback
);

1282 
	`Ârötf
(
°dîr
,"\n");

1283 
	}
}

1289 
	$ªg¥›
(
›
)

1290 *
›
;

1292 *
p
;

1294 (Ë
	`°r˝y
(
buf
, ":");

1296 
	`OP
(
›
)) {

1297 
BOL
:

1298 
p
 = "BOL";

1300 
EOL
:

1301 
p
 = "EOL";

1303 
ANY
:

1304 
p
 = "ANY";

1306 
ANYOF
:

1307 
p
 = "ANYOF";

1309 
BRANCH
:

1310 
p
 = "BRANCH";

1312 
EXACTLY
:

1313 
p
 = "EXACTLY";

1315 
NOTHING
:

1316 
p
 = "NOTHING";

1318 
BACK
:

1319 
p
 = "BACK";

1321 
END
:

1322 
p
 = "END";

1324 
ALNUM
:

1325 
p
 = "ALNUM";

1327 
NALNUM
:

1328 
p
 = "NALNUM";

1330 
BOUND
:

1331 
p
 = "BOUND";

1333 
NBOUND
:

1334 
p
 = "NBOUND";

1336 
SPACE
:

1337 
p
 = "SPACE";

1339 
NSPACE
:

1340 
p
 = "NSPACE";

1342 
DIGIT
:

1343 
p
 = "DIGIT";

1345 
NDIGIT
:

1346 
p
 = "NDIGIT";

1348 
CURLY
:

1349 ()
	`•rötf
(
buf
+
	`°æí
(buf), "CURLY {%d,%d}",

1350 
	`ARG1
(
›
),
	`ARG2
(op));

1351 
p
 = 
NULL
;

1353 
REF
:

1354 ()
	`•rötf
(
buf
+
	`°æí
(buf), "REF%d", 
	`ARG1
(
›
));

1355 
p
 = 
NULL
;

1357 
OPEN
:

1358 ()
	`•rötf
(
buf
+
	`°æí
(buf), "OPEN%d", 
	`ARG1
(
›
));

1359 
p
 = 
NULL
;

1361 
CLOSE
:

1362 ()
	`•rötf
(
buf
+
	`°æí
(buf), "CLOSE%d", 
	`ARG1
(
›
));

1363 
p
 = 
NULL
;

1365 
STAR
:

1366 
p
 = "STAR";

1368 
PLUS
:

1369 
p
 = "PLUS";

1372 
	`FAIL
("corruptedÑegexp opcode");

1374 i‡(
p
 !
NULL
)

1375 (Ë
	`°rˇt
(
buf
, 
p
);

1376 (
buf
);

1377 
	}
}

1380 
	$ªg‰ì
(
r
)

1381 
ªgexp
 *
r
;

1383 i‡(
r
->
¥ecomp
) {

1384 
	`Sa„‰ì
(
r
->
¥ecomp
);

1385 
r
->
¥ecomp
 = 
NuŒch
;

1387 i‡(
r
->
subba£
) {

1388 
	`Sa„‰ì
(
r
->
subba£
);

1389 
r
->
subba£
 = 
NuŒch
;

1391 i‡(
r
->
ªgmu°
) {

1392 
	`°r_‰ì
(
r
->
ªgmu°
);

1393 
r
->
ªgmu°
 = 
NuŒ°r
;

1395 i‡(
r
->
ªg°¨t
) {

1396 
	`°r_‰ì
(
r
->
ªg°¨t
);

1397 
r
->
ªg°¨t
 = 
NuŒ°r
;

1399 
	`Sa„‰ì
(
r
->
°¨ç
);

1400 
	`Sa„‰ì
(
r
->
ídp
);

1401 
	`Sa„‰ì
(
r
);

1402 
	}
}

	@regcomp.h

56 
	#END
 0

	)

57 
	#BOL
 1

	)

58 
	#EOL
 2

	)

59 
	#ANY
 3

	)

60 
	#ANYOF
 4

	)

61 
	#CURLY
 5

	)

62 
	#BRANCH
 6

	)

63 
	#BACK
 7

	)

64 
	#EXACTLY
 8

	)

65 
	#NOTHING
 9

	)

66 
	#STAR
 10

	)

67 
	#PLUS
 11

	)

68 
	#ALNUM
 12

	)

69 
	#NALNUM
 13

	)

70 
	#BOUND
 14

	)

71 
	#NBOUND
 15

	)

72 
	#SPACE
 16

	)

73 
	#NSPACE
 17

	)

74 
	#DIGIT
 18

	)

75 
	#NDIGIT
 19

	)

76 
	#REF
 20

	)

77 
	#OPEN
 21

	)

78 
	#CLOSE
 22

	)

102 #i‚de‡
DOINIT


103 

ªg¨gÀn
[];

105 
	gªg¨gÀn
[] = {0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2};

109 #i‚de‡
DOINIT


110 

v¨õs
[];

112 
	gv¨õs
[] = {
BRANCH
,
BACK
,
STAR
,
PLUS
,
CURLY
,
REF
,0};

116 #i‚de‡
DOINIT


117 

sim∂e
[];

119 
	gsim∂e
[] = {
ANY
,
ANYOF
,
ALNUM
,
NALNUM
,
SPACE
,
NSPACE
,
DIGIT
,
NDIGIT
,0};

122 
EXT
 
	gªgdummy
;

140 #i‚de‡
gould


141 #i‚de‡
¸ay


142 #i‚de‡
ëa10


143 
	#REGALIGN


	)

148 
	#OP
(
p
Ë(*’))

	)

150 #i‚de‡
löt


151 #ifde‡
REGALIGN


152 
	#NEXT
(
p
Ë(*(*)’+1))

	)

153 
	#ARG1
(
p
Ë(*(*)’+3))

	)

154 
	#ARG2
(
p
Ë(*(*)’+5))

	)

156 
	#NEXT
(
p
Ë(((*(’)+1)&0377)<<8Ë+ (*(’)+2)&0377))

	)

157 
	#ARG1
(
p
Ë(((*(’)+3)&0377)<<8Ë+ (*(’)+4)&0377))

	)

158 
	#ARG2
(
p
Ë(((*(’)+5)&0377)<<8Ë+ (*(’)+6)&0377))

	)

161 
	#NEXT
(
p
Ë0

	)

164 
	#OPERAND
(
p
Ë(’Ë+ 3)

	)

166 #ifde‡
REGALIGN


167 
	#NEXTOPER
(
p
Ë(’Ë+ 4)

	)

169 
	#NEXTOPER
(
p
Ë(’Ë+ 3)

	)

172 
	#MAGIC
 0234

	)

177 #i‚de‡
löt


178 #i‚de‡
CHARBITS


179 
	#UCHARAT
(
p
Ë(()*(*)’))

	)

181 
	#UCHARAT
(
p
Ë(()*’)&
CHARBITS
)

	)

184 
	#UCHARAT
(
p
Ë
ªgdummy


	)

187 
	#FAIL
(
m
Ë
	`Áèl
("/%s/: %s",
ªg¥ecomp
,m)

	)

189 *
ªg√xt
();

190 #ifde‡
DEBUGGING


191 
ªgdump
();

192 *
ªg¥›
();

	@regexec.c

52 
	~"EXTERN.h
"

53 
	~"≥æ.h
"

54 
	~"ªgcomp.h
"

56 #i‚de‡
STATIC


57 
	#STATIC
 

	)

60 #ifde‡
DEBUGGING


61 
	gªg«º©e
 = 0;

64 
	#isALNUM
(
c
Ë(
	`ißscii
(cË&& (
	`ißÕha
(cË|| 
	`isdigô
(cË|| c ='_'))

	)

65 
	#isSPACE
(
c
Ë(
	`ißscii
(cË&& 
	`is•a˚
(c))

	)

66 
	#isDIGIT
(
c
Ë(
	`ißscii
(cË&& 
	`isdigô
(c))

	)

67 
	#isUPPER
(
c
Ë(
	`ißscii
(cË&& 
	`isuµî
(c))

	)

76 *
	gªg¥ecomp
;

77 *
	gªgöput
;

78 
	gªg¥ev
;

79 *
	gªgbﬁ
;

80 *
	gªgeﬁ
;

81 **
	gªg°¨ç
;

82 **
	gªgídp
;

83 *
	gªgœ°∑ªn
;

84 *
	gªgtûl
;

86 
	gªgmyp_size
 = 0;

87 **
	gªgmy°¨ç
 = 
NuŒ
(**);

88 **
	gªgmyídp
 = 
NuŒ
(**);

93 
STATIC
 
ªgåy
();

94 
STATIC
 
ªgm©ch
();

95 
STATIC
 
ªgª≥©
();

97 

mu…ûöe
;

103 
	$ªgexec
(
¥og
, 
°rög¨g
, 
°ªnd
, 
°rbeg
, 
möíd
, 
s¸ómî
, 
ß„ba£
)

104 
ªgexp
 *
¥og
;

105 *
°rög¨g
;

106 *
°ªnd
;

107 *
°rbeg
;

108 
möíd
;

109 
STR
 *
s¸ómî
;

110 
ß„ba£
;

112 *
s
;

113 
i
;

114 *
c
;

115 *
°rög
 = 
°rög¨g
;

116 
tmp
;

117 
möÀn
 = 0;

118 
d⁄tbŸhî
 = 0;

121 i‡(
¥og
 =
NULL
 || 
°rög
 == NULL) {

122 
	`Áèl
("NULLÑegexpÖarameter");

126 i‡(
°rög
 =
°rbeg
)

127 
ªg¥ev
 = '\n';

129 
ªg¥ev
 = 
°rög¨g
[-1];

130 i‡(!
mu…ûöe
 && 
ªg¥ev
 == '\n')

131 
ªg¥ev
 = '\0';

133 
ªg¥ecomp
 = 
¥og
->
¥ecomp
;

135 i‡(
	`UCHARAT
(
¥og
->
¥ogøm
Ë!
MAGIC
) {

136 
	`FAIL
("corruptedÑegexpÖrogram");

139 i‡(
¥og
->
do_fﬁdög
) {

140 
ß„ba£
 = 
FALSE
;

141 
i
 = 
°ªnd
 - 
°rög
;

142 
	`New
(1101,
c
,
i
+1,);

143 ()
	`bc›y
(
°rög
, 
c
, 
i
+1);

144 
°rög
 = 
c
;

145 
°ªnd
 = 
°rög
 + 
i
;

146 
s
 = 
°rög
; s < 
°ªnd
; s++)

147 i‡(
	`isUPPER
(*
s
))

148 *
s
 = 
	`tﬁowî
(*s);

152 
s
 = 
°rög
;

153 i‡(
¥og
->
ªgmu°
 !
NuŒ°r
 &&

154 (!(
¥og
->
ªg™ch
 & 1Ë|| (
mu…ûöe
 &&Örog->
ªgback
 >= 0)) ) {

155 i‡(
°rög¨g
 =
°rbeg
 && 
s¸ómî
) {

156 i‡(
s¸ómfú°
[
¥og
->
ªgmu°
->
°r_øª
] >= 0)

157 
s
 = 
	`s¸ómö°r
(
s¸ómî
,
¥og
->
ªgmu°
);

159 
s
 = 
NuŒch
;

161 #i‚de‡
löt


163 
s
 = 
	`fbmö°r
((*)s, (*)
°ªnd
,

164 
¥og
->
ªgmu°
);

166 i‡(!
s
) {

167 ++
¥og
->
ªgmu°
->
°r_u
.
°r_u£ful
;

168 
pho€y
;

170 i‡(
¥og
->
ªgback
 >= 0) {

171 
s
 -
¥og
->
ªgback
;

172 i‡(
s
 < 
°rög
)

173 
s
 = 
°rög
;

174 
möÀn
 = 
¥og
->
ªgback
 +Örog->
ªgmu°
->
°r_cur
;

176 i‡(--
¥og
->
ªgmu°
->
°r_u
.
°r_u£ful
 < 0) {

177 
	`°r_‰ì
(
¥og
->
ªgmu°
);

178 
¥og
->
ªgmu°
 = 
NuŒ°r
;

179 
s
 = 
°rög
;

182 
s
 = 
°rög
;

183 
möÀn
 = 
¥og
->
ªgmu°
->
°r_cur
;

188 
ªgbﬁ
 = 
°rög
;

191 
ªgeﬁ
 = 
°ªnd
;

194 
ªgtûl
 = 
°rög
+
möíd
;

197 i‡–
ªgmyp_size
 < 
¥og
->
≈¨ís
 + 1 ) {

199 
ªgmyp_size
 = 
¥og
->
≈¨ís
 + 1;

200 i‡–
ªgmyp_size
 < 10 )Ñegmyp_size = 10;

201 i‡–
ªgmy°¨ç
 ) {

203 
	`Ríew
(
ªgmy°¨ç
,
ªgmyp_size
,*);

204 
	`Ríew
(
ªgmyídp
, 
ªgmyp_size
,*);

208 
	`New
(1102,
ªgmy°¨ç
,
ªgmyp_size
,*);

209 
	`New
(1102,
ªgmyídp
, 
ªgmyp_size
,*);

216 i‡(
¥og
->
ªg™ch
 & 1) {

217 i‡(
	`ªgåy
(
¥og
, 
°rög
))

218 
gŸ_ô
;

219 i‡(
mu…ûöe
) {

220 i‡(
möÀn
)

221 
d⁄tbŸhî
 = 
möÀn
 - 1;

222 
°ªnd
 -
d⁄tbŸhî
;

224 i‡(
s
 > 
°rög
)

225 
s
--;

226 
s
 < 
°ªnd
) {

227 i‡(*
s
++ == '\n') {

228 i‡(
s
 < 
°ªnd
 && 
	`ªgåy
(
¥og
, s))

229 
gŸ_ô
;

233 
pho€y
;

237 i‡(
¥og
->
ªg°¨t
) {

238 i‡(
¥og
->
ªg™ch
 & 2) {

240 
i
 = 
¥og
->
ªg°¨t
->
°r_±r
[0];

241 
s
 < 
°ªnd
) {

242 i‡(*
s
 =
i
) {

243 i‡(
	`ªgåy
(
¥og
, 
s
))

244 
gŸ_ô
;

245 
s
++;

246 
s
 < 
°ªnd
 && *†=
i
)

247 
s
++;

249 
s
++;

252 i‡(
¥og
->
ªg°¨t
->
°r_pok
 == 3) {

254 #i‚de‡
löt


255 (
s
 = 
	`fbmö°r
((*)s,

256 (*)
°ªnd
, 
¥og
->
ªg°¨t
)Ë!
NULL
)

258 
s
 = 
NuŒch
)

261 i‡(
	`ªgåy
(
¥og
, 
s
))

262 
gŸ_ô
;

263 
s
++;

267 
c
 = 
¥og
->
ªg°¨t
->
°r_±r
;

268 (
s
 = 
	`nö°r
(s, 
°ªnd
,

269 
c
, c + 
¥og
->
ªg°¨t
->
°r_cur
 )Ë!
NULL
) {

270 i‡(
	`ªgåy
(
¥og
, 
s
))

271 
gŸ_ô
;

272 
s
++;

275 
pho€y
;

277 i‡(
c
 = 
¥og
->
ªg°˛ass
) {

278 
d€vîy
 = (
¥og
->
ªg™ch
 & 2) == 0;

280 i‡(
möÀn
)

281 
d⁄tbŸhî
 = 
möÀn
 - 1;

282 
°ªnd
 -
d⁄tbŸhî
;

283 
tmp
 = 1;

285 
	`OP
(
c
)) {

286 
ANYOF
:

287 
c
 = 
	`OPERAND
(c);

288 
s
 < 
°ªnd
) {

289 
i
 = 
	`UCHARAT
(
s
);

290 i‡(!(
c
[
i
 >> 3] & (1 << (i&7)))) {

291 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

292 
gŸ_ô
;

294 
tmp
 = 
d€vîy
;

297 
tmp
 = 1;

298 
s
++;

301 
BOUND
:

302 i‡(
möÀn
)

303 
d⁄tbŸhî
++,
°ªnd
--;

304 i‡(
s
 !
°rög
) {

305 
i
 = 
s
[-1];

306 
tmp
 = 
	`isALNUM
(
i
);

309 
tmp
 = 
	`isALNUM
(
ªg¥ev
);

310 
s
 < 
°ªnd
) {

311 
i
 = *
s
;

312 i‡(
tmp
 !
	`isALNUM
(
i
)) {

313 
tmp
 = !tmp;

314 i‡(
	`ªgåy
(
¥og
, 
s
))

315 
gŸ_ô
;

317 
s
++;

319 i‡((
möÀn
 || 
tmp
Ë&& 
	`ªgåy
(
¥og
,
s
))

320 
gŸ_ô
;

322 
NBOUND
:

323 i‡(
möÀn
)

324 
d⁄tbŸhî
++,
°ªnd
--;

325 i‡(
s
 !
°rög
) {

326 
i
 = 
s
[-1];

327 
tmp
 = 
	`isALNUM
(
i
);

330 
tmp
 = 
	`isALNUM
(
ªg¥ev
);

331 
s
 < 
°ªnd
) {

332 
i
 = *
s
;

333 i‡(
tmp
 !
	`isALNUM
(
i
))

334 
tmp
 = !tmp;

335 i‡(
	`ªgåy
(
¥og
, 
s
))

336 
gŸ_ô
;

337 
s
++;

339 i‡((
möÀn
 || !
tmp
Ë&& 
	`ªgåy
(
¥og
,
s
))

340 
gŸ_ô
;

342 
ALNUM
:

343 
s
 < 
°ªnd
) {

344 
i
 = *
s
;

345 i‡(
	`isALNUM
(
i
)) {

346 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

347 
gŸ_ô
;

349 
tmp
 = 
d€vîy
;

352 
tmp
 = 1;

353 
s
++;

356 
NALNUM
:

357 
s
 < 
°ªnd
) {

358 
i
 = *
s
;

359 i‡(!
	`isALNUM
(
i
)) {

360 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

361 
gŸ_ô
;

363 
tmp
 = 
d€vîy
;

366 
tmp
 = 1;

367 
s
++;

370 
SPACE
:

371 
s
 < 
°ªnd
) {

372 i‡(
	`isSPACE
(*
s
)) {

373 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

374 
gŸ_ô
;

376 
tmp
 = 
d€vîy
;

379 
tmp
 = 1;

380 
s
++;

383 
NSPACE
:

384 
s
 < 
°ªnd
) {

385 i‡(!
	`isSPACE
(*
s
)) {

386 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

387 
gŸ_ô
;

389 
tmp
 = 
d€vîy
;

392 
tmp
 = 1;

393 
s
++;

396 
DIGIT
:

397 
s
 < 
°ªnd
) {

398 i‡(
	`isDIGIT
(*
s
)) {

399 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

400 
gŸ_ô
;

402 
tmp
 = 
d€vîy
;

405 
tmp
 = 1;

406 
s
++;

409 
NDIGIT
:

410 
s
 < 
°ªnd
) {

411 i‡(!
	`isDIGIT
(*
s
)) {

412 i‡(
tmp
 && 
	`ªgåy
(
¥og
, 
s
))

413 
gŸ_ô
;

415 
tmp
 = 
d€vîy
;

418 
tmp
 = 1;

419 
s
++;

425 i‡(
möÀn
)

426 
d⁄tbŸhî
 = 
möÀn
 - 1;

427 
°ªnd
 -
d⁄tbŸhî
;

430 i‡(
	`ªgåy
(
¥og
, 
s
))

431 
gŸ_ô
;

432 } 
s
++ < 
°ªnd
);

436 
pho€y
;

438 
gŸ_ô
:

439 i‡((!
ß„ba£
 && (
¥og
->
≈¨ís
 || 
ßwam≥rßnd
)Ë||Örog->
do_fﬁdög
){

440 
°ªnd
 +
d⁄tbŸhî
;

441 i‡(
ß„ba£
)

442 
s
 = 
°rbeg
;

443 i‡(
°rbeg
 !
¥og
->
subba£
) {

444 
i
 = 
°ªnd
 - 
°rög
 + (
°rög¨g
 - 
°rbeg
);

445 
s
 = 
	`nßve°r
(
°rbeg
,
i
);

446 i‡(
¥og
->
subba£
)

447 
	`Sa„‰ì
(
¥og
->
subba£
);

448 
¥og
->
subba£
 = 
s
;

449 
¥og
->
subíd
 = 
s
+
i
;

452 
s
 = 
¥og
->
subba£
;

453 
s
 +(
°rög¨g
 - 
°rbeg
);

454 
i
 = 0; i <
¥og
->
≈¨ís
; i++) {

455 i‡(
¥og
->
ídp
[
i
]) {

456 
¥og
->
°¨ç
[
i
] = 
s
 + (¥og->°¨ç[i] - 
°rög
);

457 
¥og
->
ídp
[
i
] = 
s
 + (¥og->ídp[i] - 
°rög
);

460 i‡(
¥og
->
do_fﬁdög
)

461 
	`Sa„‰ì
(
°rög
);

465 
pho€y
:

466 i‡(
¥og
->
do_fﬁdög
)

467 
	`Sa„‰ì
(
°rög
);

469 
	}
}

475 
	$ªgåy
(
¥og
, 
°rög
)

476 
ªgexp
 *
¥og
;

477 *
°rög
;

479 
i
;

480 **
•
;

481 **
ï
;

483 
ªgöput
 = 
°rög
;

484 
ªg°¨ç
 = 
¥og
->
°¨ç
;

485 
ªgídp
 = 
¥og
->
ídp
;

486 
ªgœ°∑ªn
 = &
¥og
->
œ°∑ªn
;

487 
¥og
->
œ°∑ªn
 = 0;

489 
•
 = 
¥og
->
°¨ç
;

490 
ï
 = 
¥og
->
ídp
;

491 i‡(
¥og
->
≈¨ís
) {

492 
i
 = 
¥og
->
≈¨ís
; i >= 0; i--) {

493 *
•
++ = 
NULL
;

494 *
ï
++ = 
NULL
;

497 i‡(
	`ªgm©ch
(
¥og
->
¥ogøm
 + 1Ë&& 
ªgöput
 >
ªgtûl
) {

498 
¥og
->
°¨ç
[0] = 
°rög
;

499 
¥og
->
ídp
[0] = 
ªgöput
;

503 
	}
}

520 
	$ªgm©ch
(
¥og
)

521 *
¥og
;

523 *
sˇn
;

524 *
√xt
;

525 
√xtch¨
;

526 
n
;

527 
 
;

528 *
s
;

529 *
locöput
 = 
ªgöput
;

531 
√xtch¨
 = *
locöput
;

532 
sˇn
 = 
¥og
;

533 #ifde‡
DEBUGGING


534 i‡(
sˇn
 !
NULL
 && 
ªg«º©e
)

535 
	`Ârötf
(
°dîr
, "%s(\n", 
	`ªg¥›
(
sˇn
));

537 
sˇn
 !
NULL
) {

538 #ifde‡
DEBUGGING


539 i‡(
ªg«º©e
)

540 
	`Ârötf
(
°dîr
, "%s...\n", 
	`ªg¥›
(
sˇn
));

543 #ifde‡
REGALIGN


544 
√xt
 = 
sˇn
 + 
	`NEXT
(scan);

545 i‡(
√xt
 =
sˇn
)

546 
√xt
 = 
NULL
;

548 
√xt
 = 
	`ªg√xt
(
sˇn
);

551 
	`OP
(
sˇn
)) {

552 
BOL
:

553 i‡(
locöput
 =
ªgbﬁ
 ? 
ªg¥ev
 == '\n' :

554 ((
√xtch¨
 || 
locöput
 < 
ªgeﬁ
) &&

555 
locöput
[-1] == '\n') )

561 
EOL
:

562 i‡((
√xtch¨
 || 
locöput
 < 
ªgeﬁ
) &&Çextchar != '\n')

564 i‡(!
mu…ûöe
 && 
ªgeﬁ
 - 
locöput
 > 1)

568 
ANY
:

569 i‡((
√xtch¨
 ='\0' && 
locöput
 >
ªgeﬁ
) ||

570 
√xtch¨
 == '\n')

572 
√xtch¨
 = *++
locöput
;

574 
EXACTLY
:

575 
s
 = 
	`OPERAND
(
sˇn
);

576 
 
 = *
s
++;

578 i‡(*
s
 !
√xtch¨
)

580 i‡(
ªgeﬁ
 - 
locöput
 < 
 
)

582 i‡(
 
 > 1 && 
	`bcmp
(
s
, 
locöput
,Ün) != 0)

584 
locöput
 +
 
;

585 
√xtch¨
 = *
locöput
;

587 
ANYOF
:

588 
s
 = 
	`OPERAND
(
sˇn
);

589 i‡(
√xtch¨
 < 0)

590 
√xtch¨
 = 
	`UCHARAT
(
locöput
);

591 i‡(
s
[
√xtch¨
 >> 3] & (1 << (nextchar&7)))

593 i‡(!
√xtch¨
 && 
locöput
 >
ªgeﬁ
)

595 
√xtch¨
 = *++
locöput
;

597 
ALNUM
:

598 i‡(!
√xtch¨
)

600 i‡(!
	`isALNUM
(
√xtch¨
))

602 
√xtch¨
 = *++
locöput
;

604 
NALNUM
:

605 i‡(!
√xtch¨
 && 
locöput
 >
ªgeﬁ
)

607 i‡(
	`isALNUM
(
√xtch¨
))

609 
√xtch¨
 = *++
locöput
;

611 
NBOUND
:

612 
BOUND
:

613 i‡(
locöput
 =
ªgbﬁ
)

614 
 
 = 
	`isALNUM
(
ªg¥ev
);

616 
 
 = 
	`isALNUM
(
locöput
[-1]);

617 
n
 = 
	`isALNUM
(
√xtch¨
);

618 i‡((
 
 =
n
Ë=(
	`OP
(
sˇn
Ë=
BOUND
))

621 
SPACE
:

622 i‡(!
√xtch¨
 && 
locöput
 >
ªgeﬁ
)

624 i‡(!
	`isSPACE
(
√xtch¨
))

626 
√xtch¨
 = *++
locöput
;

628 
NSPACE
:

629 i‡(!
√xtch¨
)

631 i‡(
	`isSPACE
(
√xtch¨
))

633 
√xtch¨
 = *++
locöput
;

635 
DIGIT
:

636 i‡(!
	`isDIGIT
(
√xtch¨
))

638 
√xtch¨
 = *++
locöput
;

640 
NDIGIT
:

641 i‡(!
√xtch¨
 && 
locöput
 >
ªgeﬁ
)

643 i‡(
	`isDIGIT
(
√xtch¨
))

645 
√xtch¨
 = *++
locöput
;

647 
REF
:

648 
n
 = 
	`ARG1
(
sˇn
);

649 
s
 = 
ªgmy°¨ç
[
n
];

650 i‡(!
s
)

652 i‡(!
ªgmyídp
[
n
])

654 i‡(
s
 =
ªgmyídp
[
n
])

657 i‡(*
s
 !
√xtch¨
)

659 
 
 = 
ªgmyídp
[
n
] - 
s
;

660 i‡(
locöput
 + 
 
 > 
ªgeﬁ
)

662 i‡(
 
 > 1 && 
	`bcmp
(
s
, 
locöput
,Ün) != 0)

664 
locöput
 +
 
;

665 
√xtch¨
 = *
locöput
;

668 
NOTHING
:

670 
BACK
:

672 
OPEN
:

673 
n
 = 
	`ARG1
(
sˇn
);

674 
ªgöput
 = 
locöput
;

676 
ªgmy°¨ç
[
n
] = 
locöput
;

677 i‡(
	`ªgm©ch
(
√xt
)) {

683 i‡(
ªg°¨ç
[
n
] =
NULL
)

684 
ªg°¨ç
[
n
] = 
locöput
;

689 
CLOSE
: {

690 
n
 = 
	`ARG1
(
sˇn
);

691 
ªgöput
 = 
locöput
;

693 
ªgmyídp
[
n
] = 
locöput
;

694 i‡(
	`ªgm©ch
(
√xt
)) {

700 i‡(
ªgídp
[
n
] =
NULL
) {

701 
ªgídp
[
n
] = 
locöput
;

702 i‡(
n
 > *
ªgœ°∑ªn
)

703 *
ªgœ°∑ªn
 = 
n
;

710 
BRANCH
: {

711 i‡(
	`OP
(
√xt
Ë!
BRANCH
)

712 
√xt
 = 
	`NEXTOPER
(
sˇn
);

715 
ªgöput
 = 
locöput
;

716 i‡(
	`ªgm©ch
(
	`NEXTOPER
(
sˇn
)))

718 #ifde‡
REGALIGN


719 i‡(
n
 = 
	`NEXT
(
sˇn
))

720 
sˇn
 +
n
;

722 
sˇn
 = 
NULL
;

724 
sˇn
 = 
	`ªg√xt
(scan);

726 } 
sˇn
 !
NULL
 && 
	`OP
(sˇnË=
BRANCH
);

732 
CURLY
:

733 
 
 = 
	`ARG1
(
sˇn
);

734 
n
 = 
	`ARG2
(
sˇn
);

735 
sˇn
 = 
	`NEXTOPER
(scan) + 4;

736 
ª≥©
;

737 
STAR
:

738 
 
 = 0;

739 
n
 = 0;

740 
sˇn
 = 
	`NEXTOPER
(scan);

741 
ª≥©
;

742 
PLUS
:

747 
 
 = 1;

748 
n
 = 0;

749 
sˇn
 = 
	`NEXTOPER
(scan);

750 
ª≥©
:

751 i‡(
	`OP
(
√xt
Ë=
EXACTLY
)

752 
√xtch¨
 = *(
	`OPERAND
(
√xt
)+1);

754 
√xtch¨
 = -1000;

755 
ªgöput
 = 
locöput
;

756 
n
 = 
	`ªgª≥©
(
sˇn
,Ç);

757 i‡(!
mu…ûöe
 && 
	`OP
(
√xt
Ë=
EOL
 && 
 
 < 
n
)

758 
 
 = 
n
;

759 
n
 >
 
) {

761 i‡(
√xtch¨
 =-1000 || *
ªgöput
 ==Çextchar)

762 i‡(
	`ªgm©ch
(
√xt
))

765 
n
--;

766 
ªgöput
 = 
locöput
 + 
n
;

769 
END
:

770 
ªgöput
 = 
locöput
;

773 
	`¥ötf
("%x %d\n",
sˇn
,scan[1]);

774 
	`FAIL
("regexp memory corruption");

777 
sˇn
 = 
√xt
;

784 
	`FAIL
("corruptedÑegexpÖointers");

786 #ifde‡
löt


789 
	}
}

800 
	$ªgª≥©
(
p
, 
max
)

801 *
p
;

802 
max
;

804 *
sˇn
;

805 *
›nd
;

806 
c
;

807 *
lo˚ﬁ
 = 
ªgeﬁ
;

809 
sˇn
 = 
ªgöput
;

810 i‡(
max
 && max < 
lo˚ﬁ
 - 
sˇn
)

811 
lo˚ﬁ
 = 
sˇn
 + 
max
;

812 
›nd
 = 
	`OPERAND
(
p
);

813 
	`OP
(
p
)) {

814 
ANY
:

815 
sˇn
 < 
lo˚ﬁ
 && *scan != '\n')

816 
sˇn
++;

818 
EXACTLY
:

819 
›nd
++;

820 
sˇn
 < 
lo˚ﬁ
 && *
›nd
 == *scan)

821 
sˇn
++;

823 
ANYOF
:

824 
c
 = 
	`UCHARAT
(
sˇn
);

825 
sˇn
 < 
lo˚ﬁ
 && !(
›nd
[
c
 >> 3] & (1 << (c & 7)))) {

826 
sˇn
++;

827 
c
 = 
	`UCHARAT
(
sˇn
);

830 
ALNUM
:

831 
sˇn
 < 
lo˚ﬁ
 && 
	`isALNUM
(*scan))

832 
sˇn
++;

834 
NALNUM
:

835 
sˇn
 < 
lo˚ﬁ
 && !
	`isALNUM
(*scan))

836 
sˇn
++;

838 
SPACE
:

839 
sˇn
 < 
lo˚ﬁ
 && 
	`isSPACE
(*scan))

840 
sˇn
++;

842 
NSPACE
:

843 
sˇn
 < 
lo˚ﬁ
 && !
	`isSPACE
(*scan))

844 
sˇn
++;

846 
DIGIT
:

847 
sˇn
 < 
lo˚ﬁ
 && 
	`isDIGIT
(*scan))

848 
sˇn
++;

850 
NDIGIT
:

851 
sˇn
 < 
lo˚ﬁ
 && !
	`isDIGIT
(*scan))

852 
sˇn
++;

855 
	`FAIL
("internalÑegexp foulup");

859 
c
 = 
sˇn
 - 
ªgöput
;

860 
ªgöput
 = 
sˇn
;

862 (
c
);

863 
	}
}

872 
	$ªg√xt
(
p
)

873 *
p
;

875 
off£t
;

877 i‡(
p
 =&
ªgdummy
)

878 (
NULL
);

880 
off£t
 = 
	`NEXT
(
p
);

881 i‡(
off£t
 == 0)

882 (
NULL
);

884 #ifde‡
REGALIGN


885 (
p
+
off£t
);

887 i‡(
	`OP
(
p
Ë=
BACK
)

888 (
p
-
off£t
);

890 (
p
+
off£t
);

892 
	}
}

	@regexp.h

16 
	sªgexp
 {

17 **
	m°¨ç
;

18 **
	mídp
;

19 
STR
 *
	mªg°¨t
;

20 *
	mªg°˛ass
;

21 
STR
 *
	mªgmu°
;

22 
	mªgback
;

23 *
	m¥ecomp
;

24 *
	msubba£
;

25 *
	msubíd
;

26 
	mªg™ch
;

27 
	mdo_fﬁdög
;

28 
	mœ°∑ªn
;

29 
	m≈¨ís
;

30 
	m¥ogøm
[1];

31 } 
	tªgexp
;

33 
ªgexp
 *
ªgcomp
();

34 
ªgexec
();

	@spat.h

14 
	ssˇ≈©
 {

15 
SPAT
 *
	m•©_√xt
;

16 
REGEXP
 *
	m•©_ªgexp
;

17 
ARG
 *
	m•©_ª∂
;

18 
ARG
 *
	m•©_ru¡ime
;

19 
STR
 *
	m•©_sh‹t
;

20 
boﬁ
 
	m•©_Êags
;

21 
	m•©_¶í
;

24 
	#SPAT_USED
 1

	)

25 
	#SPAT_ONCE
 2

	)

26 
	#SPAT_SCANFIRST
 4

	)

27 
	#SPAT_ALL
 8

	)

28 
	#SPAT_SKIPWHITE
 16

	)

29 
	#SPAT_FOLD
 32

	)

30 
	#SPAT_CONST
 64

	)

31 
	#SPAT_KEEP
 128

	)

33 
EXT
 
SPAT
 *
	gcur•©
;

34 
EXT
 
SPAT
 *
	gœ°•©
;

36 
EXT
 *
höt
 
INIT
(
NuŒch
);

38 
	#NuŒ•©
 
	`NuŒ
(
SPAT
*)

	)

	@stab.c

18 
	~"EXTERN.h
"

19 
	~"≥æ.h
"

21 #i‡!
deföed
(
NSIG
Ë|| deföed(
M_UNIX
Ë|| deföed(
M_XENIX
)

22 
	~<sig«l.h
>

25 *
	gsig_«me
[] = {

26 
SIG_NAME
,0

29 #ifde‡
VOIDSIG


30 
	#h™dÀπy≥
 

	)

32 
	#h™dÀπy≥
 

	)

35 
h™dÀπy≥
 
sigh™dÀr
();

37 
	g‹igÆí
 = 0;

39 
STR
 *

40 
	$°ab_°r
(
°r
)

41 
STR
 *
°r
;

43 
STAB
 *
°ab
 = 
°r
->
°r_u
.
°r_°ab
;

44 
∑ªn
;

45 *
s
;

46 
i
;

48 i‡(
°r
->
°r_øª
)

49  
	`°ab_vÆ
(
°ab
);

51 *
°ab
->
°r_magic
->
°r_±r
) {

53 #ifde‡
DEBUGGING


54 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()(
debug
 & 32767));

58 i‡(
ö∂a˚
)

59 
	`°r_£t
(
	`°ab_vÆ
(
°ab
), 
ö∂a˚
);

61 
	`°r_s£t
(
	`°ab_vÆ
(
°ab
),&
°r_undef
);

64 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
ba£time
);

67 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
dow¨n
);

71 i‡(
cur•©
) {

72 
∑ªn
 = 
	`©oi
(
	`°ab_«me
(
°ab
));

73 
gë∑ªn
:

74 i‡(
cur•©
->
•©_ªgexp
 &&

75 
∑ªn
 <
cur•©
->
•©_ªgexp
->
≈¨ís
 &&

76 (
s
 = 
cur•©
->
•©_ªgexp
->
°¨ç
[
∑ªn
]) ) {

77 
i
 = 
cur•©
->
•©_ªgexp
->
ídp
[
∑ªn
] - 
s
;

78 i‡(
i
 >= 0)

79 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),
s
,
i
);

81 
	`°r_s£t
(
	`°ab_vÆ
(
°ab
),&
°r_undef
);

84 
	`°r_s£t
(
	`°ab_vÆ
(
°ab
),&
°r_undef
);

88 i‡(
cur•©
) {

89 
∑ªn
 = 
cur•©
->
•©_ªgexp
->
œ°∑ªn
;

90 
gë∑ªn
;

94 i‡(
cur•©
) {

95 i‡(
cur•©
->
•©_ªgexp
 &&

96 (
s
 = 
cur•©
->
•©_ªgexp
->
subba£
) ) {

97 
i
 = 
cur•©
->
•©_ªgexp
->
°¨ç
[0] - 
s
;

98 i‡(
i
 >= 0)

99 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),
s
,
i
);

101 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),"",0);

104 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),"",0);

108 i‡(
cur•©
) {

109 i‡(
cur•©
->
•©_ªgexp
 &&

110 (
s
 = 
cur•©
->
•©_ªgexp
->
ídp
[0]) ) {

111 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),
s
, 
cur•©
->
•©_ªgexp
->
subíd
 - s);

114 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),"",0);

118 #i‚de‡
löt


119 i‡(
œ°_ö_°ab
) {

120 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
	`°ab_io
(
œ°_ö_°ab
)->
löes
);

125 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
°©usvÆue
);

128 
s
 = 
	`°ab_io
(
curout°ab
)->
t›_«me
;

129 
	`°r_£t
(
	`°ab_vÆ
(
°ab
),
s
);

132 
s
 = 
	`°ab_io
(
curout°ab
)->
fmt_«me
;

133 
	`°r_£t
(
	`°ab_vÆ
(
°ab
),
s
);

135 #i‚de‡
löt


137 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
	`°ab_io
(
curout°ab
)->
∑ge_Àn
);

140 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
	`°ab_io
(
curout°ab
)->
löes_À·
);

143 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
	`°ab_io
(
curout°ab
)->
∑ge
);

149 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
¨yba£
);

152 i‡(!
	`°ab_io
(
curout°ab
))

153 
	`°ab_io
(
curout°ab
Ë
	`°io_√w
();

154 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),

155 ()((
	`°ab_io
(
curout°ab
)->
Êags
 & 
IOF_FLUSH
) != 0) );

158 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),
ofs
,
of¶í
);

161 
	`°r_n£t
(
	`°ab_vÆ
(
°ab
),
‹s
,
‹¶í
);

164 
	`°r_£t
(
	`°ab_vÆ
(
°ab
),
ofmt
);

167 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
), ()
î∫o
);

168 
	`°r_£t
(
	`°ab_vÆ
(
°ab
), 
î∫o
 ? 
	`°ªº‹
(errno) : "");

169 
	`°ab_vÆ
(
°ab
)->
°r_nok
 = 1;

172 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
uid
);

175 
	`°r_num£t
(
	`°ab_vÆ
(
°ab
),()
euid
);

178 
s
 = 
buf
;

179 ()
	`•rötf
(
s
,"%d",()
gid
);

180 
add_groups
;

182 
s
 = 
buf
;

183 ()
	`•rötf
(
s
,"%d",()
egid
);

184 
add_groups
:

185 *
s
) s++;

186 #ifde‡
HAS_GETGROUPS


187 #i‚de‡
NGROUPS


188 
	#NGROUPS
 32

	)

191 
GROUPSTYPE
 
g¨y
[
NGROUPS
];

193 
i
 = 
	`gëgroups
(
NGROUPS
,
g¨y
);

194 --
i
 >= 0) {

195 ()
	`•rötf
(
s
," %ld", ()
g¨y
[
i
]);

196 *
s
) s++;

200 
	`°r_£t
(
	`°ab_vÆ
(
°ab
),
buf
);

208 
ufuncs
 *
uf
 = (ufunc†*)
°r
->
°r_±r
;

210 i‡(
uf
 && uf->
uf_vÆ
)

211 (*
uf
->
uf_vÆ
)(uf->
uf_ödex
, 
	`°ab_vÆ
(
°ab
));

215  
	`°ab_vÆ
(
°ab
);

216 
	}
}

218 
	$°ab£t
(
m°r
,
°r
)

219 
STR
 *
m°r
;

220 
STR
 *
°r
;

222 
STAB
 *
°ab
 = 
m°r
->
°r_u
.
°r_°ab
;

223 *
s
;

224 
i
;

226 
m°r
->
°r_øª
) {

228 
	`my_£ãnv
(
m°r
->
°r_±r
,
	`°r_gë
(
°r
));

231 #ifde‡
TAINT


232 i‡(
	`°rEQ
(
m°r
->
°r_±r
,"PATH")) {

233 *
°ªnd
 = 
°r
->
°r_±r
 + så->
°r_cur
;

235 
s
 = 
°r
->
°r_±r
;

236 
s
 < 
°ªnd
) {

237 
s
 = 
	`˝ytûl
(
tokíbuf
,s,
°ªnd
,':',&
i
);

238 
s
++;

239 i‡(*
tokíbuf
 != '/'

240 || (
	`°©
(
tokíbuf
,&
°©buf
Ë&& (°©buf.
°_mode
 & 2)) )

241 
°r
->
°r_èöãd
 = 2;

247 
s
 = 
	`°r_gë
(
°r
);

248 
i
 = 
	`whichsig
(
m°r
->
°r_±r
);

249 i‡(
	`°rEQ
(
s
,"IGNORE"))

250 #i‚de‡
löt


251 ()
	`sig«l
(
i
,
SIG_IGN
);

255 i‡(
	`°rEQ
(
s
,"DEFAULT") || !*s)

256 ()
	`sig«l
(
i
,
SIG_DFL
);

258 ()
	`sig«l
(
i
,
sigh™dÀr
);

259 i‡(!
	`ödex
(
s
,'\'')) {

260 
	`•rötf
(
tokíbuf
, "maö'%s",
s
);

261 
	`°r_£t
(
°r
,
tokíbuf
);

265 #ifde‡
SOME_DBM


267 
	`hdbm°‹e
(
	`°ab_hash
(
°ab
),
m°r
->
°r_±r
,m°r->
°r_cur
,
°r
);

272 
CMD
 *
cmd
;

274 
i
 = 
	`°r_åue
(
°r
);

275 
°r
 = 
	`a„tch
(
	`°ab_x¨øy
(
°ab
),
	`©oi
(
m°r
->
°r_±r
), 
FALSE
);

276 
cmd
 = 
°r
->
°r_magic
->
°r_u
.
°r_cmd
;

277 
cmd
->
c_Êags
 &~
CF_OPTIMIZE
;

278 
cmd
->
c_Êags
 |
i
? 
CFT_D1
 : 
CFT_D0
;

282 
	`afûl
(
	`°ab_¨øy
(
°ab
), ()
	`°r_gnum
(
°r
Ë- 
¨yba£
);

287 
s
 = 
	`°r_gë
(
°r
);

288 i‡(
	`°rNE
(
s
,"StB"Ë|| 
°r
->
°r_cur
 !(
STBP
)) {

289 i‡(!*
s
) {

290 
STBP
 *
°bp
;

292 ()
	`ßvío°ab
(
°ab
);

293 i‡(
°ab
->
°r_Àn
)

294 
	`Sa„‰ì
(
°ab
->
°r_±r
);

295 
	`Newz
(601,
°bp
, 1, 
STBP
);

296 
°ab
->
°r_±r
 = 
°bp
;

297 
°ab
->
°r_Àn
 = sèb->
°r_cur
 = (
STBP
);

298 
°ab
->
°r_pok
 = 1;

299 
	`°r˝y
(
	`°ab_magic
(
°ab
),"StB");

300 
	`°ab_vÆ
(
°ab
Ë
	`Så_√w
(70,0);

301 
	`°ab_löe
(
°ab
Ë
curcmd
->
c_löe
;

302 
	`°ab_°ash
(
°ab
Ë
curcmd
->
c_°ash
;

305 
°ab
 = 
	`°abít
(
s
,
TRUE
);

306 i‡(!
	`°ab_x¨øy
(
°ab
))

307 
	`Ødd
(
°ab
);

308 i‡(!
	`°ab_xhash
(
°ab
))

309 
	`hadd
(
°ab
);

310 i‡(!
	`°ab_io
(
°ab
))

311 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

313 
	`°r_s£t
(
°r
,
°ab
);

317 
l°rög
 *
l°r
 = (l°rög*)
°r
;

318 *
tmps
;

320 
m°r
->
°r_øª
 = 0;

321 
°r
->
°r_magic
 = 
NuŒ°r
;

322 
tmps
 = 
	`°r_gë
(
°r
);

323 
	`°r_ö£π
(
m°r
,
l°r
->
l°r_off£t
,l°r->
l°r_Àn
,

324 
tmps
,
°r
->
°r_cur
);

329 
	`do_vec£t
(
m°r
,
°r
);

333 *
°ab
->
°r_magic
->
°r_±r
) {

335 #ifde‡
DEBUGGING


336 
debug
 = ()(
	`°r_gnum
(
°r
)) | 32768;

340 i‡(
ö∂a˚
)

341 
	`Sa„‰ì
(
ö∂a˚
);

342 i‡(
°r
->
°r_pok
 || så->
°r_nok
)

343 
ö∂a˚
 = 
	`ßve°r
(
	`°r_gë
(
°r
));

345 
ö∂a˚
 = 
NuŒch
;

348 
ba£time
 = ()
	`°r_gnum
(
°r
);

351 
dow¨n
 = (
boﬁ
)
	`°r_gnum
(
°r
);

354 i‡(
loˇlizög
)

355 
	`ßve•å
((
STR
**)&
œ°_ö_°ab
);

358 
	`Sa„‰ì
(
	`°ab_io
(
curout°ab
)->
t›_«me
);

359 
	`°ab_io
(
curout°ab
)->
t›_«me
 = 
s
 = 
	`ßve°r
(
	`°r_gë
(
°r
));

360 
	`°ab_io
(
curout°ab
)->
t›_°ab
 = 
	`°abít
(
s
,
TRUE
);

363 
	`Sa„‰ì
(
	`°ab_io
(
curout°ab
)->
fmt_«me
);

364 
	`°ab_io
(
curout°ab
)->
fmt_«me
 = 
s
 = 
	`ßve°r
(
	`°r_gë
(
°r
));

365 
	`°ab_io
(
curout°ab
)->
fmt_°ab
 = 
	`°abít
(
s
,
TRUE
);

368 
	`°ab_io
(
curout°ab
)->
∑ge_Àn
 = ()
	`°r_gnum
(
°r
);

371 
	`°ab_io
(
curout°ab
)->
löes_À·
 = ()
	`°r_gnum
(
°r
);

372 i‡(
	`°ab_io
(
curout°ab
)->
löes_À·
 < 0L)

373 
	`°ab_io
(
curout°ab
)->
löes_À·
 = 0L;

376 
	`°ab_io
(
curout°ab
)->
∑ge
 = ()
	`°r_gnum
(
°r
);

379 i‡(!
	`°ab_io
(
curout°ab
))

380 
	`°ab_io
(
curout°ab
Ë
	`°io_√w
();

381 
	`°ab_io
(
curout°ab
)->
Êags
 &~
IOF_FLUSH
;

382 i‡(
	`°r_gnum
(
°r
) != 0.0) {

383 
	`°ab_io
(
curout°ab
)->
Êags
 |
IOF_FLUSH
;

387 
i
 = ()
	`°r_gnum
(
°r
);

388 
mu…ûöe
 = (
i
 != 0);

391 i‡(
°r
->
°r_pok
) {

392 
rs
 = 
	`°r_gë
(
°r
);

393 
r¶í
 = 
°r
->
°r_cur
;

394 i‡(!
r¶í
) {

395 
rs
 = "\n\n";

396 
r¶í
 = 2;

398 
rsch¨
 = 
rs
[
r¶í
 - 1];

401 
rsch¨
 = 0777;

402 
r¶í
 = 1;

406 i‡(
‹s
)

407 
	`Sa„‰ì
(
‹s
);

408 
‹s
 = 
	`ßve°r
(
	`°r_gë
(
°r
));

409 
‹¶í
 = 
°r
->
°r_cur
;

412 i‡(
ofs
)

413 
	`Sa„‰ì
(
ofs
);

414 
ofs
 = 
	`ßve°r
(
	`°r_gë
(
°r
));

415 
of¶í
 = 
°r
->
°r_cur
;

418 i‡(
ofmt
)

419 
	`Sa„‰ì
(
ofmt
);

420 
ofmt
 = 
	`ßve°r
(
	`°r_gë
(
°r
));

423 
¨yba£
 = ()
	`°r_gnum
(
°r
);

426 
°©usvÆue
 = 
	`U_S
(
	`°r_gnum
(
°r
));

429 
î∫o
 = ()
	`°r_gnum
(
°r
);

432 
uid
 = ()
	`°r_gnum
(
°r
);

433 #ifde‡
HAS_SETREUID


434 i‡(
dñaymagic
) {

435 
dñaymagic
 |
DM_REUID
;

439 #ifde‡
HAS_SETRUID


440 i‡(
	`£åuid
((
UIDTYPE
)
uid
) < 0)

441 
uid
 = ()
	`gëuid
();

443 #ifde‡
HAS_SETREUID


444 i‡(
	`£åeuid
((
UIDTYPE
)
uid
, (UIDTYPE)-1) < 0)

445 
uid
 = ()
	`gëuid
();

447 i‡(
uid
 =
euid
)

448 
	`£tuid
(
uid
);

450 
	`Áèl
("setruid()Çot implemented");

455 
euid
 = ()
	`°r_gnum
(
°r
);

456 #ifde‡
HAS_SETREUID


457 i‡(
dñaymagic
) {

458 
dñaymagic
 |
DM_REUID
;

462 #ifde‡
HAS_SETEUID


463 i‡(
	`£ãuid
((
UIDTYPE
)
euid
) < 0)

464 
euid
 = ()
	`gëeuid
();

466 #ifde‡
HAS_SETREUID


467 i‡(
	`£åeuid
((
UIDTYPE
)-1, (UIDTYPE)
euid
) < 0)

468 
euid
 = ()
	`gëeuid
();

470 i‡(
euid
 =
uid
)

471 
	`£tuid
(
euid
);

473 
	`Áèl
("seteuid()Çot implemented");

478 
gid
 = ()
	`°r_gnum
(
°r
);

479 #ifde‡
HAS_SETREGID


480 i‡(
dñaymagic
) {

481 
dñaymagic
 |
DM_REGID
;

485 #ifde‡
HAS_SETRGID


486 ()
	`£ågid
((
GIDTYPE
)
gid
);

488 #ifde‡
HAS_SETREGID


489 ()
	`£åegid
((
GIDTYPE
)
gid
, (GIDTYPE)-1);

491 
	`Áèl
("setrgid()Çot implemented");

496 
egid
 = ()
	`°r_gnum
(
°r
);

497 #ifde‡
HAS_SETREGID


498 i‡(
dñaymagic
) {

499 
dñaymagic
 |
DM_REGID
;

503 #ifde‡
HAS_SETEGID


504 ()
	`£ãgid
((
GIDTYPE
)
egid
);

506 #ifde‡
HAS_SETREGID


507 ()
	`£åegid
((
GIDTYPE
)-1, (GIDTYPE)
egid
);

509 
	`Áèl
("setegid()Çot implemented");

514 
ch›£t
 = 
	`°r_gë
(
°r
);

517 i‡(!
‹igÆí
) {

518 
s
 = 
‹ig¨gv
[0];

519 
s
 +
	`°æí
(s);

521 
i
 = 1; i < 
‹ig¨gc
; i++) {

522 i‡(
‹ig¨gv
[
i
] =
s
 + 1)

523 
s
 +
	`°æí
(++s);

525 i‡(
‹igívú⁄
[0] =
s
 + 1) {

526 
	`my_£ãnv
("NoNeSuCh", 
NuŒch
);

527 
i
 = 0; 
‹igívú⁄
[i]; i++)

528 i‡(
‹igívú⁄
[
i
] =
s
 + 1)

529 
s
 +
	`°æí
(++s);

531 
‹igÆí
 = 
s
 - 
‹ig¨gv
[0];

533 
s
 = 
	`°r_gë
(
°r
);

534 
i
 = 
°r
->
°r_cur
;

535 i‡(
i
 >
‹igÆí
) {

536 
i
 = 
‹igÆí
;

537 
°r
->
°r_cur
 = 
i
;

538 
°r
->
°r_±r
[
i
] = '\0';

539 
	`bc›y
(
s
, 
‹ig¨gv
[0], 
i
);

542 
	`bc›y
(
s
, 
‹ig¨gv
[0], 
i
);

543 
s
 = 
‹ig¨gv
[0]+
i
;

544 *
s
++ = '\0';

545 ++
i
 < 
‹igÆí
)

546 *
s
++ = ' ';

551 
ufuncs
 *
uf
 = (ufunc†*)
°r
->
°r_magic
->
°r_±r
;

553 i‡(
uf
 && uf->
uf_£t
)

554 (*
uf
->
uf_£t
)(uf->
uf_ödex
, 
°r
);

560 
	}
}

562 
	$whichsig
(
sig
)

563 *
sig
;

565 **
sigv
;

567 
sigv
 = 
sig_«me
+1; *sigv; sigv++)

568 i‡(
	`°rEQ
(
sig
,*
sigv
))

569  
sigv
 - 
sig_«me
;

570 #ifde‡
SIGCLD


571 i‡(
	`°rEQ
(
sig
,"CHLD"))

572  
SIGCLD
;

574 #ifde‡
SIGCHLD


575 i‡(
	`°rEQ
(
sig
,"CLD"))

576  
SIGCHLD
;

579 
	}
}

581 
h™dÀπy≥


582 
	$sigh™dÀr
(
sig
)

583 
sig
;

585 
STAB
 *
°ab
;

586 
STR
 *
°r
;

587 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

588 
ﬁdtmps_ba£
 = 
tmps_ba£
;

589 
CSV
 *
csv
;

590 
SUBR
 *
sub
;

592 #ifde‡
OS2


593 
	`sig«l
(
sig
, 
SIG_ACK
);

595 
°ab
 = 
	`°abít
(

596 
	`°r_gë
(
	`h„tch
(
	`°ab_hash
(
sig°ab
),
sig_«me
[
sig
],
	`°æí
(sig_name[sig]),

597 
TRUE
)), TRUE);

598 
sub
 = 
	`°ab_sub
(
°ab
);

599 i‡(!
sub
 && *
sig_«me
[
sig
] ='C' && 
	`ö°r
(sig_name[sig],"LD")) {

600 i‡(
sig_«me
[
sig
][1] == 'H')

601 
°ab
 = 
	`°abít
(
	`°r_gë
(
	`h„tch
(
	`°ab_hash
(
sig°ab
),"CLD",3,
TRUE
)),

602 
TRUE
);

604 
°ab
 = 
	`°abít
(
	`°r_gë
(
	`h„tch
(
	`°ab_hash
(
sig°ab
),"CHLD",4,
TRUE
)),

605 
TRUE
);

606 
sub
 = 
	`°ab_sub
(
°ab
);

608 i‡(!
sub
) {

609 i‡(
dow¨n
)

610 
	`w¨n
("SIG%s handler \"%s\"Çot defined.\n",

611 
sig_«me
[
sig
], 
	`°ab_«me
(
°ab
) );

614 
	`ßvó±r
(&
°ack
);

615 
°r
 = 
	`Så_√w
(15, (
CSV
));

616 
°r
->
°r_°©e
 = 
SS_SCSV
;

617 ()
	`≠ush
(
ßve°ack
,
°r
);

618 
csv
 = (
CSV
*)
°r
->
°r_±r
;

619 
csv
->
sub
 = sub;

620 
csv
->
°ab
 = stab;

621 
csv
->
curcsv
 = curcsv;

622 
csv
->
curcmd
 = curcmd;

623 
csv
->
dïth
 = 
sub
->depth;

624 
csv
->
w™èºay
 = 
G_SCALAR
;

625 
csv
->
haßrgs
 = 
TRUE
;

626 
csv
->
ßvóºay
 = 
	`°ab_x¨øy
(
def°ab
);

627 
csv
->
¨g¨øy
 = 
	`°ab_x¨øy
(
def°ab
Ë
°ack
 = 
	`™ew
(defstab);

628 
°ack
->
¨y_Êags
 = 0;

629 
curcsv
 = 
csv
;

630 
°r
 = 
	`°r_m‹èl
(&
°r_undef
);

631 
	`°r_£t
(
°r
,
sig_«me
[
sig
]);

632 ()
	`≠ush
(
	`°ab_x¨øy
(
def°ab
),
°r
);

633 
sub
->
dïth
++;

634 i‡(
sub
->
dïth
 >= 2) {

635 i‡(
sub
->
dïth
 =100 && 
dow¨n
)

636 
	`w¨n
("Dì∞ªcursi⁄ o¿subroutöê\"%s\"",
	`°ab_«me
(
°ab
));

637 
	`ßvñi°
(
sub
->
toßve
->
¨y_¨øy
,sub->toßve->
¨y_fûl
);

640 
tmps_ba£
 = 
tmps_max
;

641 ()
	`cmd_exec
(
sub
->
cmd
,
G_SCALAR
,0);

642 
tmps_ba£
 = 
ﬁdtmps_ba£
;

644 
	`ª°‹ñi°
(
ﬁdßve
);

645 
	}
}

647 
STAB
 *

648 
	$Ødd
(
°ab
)

649 
STAB
 *
°ab
;

651 i‡(!
	`°ab_x¨øy
(
°ab
))

652 
	`°ab_x¨øy
(
°ab
Ë
	`™ew
(stab);

653  
°ab
;

654 
	}
}

656 
STAB
 *

657 
	$hadd
(
°ab
)

658 
STAB
 *
°ab
;

660 i‡(!
	`°ab_xhash
(
°ab
))

661 
	`°ab_xhash
(
°ab
Ë
	`h√w
(
COEFFSIZE
);

662  
°ab
;

663 
	}
}

665 
STAB
 *

666 
	$f°ab
(
«me
)

667 *
«me
;

669 
tmpbuf
[1200];

670 
STAB
 *
°ab
;

672 
	`•rötf
(
tmpbuf
,"'_<%s", 
«me
);

673 
°ab
 = 
	`°abít
(
tmpbuf
, 
TRUE
);

674 
	`°r_£t
(
	`°ab_vÆ
(
°ab
), 
«me
);

675 i‡(
≥ædb
)

676 ()
	`hadd
(
	`Ødd
(
°ab
));

677  
°ab
;

678 
	}
}

680 
STAB
 *

681 
	$°abít
(
«me
,
add
)

682 *
«me
;

683 
add
;

685 
STAB
 *
°ab
;

686 
STBP
 *
°bp
;

687 
Àn
;

688 *
«míd
;

689 
HASH
 *
°ash
;

690 *
ßwquŸe
 = 
NuŒch
;

691 *
¥evquŸe
 = 
NuŒch
;

692 
boﬁ
 
globÆ
 = 
FALSE
;

694 i‡(
	`ißscii
(*
«me
Ë&& 
	`isuµî
(*name)) {

695 i‡(*
«me
 > 'I') {

696 i‡(*
«me
 == 'S' && (

697 
	`°rEQ
(
«me
, "SIG") ||

698 
	`°rEQ
(
«me
, "STDIN") ||

699 
	`°rEQ
(
«me
, "STDOUT") ||

700 
	`°rEQ
(
«me
, "STDERR") ))

701 
globÆ
 = 
TRUE
;

703 i‡(*
«me
 > 'E') {

704 i‡(*
«me
 ='I' && 
	`°rEQ
(name, "INC"))

705 
globÆ
 = 
TRUE
;

707 i‡(*
«me
 > 'A') {

708 i‡(*
«me
 ='E' && 
	`°rEQ
(name, "ENV"))

709 
globÆ
 = 
TRUE
;

711 i‡(*
«me
 == 'A' && (

712 
	`°rEQ
(
«me
, "ARGV") ||

713 
	`°rEQ
(
«me
, "ARGVOUT") ))

714 
globÆ
 = 
TRUE
;

716 
«míd
 = 
«me
; *namend;Çamend++) {

717 i‡(*
«míd
 == '\'' &&Çamend[1])

718 
¥evquŸe
 = 
ßwquŸe
, sawquŸê
«míd
;

720 i‡(
ßwquŸe
 =
«me
 &&Çame[1]) {

721 
°ash
 = 
def°ash
;

722 
ßwquŸe
 = 
NuŒch
;

723 
«me
++;

725 i‡(!
	`ißÕha
(*
«me
Ë|| 
globÆ
)

726 
°ash
 = 
def°ash
;

727 i‡(
curcmd
 =&
compûög
)

728 
°ash
 = 
cur°ash
;

730 
°ash
 = 
curcmd
->
c_°ash
;

731 i‡(
ßwquŸe
) {

732 
tmpbuf
[256];

733 *
s
, *
d
;

735 *
ßwquŸe
 = '\0';

736 i‡(
s
 = 
¥evquŸe
) {

737 
	`°∫˝y
(
tmpbuf
,
«me
,
s
-name+1);

738 
d
 = 
tmpbuf
+(
s
-
«me
+1);

739 *
d
++ = '_';

740 
	`°r˝y
(
d
,
s
+1);

743 *
tmpbuf
 = '_';

744 
	`°r˝y
(
tmpbuf
+1,
«me
);

746 
°ab
 = 
	`°abít
(
tmpbuf
,
TRUE
);

747 i‡(!(
°ash
 = 
	`°ab_xhash
(
°ab
)))

748 
°ash
 = 
	`°ab_xhash
(
°ab
Ë
	`h√w
(0);

749 i‡(!
°ash
->
tbl_«me
)

750 
°ash
->
tbl_«me
 = 
	`ßve°r
(
«me
);

751 
«me
 = 
ßwquŸe
+1;

752 *
ßwquŸe
 = '\'';

754 
Àn
 = 
«míd
 - 
«me
;

755 
°ab
 = (
STAB
*)
	`h„tch
(
°ash
,
«me
,
Àn
,
add
);

756 i‡(
°ab
 =(
STAB
*)&
°r_undef
)

757  
NuŒ°ab
;

758 i‡(
°ab
->
°r_pok
) {

759 
°ab
->
°r_pok
 |
SP_MULTI
;

760  
°ab
;

763 i‡(
°ab
->
°r_Àn
)

764 
	`Sa„‰ì
(
°ab
->
°r_±r
);

765 
	`Newz
(602,
°bp
, 1, 
STBP
);

766 
°ab
->
°r_±r
 = 
°bp
;

767 
°ab
->
°r_Àn
 = sèb->
°r_cur
 = (
STBP
);

768 
°ab
->
°r_pok
 = 1;

769 
	`°r˝y
(
	`°ab_magic
(
°ab
),"StB");

770 
	`°ab_vÆ
(
°ab
Ë
	`Så_√w
(72,0);

771 
	`°ab_löe
(
°ab
Ë
curcmd
->
c_löe
;

772 
	`°r_magic
(
°ab
,°ab,'*',
«me
,
Àn
);

773 
	`°ab_°ash
(
°ab
Ë
°ash
;

774 i‡(
	`isdigô
(*
«me
) && *name != '0') {

775 
	`°ab_Êags
(
°ab
Ë
SF_VMAGIC
;

776 
	`°r_magic
(
	`°ab_vÆ
(
°ab
), sèb, 0, 
NuŒch
, 0);

778  
°ab
;

780 
	}
}

782 
	$°ab_fuŒ«me
(
°r
,
°ab
)

783 
STR
 *
°r
;

784 
STAB
 *
°ab
;

786 
HASH
 *
tb
 = 
	`°ab_°ash
(
°ab
);

788 i‡(!
tb
)

790 
	`°r_£t
(
°r
,
tb
->
tbl_«me
);

791 
	`°r_nˇt
(
°r
,"'", 1);

792 
	`°r_sˇt
(
°r
,
°ab
->
°r_magic
);

793 
	}
}

795 
STIO
 *

796 
	$°io_√w
()

798 
STIO
 *
°io
;

800 
	`Newz
(603,
°io
,1,
STIO
);

801 
°io
->
∑ge_Àn
 = 60;

802  
°io
;

803 
	}
}

805 
	$°ab_check
(
mö
,
max
)

806 
mö
;

807 
max
;

809 
HENT
 *
íåy
;

810 
i
;

811 
STAB
 *
°ab
;

813 
i
 = 
mö
; i <
max
; i++) {

814 
íåy
 = 
def°ash
->
tbl_¨øy
[
i
];É¡ry;É¡ry =É¡ry->
hít_√xt
) {

815 
°ab
 = (
STAB
*)
íåy
->
hít_vÆ
;

816 i‡(
°ab
->
°r_pok
 & 
SP_MULTI
)

818 
curcmd
->
c_löe
 = 
	`°ab_löe
(
°ab
);

819 
	`w¨n
("PossibÀÅypo: \"%s\"", 
	`°ab_«me
(
°ab
));

822 
	}
}

824 
	ggísym
 = 0;

826 
STAB
 *

827 
	$gí°ab
()

829 ()
	`•rötf
(
tokíbuf
,"_GEN_%d",
gísym
++);

830  
	`°abít
(
tokíbuf
,
TRUE
);

831 
	}
}

836 
	$°ab_˛ór
(
°ab
)

837 
STAB
 *
°ab
;

839 
STIO
 *
°io
;

840 
SUBR
 *
sub
;

842 
	`a‰ì
(
	`°ab_x¨øy
(
°ab
));

843 
	`°ab_x¨øy
(
°ab
Ë
	`NuŒ
(
ARRAY
*);

844 ()
	`h‰ì
(
	`°ab_xhash
(
°ab
), 
FALSE
);

845 
	`°ab_xhash
(
°ab
Ë
	`NuŒ
(
HASH
*);

846 
	`°r_‰ì
(
	`°ab_vÆ
(
°ab
));

847 
	`°ab_vÆ
(
°ab
Ë
NuŒ°r
;

848 i‡(
°io
 = 
	`°ab_io
(
°ab
)) {

849 
	`do_˛o£
(
°ab
,
FALSE
);

850 
	`Sa„‰ì
(
°io
->
t›_«me
);

851 
	`Sa„‰ì
(
°io
->
fmt_«me
);

853 i‡(
sub
 = 
	`°ab_sub
(
°ab
)) {

854 
	`a‰ì
(
sub
->
toßve
);

855 
	`cmd_‰ì
(
sub
->
cmd
);

857 
	`Sa„‰ì
(
°ab
->
°r_±r
);

858 
°ab
->
°r_±r
 = 
	`NuŒ
(
STBP
*);

859 
°ab
->
°r_Àn
 = 0;

860 
°ab
->
°r_cur
 = 0;

861 
	}
}

863 #i‡
deföed
(
CRIPPLED_CC
Ë&& (deföed(
iAPX286
Ë|| deföed(
M_I286
Ë|| deföed(
I80286
))

864 
	#MICROPORT


	)

867 #ifdef 
MICROPORT


868 
ARRAY
 *
	$°ab_¨øy
(
°ab
)

869 
STAB
 *
°ab
;

871 i‡(((
STBP
*)(
°ab
->
°r_±r
))->
°bp_¨øy
)

872  ((
STBP
*)(
°ab
->
°r_±r
))->
°bp_¨øy
;

874  ((
STBP
*)(
	`Ødd
(
°ab
)->
°r_±r
))->
°bp_¨øy
;

875 
	}
}

877 
HASH
 *
	$°ab_hash
(
°ab
)

878 
STAB
 *
°ab
;

880 i‡(((
STBP
*)(
°ab
->
°r_±r
))->
°bp_hash
)

881  ((
STBP
*)(
°ab
->
°r_±r
))->
°bp_hash
;

883  ((
STBP
*)(
	`hadd
(
°ab
)->
°r_±r
))->
°bp_hash
;

884 
	}
}

	@stab.h

14 
	s°ab±rs
 {

15 
	m°bp_magic
[4];

16 
STR
 *
	m°bp_vÆ
;

17 
°io
 *
	m°bp_io
;

18 
FCMD
 *
	m°bp_f‹m
;

19 
ARRAY
 *
	m°bp_¨øy
;

20 
HASH
 *
	m°bp_hash
;

21 
HASH
 *
	m°bp_°ash
;

22 
SUBR
 *
	m°bp_sub
;

23 
	m°bp_œ°ex¥
;

24 
löe_t
 
	m°bp_löe
;

25 
	m°bp_Êags
;

28 #i‡
deföed
(
CRIPPLED_CC
Ë&& (deföed(
iAPX286
Ë|| deföed(
M_I286
Ë|| deföed(
I80286
))

29 
	#MICROPORT


	)

32 
	#°ab_magic
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_magic
)

	)

33 
	#°ab_vÆ
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_vÆ
)

	)

34 
	#°ab_io
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_io
)

	)

35 
	#°ab_f‹m
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_f‹m
)

	)

36 
	#°ab_x¨øy
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_¨øy
)

	)

37 #ifdef 
MICROPORT


38 
ARRAY
 *
°ab_¨øy
();

40 
	#°ab_¨øy
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_¨øy
 ? \

41 ((
STBP
*)(
°ab
->
°r_±r
))->
°bp_¨øy
 : \

42 ((
STBP
*)(
	`Ødd
(
°ab
)->
°r_±r
))->
°bp_¨øy
)

	)

44 
	#°ab_xhash
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_hash
)

	)

45 #ifdef 
MICROPORT


46 
HASH
 *
°ab_hash
();

48 
	#°ab_hash
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_hash
 ? \

49 ((
STBP
*)(
°ab
->
°r_±r
))->
°bp_hash
 : \

50 ((
STBP
*)(
	`hadd
(
°ab
)->
°r_±r
))->
°bp_hash
)

	)

52 
	#°ab_°ash
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_°ash
)

	)

53 
	#°ab_sub
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_sub
)

	)

54 
	#°ab_œ°ex¥
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_œ°ex¥
)

	)

55 
	#°ab_löe
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_löe
)

	)

56 
	#°ab_Êags
(
°ab
Ë(((
STBP
*)(°ab->
°r_±r
))->
°bp_Êags
)

	)

57 
	#°ab_«me
(
°ab
Ë(°ab->
°r_magic
->
°r_±r
)

	)

59 
	#SF_VMAGIC
 1

	)

60 
	#SF_MULTI
 2

	)

62 
	s°io
 {

63 
FILE
 *
	miÂ
;

64 
FILE
 *
	moÂ
;

65 #ifde‡
HAS_READDIR


66 
DIR
 *
	mdúp
;

68 
	mlöes
;

69 
	m∑ge
;

70 
	m∑ge_Àn
;

71 
	mlöes_À·
;

72 *
	mt›_«me
;

73 
STAB
 *
	mt›_°ab
;

74 *
	mfmt_«me
;

75 
STAB
 *
	mfmt_°ab
;

76 
	msub¥o˚ss
;

77 
	mty≥
;

78 
	mÊags
;

81 
	#IOF_ARGV
 1

	)

82 
	#IOF_START
 2

	)

83 
	#IOF_FLUSH
 4

	)

85 
	ssub
 {

86 
CMD
 *
	mcmd
;

87 (*
	mu£rsub
)();

88 
	mu£rödex
;

89 
STAB
 *
	mfûe°ab
;

90 
	mdïth
;

91 
ARRAY
 *
	mtoßve
;

94 
	#NuŒ°ab
 
	`NuŒ
(
STAB
*)

	)

96 
	#STAB_STR
(
s
Ë(
tmp°ab
 = (s), 
	`°ab_Êags
—mp°abË& 
SF_VMAGIC
 ? 
	`°ab_°r
(
	`°ab_vÆ
—mp°ab)->
°r_magic
Ë: sèb_vÆ—mp°ab))

	)

97 
	#STAB_GET
(
s
Ë(
tmp°ab
 = (s), 
	`°r_gë
(
	`°ab_Êags
—mp°abË& 
SF_VMAGIC
 ? 
	`°ab_°r
—mp°ab->
°r_magic
Ë: 
	`°ab_vÆ
—mp°ab)))

	)

98 
	#STAB_GNUM
(
s
Ë(
tmp°ab
 = (s), 
	`°r_gnum
(
	`°ab_Êags
—mp°abË& 
SF_VMAGIC
 ? 
	`°ab_°r
—mp°ab->
°r_magic
Ë: 
	`°ab_vÆ
—mp°ab)))

	)

100 
EXT
 
STAB
 *
	gtmp°ab
;

102 
EXT
 
STAB
 *
	g°ab_ödex
[128];

104 
EXT
 
	g°©usvÆue
;

106 
EXT
 
dñaymagic
 
INIT
(0);

107 
	#DM_DELAY
 1

	)

108 
	#DM_REUID
 2

	)

109 
	#DM_REGID
 4

	)

111 
STAB
 *
Ødd
();

112 
STAB
 *
hadd
();

113 
STAB
 *
f°ab
();

	@str.c

19 
	~"EXTERN.h
"

20 
	~"≥æ.h
"

21 
	~"≥æy.h
"

23 #i‚de‡
°r_gë


25 
	$°r_gë
(
°r
)

26 
STR
 *
°r
;

28 #ifde‡
TAINT


29 
èöãd
 |
°r
->
°r_èöãd
;

31  
°r
->
°r_pok
 ? så->
°r_±r
 : 
	`°r_2±r
(str);

32 
	}
}

38 #i‚de‡
°r_åue


39 
	$°r_åue
(
Så
)

40 
STR
 *
Så
;

42 i‡(
Så
->
°r_pok
) {

43 i‡(*
Så
->
°r_±r
 > '0' ||

44 
Så
->
°r_cur
 > 1 ||

45 (
Så
->
°r_cur
 && *Så->
°r_±r
 != '0'))

49 i‡(
Så
->
°r_nok
)

50  (
Så
->
°r_u
.
°r_nvÆ
 != 0.0);

52 
	}
}

55 #i‚de‡
°r_gnum


56 
	$°r_gnum
(
Så
)

57 
STR
 *
Så
;

59 #ifde‡
TAINT


60 
èöãd
 |
Så
->
°r_èöãd
;

62 i‡(
Så
->
°r_nok
)

63  
Så
->
°r_u
.
°r_nvÆ
;

64  
	`°r_2num
(
Så
);

65 
	}
}

70 
	$°r_grow
(
°r
,
√wÀn
)

71 
STR
 *
°r
;

72 #i‚de‡
MSDOS


73 
√wÀn
;

75 
√wÀn
;

78 *
s
 = 
°r
->
°r_±r
;

80 #ifde‡
MSDOS


81 i‡(
√wÀn
 >= 0x10000) {

82 
	`Ârötf
(
°dîr
, "AŒoˇti⁄Åoÿœrge: %lx\n", 
√wÀn
);

83 
	`exô
(1);

86 i‡(
°r
->
°r_°©e
 =
SS_INCR
) {

87 
°r
->
°r_Àn
 +°r->
°r_u
.
°r_u£ful
;

88 
°r
->
°r_±r
 -°r->
°r_u
.
°r_u£ful
;

89 
°r
->
°r_u
.
°r_u£ful
 = 0L;

90 
	`bc›y
(
s
, 
°r
->
°r_±r
, så->
°r_cur
+1);

91 
s
 = 
°r
->
°r_±r
;

92 
°r
->
°r_°©e
 = 
SS_NORM
;

93 i‡(
√wÀn
 > 
°r
->
°r_Àn
)

94 
√wÀn
 +10 * (√wÀ¿- 
°r
->
°r_cur
);

96 i‡(
√wÀn
 > 
°r
->
°r_Àn
) {

97 i‡(
°r
->
°r_Àn
)

98 
	`Ríew
(
s
,
√wÀn
,);

100 
	`New
(703,
s
,
√wÀn
,);

101 
°r
->
°r_±r
 = 
s
;

102 
°r
->
°r_Àn
 = 
√wÀn
;

104  
s
;

105 
	}
}

107 
	$°r_num£t
(
°r
,
num
)

108 
STR
 *
°r
;

109 
num
;

111 i‡(
°r
->
°r_pok
) {

112 
°r
->
°r_pok
 = 0;

113 i‡(
°r
->
°r_°©e
 =
SS_INCR
)

114 
	`Så_Grow
(
°r
,0);

116 
°r
->
°r_u
.
°r_nvÆ
 = 
num
;

117 
°r
->
°r_°©e
 = 
SS_NORM
;

118 
°r
->
°r_nok
 = 1;

119 #ifde‡
TAINT


120 
°r
->
°r_èöãd
 = 
èöãd
;

122 
	}
}

125 
	$°r_2±r
(
°r
)

126 
STR
 *
°r
;

128 *
s
;

129 
ﬁdî∫o
;

131 i‡(!
°r
)

133 i‡(
°r
->
°r_nok
) {

134 
	`STR_GROW
(
°r
, 30);

135 
s
 = 
°r
->
°r_±r
;

136 
ﬁdî∫o
 = 
î∫o
;

137 #i‡
	`deföed
(
scs
Ë&& deföed(
ns32000
)

138 
	`gcvt
(
°r
->
°r_u
.
°r_nvÆ
,20,
s
);

140 #ifde‡
≠ﬁlo


141 i‡(
°r
->
°r_u
.
°r_nvÆ
 == 0.0)

142 ()
	`°r˝y
(
s
,"0");

145 ()
	`•rötf
(
s
,"%.20g",
°r
->
°r_u
.
°r_nvÆ
);

147 
î∫o
 = 
ﬁdî∫o
;

148 *
s
) s++;

149 #ifde‡
hcx


150 i‡(
s
[-1] == '.')

151 
s
--;

155 i‡(
°r
 =&
°r_undef
)

156  
No
;

157 i‡(
dow¨n
)

158 
	`w¨n
("Use of uninitialized variable");

159 
	`STR_GROW
(
°r
, 30);

160 
s
 = 
°r
->
°r_±r
;

162 *
s
 = '\0';

163 
°r
->
°r_cur
 = 
s
 - så->
°r_±r
;

164 
°r
->
°r_pok
 = 1;

165 #ifde‡
DEBUGGING


166 i‡(
debug
 & 32)

167 
	`Ârötf
(
°dîr
,"0x%lxÖå(%s)\n",
°r
,°r->
°r_±r
);

169  
°r
->
°r_±r
;

170 
	}
}

173 
	$°r_2num
(
°r
)

174 
STR
 *
°r
;

176 i‡(!
°r
)

178 i‡(
°r
->
°r_°©e
 =
SS_INCR
)

179 
	`Så_Grow
(
°r
,0);

180 
°r
->
°r_°©e
 = 
SS_NORM
;

181 i‡(
°r
->
°r_Àn
 && så->
°r_pok
)

182 
°r
->
°r_u
.
°r_nvÆ
 = 
	`©of
(°r->
°r_±r
);

184 i‡(
°r
 =&
°r_undef
)

186 i‡(
dow¨n
)

187 
	`w¨n
("Use of uninitialized variable");

188 
°r
->
°r_u
.
°r_nvÆ
 = 0.0;

190 
°r
->
°r_nok
 = 1;

191 #ifde‡
DEBUGGING


192 i‡(
debug
 & 32)

193 
	`Ârötf
(
°dîr
,"0x%lxÇum(%g)\n",
°r
,°r->
°r_u
.
°r_nvÆ
);

195  
°r
->
°r_u
.
°r_nvÆ
;

196 
	}
}

203 
	$°r_s£t
(
d°r
,
s°r
)

204 
STR
 *
d°r
;

205 
STR
 *
s°r
;

207 #ifde‡
TAINT


208 i‡(
s°r
)

209 
èöãd
 |
s°r
->
°r_èöãd
;

211 i‡(
s°r
 =
d°r
 || d°∏=&
°r_undef
)

213 i‡(!
s°r
)

214 
d°r
->
°r_pok
 = d°r->
°r_nok
 = 0;

215 i‡(
s°r
->
°r_pok
) {

224 i‡(
s°r
->
°r_pok
 & 
SP_TEMP
) {

225 i‡(
d°r
->
°r_±r
) {

226 i‡(
d°r
->
°r_°©e
 =
SS_INCR
)

227 
d°r
->
°r_±r
 -d°r->
°r_u
.
°r_u£ful
;

228 
	`Sa„‰ì
(
d°r
->
°r_±r
);

230 
d°r
->
°r_±r
 = 
s°r
->str_ptr;

231 
d°r
->
°r_Àn
 = 
s°r
->str_len;

232 
d°r
->
°r_cur
 = 
s°r
->str_cur;

233 
d°r
->
°r_°©e
 = 
s°r
->str_state;

234 
d°r
->
°r_pok
 = 
s°r
->°r_pok & ~
SP_TEMP
;

235 #ifde‡
TAINT


236 
d°r
->
°r_èöãd
 = 
s°r
->str_tainted;

238 
s°r
->
°r_±r
 = 
NuŒch
;

239 
s°r
->
°r_Àn
 = 0;

240 
s°r
->
°r_pok
 = 0;

241 
s°r
->
°r_°©e
 = 0;

244 i‡(
d°r
->
°r_±r
) {

245 i‡(
d°r
->
°r_°©e
 =
SS_INCR
) {

246 
	`Så_Grow
(
d°r
,0);

249 
	`°r_n£t
(
d°r
,
s°r
->
°r_±r
,s°r->
°r_cur
);

251 i‡(
d°r
->
°r_nok
 = 
s°r
->str_nok)

252 
d°r
->
°r_u
.
°r_nvÆ
 = 
s°r
->str_u.str_nval;

254 #ifde‡
STRUCTCOPY


255 
d°r
->
°r_u
 = 
s°r
->str_u;

257 
d°r
->
°r_u
.
°r_nvÆ
 = 
s°r
->str_u.str_nval;

259 i‡(
d°r
->
°r_cur
 =(
STBP
)) {

260 *
tmps
 = 
d°r
->
°r_±r
;

262 i‡(*
tmps
 ='S' && 
	`bcmp
(tmps,"StB",4) == 0) {

263 i‡(!
d°r
->
°r_magic
) {

264 
d°r
->
°r_magic
 = 
	`°r_smake
(
s°r
->str_magic);

265 
d°r
->
°r_magic
->
°r_øª
 = 'X';

271 i‡(
s°r
->
°r_nok
)

272 
	`°r_num£t
(
d°r
,
s°r
->
°r_u
.
°r_nvÆ
);

274 i‡(
d°r
->
°r_°©e
 =
SS_INCR
)

275 
	`Så_Grow
(
d°r
,0);

277 #ifde‡
STRUCTCOPY


278 
d°r
->
°r_u
 = 
s°r
->str_u;

280 
d°r
->
°r_u
.
°r_nvÆ
 = 
s°r
->str_u.str_nval;

282 
d°r
->
°r_pok
 = d°r->
°r_nok
 = 0;

284 
	}
}

286 
	$°r_n£t
(
°r
,
±r
,
Àn
)

287 
STR
 *
°r
;

288 *
±r
;

289 
STRLEN
 
Àn
;

291 i‡(
°r
 =&
°r_undef
)

293 
	`STR_GROW
(
°r
, 
Àn
 + 1);

294 i‡(
±r
)

295 ()
	`bc›y
(
±r
,
°r
->
°r_±r
,
Àn
);

296 
°r
->
°r_cur
 = 
Àn
;

297 *(
°r
->
°r_±r
+°r->
°r_cur
) = '\0';

298 
°r
->
°r_nok
 = 0;

299 
°r
->
°r_pok
 = 1;

300 #ifde‡
TAINT


301 
°r
->
°r_èöãd
 = 
èöãd
;

303 
	}
}

305 
	$°r_£t
(
°r
,
±r
)

306 
STR
 *
°r
;

307 *
±r
;

309 
STRLEN
 
Àn
;

311 i‡(
°r
 =&
°r_undef
)

313 i‡(!
±r
)

314 
±r
 = "";

315 
Àn
 = 
	`°æí
(
±r
);

316 
	`STR_GROW
(
°r
, 
Àn
 + 1);

317 ()
	`bc›y
(
±r
,
°r
->
°r_±r
,
Àn
+1);

318 
°r
->
°r_cur
 = 
Àn
;

319 
°r
->
°r_nok
 = 0;

320 
°r
->
°r_pok
 = 1;

321 #ifde‡
TAINT


322 
°r
->
°r_èöãd
 = 
èöãd
;

324 
	}
}

326 
	$°r_ch›
(
°r
,
±r
)

327 
STR
 *
°r
;

328 *
±r
;

330 
STRLEN
 
dñè
;

332 i‡(!
±r
 || !(
°r
->
°r_pok
))

334 
dñè
 = 
±r
 - 
°r
->
°r_±r
;

335 
°r
->
°r_Àn
 -
dñè
;

336 
°r
->
°r_cur
 -
dñè
;

337 
°r
->
°r_±r
 +
dñè
;

338 i‡(
°r
->
°r_°©e
 =
SS_INCR
)

339 
°r
->
°r_u
.
°r_u£ful
 +
dñè
;

341 
°r
->
°r_u
.
°r_u£ful
 = 
dñè
;

342 
°r
->
°r_°©e
 = 
SS_INCR
;

344 
°r
->
°r_nok
 = 0;

345 
°r
->
°r_pok
 = 1;

346 
	}
}

348 
	$°r_nˇt
(
°r
,
±r
,
Àn
)

349 
STR
 *
°r
;

350 *
±r
;

351 
STRLEN
 
Àn
;

353 i‡(
°r
 =&
°r_undef
)

355 i‡(!(
°r
->
°r_pok
))

356 ()
	`°r_2±r
(
°r
);

357 
	`STR_GROW
(
°r
, så->
°r_cur
 + 
Àn
 + 1);

358 ()
	`bc›y
(
±r
,
°r
->
°r_±r
+°r->
°r_cur
,
Àn
);

359 
°r
->
°r_cur
 +
Àn
;

360 *(
°r
->
°r_±r
+°r->
°r_cur
) = '\0';

361 
°r
->
°r_nok
 = 0;

362 
°r
->
°r_pok
 = 1;

363 #ifde‡
TAINT


364 
°r
->
°r_èöãd
 |
èöãd
;

366 
	}
}

368 
	$°r_sˇt
(
d°r
,
s°r
)

369 
STR
 *
d°r
;

370 
STR
 *
s°r
;

372 #ifde‡
TAINT


373 
èöãd
 |
s°r
->
°r_èöãd
;

375 i‡(!
s°r
)

377 i‡(!(
s°r
->
°r_pok
))

378 ()
	`°r_2±r
(
s°r
);

379 i‡(
s°r
)

380 
	`°r_nˇt
(
d°r
,
s°r
->
°r_±r
,s°r->
°r_cur
);

381 
	}
}

383 
	$°r_ˇt
(
°r
,
±r
)

384 
STR
 *
°r
;

385 *
±r
;

387 
STRLEN
 
Àn
;

389 i‡(
°r
 =&
°r_undef
)

391 i‡(!
±r
)

393 i‡(!(
°r
->
°r_pok
))

394 ()
	`°r_2±r
(
°r
);

395 
Àn
 = 
	`°æí
(
±r
);

396 
	`STR_GROW
(
°r
, så->
°r_cur
 + 
Àn
 + 1);

397 ()
	`bc›y
(
±r
,
°r
->
°r_±r
+°r->
°r_cur
,
Àn
+1);

398 
°r
->
°r_cur
 +
Àn
;

399 
°r
->
°r_nok
 = 0;

400 
°r
->
°r_pok
 = 1;

401 #ifde‡
TAINT


402 
°r
->
°r_èöãd
 |
èöãd
;

404 
	}
}

407 
	$°r_≠≥nd_tûl
(
°r
,
‰om
,
‰omíd
,
dñim
,
kì∂i°
)

408 
STR
 *
°r
;

409 *
‰om
;

410 *
‰omíd
;

411 
dñim
;

412 *
kì∂i°
;

414 *
to
;

415 
STRLEN
 
Àn
;

417 i‡(
°r
 =&
°r_undef
)

418  
NuŒch
;

419 i‡(!
‰om
)

420  
NuŒch
;

421 
Àn
 = 
‰omíd
 - 
‰om
;

422 
	`STR_GROW
(
°r
, så->
°r_cur
 + 
Àn
 + 1);

423 
°r
->
°r_nok
 = 0;

424 
°r
->
°r_pok
 = 1;

425 
to
 = 
°r
->
°r_±r
+°r->
°r_cur
;

426 ; 
‰om
 < 
‰omíd
; from++,
to
++) {

427 i‡(*
‰om
 ='\\' && from+1 < 
‰omíd
 && 
dñim
 != '\\') {

428 i‡(!
kì∂i°
) {

429 i‡(
‰om
[1] =
dñim
 || from[1] == '\\')

430 
‰om
++;

432 *
to
++ = *
‰om
++;

434 i‡(
‰om
[1] && 
	`ödex
(
kì∂i°
,from[1]))

435 *
to
++ = *
‰om
++;

437 
‰om
++;

439 i‡(*
‰om
 =
dñim
)

441 *
to
 = *
‰om
;

443 *
to
 = '\0';

444 
°r
->
°r_cur
 = 
to
 - så->
°r_±r
;

445  
‰om
;

446 
	}
}

448 
	gSTR
 *

449 #ifde‡
LEAKTEST


450 
	$°r_√w
(
x
,
Àn
)

451 
x
;

453 
	$°r_√w
(
Àn
)

455 
STRLEN
 
Àn
;

457 
STR
 *
°r
;

459 #i‡
	`deföed
(
NOMEMOPT
)

460 
	`Newz
(700+
x
,
°r
,1,
STR
);

462 i‡(
‰ì°ºoŸ
) {

463 
°r
 = 
‰ì°ºoŸ
;

464 
‰ì°ºoŸ
 = 
°r
->
°r_magic
;

465 
°r
->
°r_magic
 = 
NuŒ°r
;

466 
°r
->
°r_°©e
 = 
SS_NORM
;

469 
	`Newz
(700+
x
,
°r
,1,
STR
);

472 i‡(
Àn
)

473 
	`STR_GROW
(
°r
, 
Àn
 + 1);

474  
°r
;

475 
	}
}

478 
	$°r_magic
(
°r
, 
°ab
, 
how
, 
«me
, 
«mÀn
)

479 
STR
 *
°r
;

480 
STAB
 *
°ab
;

481 
how
;

482 *
«me
;

483 
STRLEN
 
«mÀn
;

485 i‡(
°r
 =&
°r_undef
 || så->
°r_magic
)

487 
°r
->
°r_magic
 = 
	`Så_√w
(75,
«mÀn
);

488 
°r
 = så->
°r_magic
;

489 
°r
->
°r_u
.
°r_°ab
 = 
°ab
;

490 
°r
->
°r_øª
 = 
how
;

491 i‡(
«me
)

492 
	`°r_n£t
(
°r
,
«me
,
«mÀn
);

493 
	}
}

496 
	$°r_ö£π
(
big°r
,
off£t
,
Àn
,
lôée
,
lôéñí
)

497 
STR
 *
big°r
;

498 
STRLEN
 
off£t
;

499 
STRLEN
 
Àn
;

500 *
lôée
;

501 
STRLEN
 
lôéñí
;

503 *
big
;

504 *
mid
;

505 *
midíd
;

506 *
bigíd
;

507 
i
;

509 i‡(
big°r
 =&
°r_undef
)

511 
big°r
->
°r_nok
 = 0;

512 
big°r
->
°r_pok
 = 
SP_VALID
;

514 
i
 = 
lôéñí
 - 
Àn
;

515 i‡(
i
 > 0) {

516 
	`STR_GROW
(
big°r
, big°r->
°r_cur
 + 
i
 + 1);

517 
big
 = 
big°r
->
°r_±r
;

518 
mid
 = 
big
 + 
off£t
 + 
Àn
;

519 
midíd
 = 
bigíd
 = 
big
 + 
big°r
->
°r_cur
;

520 
bigíd
 +
i
;

521 *
bigíd
 = '\0';

522 
midíd
 > 
mid
)

523 *--
bigíd
 = *--
midíd
;

524 ()
	`bc›y
(
lôée
,
big
+
off£t
,
lôéñí
);

525 
big°r
->
°r_cur
 +
i
;

526 
	`STABSET
(
big°r
);

529 i‡(
i
 == 0) {

530 ()
	`bc›y
(
lôée
,
big°r
->
°r_±r
+
off£t
,
Àn
);

531 
	`STABSET
(
big°r
);

535 
big
 = 
big°r
->
°r_±r
;

536 
mid
 = 
big
 + 
off£t
;

537 
midíd
 = 
mid
 + 
Àn
;

538 
bigíd
 = 
big
 + 
big°r
->
°r_cur
;

540 i‡(
midíd
 > 
bigíd
)

541 
	`Áèl
("panic: str_insert");

543 i‡(
mid
 - 
big
 > 
bigíd
 - 
midíd
) {

544 i‡(
lôéñí
) {

545 ()
	`bc›y
(
lôée
, 
mid
, 
lôéñí
);

546 
mid
 +
lôéñí
;

548 
i
 = 
bigíd
 - 
midíd
;

549 i‡(
i
 > 0) {

550 ()
	`bc›y
(
midíd
, 
mid
, 
i
);

551 
mid
 +
i
;

553 *
mid
 = '\0';

554 
big°r
->
°r_cur
 = 
mid
 - 
big
;

556 i‡(
i
 = 
mid
 - 
big
) {

557 
midíd
 -
lôéñí
;

558 
mid
 = 
midíd
;

559 
	`°r_ch›
(
big°r
,
midíd
-
i
);

560 
big
 +
i
;

561 
i
--)

562 *--
midíd
 = *--
big
;

563 i‡(
lôéñí
)

564 ()
	`bc›y
(
lôée
, 
mid
, 
lôéñí
);

566 i‡(
lôéñí
) {

567 
midíd
 -
lôéñí
;

568 
	`°r_ch›
(
big°r
,
midíd
);

569 ()
	`bc›y
(
lôée
,
midíd
,
lôéñí
);

572 
	`°r_ch›
(
big°r
,
midíd
);

574 
	`STABSET
(
big°r
);

575 
	}
}

580 
	$°r_ª∂a˚
(
°r
,
n°r
)

581 
STR
 *
°r
;

582 
STR
 *
n°r
;

584 i‡(
°r
 =&
°r_undef
)

586 i‡(
°r
->
°r_°©e
 =
SS_INCR
)

587 
	`Så_Grow
(
°r
,0);

588 i‡(
n°r
->
°r_°©e
 =
SS_INCR
)

589 
	`Så_Grow
(
n°r
,0);

590 i‡(
°r
->
°r_±r
)

591 
	`Sa„‰ì
(
°r
->
°r_±r
);

592 
°r
->
°r_±r
 = 
n°r
->str_ptr;

593 
°r
->
°r_Àn
 = 
n°r
->str_len;

594 
°r
->
°r_cur
 = 
n°r
->str_cur;

595 
°r
->
°r_pok
 = 
n°r
->str_pok;

596 
°r
->
°r_nok
 = 
n°r
->str_nok;

597 #ifde‡
STRUCTCOPY


598 
°r
->
°r_u
 = 
n°r
->str_u;

600 
°r
->
°r_u
.
°r_nvÆ
 = 
n°r
->str_u.str_nval;

602 #ifde‡
TAINT


603 
°r
->
°r_èöãd
 = 
n°r
->str_tainted;

605 i‡(
n°r
->
°r_magic
)

606 
	`°r_‰ì
(
n°r
->
°r_magic
);

607 
	`Sa„‰ì
(
n°r
);

608 
	}
}

611 
	$°r_‰ì
(
°r
)

612 
STR
 *
°r
;

614 i‡(!
°r
 || så =&
°r_undef
)

616 i‡(
°r
->
°r_°©e
) {

617 i‡(
°r
->
°r_°©e
 =
SS_FREE
)

619 i‡(
°r
->
°r_°©e
 =
SS_INCR
 && !(°r->
°r_pok
 & 2)) {

620 
°r
->
°r_±r
 -°r->
°r_u
.
°r_u£ful
;

621 
°r
->
°r_Àn
 +°r->
°r_u
.
°r_u£ful
;

624 i‡(
°r
->
°r_magic
)

625 
	`°r_‰ì
(
°r
->
°r_magic
);

626 
°r
->
°r_magic
 = 
‰ì°ºoŸ
;

627 #i‡
	`deföed
(
LEAKTEST
Ë|| deföed(
NOMEMOPT
)

628 i‡(
°r
->
°r_Àn
) {

629 
	`Sa„‰ì
(
°r
->
°r_±r
);

630 
°r
->
°r_±r
 = 
NuŒch
;

632 i‡((
°r
->
°r_pok
 & 
SP_INTRP
Ë&& så->
°r_u
.
°r_¨gs
)

633 
	`¨g_‰ì
(
°r
->
°r_u
.
°r_¨gs
);

634 
	`Sa„‰ì
(
°r
);

636 i‡(
°r
->
°r_Àn
) {

637 i‡(
°r
->
°r_Àn
 > 127) {

638 
	`Sa„‰ì
(
°r
->
°r_±r
);

639 
°r
->
°r_±r
 = 
NuŒch
;

640 
°r
->
°r_Àn
 = 0;

643 
°r
->
°r_±r
[0] = '\0';

645 i‡((
°r
->
°r_pok
 & 
SP_INTRP
Ë&& så->
°r_u
.
°r_¨gs
)

646 
	`¨g_‰ì
(
°r
->
°r_u
.
°r_¨gs
);

647 
°r
->
°r_cur
 = 0;

648 
°r
->
°r_nok
 = 0;

649 
°r
->
°r_pok
 = 0;

650 
°r
->
°r_°©e
 = 
SS_FREE
;

651 #ifde‡
TAINT


652 
°r
->
°r_èöãd
 = 0;

654 
‰ì°ºoŸ
 = 
°r
;

656 
	}
}

658 
STRLEN


659 
	$°r_Àn
(
°r
)

660 
STR
 *
°r
;

662 i‡(!
°r
)

664 i‡(!(
°r
->
°r_pok
))

665 ()
	`°r_2±r
(
°r
);

666 i‡(
°r
->
°r_±r
)

667  
°r
->
°r_cur
;

670 
	}
}

672 
	$°r_eq
(
°r1
,
°r2
)

673 
STR
 *
°r1
;

674 
STR
 *
°r2
;

676 i‡(!
°r1
 || så1 =&
°r_undef
)

677  (
°r2
 =
NuŒ°r
 || så2 =&
°r_undef
 || !°r2->
°r_cur
);

678 i‡(!
°r2
 || så2 =&
°r_undef
)

679  !
°r1
->
°r_cur
;

681 i‡(!
°r1
->
°r_pok
)

682 ()
	`°r_2±r
(
°r1
);

683 i‡(!
°r2
->
°r_pok
)

684 ()
	`°r_2±r
(
°r2
);

686 i‡(
°r1
->
°r_cur
 !
°r2
->str_cur)

689  !
	`bcmp
(
°r1
->
°r_±r
, 
°r2
->°r_±r, så1->
°r_cur
);

690 
	}
}

692 
	$°r_cmp
(
°r1
,
°r2
)

693 
STR
 *
°r1
;

694 
STR
 *
°r2
;

696 
ªtvÆ
;

698 i‡(!
°r1
 || så1 =&
°r_undef
)

699  (
°r2
 =
NuŒ°r
 || så2 =&
°r_undef
 || !°r2->
°r_cur
)?0:-1;

700 i‡(!
°r2
 || så2 =&
°r_undef
)

701  
°r1
->
°r_cur
 != 0;

703 i‡(!
°r1
->
°r_pok
)

704 ()
	`°r_2±r
(
°r1
);

705 i‡(!
°r2
->
°r_pok
)

706 ()
	`°r_2±r
(
°r2
);

708 i‡(
°r1
->
°r_cur
 < 
°r2
->str_cur) {

709 i‡(
ªtvÆ
 = 
	`memcmp
(
°r1
->
°r_±r
, 
°r2
->°r_±r, så1->
°r_cur
))

710  
ªtvÆ
 < 0 ? -1 : 1;

714 i‡(
ªtvÆ
 = 
	`memcmp
(
°r1
->
°r_±r
, 
°r2
->°r_±r, så2->
°r_cur
))

715  
ªtvÆ
 < 0 ? -1 : 1;

716 i‡(
°r1
->
°r_cur
 =
°r2
->str_cur)

720 
	}
}

723 
	$°r_gës
(
°r
,
Â
,
≠≥nd
)

724 
STR
 *
°r
;

725 
FILE
 *
Â
;

726 
≠≥nd
;

728 *
bp
;

729 
˙t
;

730 
STDCHAR
 *
±r
;

731 
√wlöe
 = 
rsch¨
;

732 
i
;

733 
STRLEN
 
bpx
;

734 
sh‹tbuf„ªd
;

736 i‡(
°r
 =&
°r_undef
)

737  
NuŒch
;

738 #ifde‡
STDSTDIO


739 
˙t
 = 
Â
->
_˙t
;

740 
°r
->
°r_nok
 = 0;

741 
°r
->
°r_pok
 = 1;

742 i‡(
°r
->
°r_Àn
 <
˙t
 + 1) {

743 i‡(
˙t
 > 80 && 
°r
->
°r_Àn
 > 
≠≥nd
) {

744 
sh‹tbuf„ªd
 = 
˙t
 - 
°r
->
°r_Àn
 + 
≠≥nd
 + 1;

745 
˙t
 -
sh‹tbuf„ªd
;

748 
sh‹tbuf„ªd
 = 0;

749 
	`STR_GROW
(
°r
, 
≠≥nd
+
˙t
+2);

753 
sh‹tbuf„ªd
 = 0;

754 
bp
 = 
°r
->
°r_±r
 + 
≠≥nd
;

755 
±r
 = 
Â
->
_±r
;

757 
s¸ómî
:

758 --
˙t
 >= 0) {

759 i‡((*
bp
++ = *
±r
++Ë=
√wlöe
)

760 
th©s_Æl_fﬁks
;

763 i‡(
sh‹tbuf„ªd
) {

764 
˙t
 = 
sh‹tbuf„ªd
;

765 
sh‹tbuf„ªd
 = 0;

766 
bpx
 = 
bp
 - 
°r
->
°r_±r
;

767 
°r
->
°r_cur
 = 
bpx
;

768 
	`STR_GROW
(
°r
, så->
°r_Àn
 + 
≠≥nd
 + 
˙t
 + 2);

769 
bp
 = 
°r
->
°r_±r
 + 
bpx
;

773 
Â
->
_˙t
 = 
˙t
;

774 
Â
->
_±r
 = 
±r
;

775 
i
 = 
	`_fûbuf
(
Â
);

776 
˙t
 = 
Â
->
_˙t
;

777 
±r
 = 
Â
->
_±r
;

779 
bpx
 = 
bp
 - 
°r
->
°r_±r
;

780 
°r
->
°r_cur
 = 
bpx
;

781 
	`STR_GROW
(
°r
, 
bpx
 + 
˙t
 + 2);

782 
bp
 = 
°r
->
°r_±r
 + 
bpx
;

784 i‡(
i
 =
√wlöe
) {

785 *
bp
++ = 
i
;

786 
th©s_Æl_fﬁks
;

788 i‡(
i
 =
EOF
)

789 
th©s_ªÆly_Æl_fﬁks
;

790 *
bp
++ = 
i
;

793 
th©s_Æl_fﬁks
:

794 i‡(
r¶í
 > 1 && (
bp
 - 
°r
->
°r_±r
 <Ñ¶í || 
	`bcmp
(b∞-Ñ¶í, 
rs
,Ñslen)))

795 
s¸ómî
;

796 
th©s_ªÆly_Æl_fﬁks
:

797 i‡(
sh‹tbuf„ªd
)

798 
˙t
 +
sh‹tbuf„ªd
;

799 
Â
->
_˙t
 = 
˙t
;

800 
Â
->
_±r
 = 
±r
;

801 *
bp
 = '\0';

802 
°r
->
°r_cur
 = 
bp
 - så->
°r_±r
;

807 
buf
[8192];

808 * 
b≥
 = 
buf
 + (buf) - 3;

810 
s¸ómî
:

811 
bp
 = 
buf
;

812 (
i
 = 
	`gëc
(
Â
)Ë!
EOF
 && (*
bp
++ = iË!
√wlöe
 && b∞< 
b≥
) ;

814 *
bp
 = '\0';

815 i‡(
≠≥nd
)

816 
	`°r_ˇt
(
°r
, 
buf
);

818 
	`°r_£t
(
°r
, 
buf
);

819 i‡(
i
 !
EOF


821 (
i
 !
√wlöe


823 (
r¶í
 > 1

825 (
°r
->
°r_cur
 < 
r¶í


827 
	`bcmp
(
°r
->
°r_±r
 + så->
°r_cur
 - 
r¶í
, 
rs
,Ñslen)

833 
≠≥nd
 = -1;

834 
s¸ómî
;

840  
°r
->
°r_cur
 - 
≠≥nd
 ? så->
°r_±r
 : 
NuŒch
;

841 
	}
}

843 
ARG
 *

844 
	$∑r£li°
(
°r
)

845 
STR
 *
°r
;

847 
CMD
 *
cmd
;

848 
ARG
 *
¨g
;

849 
CMD
 *
ﬁdcurcmd
 = 
curcmd
;

850 
ﬁd≥ædb
 = 
≥ædb
;

851 
ªtvÆ
;

853 
≥ædb
 = 0;

854 
	`°r_s£t
(
löe°r
,
°r
);

855 
ö_evÆ
++;

856 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
buÂå
 = 
	`°r_gë
(
löe°r
);

857 
bu„nd
 = 
buÂå
 + 
löe°r
->
°r_cur
;

858 i‡(++
lo›_±r
 >
lo›_max
) {

859 
lo›_max
 += 128;

860 
	`Ríew
(
lo›_°ack
, 
lo›_max
, 
lo›
);

862 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
 = "_EVAL_";

863 
lo›_°ack
[
lo›_±r
].
lo›_•
 = 0;

864 #ifde‡
DEBUGGING


865 i‡(
debug
 & 4) {

866 
	`deb
("(PushögÜabñ #%d _EVAL_)\n", 
lo›_±r
);

869 i‡(
	`£tjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
)) {

870 
ö_evÆ
--;

871 
lo›_±r
--;

872 
≥ædb
 = 
ﬁd≥ædb
;

873 
	`Áèl
("%s\n",
	`°ab_vÆ
(
	`°abít
("@",
TRUE
))->
°r_±r
);

875 #ifde‡
DEBUGGING


876 i‡(
debug
 & 4) {

877 *
tmps
 = 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
;

878 
	`deb
("(P›pögÜabñ #%d %s)\n",
lo›_±r
,

879 
tmps
 ?Åmps : "" );

882 
lo›_±r
--;

883 
îr‹_cou¡
 = 0;

884 
curcmd
 = &
compûög
;

885 
curcmd
->
c_löe
 = 
ﬁdcurcmd
->c_line;

886 
ªtvÆ
 = 
	`yy∑r£
();

887 
curcmd
 = 
ﬁdcurcmd
;

888 
≥ædb
 = 
ﬁd≥ædb
;

889 
ö_evÆ
--;

890 i‡(
ªtvÆ
 || 
îr‹_cou¡
)

891 
	`Áèl
("Invalid component in string or format");

892 
cmd
 = 
evÆ_roŸ
;

893 
¨g
 = 
cmd
->
c_ex¥
;

894 i‡(
cmd
->
c_ty≥
 !
C_EXPR
 || cmd->
c_√xt
 || 
¨g
->
¨g_ty≥
 !
O_LIST
)

895 
	`Áèl
("∑nic:Éº‹ i¿∑r£li° %d %x %d", 
cmd
->
c_ty≥
,

896 
cmd
->
c_√xt
, 
¨g
 ?árg->
¨g_ty≥
 : -1);

897 
	`Sa„‰ì
(
cmd
);

898 
evÆ_roŸ
 = 
NuŒcmd
;

899  
¨g
;

900 
	}
}

903 
	$öåpcompûe
(
§c
)

904 
STR
 *
§c
;

906 *
s
 = 
	`°r_gë
(
§c
);

907 *
£nd
 = 
s
 + 
§c
->
°r_cur
;

908 
STR
 *
°r
;

909 *
t
;

910 
STR
 *
t›¨£
;

911 
STRLEN
 
Àn
;

912 
bøckës
;

913 *
d
;

914 
STAB
 *
°ab
;

915 *
checkpoöt
;

916 
ßwˇ£
 = 0;

918 
t›¨£
 = 
	`Så_√w
(76,0);

919 
°r
 = 
	`Så_√w
(77,0);

921 
	`°r_n£t
(
°r
,"",0);

922 
	`°r_n£t
(
t›¨£
,"",0);

923 
t
 = 
s
;

924 
s
 < 
£nd
) {

925 i‡(*
s
 ='\\' && s[1] && 
	`ödex
("$@[{\\]}lLuUE",s[1])) {

926 
	`°r_nˇt
(
°r
, 
t
, 
s
 -Å);

927 ++
s
;

928 i‡(
	`ißÕha
(*
s
)) {

929 
	`°r_nˇt
(
°r
, "$c", 2);

930 
ßwˇ£
 = (*
s
 != 'E');

933 i‡(*
noöåp
 && 
s
+1 < 
£nd
)

934 i‡(*
s
 !'@' && (*†!'$' || 
	`ödex
(
noöåp
,s[1])))

935 
	`°r_nˇt
(
°r
,
s
-1,1);

936 
	`°r_nˇt
(
°r
, "$b", 2);

938 
	`°r_nˇt
(
°r
, 
s
, 1);

939 ++
s
;

940 
t
 = 
s
;

942 i‡((*
s
 ='@' || (*†='$' && !
	`ödex
(
noöåp
,s[1]))) &&

943 
s
+1 < 
£nd
) {

944 
	`°r_nˇt
(
°r
,
t
,
s
-t);

945 
t
 = 
s
;

946 i‡(*
s
 ='$' && s[1] ='#' && (
	`ißÕha
(s[2]) || s[2] == '_'))

947 
s
++;

948 
s
 = 
	`sˇnidít
(s,
£nd
,
tokíbuf
);

949 i‡(*
t
 == '@' &&

950 (!(
°ab
 = 
	`°abít
(
tokíbuf
,
FALSE
)) ||

951 (*
s
 ='{' ? !
	`°ab_xhash
(
°ab
Ë: !
	`°ab_x¨øy
(stab)) )) {

952 
	`°r_nˇt
(
°r
,"@",1);

953 
s
 = ++
t
;

956 
	`°r_nˇt
(
°r
,"$a",2);

957 
	`°r_nˇt
(
t›¨£
,",",1);

958 i‡(
t
[1] !'{' && (*
s
 == '[' || *s == '{' ) &&

959 (
°ab
 = 
	`°abít
(
tokíbuf
,
FALSE
)) &&

960 ((*
s
 ='['Ë? (
	`°ab_x¨øy
(
°ab
Ë!0Ë: (
	`°ab_xhash
(stab) != 0)) ) {

961 
bøckës
 = 0;

962 
checkpoöt
 = 
s
;

964 *
s
) {

966 i‡(
s
[-1] != '$')

967 
bøckës
++;

970 
bøckës
++;

973 i‡(
s
[-1] != '$')

974 
bøckës
--;

977 
bøckës
--;

981 i‡(
s
[-1] != '$') {

982 
s
 = 
	`˝ytûl
(
tokíbuf
,s+1,
£nd
,*s,&
Àn
);

983 i‡(
s
 >
£nd
)

984 
	`Áèl
("Unterminated string");

988 
s
++;

989 } 
bøckës
 > 0 && 
s
 < 
£nd
);

990 i‡(
s
 > 
£nd
)

991 
	`Áèl
("Unmatched brackets in string");

992 i‡(*
noöåp
) {

993 
d
 = 
checkpoöt
;

994 i‡(*
d
 ='{' && 
s
[-1] == '}') {

995 ++
d
;

996 i‡(
	`isdigô
(*
d
)) {

997 i‡(*++
d
 == ',')

998 ++
d
;

999 
	`isdigô
(*
d
))

1000 
d
++;

1001 i‡(
d
 =
s
 - 1)

1002 
s
 = 
checkpoöt
;

1005 i‡(*
d
 ='[' && 
s
[-1] == ']') {

1006 
weight
 = 2;

1007 
£í
[256];

1008 
un_ch¨
 = 0, 
œ°_un_ch¨
;

1010 
	`Zîo
(
£í
,256,);

1011 *--
s
 = '\0';

1012 i‡(
d
[1] == '^')

1013 
weight
 += 150;

1014 i‡(
d
[1] == '$')

1015 
weight
 -= 3;

1016 i‡(
	`isdigô
(
d
[1])) {

1017 i‡(
d
[2]) {

1018 i‡(
	`isdigô
(
d
[2]) && !d[3])

1019 
weight
 -= 10;

1022 
weight
 -= 100;

1024 
d
++; d < 
s
; d++) {

1025 
œ°_un_ch¨
 = 
un_ch¨
;

1026 
un_ch¨
 = ()*
d
;

1027 *
d
) {

1030 
weight
 -
£í
[
un_ch¨
] * 10;

1031 i‡(
	`ißÕha
(
d
[1]Ë|| 
	`isdigô
(d[1]) ||

1032 
d
[1] == '_') {

1033 
d
 = 
	`sˇnidít
(d,
s
,
tokíbuf
);

1034 i‡(
	`°abít
(
tokíbuf
,
FALSE
))

1035 
weight
 -= 100;

1037 
weight
 -= 10;

1039 i‡(*
d
 == '$' && d[1] &&

1040 
	`ödex
("[#!%*<>()-=",
d
[1])) {

1041 i‡(!
d
[2] || 
	`ödex
("])} =",d[2]))

1042 
weight
 -= 10;

1044 
weight
 -= 1;

1048 
un_ch¨
 = 254;

1049 i‡(
d
[1]) {

1050 i‡(
	`ödex
("wds",
d
[1]))

1051 
weight
 += 100;

1052 i‡(
£í
['\''] || seen['"'])

1053 
weight
 += 1;

1054 i‡(
	`ödex
("∫·b",
d
[1]))

1055 
weight
 += 40;

1056 i‡(
	`isdigô
(
d
[1])) {

1057 
weight
 += 40;

1058 
d
[1] && 
	`isdigô
(d[1]))

1059 
d
++;

1063 
weight
 += 100;

1066 i‡(
œ°_un_ch¨
 < (Ë
d
[1]

1067 || 
d
[1] == '\\') {

1068 i‡(
	`ödex
("aA01! ",
œ°_un_ch¨
))

1069 
weight
 += 30;

1070 i‡(
	`ödex
("zZ79~",
d
[1]))

1071 
weight
 += 30;

1074 
weight
 -= 1;

1076 i‡(
	`ißÕha
(*
d
) && d[1] && isalpha(d[1])) {

1077 
buÂå
 = 
d
;

1078 i‡(
	`yyÀx
(Ë!
WORD
)

1079 
weight
 -= 150;

1080 
d
 = 
buÂå
;

1082 i‡(
un_ch¨
 =
œ°_un_ch¨
 + 1)

1083 
weight
 += 5;

1084 
weight
 -
£í
[
un_ch¨
];

1087 
£í
[
un_ch¨
]++;

1089 #ifde‡
DEBUGGING


1090 i‡(
debug
 & 512)

1091 
	`Ârötf
(
°dîr
,"[%s] weight %d\n",

1092 
checkpoöt
+1,
weight
);

1094 *
s
++ = ']';

1095 i‡(
weight
 >= 0)

1096 
s
 = 
checkpoöt
;

1100 i‡(*
t
 == '@')

1101 
	`°r_nˇt
(
t›¨£
, "join($\",", 8);

1102 i‡(
t
[1] ='{' && 
s
[-1] == '}') {

1103 
	`°r_nˇt
(
t›¨£
, 
t
, 1);

1104 
	`°r_nˇt
(
t›¨£
, 
t
+2, 
s
 -Å - 3);

1107 
	`°r_nˇt
(
t›¨£
, 
t
, 
s
 -Å);

1108 i‡(*
t
 == '@')

1109 
	`°r_nˇt
(
t›¨£
, ")", 1);

1110 
t
 = 
s
;

1113 
s
++;

1115 
	`°r_nˇt
(
°r
,
t
,
s
-t);

1116 i‡(
ßwˇ£
)

1117 
	`°r_nˇt
(
°r
, "$cE", 3);

1118 i‡(
t›¨£
->
°r_±r
 && *toparse->str_ptr == ',') {

1119 *
t›¨£
->
°r_±r
 = '(';

1120 
	`°r_nˇt
(
t›¨£
,",$$);",5);

1121 
°r
->
°r_u
.
°r_¨gs
 = 
	`∑r£li°
(
t›¨£
);

1122 
°r
->
°r_u
.
°r_¨gs
->
¨g_Àn
--;

1125 
°r
->
°r_u
.
°r_¨gs
 = 
NuŒ¨g
;

1126 
	`°r_‰ì
(
t›¨£
);

1127 
°r
->
°r_pok
 |
SP_INTRP
;

1128 
°r
->
°r_nok
 = 0;

1129 
	`°r_ª∂a˚
(
§c
,
°r
);

1130 
	}
}

1132 
STR
 *

1133 
	$öãΩ
(
°r
,
§c
,
•
)

1134 
STR
 *
°r
;

1135 
STR
 *
§c
;

1136 
•
;

1138 *
s
;

1139 *
t
;

1140 *
£nd
;

1141 
STR
 **
ñem
;

1142 
doˇ£
 = 0;

1143 
l
 = 0;

1144 
u
 = 0;

1145 
L
 = 0;

1146 
U
 = 0;

1148 i‡(
°r
 =&
°r_undef
)

1149  
NuŒ°r
;

1150 i‡(!(
§c
->
°r_pok
 & 
SP_INTRP
)) {

1151 
ﬁdßve
 = 
ßve°ack
->
¨y_fûl
;

1153 ()
	`ßveh±r
(&
cur°ash
);

1154 
cur°ash
 = 
curcmd
->
c_°ash
;

1155 
	`öåpcompûe
(
§c
);

1156 
	`ª°‹ñi°
(
ﬁdßve
);

1158 
s
 = 
§c
->
°r_±r
;

1159 
t
 = 
s
;

1160 
£nd
 = 
s
 + 
§c
->
°r_cur
;

1162 i‡(
§c
->
°r_u
.
°r_¨gs
) {

1163 ()
	`evÆ
(
§c
->
°r_u
.
°r_¨gs
,
G_ARRAY
,
•
);

1165 
ñem
 = 
°ack
->
¨y_¨øy
 + 
•
;

1168 
	`°r_n£t
(
°r
,"",0);

1169 
s
 < 
£nd
) {

1170 i‡(*
s
 ='$' && s+1 < 
£nd
) {

1171 i‡(
s
-
t
 > 0)

1172 
	`°r_nˇt
(
°r
,
t
,
s
-t);

1173 *++
s
) {

1175 
	`°r_sˇt
(
°r
,*++
ñem
);

1178 
	`°r_nˇt
(
°r
,++
s
,1);

1181 i‡(
doˇ£
 && 
°r
->
°r_cur
 >= docase) {

1182 *
b
 = 
°r
->
°r_±r
 + --
doˇ£
;

1184 i‡(
L
)

1185 
	`lˇ£
(
b
, 
°r
->
°r_±r
 + så->
°r_cur
);

1186 i‡(
U
)

1187 
	`uˇ£
(
b
, 
°r
->
°r_±r
 + så->
°r_cur
);

1189 i‡(
u
)

1190 
	`uˇ£
(
b
, b+1);

1191 i‡(
l
)

1192 
	`lˇ£
(
b
, b+1);

1193 
l
 = 
u
 = 0;

1195 
doˇ£
 = 
°r
->
°r_cur
 + 1;

1196 *++
s
) {

1198 
u
 = 1;

1199 
l
 = 0;

1202 
U
 = 1;

1203 
L
 = 0;

1206 
l
 = 1;

1207 
u
 = 0;

1210 
L
 = 1;

1211 
U
 = 0;

1214 
doˇ£
 = 
L
 = 
U
 = 
l
 = 
u
 = 0;

1219 
t
 = ++
s
;

1222 
s
++;

1224 i‡(
s
-
t
 > 0)

1225 
	`°r_nˇt
(
°r
,
t
,
s
-t);

1226  
°r
;

1227 
	}
}

1229 
	$uˇ£
(
s
,
£nd
)

1230 *
s
;

1231 *
£nd
;

1233 
s
 < 
£nd
) {

1234 i‡(
	`ißscii
(*
s
Ë&& 
	`i¶owî
(*s))

1235 *
s
 = 
	`touµî
(*s);

1236 
s
++;

1238 
	}
}

1240 
	$lˇ£
(
s
,
£nd
)

1241 *
s
;

1242 *
£nd
;

1244 
s
 < 
£nd
) {

1245 i‡(
	`ißscii
(*
s
Ë&& 
	`isuµî
(*s))

1246 *
s
 = 
	`tﬁowî
(*s);

1247 
s
++;

1249 
	}
}

1252 
	$°r_öc
(
°r
)

1253 
STR
 *
°r
;

1255 *
d
;

1257 i‡(!
°r
 || så =&
°r_undef
)

1259 i‡(
°r
->
°r_nok
) {

1260 
°r
->
°r_u
.
°r_nvÆ
 += 1.0;

1261 
°r
->
°r_pok
 = 0;

1264 i‡(!
°r
->
°r_pok
 || !*°r->
°r_±r
) {

1265 
°r
->
°r_u
.
°r_nvÆ
 = 1.0;

1266 
°r
->
°r_nok
 = 1;

1267 
°r
->
°r_pok
 = 0;

1270 
d
 = 
°r
->
°r_±r
;

1271 
	`ißÕha
(*
d
)) d++;

1272 
	`isdigô
(*
d
)) d++;

1273 i‡(*
d
) {

1274 
	`°r_num£t
(
°r
,
	`©of
(°r->
°r_±r
) + 1.0);

1277 
d
--;

1278 
d
 >
°r
->
°r_±r
) {

1279 i‡(
	`isdigô
(*
d
)) {

1280 i‡(++*
d
 <= '9')

1282 *(
d
--) = '0';

1285 ++*
d
;

1286 i‡(
	`ißÕha
(*
d
))

1288 *(
d
--) -= 'z' - 'a' + 1;

1292 
	`STR_GROW
(
°r
, så->
°r_cur
 + 2);

1293 
°r
->
°r_cur
++;

1294 
d
 = 
°r
->
°r_±r
 + så->
°r_cur
; d > str->str_ptr; d--)

1295 *
d
 = d[-1];

1296 i‡(
	`isdigô
(
d
[1]))

1297 *
d
 = '1';

1299 *
d
 = d[1];

1300 
	}
}

1303 
	$°r_dec
(
°r
)

1304 
STR
 *
°r
;

1306 i‡(!
°r
 || så =&
°r_undef
)

1308 i‡(
°r
->
°r_nok
) {

1309 
°r
->
°r_u
.
°r_nvÆ
 -= 1.0;

1310 
°r
->
°r_pok
 = 0;

1313 i‡(!
°r
->
°r_pok
) {

1314 
°r
->
°r_u
.
°r_nvÆ
 = -1.0;

1315 
°r
->
°r_nok
 = 1;

1318 
	`°r_num£t
(
°r
,
	`©of
(°r->
°r_±r
) - 1.0);

1319 
	}
}

1326 
	gtmps_size
 = -1;

1328 
STR
 *

1329 
	$°r_m‹èl
(
ﬁd°r
)

1330 
STR
 *
ﬁd°r
;

1332 
STR
 *
°r
 = 
	`Så_√w
(78,0);

1334 
	`°r_s£t
(
°r
,
ﬁd°r
);

1335 i‡(++
tmps_max
 > 
tmps_size
) {

1336 
tmps_size
 = 
tmps_max
;

1337 i‡(!(
tmps_size
 & 127)) {

1338 i‡(
tmps_size
)

1339 
	`Ríew
(
tmps_li°
, 
tmps_size
 + 128, 
STR
*);

1341 
	`New
(702,
tmps_li°
, 128, 
STR
*);

1344 
tmps_li°
[
tmps_max
] = 
°r
;

1345 i‡(
°r
->
°r_pok
)

1346 
°r
->
°r_pok
 |
SP_TEMP
;

1347  
°r
;

1348 
	}
}

1352 
STR
 *

1353 
	$°r_2m‹èl
(
°r
)

1354 
STR
 *
°r
;

1356 i‡(
°r
 =&
°r_undef
)

1357  
°r
;

1358 i‡(++
tmps_max
 > 
tmps_size
) {

1359 
tmps_size
 = 
tmps_max
;

1360 i‡(!(
tmps_size
 & 127)) {

1361 i‡(
tmps_size
)

1362 
	`Ríew
(
tmps_li°
, 
tmps_size
 + 128, 
STR
*);

1364 
	`New
(704,
tmps_li°
, 128, 
STR
*);

1367 
tmps_li°
[
tmps_max
] = 
°r
;

1368 i‡(
°r
->
°r_pok
)

1369 
°r
->
°r_pok
 |
SP_TEMP
;

1370  
°r
;

1371 
	}
}

1373 
STR
 *

1374 
	$°r_make
(
s
,
Àn
)

1375 *
s
;

1376 
STRLEN
 
Àn
;

1378 
STR
 *
°r
 = 
	`Så_√w
(79,0);

1380 i‡(!
Àn
)

1381 
Àn
 = 
	`°æí
(
s
);

1382 
	`°r_n£t
(
°r
,
s
,
Àn
);

1383  
°r
;

1384 
	}
}

1386 
STR
 *

1387 
	$°r_nmake
(
n
)

1388 
n
;

1390 
STR
 *
°r
 = 
	`Så_√w
(80,0);

1392 
	`°r_num£t
(
°r
,
n
);

1393  
°r
;

1394 
	}
}

1398 
STR
 *

1399 
	$°r_smake
(
ﬁd
)

1400 
STR
 *
ﬁd
;

1402 
STR
 *
√w
 = 
	`Så_√w
(81,0);

1404 i‡(!
ﬁd
)

1405  
NuŒ°r
;

1406 i‡(
ﬁd
->
°r_°©e
 =
SS_FREE
) {

1407 
	`w¨n
("semi-panic:áttemptÅo dup freed string");

1408  
NuŒ°r
;

1410 i‡(
ﬁd
->
°r_°©e
 =
SS_INCR
 && !(ﬁd->
°r_pok
 & 2))

1411 
	`Så_Grow
(
ﬁd
,0);

1412 i‡(
√w
->
°r_±r
)

1413 
	`Sa„‰ì
(
√w
->
°r_±r
);

1414 
	`C›y
(
ﬁd
,
√w
,1,
STR
);

1415 i‡(
ﬁd
->
°r_±r
) {

1416 
√w
->
°r_±r
 = 
	`nßve°r
(
ﬁd
->°r_±r,ﬁd->
°r_Àn
);

1417 
√w
->
°r_pok
 &~
SP_TEMP
;

1419  
√w
;

1420 
	}
}

1422 
	$°r_ª£t
(
s
,
°ash
)

1423 *
s
;

1424 
HASH
 *
°ash
;

1426 
HENT
 *
íåy
;

1427 
STAB
 *
°ab
;

1428 
STR
 *
°r
;

1429 
i
;

1430 
SPAT
 *
•©
;

1431 
max
;

1433 i‡(!*
s
) {

1434 
•©
 = 
°ash
->
tbl_•©roŸ
;

1435 
•©
 !
NuŒ•©
;

1436 
•©
 = s∑t->
•©_√xt
) {

1437 
•©
->
•©_Êags
 &~
SPAT_USED
;

1444 i‡(!
°ash
->
tbl_¨øy
)

1446 *
s
) {

1447 
i
 = *
s
;

1448 i‡(
s
[1] == '-') {

1449 
s
 += 2;

1451 
max
 = *
s
++;

1452  ; 
i
 <
max
; i++) {

1453 
íåy
 = 
°ash
->
tbl_¨øy
[
i
];

1454 
íåy
;

1455 
íåy
 =É¡ry->
hít_√xt
) {

1456 
°ab
 = (
STAB
*)
íåy
->
hít_vÆ
;

1457 
°r
 = 
	`°ab_vÆ
(
°ab
);

1458 
°r
->
°r_cur
 = 0;

1459 
°r
->
°r_nok
 = 0;

1460 #ifde‡
TAINT


1461 
°r
->
°r_èöãd
 = 
èöãd
;

1463 i‡(
°r
->
°r_±r
 !
NuŒch
)

1464 
°r
->
°r_±r
[0] = '\0';

1465 i‡(
	`°ab_x¨øy
(
°ab
)) {

1466 
	`a˛ór
(
	`°ab_x¨øy
(
°ab
));

1468 i‡(
	`°ab_xhash
(
°ab
)) {

1469 
	`h˛ór
(
	`°ab_xhash
(
°ab
), 
FALSE
);

1470 i‡(
°ab
 =
ív°ab
)

1471 
ívú⁄
[0] = 
NuŒch
;

1476 
	}
}

1478 #ifde‡
TAINT


1479 
	$èöçr›î
(
s
)

1480 *
s
;

1482 #ifde‡
DEBUGGING


1483 i‡(
debug
 & 2048)

1484 
	`Ârötf
(
°dîr
,"%†%d %d %d\n",
s
,
èöãd
,
uid
, 
euid
);

1486 i‡(
èöãd
 && (!
euid
 ||Éuid !
uid
 || 
egid
 !
gid
)) {

1487 i‡(!
unß„
)

1488 
	`Áèl
("%s", 
s
);

1489 i‡(
dow¨n
)

1490 
	`w¨n
("%s", 
s
);

1492 
	}
}

1494 
	$èöãnv
()

1496 
STR
 *
ív°r
;

1498 
ív°r
 = 
	`h„tch
(
	`°ab_hash
(
ív°ab
),"PATH",4,
FALSE
);

1499 i‡(
ív°r
 =&
°r_undef
 ||Énv°r->
°r_èöãd
) {

1500 
èöãd
 = 1;

1501 i‡(
ív°r
->
°r_èöãd
 == 2)

1502 
	`èöçr›î
("Insecure directory in PATH");

1504 
	`èöçr›î
("Insecure PATH");

1506 
ív°r
 = 
	`h„tch
(
	`°ab_hash
(
ív°ab
),"IFS",3,
FALSE
);

1507 i‡(
ív°r
 !&
°r_undef
 &&Énv°r->
°r_èöãd
) {

1508 
èöãd
 = 1;

1509 
	`èöçr›î
("Insecure IFS");

1511 
	}
}

	@str.h

17 
	s°rög
 {

18 * 
	m°r_±r
;

19 
STRLEN
 
	m°r_Àn
;

21 
	m°r_nvÆ
;

22 
STAB
 *
	m°r_°ab
;

23 
	m°r_u£ful
;

24 
ARG
 *
	m°r_¨gs
;

25 
HASH
 *
	m°r_hash
;

26 
ARRAY
 *
	m°r_¨øy
;

27 
CMD
 *
	m°r_cmd
;

28 } 
	m°r_u
;

29 
STRLEN
 
	m°r_cur
;

30 
STR
 *
	m°r_magic
;

32 
	m°r_pok
;

33 
	m°r_nok
;

34 
	m°r_øª
;

35 
	m°r_°©e
;

37 #ifde‡
TAINT


38 
boﬁ
 
	m°r_èöãd
;

42 
	s°ab
 {

43 
STBP
 * 
	m°r_±r
;

44 
STRLEN
 
	m°r_Àn
;

46 
	m°r_nvÆ
;

47 
STAB
 *
	m°r_°ab
;

48 
	m°r_u£ful
;

49 
ARG
 *
	m°r_¨gs
;

50 
HASH
 *
	m°r_hash
;

51 
ARRAY
 *
	m°r_¨øy
;

52 
CMD
 *
	m°r_cmd
;

53 } 
	m°r_u
;

54 
STRLEN
 
	m°r_cur
;

55 
STR
 *
	m°r_magic
;

57 
	m°r_pok
;

58 
	m°r_nok
;

59 
	m°r_øª
;

60 
	m°r_°©e
;

62 #ifde‡
TAINT


63 
boﬁ
 
	m°r_èöãd
;

69 
	sl°rög
 {

70 
°rög
 
	ml°r
;

71 
STRLEN
 
	ml°r_off£t
;

72 
STRLEN
 
	ml°r_Àn
;

76 
	#SP_VALID
 1

	)

77 
	#SP_FBM
 2

	)

78 
	#SP_STUDIED
 4

	)

79 
	#SP_CASEFOLD
 8

	)

80 
	#SP_INTRP
 16

	)

81 
	#SP_TAIL
 32

	)

82 
	#SP_MULTI
 64

	)

83 
	#SP_TEMP
 128

	)

85 
	#NuŒ°r
 
	`NuŒ
(
STR
*)

	)

88 
	#SS_NORM
 0

	)

89 
	#SS_INCR
 1

	)

90 
	#SS_SARY
 2

	)

91 
	#SS_SHASH
 3

	)

92 
	#SS_SINT
 4

	)

93 
	#SS_SLONG
 5

	)

94 
	#SS_SSTRP
 6

	)

95 
	#SS_SHPTR
 7

	)

96 
	#SS_SNSTAB
 8

	)

97 
	#SS_SCSV
 9

	)

98 
	#SS_SAPTR
 10

	)

99 
	#SS_HASH
 253

	)

100 
	#SS_ARY
 254

	)

101 
	#SS_FREE
 255

	)

107 #ifde‡
TAINT


108 
	#STABSET
(
x
) \

109 (
x
)->
°r_èöãd
 |
èöãd
; \

110 i‡((
x
)->
°r_magic
) \

111 
	`°ab£t
((
x
)->
°r_magic
,(x))

	)

113 
	#STABSET
(
x
) \

114 i‡((
x
)->
°r_magic
) \

115 
	`°ab£t
((
x
)->
°r_magic
,(x))

	)

118 
	#STR_SSET
(
d°
,
§c
Ëi‡(d° !§cË
	`°r_s£t
(d°,§c)

	)

120 
EXT
 
STR
 **
	gtmps_li°
;

121 
EXT
 
tmps_max
 
INIT
(-1);

122 
EXT
 
tmps_ba£
 
INIT
(-1);

124 *
°r_2±r
();

125 
°r_2num
();

126 
STR
 *
°r_m‹èl
();

127 
STR
 *
°r_2m‹èl
();

128 
STR
 *
°r_make
();

129 
STR
 *
°r_nmake
();

130 
STR
 *
°r_smake
();

131 
°r_cmp
();

132 
°r_eq
();

133 
°r_magic
();

134 
°r_ö£π
();

135 
STRLEN
 
°r_Àn
();

	@toke.c

17 
	~"EXTERN.h
"

18 
	~"≥æ.h
"

19 
	~"≥æy.h
"

21 #ifde‡
I_FCNTL


22 
	~<f˙é.h
>

24 #ifde‡
I_SYS_FILE


25 
	~<sys/fûe.h
>

30 *
	g∑éóve
 = "\\.^$@dDwWsSbB+*?|()-nrtf0123456789[{]}";

32 *
	gª∑r£
;

34 
checkcomma
();

36 #ifde‡
CLINE


37 #unde‡
CLINE


39 
	#CLINE
 (
cmdlöe
 = (
curcmd
->
c_löe
 < cmdlöê? curcmd->c_löê: cmdlöe))

	)

41 
	#META
(
c
Ë((cË| 128)

	)

43 
	#RETURN
(
ªtvÆ
Ë (
buÂå
 = 
s
,(ÏëvÆ)

	)

44 
	#OPERATOR
(
ªtvÆ
Ë (
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,(ÏëvÆ)

	)

45 
	#TERM
(
ªtvÆ
Ë (
CLINE
, 
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,(ÏëvÆ)

	)

46 
	#LOOPX
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
LOOPEX
)

	)

47 
	#FTST
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
FILETEST
)

	)

48 
	#FUN0
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC0
)

	)

49 
	#FUN1
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC1
)

	)

50 
	#FUN2
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC2
)

	)

51 
	#FUN2x
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC2x
)

	)

52 
	#FUN3
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC3
)

	)

53 
	#FUN4
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC4
)

	)

54 
	#FUN5
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FUNC5
)

	)

55 
	#FL
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FLIST
)

	)

56 
	#FL2
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FLIST2
)

	)

57 
	#HFUN
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
HSHFUN
)

	)

58 
	#HFUN3
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
HSHFUN3
)

	)

59 
	#LFUN
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
LVALFUN
)

	)

60 
	#AOP
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
ADDOP
)

	)

61 
	#MOP
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
MULOP
)

	)

62 
	#EOP
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
EQOP
)

	)

63 
	#ROP
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
RELOP
)

	)

64 
	#FOP
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FILOP
)

	)

65 
	#FOP2
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FILOP2
)

	)

66 
	#FOP3
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FILOP3
)

	)

67 
	#FOP4
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FILOP4
)

	)

68 
	#FOP22
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FILOP22
)

	)

69 
	#FOP25
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
FALSE
,
buÂå
 = 
s
,()
FILOP25
)

	)

74 
	#UNI
(
f
Ë(
yylvÆ
.
ivÆ
 = f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
, \

75 (*
s
 ='(' || (†
	`skù•a˚
(s), *†='('Ë? ()
FUNC1
 : ()
UNIOP
Ë)

	)

80 
	#LOP
(
f
Ë(
CLINE
, *
s
 ='(' || (†
	`skù•a˚
(s), *s == '(') ? \

81 (*
s
 = 
	`META
('('), 
buÂå
 = 
ﬁdbuÂå
, '(') : \

82 (
yylvÆ
.
ivÆ
=
f
,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
LISTOP
))

	)

84 
	#OLDLOP
(
f
Ë(
yylvÆ
.
ivÆ
=f,
ex≥˘ãrm
 = 
TRUE
,
buÂå
 = 
s
,()
LISTOP
)

	)

87 
	$skù•a˚
(
s
)

88 *
s
;

90 
s
 < 
bu„nd
 && 
	`ißscii
(*sË&& 
	`is•a˚
(*s))

91 
s
++;

92  
s
;

93 
	}
}

95 #ifde‡
CRIPPLED_CC


97 #unde‡
UNI


98 #unde‡
LOP


99 
	#UNI
(
f
Ë 
	`uni
(f,
s
)

	)

100 
	#LOP
(
f
Ë 
	`l›
(f,
s
)

	)

103 
	$uni
(
f
,
s
)

104 
f
;

105 *
s
;

107 
yylvÆ
.
ivÆ
 = 
f
;

108 
ex≥˘ãrm
 = 
TRUE
;

109 
buÂå
 = 
s
;

110 i‡(*
s
 == '(')

111  
FUNC1
;

112 
s
 = 
	`skù•a˚
(s);

113 i‡(*
s
 == '(')

114  
FUNC1
;

116  
UNIOP
;

117 
	}
}

120 
	$l›
(
f
,
s
)

121 
f
;

122 *
s
;

124 
CLINE
;

125 i‡(*
s
 != '(')

126 
s
 = 
	`skù•a˚
(s);

127 i‡(*
s
 == '(') {

128 *
s
 = 
	`META
('(');

129 
buÂå
 = 
ﬁdbuÂå
;

133 
yylvÆ
.
ivÆ
=
f
;

134 
ex≥˘ãrm
 = 
TRUE
;

135 
buÂå
 = 
s
;

136  
LISTOP
;

138 
	}
}

142 
	$yyÀx
()

144 *
s
 = 
buÂå
;

145 *
d
;

146 
tmp
;

147 
boﬁ
 
ö_f‹m©
 = 
FALSE
;

148 
boﬁ
 
fú°löe
 = 
TRUE
;

149 

yych¨
;

151 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
;

152 
ﬁdbuÂå
 = 
s
;

154 
ªåy
:

155 #ifde‡
YYDEBUG


156 i‡(
debug
 & 1)

157 i‡(
	`ödex
(
s
,'\n'))

158 
	`Ârötf
(
°dîr
,"Tokíîáà%s",
s
);

160 
	`Ârötf
(
°dîr
,"Tokíîáà%s\n",
s
);

162 #ifde‡
BADSWITCH


163 i‡(*
s
 & 128) {

164 i‡((*
s
 & 127) == '(')

165 *
s
++ = '(';

167 
	`w¨n
("Uƒecognized ch¨a˘î \\%03ÿign‹ed", *
s
++ & 255);

168 
ªåy
;

171 *
s
) {

173 i‡((*
s
 & 127) == '(')

174 *
s
++ = '(';

176 
	`w¨n
("Uƒecognized ch¨a˘î \\%03ÿign‹ed", *
s
++ & 255);

177 
ªåy
;

180 
Áke_eof
;

182 i‡(!
rsÂ
)

183 
	`RETURN
(0);

184 i‡(
s
++ < 
bu„nd
)

185 
ªåy
;

186 i‡(
fú°löe
) {

187 
fú°löe
 = 
FALSE
;

188 i‡(
möus_n
 || 
möus_p
 || 
≥ædb
) {

189 
	`°r_£t
(
löe°r
,"");

190 i‡(
≥ædb
) {

191 *
	`gëív
();

192 *
pdb
 = 
	`gëív
("PERLDB");

194 
	`°r_ˇt
(
löe°r
, 
pdb
 ?Ödb : "require 'perldb.pl'");

195 
	`°r_ˇt
(
löe°r
, ";");

197 i‡(
möus_n
 || 
möus_p
) {

198 
	`°r_ˇt
(
löe°r
,"line: while (<>) {");

199 i‡(
möus_l
)

200 
	`°r_ˇt
(
löe°r
,"chop;");

201 i‡(
möus_a
)

202 
	`°r_ˇt
(
löe°r
,"@F=split(' ');");

204 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
	`°r_gë
(
löe°r
);

205 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

206 
ªåy
;

209 i‡(
ö_f‹m©
) {

210 
buÂå
 = 
bu„nd
;

211 
yylvÆ
.
f‹mvÆ
 = 
	`lﬂd_f‹m©
();

212 
ö_f‹m©
 = 
FALSE
;

213 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
	`°r_gë
(
löe°r
) + 1;

214 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

215 
	`OPERATOR
(
FORMLIST
);

217 
curcmd
->
c_löe
++;

218 #ifde‡
CRYPTSCRIPT


219 
	`¸y±swôch
();

222 i‡((
s
 = 
	`°r_gës
(
löe°r
, 
rsÂ
, 0)Ë=
NuŒch
) {

223 
Áke_eof
:

224 i‡(
rsÂ
) {

225 i‡(
¥ïro˚ss
)

226 ()
	`myp˛o£
(
rsÂ
);

227 i‡(
rsÂ
 =
°dö
)

228 
	`˛óªº
(
°dö
);

230 ()
	`f˛o£
(
rsÂ
);

231 
rsÂ
 = 
NuŒÂ
;

233 i‡(
möus_n
 || 
möus_p
) {

234 
	`°r_£t
(
löe°r
,
möus_p
 ? ";}continue{print" : "");

235 
	`°r_ˇt
(
löe°r
,";}");

236 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
	`°r_gë
(
löe°r
);

237 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

238 
möus_n
 = 
möus_p
 = 0;

239 
ªåy
;

241 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
	`°r_gë
(
löe°r
);

242 
	`°r_£t
(
löe°r
,"");

243 
	`RETURN
(';');

245 i‡(
d€xåa˘
 && *
löe°r
->
°r_±r
 == '#')

246 
d€xåa˘
 = 
FALSE
;

247 } 
d€xåa˘
);

248 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
buÂå
 = 
s
;

249 i‡(
≥ædb
) {

250 
STR
 *
°r
 = 
	`Så_√w
(85,0);

252 
	`°r_s£t
(
°r
,
löe°r
);

253 
	`a°‹e
(
	`°ab_x¨øy
(
curcmd
->
c_fûe°ab
),()curcmd->
c_löe
,
°r
);

255 #ifde‡
DEBUG


256 i‡(
fú°löe
) {

257 *
	`showöput
();

258 
s
 = 
	`showöput
();

261 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

262 i‡(
curcmd
->
c_löe
 == 1) {

263 i‡(*
s
 == '#' && s[1] == '!') {

264 i‡(!
ö_evÆ
 && !
	`ö°r
(
s
,"≥æ"Ë&& in°r(
‹ig¨gv
[0],"perl")) {

265 **
√w¨gv
;

266 *
cmd
;

268 
s
 += 2;

269 i‡(*
s
 == ' ')

270 
s
++;

271 
cmd
 = 
s
;

272 
s
 < 
bu„nd
 && !
	`is•a˚
(*s))

273 
s
++;

274 *
s
++ = '\0';

275 
s
 < 
bu„nd
 && 
	`is•a˚
(*s))

276 
s
++;

277 i‡(
s
 < 
bu„nd
) {

278 
	`Newz
(899,
√w¨gv
,
‹ig¨gc
+3,*);

279 
√w¨gv
[1] = 
s
;

280 
s
 < 
bu„nd
 && !
	`is•a˚
(*s))

281 
s
++;

282 *
s
 = '\0';

283 
	`C›y
(
‹ig¨gv
+1, 
√w¨gv
+2, 
‹ig¨gc
+1, *);

286 
√w¨gv
 = 
‹ig¨gv
;

287 
√w¨gv
[0] = 
cmd
;

288 
	`execv
(
cmd
,
√w¨gv
);

289 
	`Áèl
("C™'àexe¯%s", 
cmd
);

293 
s
 < 
bu„nd
 && 
	`is•a˚
(*s))

294 
s
++;

295 i‡(*
s
 == ':')

296 
s
++;

299 
ªåy
;

301 
s
++;

302 
ªåy
;

304 i‡(
¥ïro˚ss
 && 
s
 =
	`°r_gë
(
löe°r
) &&

305 
s
[1] =' ' && 
	`isdigô
(s[2])) {

306 
curcmd
->
c_löe
 = 
	`©oi
(
s
+2)-1;

307 
s
 +2; 
	`isdigô
(*s); s++) ;

308 
d
 = 
bu„nd
;

309 
s
 < 
d
 && 
	`is•a˚
(*s)) s++;

310 
s
[
	`°æí
(s)-1] = '\0';

311 i‡(*
s
 == '"') {

312 
s
++;

313 
s
[
	`°æí
(s)-1] = '\0';

315 i‡(*
s
)

316 
curcmd
->
c_fûe°ab
 = 
	`f°ab
(
s
);

318 
curcmd
->
c_fûe°ab
 = 
	`f°ab
(
‹igfûíame
);

319 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
	`°r_gë
(
löe°r
);

323 i‡(
ö_evÆ
 && !
rsÂ
) {

324 
d
 = 
bu„nd
;

325 
s
 < 
d
 && *s != '\n')

326 
s
++;

327 i‡(
s
 < 
d
)

328 
s
++;

329 i‡(
≥ædb
) {

330 
STR
 *
°r
 = 
	`Så_√w
(85,0);

332 
	`°r_n£t
(
°r
,
löe°r
->
°r_±r
, 
s
 -Üinestr->str_ptr);

333 
	`a°‹e
(
	`°ab_x¨øy
(
curcmd
->
c_fûe°ab
),()curcmd->
c_löe
,
°r
);

334 
	`°r_ch›
(
löe°r
, 
s
);

336 i‡(
ö_f‹m©
) {

337 
buÂå
 = 
s
;

338 
yylvÆ
.
f‹mvÆ
 = 
	`lﬂd_f‹m©
();

339 
ö_f‹m©
 = 
FALSE
;

340 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
buÂå
 + 1;

341 
	`TERM
(
FORMLIST
);

343 
curcmd
->
c_löe
++;

346 *
s
 = '\0';

347 
bu„nd
 = 
s
;

349 
ªåy
;

351 i‡(
s
[1] && 
	`ißÕha
(s[1]) && !isalpha(s[2])) {

352 
s
++;

353 *
s
++) {

354 'r': 
	`FTST
(
O_FTEREAD
);

355 'w': 
	`FTST
(
O_FTEWRITE
);

356 'x': 
	`FTST
(
O_FTEEXEC
);

357 'o': 
	`FTST
(
O_FTEOWNED
);

358 'R': 
	`FTST
(
O_FTRREAD
);

359 'W': 
	`FTST
(
O_FTRWRITE
);

360 'X': 
	`FTST
(
O_FTREXEC
);

361 'O': 
	`FTST
(
O_FTROWNED
);

362 'e': 
	`FTST
(
O_FTIS
);

363 'z': 
	`FTST
(
O_FTZERO
);

364 's': 
	`FTST
(
O_FTSIZE
);

365 'f': 
	`FTST
(
O_FTFILE
);

366 'd': 
	`FTST
(
O_FTDIR
);

367 'l': 
	`FTST
(
O_FTLINK
);

368 'p': 
	`FTST
(
O_FTPIPE
);

369 'S': 
	`FTST
(
O_FTSOCK
);

370 'u': 
	`FTST
(
O_FTSUID
);

371 'g': 
	`FTST
(
O_FTSGID
);

372 'k': 
	`FTST
(
O_FTSVTX
);

373 'b': 
	`FTST
(
O_FTBLK
);

374 'c': 
	`FTST
(
O_FTCHR
);

375 't': 
	`FTST
(
O_FTTTY
);

376 'T': 
	`FTST
(
O_FTTEXT
);

377 'B': 
	`FTST
(
O_FTBINARY
);

378 'M': 
	`°abít
("\024",
TRUE
); 
	`FTST
(
O_FTMTIME
);

379 'A': 
	`°abít
("\024",
TRUE
); 
	`FTST
(
O_FTATIME
);

380 'C': 
	`°abít
("\024",
TRUE
); 
	`FTST
(
O_FTCTIME
);

382 
s
 -= 2;

386 
tmp
 = *
s
++;

387 i‡(*
s
 =
tmp
) {

388 
s
++;

389 
	`RETURN
(
DEC
);

391 i‡(
ex≥˘ãrm
)

392 
	`OPERATOR
('-');

394 
	`AOP
(
O_SUBTRACT
);

396 
tmp
 = *
s
++;

397 i‡(*
s
 =
tmp
) {

398 
s
++;

399 
	`RETURN
(
INC
);

401 i‡(
ex≥˘ãrm
)

402 
	`OPERATOR
('+');

404 
	`AOP
(
O_ADD
);

407 i‡(
ex≥˘ãrm
) {

408 
s
 = 
	`sˇnidít
(s,
bu„nd
,
tokíbuf
);

409 
yylvÆ
.
°abvÆ
 = 
	`°abít
(
tokíbuf
,
TRUE
);

410 
	`TERM
(
STAR
);

412 
tmp
 = *
s
++;

413 i‡(*
s
 =
tmp
) {

414 
s
++;

415 
	`OPERATOR
(
POW
);

417 
	`MOP
(
O_MULTIPLY
);

419 i‡(
ex≥˘ãrm
) {

420 
s
 = 
	`sˇnidít
(s,
bu„nd
,
tokíbuf
);

421 
yylvÆ
.
°abvÆ
 = 
	`hadd
(
	`°abít
(
tokíbuf
,
TRUE
));

422 
	`TERM
(
HSH
);

424 
s
++;

425 
	`MOP
(
O_MODULO
);

433 
tmp
 = *
s
++;

434 
	`OPERATOR
(
tmp
);

436 
tmp
 = *
s
++;

437 i‡(
	`is•a˚
(*
s
) || *s == '#')

438 
cmdlöe
 = 
NOLINE
;

439 
	`OPERATOR
(
tmp
);

441 i‡(
curcmd
->
c_löe
 < 
cmdlöe
)

442 
cmdlöe
 = 
curcmd
->
c_löe
;

443 
tmp
 = *
s
++;

444 
	`OPERATOR
(
tmp
);

447 
tmp
 = *
s
++;

448 
	`TERM
(
tmp
);

450 
tmp
 = *
s
++;

451 
	`RETURN
(
tmp
);

453 
s
++;

454 
tmp
 = *
s
++;

455 i‡(
tmp
 == '&')

456 
	`OPERATOR
(
ANDAND
);

457 
s
--;

458 i‡(
ex≥˘ãrm
) {

459 
d
 = 
bu„nd
;

460 
s
 < 
d
 && 
	`is•a˚
(*s))

461 
s
++;

462 i‡(
	`ißÕha
(*
s
) || *s == '_' || *s == '\'')

463 *(--
s
) = '\\';

464 
	`OPERATOR
(
AMPER
);

466 
	`OPERATOR
('&');

468 
s
++;

469 
tmp
 = *
s
++;

470 i‡(
tmp
 == '|')

471 
	`OPERATOR
(
OROR
);

472 
s
--;

473 
	`OPERATOR
('|');

475 
s
++;

476 
tmp
 = *
s
++;

477 i‡(
tmp
 == '=')

478 
	`EOP
(
O_EQ
);

479 i‡(
tmp
 == '~')

480 
	`OPERATOR
(
MATCH
);

481 
s
--;

482 
	`OPERATOR
('=');

484 
s
++;

485 
tmp
 = *
s
++;

486 i‡(
tmp
 == '=')

487 
	`EOP
(
O_NE
);

488 i‡(
tmp
 == '~')

489 
	`OPERATOR
(
NMATCH
);

490 
s
--;

491 
	`OPERATOR
('!');

493 i‡(
ex≥˘ãrm
) {

494 
s
 = 
	`sˇn°r
(s);

495 
	`TERM
(
RSTRING
);

497 
s
++;

498 
tmp
 = *
s
++;

499 i‡(
tmp
 == '<')

500 
	`OPERATOR
(
LS
);

501 i‡(
tmp
 == '=') {

502 
tmp
 = *
s
++;

503 i‡(
tmp
 == '>')

504 
	`EOP
(
O_NCMP
);

505 
s
--;

506 
	`ROP
(
O_LE
);

508 
s
--;

509 
	`ROP
(
O_LT
);

511 
s
++;

512 
tmp
 = *
s
++;

513 i‡(
tmp
 == '>')

514 
	`OPERATOR
(
RS
);

515 i‡(
tmp
 == '=')

516 
	`ROP
(
O_GE
);

517 
s
--;

518 
	`ROP
(
O_GT
);

520 
	#SNARFWORD
 \

521 
d
 = 
tokíbuf
; \

522 
	`ißscii
(*
s
) && \

523 (
	`ißÕha
(*
s
Ë|| 
	`isdigô
(*s) || *s == '_' || *s == '\'')) \

524 *
d
++ = *
s
++; \

525 
d
[-1] == '\'') \

526 
d
--,
s
--; \

527 *
d
 = '\0'; \

528 
d
 = 
tokíbuf
;

	)

531 i‡(
s
[1] ='#' && (
	`ißÕha
(s[2]) || s[2] == '_')) {

532 
s
++;

533 
s
 = 
	`sˇnidít
(s,
bu„nd
,
tokíbuf
);

534 
yylvÆ
.
°abvÆ
 = 
	`Ødd
(
	`°abít
(
tokíbuf
,
TRUE
));

535 
	`TERM
(
ARYLEN
);

537 
d
 = 
s
;

538 
s
 = 
	`sˇnidít
(s,
bu„nd
,
tokíbuf
);

539 i‡(
ª∑r£
) {

540 
do_ª∑r£
:

541 
s
[-1] = ')';

542 
s
 = 
d
;

543 
s
[1] = s[0];

544 
s
[0] = '(';

545 
ªåy
;

547 
yylvÆ
.
°abvÆ
 = 
	`°abít
(
tokíbuf
,
TRUE
);

548 
	`TERM
(
REG
);

551 
d
 = 
s
;

552 
s
 = 
	`sˇnidít
(s,
bu„nd
,
tokíbuf
);

553 i‡(
ª∑r£
)

554 
do_ª∑r£
;

555 
yylvÆ
.
°abvÆ
 = 
	`Ødd
(
	`°abít
(
tokíbuf
,
TRUE
));

556 
	`TERM
(
ARY
);

560 i‡(
ex≥˘ãrm
) {

561 
s
 = 
	`sˇ≈©
(s);

562 
	`TERM
(
PATTERN
);

564 
tmp
 = *
s
++;

565 i‡(
tmp
 == '/')

566 
	`MOP
(
O_DIVIDE
);

567 
	`OPERATOR
(
tmp
);

570 i‡(!
ex≥˘ãrm
 || !
	`isdigô
(
s
[1])) {

571 
tmp
 = *
s
++;

572 i‡(*
s
 =
tmp
) {

573 
s
++;

574 
	`OPERATOR
(
DOTDOT
);

576 
	`AOP
(
O_CONCAT
);

582 
s
 = 
	`sˇn°r
(s);

583 
	`TERM
(
RSTRING
);

586 
s
++;

589 
SNARFWORD
;

590 i‡(
d
[1] == '_') {

591 i‡(
	`°rEQ
(
d
,"__LINE__") || strEQ(d,"__FILE__")) {

592 
ARG
 *
¨g
 = 
	`›_√w
(1);

594 
yylvÆ
.
¨g
 =árg;

595 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

596 i‡(
d
[2] == 'L')

597 ()
	`•rötf
(
tokíbuf
,"%ld",()
curcmd
->
c_löe
);

599 
	`°r˝y
(
tokíbuf
, 
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
);

600 
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

601 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
	`°r_make
(
tokíbuf
,
	`°æí
(tokenbuf));

602 
	`TERM
(
RSTRING
);

604 i‡(
	`°rEQ
(
d
,"__END__")) {

605 #i‚de‡
TAINT


606 
STAB
 *
°ab
;

607 
fd
;

609 i‡(
°ab
 = 
	`°abít
("DATA",
FALSE
)) {

610 
°ab
->
°r_pok
 |
SP_MULTI
;

611 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

612 
	`°ab_io
(
°ab
)->
iÂ
 = 
rsÂ
;

613 #i‡
	`deföed
(
HAS_FCNTL
Ë&& deföed(
F_SETFD
)

614 
fd
 = 
	`fûío
(
rsÂ
);

615 
	`f˙é
(
fd
,
F_SETFD
,fd >= 3);

617 i‡(
¥ïro˚ss
)

618 
	`°ab_io
(
°ab
)->
ty≥
 = '|';

619 i‡(
rsÂ
 =
°dö
)

620 
	`°ab_io
(
°ab
)->
ty≥
 = '-';

622 
	`°ab_io
(
°ab
)->
ty≥
 = '<';

623 
rsÂ
 = 
NuŒÂ
;

626 
Áke_eof
;

631 
SNARFWORD
;

632 i‡(
	`°rEQ
(
d
,"alarm"))

633 
	`UNI
(
O_ALARM
);

634 i‡(
	`°rEQ
(
d
,"accept"))

635 
	`FOP22
(
O_ACCEPT
);

636 i‡(
	`°rEQ
(
d
,"atan2"))

637 
	`FUN2
(
O_ATAN2
);

640 
SNARFWORD
;

641 i‡(
	`°rEQ
(
d
,"bind"))

642 
	`FOP2
(
O_BIND
);

643 i‡(
	`°rEQ
(
d
,"binmode"))

644 
	`FOP
(
O_BINMODE
);

647 
SNARFWORD
;

648 i‡(
	`°rEQ
(
d
,"chop"))

649 
	`LFUN
(
O_CHOP
);

650 i‡(
	`°rEQ
(
d
,"continue"))

651 
	`OPERATOR
(
CONTINUE
);

652 i‡(
	`°rEQ
(
d
,"chdir")) {

653 ()
	`°abít
("ENV",
TRUE
);

654 
	`UNI
(
O_CHDIR
);

656 i‡(
	`°rEQ
(
d
,"close"))

657 
	`FOP
(
O_CLOSE
);

658 i‡(
	`°rEQ
(
d
,"closedir"))

659 
	`FOP
(
O_CLOSEDIR
);

660 i‡(
	`°rEQ
(
d
,"cmp"))

661 
	`EOP
(
O_SCMP
);

662 i‡(
	`°rEQ
(
d
,"caller"))

663 
	`UNI
(
O_CALLER
);

664 i‡(
	`°rEQ
(
d
,"crypt")) {

665 #ifde‡
FCRYPT


666 
	`öô_des
();

668 
	`FUN2
(
O_CRYPT
);

670 i‡(
	`°rEQ
(
d
,"chmod"))

671 
	`LOP
(
O_CHMOD
);

672 i‡(
	`°rEQ
(
d
,"chown"))

673 
	`LOP
(
O_CHOWN
);

674 i‡(
	`°rEQ
(
d
,"connect"))

675 
	`FOP2
(
O_CONNECT
);

676 i‡(
	`°rEQ
(
d
,"cos"))

677 
	`UNI
(
O_COS
);

678 i‡(
	`°rEQ
(
d
,"chroot"))

679 
	`UNI
(
O_CHROOT
);

682 
SNARFWORD
;

683 i‡(
	`°rEQ
(
d
,"do")) {

684 
d
 = 
bu„nd
;

685 
s
 < 
d
 && 
	`is•a˚
(*s))

686 
s
++;

687 i‡(
	`ißÕha
(*
s
) || *s == '_')

688 *(--
s
) = '\\';

689 
	`OPERATOR
(
DO
);

691 i‡(
	`°rEQ
(
d
,"die"))

692 
	`LOP
(
O_DIE
);

693 i‡(
	`°rEQ
(
d
,"defined"))

694 
	`LFUN
(
O_DEFINED
);

695 i‡(
	`°rEQ
(
d
,"delete"))

696 
	`OPERATOR
(
DELETE
);

697 i‡(
	`°rEQ
(
d
,"dbmopen"))

698 
	`HFUN3
(
O_DBMOPEN
);

699 i‡(
	`°rEQ
(
d
,"dbmclose"))

700 
	`HFUN
(
O_DBMCLOSE
);

701 i‡(
	`°rEQ
(
d
,"dump"))

702 
	`LOOPX
(
O_DUMP
);

705 
SNARFWORD
;

706 i‡(
	`°rEQ
(
d
,"else"))

707 
	`OPERATOR
(
ELSE
);

708 i‡(
	`°rEQ
(
d
,"elsif")) {

709 
yylvÆ
.
ivÆ
 = 
curcmd
->
c_löe
;

710 
	`OPERATOR
(
ELSIF
);

712 i‡(
	`°rEQ
(
d
,"eq") || strEQ(d,"EQ"))

713 
	`EOP
(
O_SEQ
);

714 i‡(
	`°rEQ
(
d
,"exit"))

715 
	`UNI
(
O_EXIT
);

716 i‡(
	`°rEQ
(
d
,"eval")) {

717 
Æl°abs
 = 
TRUE
;

718 
	`UNI
(
O_EVAL
);

720 i‡(
	`°rEQ
(
d
,"eof"))

721 
	`FOP
(
O_EOF
);

722 i‡(
	`°rEQ
(
d
,"exp"))

723 
	`UNI
(
O_EXP
);

724 i‡(
	`°rEQ
(
d
,"each"))

725 
	`HFUN
(
O_EACH
);

726 i‡(
	`°rEQ
(
d
,"exec")) {

727 
	`£t_csh
();

728 
	`LOP
(
O_EXEC_OP
);

730 i‡(
	`°rEQ
(
d
,"endhostent"))

731 
	`FUN0
(
O_EHOSTENT
);

732 i‡(
	`°rEQ
(
d
,"endnetent"))

733 
	`FUN0
(
O_ENETENT
);

734 i‡(
	`°rEQ
(
d
,"endservent"))

735 
	`FUN0
(
O_ESERVENT
);

736 i‡(
	`°rEQ
(
d
,"endprotoent"))

737 
	`FUN0
(
O_EPROTOENT
);

738 i‡(
	`°rEQ
(
d
,"endpwent"))

739 
	`FUN0
(
O_EPWENT
);

740 i‡(
	`°rEQ
(
d
,"endgrent"))

741 
	`FUN0
(
O_EGRENT
);

744 
SNARFWORD
;

745 i‡(
	`°rEQ
(
d
,"for") || strEQ(d,"foreach")) {

746 
yylvÆ
.
ivÆ
 = 
curcmd
->
c_löe
;

747 
	`OPERATOR
(
FOR
);

749 i‡(
	`°rEQ
(
d
,"format")) {

750 
d
 = 
bu„nd
;

751 
s
 < 
d
 && 
	`is•a˚
(*s))

752 
s
++;

753 i‡(
	`ißÕha
(*
s
) || *s == '_')

754 *(--
s
) = '\\';

755 
ö_f‹m©
 = 
TRUE
;

756 
Æl°abs
 = 
TRUE
;

757 
	`OPERATOR
(
FORMAT
);

759 i‡(
	`°rEQ
(
d
,"fork"))

760 
	`FUN0
(
O_FORK
);

761 i‡(
	`°rEQ
(
d
,"fcntl"))

762 
	`FOP3
(
O_FCNTL
);

763 i‡(
	`°rEQ
(
d
,"fileno"))

764 
	`FOP
(
O_FILENO
);

765 i‡(
	`°rEQ
(
d
,"flock"))

766 
	`FOP2
(
O_FLOCK
);

769 
SNARFWORD
;

770 i‡(
	`°rEQ
(
d
,"gt") || strEQ(d,"GT"))

771 
	`ROP
(
O_SGT
);

772 i‡(
	`°rEQ
(
d
,"ge") || strEQ(d,"GE"))

773 
	`ROP
(
O_SGE
);

774 i‡(
	`°rEQ
(
d
,"grep"))

775 
	`FL2
(
O_GREP
);

776 i‡(
	`°rEQ
(
d
,"goto"))

777 
	`LOOPX
(
O_GOTO
);

778 i‡(
	`°rEQ
(
d
,"gmtime"))

779 
	`UNI
(
O_GMTIME
);

780 i‡(
	`°rEQ
(
d
,"getc"))

781 
	`FOP
(
O_GETC
);

782 i‡(
	`°∫EQ
(
d
,"get",3)) {

783 
d
 += 3;

784 i‡(*
d
 == 'p') {

785 i‡(
	`°rEQ
(
d
,"ppid"))

786 
	`FUN0
(
O_GETPPID
);

787 i‡(
	`°rEQ
(
d
,"pgrp"))

788 
	`UNI
(
O_GETPGRP
);

789 i‡(
	`°rEQ
(
d
,"priority"))

790 
	`FUN2
(
O_GETPRIORITY
);

791 i‡(
	`°rEQ
(
d
,"protobyname"))

792 
	`UNI
(
O_GPBYNAME
);

793 i‡(
	`°rEQ
(
d
,"protobynumber"))

794 
	`FUN1
(
O_GPBYNUMBER
);

795 i‡(
	`°rEQ
(
d
,"protoent"))

796 
	`FUN0
(
O_GPROTOENT
);

797 i‡(
	`°rEQ
(
d
,"pwent"))

798 
	`FUN0
(
O_GPWENT
);

799 i‡(
	`°rEQ
(
d
,"pwnam"))

800 
	`FUN1
(
O_GPWNAM
);

801 i‡(
	`°rEQ
(
d
,"pwuid"))

802 
	`FUN1
(
O_GPWUID
);

803 i‡(
	`°rEQ
(
d
,"peername"))

804 
	`FOP
(
O_GETPEERNAME
);

806 i‡(*
d
 == 'h') {

807 i‡(
	`°rEQ
(
d
,"hostbyname"))

808 
	`UNI
(
O_GHBYNAME
);

809 i‡(
	`°rEQ
(
d
,"hostbyaddr"))

810 
	`FUN2
(
O_GHBYADDR
);

811 i‡(
	`°rEQ
(
d
,"hostent"))

812 
	`FUN0
(
O_GHOSTENT
);

814 i‡(*
d
 == 'n') {

815 i‡(
	`°rEQ
(
d
,"netbyname"))

816 
	`UNI
(
O_GNBYNAME
);

817 i‡(
	`°rEQ
(
d
,"netbyaddr"))

818 
	`FUN2
(
O_GNBYADDR
);

819 i‡(
	`°rEQ
(
d
,"netent"))

820 
	`FUN0
(
O_GNETENT
);

822 i‡(*
d
 == 's') {

823 i‡(
	`°rEQ
(
d
,"servbyname"))

824 
	`FUN2
(
O_GSBYNAME
);

825 i‡(
	`°rEQ
(
d
,"servbyport"))

826 
	`FUN2
(
O_GSBYPORT
);

827 i‡(
	`°rEQ
(
d
,"servent"))

828 
	`FUN0
(
O_GSERVENT
);

829 i‡(
	`°rEQ
(
d
,"sockname"))

830 
	`FOP
(
O_GETSOCKNAME
);

831 i‡(
	`°rEQ
(
d
,"sockopt"))

832 
	`FOP3
(
O_GSOCKOPT
);

834 i‡(*
d
 == 'g') {

835 i‡(
	`°rEQ
(
d
,"grent"))

836 
	`FUN0
(
O_GGRENT
);

837 i‡(
	`°rEQ
(
d
,"grnam"))

838 
	`FUN1
(
O_GGRNAM
);

839 i‡(
	`°rEQ
(
d
,"grgid"))

840 
	`FUN1
(
O_GGRGID
);

842 i‡(*
d
 == 'l') {

843 i‡(
	`°rEQ
(
d
,"login"))

844 
	`FUN0
(
O_GETLOGIN
);

846 
d
 -= 3;

850 
SNARFWORD
;

851 i‡(
	`°rEQ
(
d
,"hex"))

852 
	`UNI
(
O_HEX
);

855 
SNARFWORD
;

856 i‡(
	`°rEQ
(
d
,"if")) {

857 
yylvÆ
.
ivÆ
 = 
curcmd
->
c_löe
;

858 
	`OPERATOR
(
IF
);

860 i‡(
	`°rEQ
(
d
,"index"))

861 
	`FUN2x
(
O_INDEX
);

862 i‡(
	`°rEQ
(
d
,"int"))

863 
	`UNI
(
O_INT
);

864 i‡(
	`°rEQ
(
d
,"ioctl"))

865 
	`FOP3
(
O_IOCTL
);

868 
SNARFWORD
;

869 i‡(
	`°rEQ
(
d
,"join"))

870 
	`FL2
(
O_JOIN
);

873 
SNARFWORD
;

874 i‡(
	`°rEQ
(
d
,"keys"))

875 
	`HFUN
(
O_KEYS
);

876 i‡(
	`°rEQ
(
d
,"kill"))

877 
	`LOP
(
O_KILL
);

880 
SNARFWORD
;

881 i‡(
	`°rEQ
(
d
,"last"))

882 
	`LOOPX
(
O_LAST
);

883 i‡(
	`°rEQ
(
d
,"local"))

884 
	`OPERATOR
(
LOCAL
);

885 i‡(
	`°rEQ
(
d
,"length"))

886 
	`UNI
(
O_LENGTH
);

887 i‡(
	`°rEQ
(
d
,"lt") || strEQ(d,"LT"))

888 
	`ROP
(
O_SLT
);

889 i‡(
	`°rEQ
(
d
,"le") || strEQ(d,"LE"))

890 
	`ROP
(
O_SLE
);

891 i‡(
	`°rEQ
(
d
,"localtime"))

892 
	`UNI
(
O_LOCALTIME
);

893 i‡(
	`°rEQ
(
d
,"log"))

894 
	`UNI
(
O_LOG
);

895 i‡(
	`°rEQ
(
d
,"link"))

896 
	`FUN2
(
O_LINK
);

897 i‡(
	`°rEQ
(
d
,"listen"))

898 
	`FOP2
(
O_LISTEN
);

899 i‡(
	`°rEQ
(
d
,"lstat"))

900 
	`FOP
(
O_LSTAT
);

903 i‡(
s
[1] == '\'') {

904 
d
 = "m";

905 
s
++;

908 
SNARFWORD
;

910 i‡(
	`°rEQ
(
d
,"m")) {

911 
s
 = 
	`sˇ≈©
(s-1);

912 i‡(
yylvÆ
.
¨g
)

913 
	`TERM
(
PATTERN
);

915 
	`RETURN
(1);

917 
d
[1]) {

919 i‡(
	`°rEQ
(
d
,"mkdir"))

920 
	`FUN2
(
O_MKDIR
);

923 i‡(
	`°rEQ
(
d
,"msgctl"))

924 
	`FUN3
(
O_MSGCTL
);

925 i‡(
	`°rEQ
(
d
,"msgget"))

926 
	`FUN2
(
O_MSGGET
);

927 i‡(
	`°rEQ
(
d
,"msgrcv"))

928 
	`FUN5
(
O_MSGRCV
);

929 i‡(
	`°rEQ
(
d
,"msgsnd"))

930 
	`FUN3
(
O_MSGSND
);

935 
SNARFWORD
;

936 i‡(
	`°rEQ
(
d
,"next"))

937 
	`LOOPX
(
O_NEXT
);

938 i‡(
	`°rEQ
(
d
,"ne") || strEQ(d,"NE"))

939 
	`EOP
(
O_SNE
);

942 
SNARFWORD
;

943 i‡(
	`°rEQ
(
d
,"open"))

944 
	`OPERATOR
(
OPEN
);

945 i‡(
	`°rEQ
(
d
,"ord"))

946 
	`UNI
(
O_ORD
);

947 i‡(
	`°rEQ
(
d
,"oct"))

948 
	`UNI
(
O_OCT
);

949 i‡(
	`°rEQ
(
d
,"opendir"))

950 
	`FOP2
(
O_OPENDIR
);

953 
SNARFWORD
;

954 i‡(
	`°rEQ
(
d
,"print")) {

955 
	`checkcomma
(
s
,"filehandle");

956 
	`LOP
(
O_PRINT
);

958 i‡(
	`°rEQ
(
d
,"printf")) {

959 
	`checkcomma
(
s
,"filehandle");

960 
	`LOP
(
O_PRTF
);

962 i‡(
	`°rEQ
(
d
,"push")) {

963 
yylvÆ
.
ivÆ
 = 
O_PUSH
;

964 
	`OPERATOR
(
PUSH
);

966 i‡(
	`°rEQ
(
d
,"pop"))

967 
	`OPERATOR
(
POP
);

968 i‡(
	`°rEQ
(
d
,"pack"))

969 
	`FL2
(
O_PACK
);

970 i‡(
	`°rEQ
(
d
,"package"))

971 
	`OPERATOR
(
PACKAGE
);

972 i‡(
	`°rEQ
(
d
,"pipe"))

973 
	`FOP22
(
O_PIPE
);

976 
SNARFWORD
;

977 i‡(
	`°rEQ
(
d
,"q")) {

978 
s
 = 
	`sˇn°r
(s-1);

979 
	`TERM
(
RSTRING
);

981 i‡(
	`°rEQ
(
d
,"qq")) {

982 
s
 = 
	`sˇn°r
(s-2);

983 
	`TERM
(
RSTRING
);

985 i‡(
	`°rEQ
(
d
,"qx")) {

986 
s
 = 
	`sˇn°r
(s-2);

987 
	`TERM
(
RSTRING
);

991 
SNARFWORD
;

992 i‡(
	`°rEQ
(
d
,"return"))

993 
	`OLDLOP
(
O_RETURN
);

994 i‡(
	`°rEQ
(
d
,"require")) {

995 
Æl°abs
 = 
TRUE
;

996 
	`UNI
(
O_REQUIRE
);

998 i‡(
	`°rEQ
(
d
,"reset"))

999 
	`UNI
(
O_RESET
);

1000 i‡(
	`°rEQ
(
d
,"redo"))

1001 
	`LOOPX
(
O_REDO
);

1002 i‡(
	`°rEQ
(
d
,"rename"))

1003 
	`FUN2
(
O_RENAME
);

1004 i‡(
	`°rEQ
(
d
,"rand"))

1005 
	`UNI
(
O_RAND
);

1006 i‡(
	`°rEQ
(
d
,"rmdir"))

1007 
	`UNI
(
O_RMDIR
);

1008 i‡(
	`°rEQ
(
d
,"rindex"))

1009 
	`FUN2x
(
O_RINDEX
);

1010 i‡(
	`°rEQ
(
d
,"read"))

1011 
	`FOP3
(
O_READ
);

1012 i‡(
	`°rEQ
(
d
,"readdir"))

1013 
	`FOP
(
O_READDIR
);

1014 i‡(
	`°rEQ
(
d
,"rewinddir"))

1015 
	`FOP
(
O_REWINDDIR
);

1016 i‡(
	`°rEQ
(
d
,"recv"))

1017 
	`FOP4
(
O_RECV
);

1018 i‡(
	`°rEQ
(
d
,"reverse"))

1019 
	`LOP
(
O_REVERSE
);

1020 i‡(
	`°rEQ
(
d
,"readlink"))

1021 
	`UNI
(
O_READLINK
);

1024 i‡(
s
[1] == '\'') {

1025 
d
 = "s";

1026 
s
++;

1029 
SNARFWORD
;

1031 i‡(
	`°rEQ
(
d
,"s")) {

1032 
s
 = 
	`sˇnsub°
(s);

1033 i‡(
yylvÆ
.
¨g
)

1034 
	`TERM
(
SUBST
);

1036 
	`RETURN
(1);

1038 
d
[1]) {

1043 i‡(
	`°rEQ
(
d
,"scalar"))

1044 
	`UNI
(
O_SCALAR
);

1049 i‡(
	`°rEQ
(
d
,"select"))

1050 
	`OPERATOR
(
SSELECT
);

1051 i‡(
	`°rEQ
(
d
,"seek"))

1052 
	`FOP3
(
O_SEEK
);

1053 i‡(
	`°rEQ
(
d
,"semctl"))

1054 
	`FUN4
(
O_SEMCTL
);

1055 i‡(
	`°rEQ
(
d
,"semget"))

1056 
	`FUN3
(
O_SEMGET
);

1057 i‡(
	`°rEQ
(
d
,"semop"))

1058 
	`FUN2
(
O_SEMOP
);

1059 i‡(
	`°rEQ
(
d
,"send"))

1060 
	`FOP3
(
O_SEND
);

1061 i‡(
	`°rEQ
(
d
,"setpgrp"))

1062 
	`FUN2
(
O_SETPGRP
);

1063 i‡(
	`°rEQ
(
d
,"setpriority"))

1064 
	`FUN3
(
O_SETPRIORITY
);

1065 i‡(
	`°rEQ
(
d
,"sethostent"))

1066 
	`FUN1
(
O_SHOSTENT
);

1067 i‡(
	`°rEQ
(
d
,"setnetent"))

1068 
	`FUN1
(
O_SNETENT
);

1069 i‡(
	`°rEQ
(
d
,"setservent"))

1070 
	`FUN1
(
O_SSERVENT
);

1071 i‡(
	`°rEQ
(
d
,"setprotoent"))

1072 
	`FUN1
(
O_SPROTOENT
);

1073 i‡(
	`°rEQ
(
d
,"setpwent"))

1074 
	`FUN0
(
O_SPWENT
);

1075 i‡(
	`°rEQ
(
d
,"setgrent"))

1076 
	`FUN0
(
O_SGRENT
);

1077 i‡(
	`°rEQ
(
d
,"seekdir"))

1078 
	`FOP2
(
O_SEEKDIR
);

1079 i‡(
	`°rEQ
(
d
,"setsockopt"))

1080 
	`FOP4
(
O_SSOCKOPT
);

1086 i‡(
	`°rEQ
(
d
,"shift"))

1087 
	`TERM
(
SHIFT
);

1088 i‡(
	`°rEQ
(
d
,"shmctl"))

1089 
	`FUN3
(
O_SHMCTL
);

1090 i‡(
	`°rEQ
(
d
,"shmget"))

1091 
	`FUN3
(
O_SHMGET
);

1092 i‡(
	`°rEQ
(
d
,"shmread"))

1093 
	`FUN4
(
O_SHMREAD
);

1094 i‡(
	`°rEQ
(
d
,"shmwrite"))

1095 
	`FUN4
(
O_SHMWRITE
);

1096 i‡(
	`°rEQ
(
d
,"shutdown"))

1097 
	`FOP2
(
O_SHUTDOWN
);

1100 i‡(
	`°rEQ
(
d
,"sin"))

1101 
	`UNI
(
O_SIN
);

1107 i‡(
	`°rEQ
(
d
,"sleep"))

1108 
	`UNI
(
O_SLEEP
);

1114 i‡(
	`°rEQ
(
d
,"socket"))

1115 
	`FOP4
(
O_SOCKET
);

1116 i‡(
	`°rEQ
(
d
,"socketpair"))

1117 
	`FOP25
(
O_SOCKPAIR
);

1118 i‡(
	`°rEQ
(
d
,"sort")) {

1119 
	`checkcomma
(
s
,"subroutineÇame");

1120 
d
 = 
bu„nd
;

1121 
s
 < 
d
 && 
	`ißscii
(*sË&& 
	`is•a˚
(*s)) s++;

1122 i‡(*
s
 == ';' || *s == ')')

1123 
	`Áèl
("sort isÇowáÑeserved word");

1124 i‡(
	`ißscii
(*
s
Ë&& (
	`ißÕha
(*s) || *s == '_')) {

1125 
d
 = 
s
; 
	`ißÕha
(*dË|| 
	`isdigô
(*d) || *d == '_'; d++) ;

1126 
	`°∫˝y
(
tokíbuf
,
s
,
d
-s);

1127 i‡(
	`°rNE
(
tokíbuf
,"keys") &&

1128 
	`°rNE
(
tokíbuf
,"values") &&

1129 
	`°rNE
(
tokíbuf
,"split") &&

1130 
	`°rNE
(
tokíbuf
,"grep") &&

1131 
	`°rNE
(
tokíbuf
,"readdir") &&

1132 
	`°rNE
(
tokíbuf
,"unpack") &&

1133 
	`°rNE
(
tokíbuf
,"do") &&

1134 (
d
 >
bu„nd
 || 
	`is•a˚
(*d)) )

1135 *(--
s
) = '\\';

1137 
	`LOP
(
O_SORT
);

1141 i‡(
	`°rEQ
(
d
,"split"))

1142 
	`TERM
(
SPLIT
);

1143 i‡(
	`°rEQ
(
d
,"sprintf"))

1144 
	`FL
(
O_SPRINTF
);

1145 i‡(
	`°rEQ
(
d
,"splice")) {

1146 
yylvÆ
.
ivÆ
 = 
O_SPLICE
;

1147 
	`OPERATOR
(
PUSH
);

1151 i‡(
	`°rEQ
(
d
,"sqrt"))

1152 
	`UNI
(
O_SQRT
);

1155 i‡(
	`°rEQ
(
d
,"srand"))

1156 
	`UNI
(
O_SRAND
);

1161 i‡(
	`°rEQ
(
d
,"stat"))

1162 
	`FOP
(
O_STAT
);

1163 i‡(
	`°rEQ
(
d
,"study")) {

1164 
ßw°udy
++;

1165 
	`LFUN
(
O_STUDY
);

1169 i‡(
	`°rEQ
(
d
,"substr"))

1170 
	`FUN2x
(
O_SUBSTR
);

1171 i‡(
	`°rEQ
(
d
,"sub")) {

1172 
sublöe
 = 
curcmd
->
c_löe
;

1173 
d
 = 
bu„nd
;

1174 
s
 < 
d
 && 
	`is•a˚
(*s))

1175 
s
++;

1176 i‡(
	`ißÕha
(*
s
) || *s == '_' || *s == '\'') {

1177 i‡(
≥ædb
) {

1178 
	`°r_s£t
(
sub«me
,
cur°«me
);

1179 
	`°r_nˇt
(
sub«me
,"'",1);

1180 
d
 = 
s
+1;

1181 
	`ißÕha
(*
d
Ë|| 
	`isdigô
(*d) || *d == '_' || *d == '\'';

1182 
d
++);

1183 i‡(
d
[-1] == '\'')

1184 
d
--;

1185 
	`°r_nˇt
(
sub«me
,
s
,
d
-s);

1187 *(--
s
) = '\\';

1189 i‡(
≥ædb
)

1190 
	`°r_£t
(
sub«me
,"?");

1191 
	`OPERATOR
(
SUB
);

1199 i‡(
	`°rEQ
(
d
,"system")) {

1200 
	`£t_csh
();

1201 
	`LOP
(
O_SYSTEM
);

1203 i‡(
	`°rEQ
(
d
,"symlink"))

1204 
	`FUN2
(
O_SYMLINK
);

1205 i‡(
	`°rEQ
(
d
,"syscall"))

1206 
	`LOP
(
O_SYSCALL
);

1207 i‡(
	`°rEQ
(
d
,"sysread"))

1208 
	`FOP3
(
O_SYSREAD
);

1209 i‡(
	`°rEQ
(
d
,"syswrite"))

1210 
	`FOP3
(
O_SYSWRITE
);

1217 
SNARFWORD
;

1218 i‡(
	`°rEQ
(
d
,"tr")) {

1219 
s
 = 
	`sˇ¡øns
(s);

1220 i‡(
yylvÆ
.
¨g
)

1221 
	`TERM
(
TRANS
);

1223 
	`RETURN
(1);

1225 i‡(
	`°rEQ
(
d
,"tell"))

1226 
	`FOP
(
O_TELL
);

1227 i‡(
	`°rEQ
(
d
,"telldir"))

1228 
	`FOP
(
O_TELLDIR
);

1229 i‡(
	`°rEQ
(
d
,"time"))

1230 
	`FUN0
(
O_TIME
);

1231 i‡(
	`°rEQ
(
d
,"times"))

1232 
	`FUN0
(
O_TMS
);

1233 i‡(
	`°rEQ
(
d
,"truncate"))

1234 
	`FOP2
(
O_TRUNCATE
);

1237 
SNARFWORD
;

1238 i‡(
	`°rEQ
(
d
,"using"))

1239 
	`OPERATOR
(
USING
);

1240 i‡(
	`°rEQ
(
d
,"until")) {

1241 
yylvÆ
.
ivÆ
 = 
curcmd
->
c_löe
;

1242 
	`OPERATOR
(
UNTIL
);

1244 i‡(
	`°rEQ
(
d
,"unless")) {

1245 
yylvÆ
.
ivÆ
 = 
curcmd
->
c_löe
;

1246 
	`OPERATOR
(
UNLESS
);

1248 i‡(
	`°rEQ
(
d
,"unlink"))

1249 
	`LOP
(
O_UNLINK
);

1250 i‡(
	`°rEQ
(
d
,"undef"))

1251 
	`LFUN
(
O_UNDEF
);

1252 i‡(
	`°rEQ
(
d
,"unpack"))

1253 
	`FUN2
(
O_UNPACK
);

1254 i‡(
	`°rEQ
(
d
,"utime"))

1255 
	`LOP
(
O_UTIME
);

1256 i‡(
	`°rEQ
(
d
,"umask"))

1257 
	`UNI
(
O_UMASK
);

1258 i‡(
	`°rEQ
(
d
,"unshift")) {

1259 
yylvÆ
.
ivÆ
 = 
O_UNSHIFT
;

1260 
	`OPERATOR
(
PUSH
);

1264 
SNARFWORD
;

1265 i‡(
	`°rEQ
(
d
,"values"))

1266 
	`HFUN
(
O_VALUES
);

1267 i‡(
	`°rEQ
(
d
,"vec")) {

1268 
ßwvec
 = 
TRUE
;

1269 
	`FUN3
(
O_VEC
);

1273 
SNARFWORD
;

1274 i‡(
	`°rEQ
(
d
,"while")) {

1275 
yylvÆ
.
ivÆ
 = 
curcmd
->
c_löe
;

1276 
	`OPERATOR
(
WHILE
);

1278 i‡(
	`°rEQ
(
d
,"warn"))

1279 
	`LOP
(
O_WARN
);

1280 i‡(
	`°rEQ
(
d
,"wait"))

1281 
	`FUN0
(
O_WAIT
);

1282 i‡(
	`°rEQ
(
d
,"waitpid"))

1283 
	`FUN2
(
O_WAITPID
);

1284 i‡(
	`°rEQ
(
d
,"wantarray")) {

1285 
yylvÆ
.
¨g
 = 
	`›_√w
(1);

1286 
yylvÆ
.
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1287 
yylvÆ
.
¨g
[1].
¨g_ty≥
 = 
A_WANTARRAY
;

1288 
	`TERM
(
RSTRING
);

1290 i‡(
	`°rEQ
(
d
,"write"))

1291 
	`FOP
(
O_WRITE
);

1294 
SNARFWORD
;

1295 i‡(!
ex≥˘ãrm
 && 
	`°rEQ
(
d
,"x"))

1296 
	`MOP
(
O_REPEAT
);

1299 i‡(
s
[1] == '\'') {

1300 
d
 = "y";

1301 
s
++;

1304 
SNARFWORD
;

1306 i‡(
	`°rEQ
(
d
,"y")) {

1307 
s
 = 
	`sˇ¡øns
(s);

1308 
	`TERM
(
TRANS
);

1312 
SNARFWORD
;

1315 
yylvÆ
.
cvÆ
 = 
	`ßve°r
(
d
);

1316 
ex≥˘ãrm
 = 
FALSE
;

1317 i‡(
ﬁdﬁdbuÂå
 && oldﬁdbuÂå < 
buÂå
) {

1318 
	`is•a˚
(*
ﬁdﬁdbuÂå
))

1319 
ﬁdﬁdbuÂå
++;

1320 i‡(*
ﬁdﬁdbuÂå
 ='p' && 
	`°∫EQ
(oldoldbufptr,"print",5))

1321 
ex≥˘ãrm
 = 
TRUE
;

1322 i‡(*
ﬁdﬁdbuÂå
 ='s' && 
	`°∫EQ
(oldoldbufptr,"sort",4))

1323 
ex≥˘ãrm
 = 
TRUE
;

1325  (
CLINE
, 
buÂå
 = 
s
, ()
WORD
);

1326 
	}
}

1329 
	$checkcomma
(
s
,
wh©
)

1330 *
s
;

1331 *
wh©
;

1333 *
somew‹d
;

1335 i‡(*
s
 == '(')

1336 
s
++;

1337 
s
 < 
bu„nd
 && 
	`ißscii
(*sË&& 
	`is•a˚
(*s))

1338 
s
++;

1339 i‡(
	`ißscii
(*
s
Ë&& (
	`ißÕha
(*s) || *s == '_')) {

1340 
somew‹d
 = 
s
++;

1341 
	`ißÕha
(*
s
Ë|| 
	`isdigô
(*s) || *s == '_')

1342 
s
++;

1343 
s
 < 
bu„nd
 && 
	`is•a˚
(*s))

1344 
s
++;

1345 i‡(*
s
 == ',') {

1346 *
s
 = '\0';

1347 
somew‹d
 = 
	`ö°r
(

1350 
somew‹d
);

1351 *
s
 = ',';

1352 i‡(
somew‹d
)

1354 
	`Áèl
("Nÿcomm®Ælowedá·î %s", 
wh©
);

1357 
	}
}

1360 
	$sˇnidít
(
s
,
£nd
,
de°
)

1361 *
s
;

1362 *
£nd
;

1363 *
de°
;

1365 *
d
;

1366 
bøckës
 = 0;

1368 
ª∑r£
 = 
NuŒch
;

1369 
s
++;

1370 
d
 = 
de°
;

1371 i‡(
	`isdigô
(*
s
)) {

1372 
	`isdigô
(*
s
))

1373 *
d
++ = *
s
++;

1376 
	`ißÕha
(*
s
Ë|| 
	`isdigô
(*s) || *s == '_' || *s == '\'')

1377 *
d
++ = *
s
++;

1379 
d
 > 
de°
+1 && d[-1] == '\'')

1380 
d
--,
s
--;

1381 *
d
 = '\0';

1382 
d
 = 
de°
;

1383 i‡(!*
d
) {

1384 *
d
 = *
s
++;

1385 i‡(*
d
 == '{' ) {

1386 
d
 = 
de°
;

1387 
bøckës
++;

1388 
s
 < 
£nd
 && 
bøckës
) {

1389 i‡(!
ª∑r£
 && (
d
 =
de°
 || (*
s
 && 
	`ißscii
(*s) &&

1390 (
	`ißÕha
(*
s
Ë|| 
	`isdigô
(*s) || *s == '_') ))) {

1391 *
d
++ = *
s
++;

1394 i‡(!
ª∑r£
)

1395 
ª∑r£
 = 
s
;

1396 *
s
++) {

1399 
bøckës
--;

1400 i‡(
ª∑r£
 &&Ñï¨£ =
s
 - 1)

1401 
ª∑r£
 = 
NuŒch
;

1404 
bøckës
++;

1408 *
d
 = '\0';

1409 
d
 = 
de°
;

1412 
d
[1] = '\0';

1414 i‡(*
d
 ='^' && (
	`isuµî
(*
s
Ë|| 
	`ödex
("[\\]^_?",*s)))

1415 *
d
 = *
s
++ ^ 64;

1416  
s
;

1417 
	}
}

1419 
STR
 *

1420 
	$sˇnc⁄°
(
°rög
,
Àn
)

1421 *
°rög
;

1422 
Àn
;

1424 
STR
 *
ªt°r
;

1425 *
t
;

1426 *
d
;

1427 *
e
;

1429 i‡(
	`ödex
(
°rög
,'|')) {

1430  
NuŒ°r
;

1432 
ªt°r
 = 
	`Så_√w
(86,
Àn
);

1433 
	`°r_n£t
(
ªt°r
,
°rög
,
Àn
);

1434 
t
 = 
	`°r_gë
(
ªt°r
);

1435 
e
 = 
t
 + 
Àn
;

1436 
ªt°r
->
°r_u
.
°r_u£ful
 = 100;

1437 
d
=
t
; d < 
e
; ) {

1438 *
d
) {

1440 i‡(
	`isdigô
(
d
[1]))

1441 
e
 = 
d
;

1443 
defch¨
;

1446 
e
 = 
d
;

1449 i‡(
d
[1] && 
	`ödex
("wWbB0123456789sSdDlLuUE",d[1])) {

1450 
e
 = 
d
;

1453 ()
	`bc›y
(
d
+1,d,
e
-d);

1454 
e
--;

1455 *
d
) {

1457 *
d
 = '\n';

1460 *
d
 = '\t';

1463 *
d
 = '\f';

1466 *
d
 = '\r';

1469 *
d
 = '\033';

1472 *
d
 = '\007';

1477 
defch¨
:

1478 i‡(
d
[1] == '*' || (d[1] == '{' && d[2] == '0') || d[1] == '?') {

1479 
e
 = 
d
;

1482 
d
++;

1485 i‡(
d
 =
t
) {

1486 
	`°r_‰ì
(
ªt°r
);

1487  
NuŒ°r
;

1489 *
d
 = '\0';

1490 
ªt°r
->
°r_cur
 = 
d
 - 
t
;

1491  
ªt°r
;

1492 
	}
}

1495 
	$sˇ≈©
(
s
)

1496 *
s
;

1498 
SPAT
 *
•©
;

1499 *
d
;

1500 *
e
;

1501 
Àn
;

1502 
SPAT
 
ßve•©
;

1503 
STR
 *
°r
 = 
	`Så_√w
(93,0);

1505 
	`Newz
(801,
•©
,1,
SPAT
);

1506 
•©
->
•©_√xt
 = 
cur°ash
->
tbl_•©roŸ
;

1507 
cur°ash
->
tbl_•©roŸ
 = 
•©
;

1509 *
s
++) {

1511 
s
++;

1516 
•©
->
•©_Êags
 |
SPAT_ONCE
;

1519 
	`Áèl
("panic: scanpat");

1521 
s
 = 
	`°r_≠≥nd_tûl
(
°r
,s,
bu„nd
,s[-1],
∑éóve
);

1522 i‡(
s
 >
bu„nd
) {

1523 
	`°r_‰ì
(
°r
);

1524 
	`yyîr‹
("SearchÖatternÇotÅerminated");

1525 
yylvÆ
.
¨g
 = 
NuŒ¨g
;

1526  
s
;

1528 
s
++;

1529 *
s
 == 'i' || *s == 'o') {

1530 i‡(*
s
 == 'i') {

1531 
s
++;

1532 
ßwi
 = 
TRUE
;

1533 
•©
->
•©_Êags
 |
SPAT_FOLD
;

1535 i‡(*
s
 == 'o') {

1536 
s
++;

1537 
•©
->
•©_Êags
 |
SPAT_KEEP
;

1540 
Àn
 = 
°r
->
°r_cur
;

1541 
e
 = 
°r
->
°r_±r
 + 
Àn
;

1542 
d
 = 
°r
->
°r_±r
; d < 
e
; d++) {

1543 i‡(*
d
 == '\\')

1544 
d
++;

1545 i‡((*
d
 == '$' && d[1] && d[1] != '|' && d[1] != ')') ||

1546 (*
d
 == '@')) {

1547 
ARG
 *
¨g
;

1549 
•©
->
•©_ru¡ime
 = 
¨g
 = 
	`›_√w
(1);

1550 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1551 
¨g
[1].
¨g_ty≥
 = 
A_DOUBLE
;

1552 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
	`°r_smake
(
°r
);

1553 
d
 = 
	`sˇnidít
(d,
bu„nd
,
buf
);

1554 ()
	`°abít
(
buf
,
TRUE
);

1555 ; 
d
 < 
e
; d++) {

1556 i‡(*
d
 == '\\')

1557 
d
++;

1558 i‡(*
d
 == '$' && d[1] && d[1] != '|' && d[1] != ')') {

1559 
d
 = 
	`sˇnidít
(d,
bu„nd
,
buf
);

1560 ()
	`°abít
(
buf
,
TRUE
);

1562 i‡(*
d
 == '@') {

1563 
d
 = 
	`sˇnidít
(d,
bu„nd
,
buf
);

1564 i‡(
	`°rEQ
(
buf
,"ARGV") || strEQ(buf,"ENV") ||

1565 
	`°rEQ
(
buf
,"SIG") || strEQ(buf,"INC"))

1566 ()
	`°abít
(
buf
,
TRUE
);

1569 
gŸ_∑t
;

1572 i‡(
•©
->
•©_Êags
 & 
SPAT_FOLD
)

1573 #ifde‡
STRUCTCOPY


1574 
ßve•©
 = *
•©
;

1576 ()
	`bc›y
((*)
•©
, (*)&
ßve•©
, (
SPAT
));

1578 i‡(*
°r
->
°r_±r
 == '^') {

1579 
•©
->
•©_sh‹t
 = 
	`sˇnc⁄°
(
°r
->
°r_±r
+1,
Àn
-1);

1580 i‡(
•©
->
•©_sh‹t
) {

1581 
•©
->
•©_¶í
 = s∑t->
•©_sh‹t
->
°r_cur
;

1582 i‡(
•©
->
•©_¶í
 =
Àn
 - 1)

1583 
•©
->
•©_Êags
 |
SPAT_ALL
;

1587 
•©
->
•©_Êags
 |
SPAT_SCANFIRST
;

1588 
•©
->
•©_sh‹t
 = 
	`sˇnc⁄°
(
°r
->
°r_±r
,
Àn
);

1589 i‡(
•©
->
•©_sh‹t
) {

1590 
•©
->
•©_¶í
 = s∑t->
•©_sh‹t
->
°r_cur
;

1591 i‡(
•©
->
•©_¶í
 =
Àn
)

1592 
•©
->
•©_Êags
 |
SPAT_ALL
;

1595 i‡((
•©
->
•©_Êags
 & 
SPAT_ALL
Ë&& (•©->•©_Êag†& 
SPAT_SCANFIRST
)) {

1596 
	`fbmcompûe
(
•©
->
•©_sh‹t
, s∑t->
•©_Êags
 & 
SPAT_FOLD
);

1597 
•©
->
•©_ªgexp
 = 
	`ªgcomp
(
°r
->
°r_±r
,°r->°r_±r+
Àn
,

1598 
•©
->
•©_Êags
 & 
SPAT_FOLD
);

1604 i‡(
•©
->
•©_Êags
 & 
SPAT_FOLD
)

1605 #ifde‡
STRUCTCOPY


1606 *
•©
 = 
ßve•©
;

1608 ()
	`bc›y
((*)&
ßve•©
, (*)
•©
, (
SPAT
));

1610 i‡(
•©
->
•©_sh‹t
)

1611 
	`fbmcompûe
(
•©
->
•©_sh‹t
, s∑t->
•©_Êags
 & 
SPAT_FOLD
);

1612 
•©
->
•©_ªgexp
 = 
	`ªgcomp
(
°r
->
°r_±r
,°r->°r_±r+
Àn
,

1613 
•©
->
•©_Êags
 & 
SPAT_FOLD
);

1614 
	`hoi°mu°
(
•©
);

1616 
gŸ_∑t
:

1617 
	`°r_‰ì
(
°r
);

1618 
yylvÆ
.
¨g
 = 
	`make_m©ch
(
O_MATCH
,
	`°ab2¨g
(
A_STAB
,
def°ab
),
•©
);

1619  
s
;

1620 
	}
}

1623 
	$sˇnsub°
(
s
)

1624 *
s
;

1626 
SPAT
 *
•©
;

1627 *
d
;

1628 *
e
;

1629 
Àn
;

1630 
STR
 *
°r
 = 
	`Så_√w
(93,0);

1632 
	`Newz
(802,
•©
,1,
SPAT
);

1633 
•©
->
•©_√xt
 = 
cur°ash
->
tbl_•©roŸ
;

1634 
cur°ash
->
tbl_•©roŸ
 = 
•©
;

1636 
s
 = 
	`°r_≠≥nd_tûl
(
°r
,s+1,
bu„nd
,*s,
∑éóve
);

1637 i‡(
s
 >
bu„nd
) {

1638 
	`°r_‰ì
(
°r
);

1639 
	`yyîr‹
("SubstitutionÖatternÇotÅerminated");

1640 
yylvÆ
.
¨g
 = 
NuŒ¨g
;

1641  
s
;

1643 
Àn
 = 
°r
->
°r_cur
;

1644 
e
 = 
°r
->
°r_±r
 + 
Àn
;

1645 
d
 = 
°r
->
°r_±r
; d < 
e
; d++) {

1646 i‡(*
d
 == '\\')

1647 
d
++;

1648 i‡((*
d
 == '$' && d[1] && d[1] != '|' && d[1] != ')') ||

1649 *
d
 == '@' ) {

1650 
ARG
 *
¨g
;

1652 
•©
->
•©_ru¡ime
 = 
¨g
 = 
	`›_√w
(1);

1653 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1654 
¨g
[1].
¨g_ty≥
 = 
A_DOUBLE
;

1655 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
	`°r_smake
(
°r
);

1656 
d
 = 
	`sˇnidít
(d,
bu„nd
,
buf
);

1657 ()
	`°abít
(
buf
,
TRUE
);

1658 ; *
d
; d++) {

1659 i‡(*
d
 == '$' && d[1] && d[-1] != '\\' && d[1] != '|') {

1660 
d
 = 
	`sˇnidít
(d,
bu„nd
,
buf
);

1661 ()
	`°abít
(
buf
,
TRUE
);

1663 i‡(*
d
 == '@' && d[-1] != '\\') {

1664 
d
 = 
	`sˇnidít
(d,
bu„nd
,
buf
);

1665 i‡(
	`°rEQ
(
buf
,"ARGV") || strEQ(buf,"ENV") ||

1666 
	`°rEQ
(
buf
,"SIG") || strEQ(buf,"INC"))

1667 ()
	`°abít
(
buf
,
TRUE
);

1670 
gë_ª∂
;

1673 i‡(*
°r
->
°r_±r
 == '^') {

1674 
•©
->
•©_sh‹t
 = 
	`sˇnc⁄°
(
°r
->
°r_±r
+1,
Àn
-1);

1675 i‡(
•©
->
•©_sh‹t
)

1676 
•©
->
•©_¶í
 = s∑t->
•©_sh‹t
->
°r_cur
;

1679 
•©
->
•©_Êags
 |
SPAT_SCANFIRST
;

1680 
•©
->
•©_sh‹t
 = 
	`sˇnc⁄°
(
°r
->
°r_±r
,
Àn
);

1681 i‡(
•©
->
•©_sh‹t
)

1682 
•©
->
•©_¶í
 = s∑t->
•©_sh‹t
->
°r_cur
;

1684 
gë_ª∂
:

1685 
s
 = 
	`sˇn°r
(s);

1686 i‡(
s
 >
bu„nd
) {

1687 
	`°r_‰ì
(
°r
);

1688 
	`yyîr‹
("SubstitutionÑeplacementÇotÅerminated");

1689 
yylvÆ
.
¨g
 = 
NuŒ¨g
;

1690  
s
;

1692 
•©
->
•©_ª∂
 = 
yylvÆ
.
¨g
;

1693 
•©
->
•©_Êags
 |
SPAT_ONCE
;

1694 i‡((
•©
->
•©_ª∂
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
)

1695 
•©
->
•©_Êags
 |
SPAT_CONST
;

1696 i‡((
•©
->
•©_ª∂
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_DOUBLE
) {

1697 
STR
 *
tmp°r
;

1698 *
t
;

1700 
•©
->
•©_Êags
 |
SPAT_CONST
;

1701 
tmp°r
 = 
•©
->
•©_ª∂
[1].
¨g_±r
.
¨g_°r
;

1702 
e
 = 
tmp°r
->
°r_±r
 +Åmp°r->
°r_cur
;

1703 
t
 = 
tmp°r
->
°r_±r
;Å < 
e
;Å++) {

1704 i‡(*
t
 ='$' &&Å[1] && (
	`ödex
("`'&+0123456789",t[1]) ||

1705 (
t
[1] ='{' && 
	`isdigô
(t[2])) ))

1706 
•©
->
•©_Êags
 &~
SPAT_CONST
;

1709 *
s
 == 'g' || *s == 'i' || *s == 'e' || *s == 'o') {

1710 i‡(*
s
 == 'e') {

1711 
s
++;

1712 i‡((
•©
->
•©_ª∂
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_DOUBLE
)

1713 
•©
->
•©_ª∂
[1].
¨g_ty≥
 = 
A_SINGLE
;

1714 
•©
->
•©_ª∂
 = 
	`make_›
(
O_EVAL
,2,

1715 
•©
->
•©_ª∂
,

1716 
NuŒ¨g
,

1717 
NuŒ¨g
);

1718 
•©
->
•©_Êags
 &~
SPAT_CONST
;

1720 i‡(*
s
 == 'g') {

1721 
s
++;

1722 
•©
->
•©_Êags
 &~
SPAT_ONCE
;

1724 i‡(*
s
 == 'i') {

1725 
s
++;

1726 
ßwi
 = 
TRUE
;

1727 
•©
->
•©_Êags
 |
SPAT_FOLD
;

1728 i‡(!(
•©
->
•©_Êags
 & 
SPAT_SCANFIRST
)) {

1729 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

1730 
•©
->
•©_sh‹t
 = 
NuŒ°r
;

1731 
•©
->
•©_¶í
 = 0;

1734 i‡(*
s
 == 'o') {

1735 
s
++;

1736 
•©
->
•©_Êags
 |
SPAT_KEEP
;

1739 i‡(
•©
->
•©_sh‹t
 && (•©->
•©_Êags
 & 
SPAT_SCANFIRST
))

1740 
	`fbmcompûe
(
•©
->
•©_sh‹t
, s∑t->
•©_Êags
 & 
SPAT_FOLD
);

1741 i‡(!
•©
->
•©_ru¡ime
) {

1742 
•©
->
•©_ªgexp
 = 
	`ªgcomp
(
°r
->
°r_±r
,°r->°r_±r+
Àn
,

1743 
•©
->
•©_Êags
 & 
SPAT_FOLD
);

1744 
	`hoi°mu°
(
•©
);

1746 
yylvÆ
.
¨g
 = 
	`make_m©ch
(
O_SUBST
,
	`°ab2¨g
(
A_STAB
,
def°ab
),
•©
);

1747 
	`°r_‰ì
(
°r
);

1748  
s
;

1749 
	}
}

1751 
	$hoi°mu°
(
•©
)

1752 
SPAT
 *
•©
;

1754 i‡(
•©
->
•©_ªgexp
->
ªgmu°
) {

1755 i‡(
•©
->
•©_sh‹t
 &&

1756 
	`°r_eq
(
•©
->
•©_sh‹t
,•©->
•©_ªgexp
->
ªgmu°
))

1758 i‡(
•©
->
•©_Êags
 & 
SPAT_SCANFIRST
) {

1759 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

1760 
•©
->
•©_sh‹t
 = 
NuŒ°r
;

1763 
	`°r_‰ì
(
•©
->
•©_ªgexp
->
ªgmu°
);

1764 
•©
->
•©_ªgexp
->
ªgmu°
 = 
NuŒ°r
;

1768 i‡(!
•©
->
•©_sh‹t
 ||

1769 ((
•©
->
•©_Êags
 & 
SPAT_SCANFIRST
) &&

1770 (
•©
->
•©_sh‹t
->
°r_cur
 < s∑t->
•©_ªgexp
->
ªgmu°
->str_cur) )){

1771 
	`°r_‰ì
(
•©
->
•©_sh‹t
);

1772 
•©
->
•©_sh‹t
 = s∑t->
•©_ªgexp
->
ªgmu°
;

1773 
•©
->
•©_ªgexp
->
ªgmu°
 = 
NuŒ°r
;

1774 
•©
->
•©_Êags
 |
SPAT_SCANFIRST
;

1777 
	}
}

1780 
	$ex∑nd_ch¨£t
(
s
,
Àn
,
ªéí
)

1781 *
s
;

1782 
Àn
;

1783 *
ªéí
;

1785 
t
[520];

1786 *
d
 = 
t
;

1787 
i
;

1788 *
£nd
 = 
s
 + 
Àn
;

1790 
s
 < 
£nd
 && 
d
 - 
t
 <= 256) {

1791 i‡(
s
[1] ='-' && s+2 < 
£nd
) {

1792 
i
 = (
s
[0] & 0377); i <= (s[2] & 0377); i++)

1793 *
d
++ = 
i
;

1794 
s
 += 3;

1797 *
d
++ = *
s
++;

1799 *
d
 = '\0';

1800 *
ªéí
 = 
d
 - 
t
;

1801  
	`nßve°r
(
t
,
d
-t);

1802 
	}
}

1805 
	$sˇ¡øns
(
s
)

1806 *
s
;

1808 
ARG
 *
¨g
 =

1809 
	`l
(
	`make_›
(
O_TRANS
,2,
	`°ab2¨g
(
A_STAB
,
def°ab
),
NuŒ¨g
,Nullarg));

1810 *
t
;

1811 *
r
;

1812 *
tbl
;

1813 
i
;

1814 
j
;

1815 
éí
, 
æí
;

1816 
squash
;

1817 
dñëe
;

1818 
com∂emít
;

1820 
	`New
(803,
tbl
,256,);

1821 
¨g
[2].
¨g_ty≥
 = 
A_NULL
;

1822 
¨g
[2].
¨g_±r
.
¨g_cvÆ
 = (*Ë
tbl
;

1823 
s
 = 
	`sˇn°r
(s);

1824 i‡(
s
 >
bu„nd
) {

1825 
	`yyîr‹
("TranslationÖatternÇotÅerminated");

1826 
yylvÆ
.
¨g
 = 
NuŒ¨g
;

1827  
s
;

1829 
t
 = 
	`ex∑nd_ch¨£t
(
yylvÆ
.
¨g
[1].
¨g_±r
.
¨g_°r
->
°r_±r
,

1830 
yylvÆ
.
¨g
[1].
¨g_±r
.
¨g_°r
->
°r_cur
,&
éí
);

1831 
	`¨g_‰ì
(
yylvÆ
.
¨g
);

1832 
s
 = 
	`sˇn°r
(s-1);

1833 i‡(
s
 >
bu„nd
) {

1834 
	`yyîr‹
("TranslationÑeplacementÇotÅerminated");

1835 
yylvÆ
.
¨g
 = 
NuŒ¨g
;

1836  
s
;

1838 
com∂emít
 = 
dñëe
 = 
squash
 = 0;

1839 *
s
 == 'c' || *s == 'd' || *s == 's') {

1840 i‡(*
s
 == 'c')

1841 
com∂emít
 = 1;

1842 i‡(*
s
 == 'd')

1843 
dñëe
 = 2;

1845 
squash
 = 1;

1846 
s
++;

1848 
r
 = 
	`ex∑nd_ch¨£t
(
yylvÆ
.
¨g
[1].
¨g_±r
.
¨g_°r
->
°r_±r
,

1849 
yylvÆ
.
¨g
[1].
¨g_±r
.
¨g_°r
->
°r_cur
,&
æí
);

1850 
	`¨g_‰ì
(
yylvÆ
.
¨g
);

1851 
¨g
[2].
¨g_Àn
 = 
dñëe
|
squash
;

1852 
yylvÆ
.
¨g
 =árg;

1853 i‡(!
æí
 && !
dñëe
) {

1854 
	`Sa„‰ì
(
r
);

1855 
r
 = 
t
; 
æí
 = 
éí
;

1857 i‡(
com∂emít
) {

1858 
	`Zîo
(
tbl
, 256, );

1859 
i
 = 0; i < 
éí
; i++)

1860 
tbl
[
t
[
i
] & 0377] = -1;

1861 
i
 = 0, 
j
 = 0; i < 256; i++) {

1862 i‡(!
tbl
[
i
]) {

1863 i‡(
j
 >
æí
) {

1864 i‡(
dñëe
)

1865 
tbl
[
i
] = -2;

1867 
tbl
[
i
] = 
r
[
j
-1];

1870 
tbl
[
i
] = 
r
[
j
++];

1875 
i
 = 0; i < 256; i++)

1876 
tbl
[
i
] = -1;

1877 
i
 = 0, 
j
 = 0; i < 
éí
; i++,j++) {

1878 i‡(
j
 >
æí
) {

1879 i‡(
dñëe
) {

1880 i‡(
tbl
[
t
[
i
] & 0377] == -1)

1881 
tbl
[
t
[
i
] & 0377] = -2;

1884 --
j
;

1886 i‡(
tbl
[
t
[
i
] & 0377] == -1)

1887 
tbl
[
t
[
i
] & 0377] = 
r
[
j
] & 0377;

1890 i‡(
r
 !
t
)

1891 
	`Sa„‰ì
(
r
);

1892 
	`Sa„‰ì
(
t
);

1893  
s
;

1894 
	}
}

1897 
	$sˇn°r
(
s
)

1898 *
s
;

1900 
ãrm
;

1901 *
d
;

1902 
ARG
 *
¨g
;

1903 *
£nd
;

1904 
boﬁ
 
makesögÀ
 = 
FALSE
;

1905 
STAB
 *
°ab
;

1906 
boﬁ
 
Æwaysdﬁœr
 = 
FALSE
;

1907 
boﬁ
 
hîeis
 = 
FALSE
;

1908 
STR
 *
hîewas
;

1909 
STR
 *
°r
;

1910 *
Àave
 = "\\$@nrtfbeacx0123456789[{]}lLuUE";

1911 
Àn
;

1913 
¨g
 = 
	`›_√w
(1);

1914 
yylvÆ
.
¨g
 =árg;

1915 
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1917 *
s
) {

1919 
¨g
[1].
¨g_ty≥
 = 
A_DOUBLE
;

1920 
makesögÀ
 = 
TRUE
;

1921 
ãrm
 = *
s
;

1922 i‡(
ãrm
 == '\'')

1923 
Àave
 = 
NuŒch
;

1924 
¢¨f_ô
;

1927 
i
;

1928 
shi·
;

1930 
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

1931 i‡(
s
[1] == 'x') {

1932 
shi·
 = 4;

1933 
s
 += 2;

1935 i‡(
s
[1] == '.')

1936 
decimÆ
;

1938 
shi·
 = 3;

1939 
i
 = 0;

1941 *
s
) {

1943 
out
;

1945 i‡(
shi·
 != 4)

1946 
	`yyîr‹
("Illegal octal digit");

1950 
i
 <<
shi·
;

1951 
i
 +*
s
++ & 15;

1955 i‡(
shi·
 != 4)

1956 
out
;

1957 
i
 <<= 4;

1958 
i
 +(*
s
++ & 7) + 9;

1962 
out
:

1963 
°r
 = 
	`Så_√w
(92,0);

1964 
	`°r_num£t
(
°r
,()
i
);

1965 i‡(
°r
->
°r_±r
) {

1966 
	`Sa„‰ì
(
°r
->
°r_±r
);

1967 
°r
->
°r_±r
 = 
NuŒch
;

1968 
°r
->
°r_Àn
 = så->
°r_cur
 = 0;

1970 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
°r
;

1975 
decimÆ
:

1976 
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

1977 
d
 = 
tokíbuf
;

1978 
	`isdigô
(*
s
) || *s == '_') {

1979 i‡(*
s
 == '_')

1980 
s
++;

1982 *
d
++ = *
s
++;

1984 i‡(*
s
 ='.' && s[1] && 
	`ödex
("0123456789eE ;",s[1])) {

1985 *
d
++ = *
s
++;

1986 
	`isdigô
(*
s
) || *s == '_') {

1987 i‡(*
s
 == '_')

1988 
s
++;

1990 *
d
++ = *
s
++;

1993 i‡(*
s
 && 
	`ödex
("eE",*s) && index("+-0123456789",s[1])) {

1994 *
d
++ = *
s
++;

1995 i‡(*
s
 == '+' || *s == '-')

1996 *
d
++ = *
s
++;

1997 
	`isdigô
(*
s
))

1998 *
d
++ = *
s
++;

2000 *
d
 = '\0';

2001 
°r
 = 
	`Så_√w
(92,0);

2002 
	`°r_num£t
(
°r
,
	`©of
(
tokíbuf
));

2003 i‡(
°r
->
°r_±r
) {

2004 
	`Sa„‰ì
(
°r
->
°r_±r
);

2005 
°r
->
°r_±r
 = 
NuŒch
;

2006 
°r
->
°r_Àn
 = så->
°r_cur
 = 0;

2008 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
°r
;

2011 i‡(*++
s
 == '<') {

2012 
hîeis
 = 
TRUE
;

2013 
d
 = 
tokíbuf
;

2014 i‡(!
rsÂ
)

2015 *
d
++ = '\n';

2016 i‡(*++
s
 && 
	`ödex
("`'\"",*s)) {

2017 
ãrm
 = *
s
++;

2018 
s
 = 
	`˝ytûl
(
d
,s,
bu„nd
,
ãrm
,&
Àn
);

2019 i‡(
s
 < 
bu„nd
)

2020 
s
++;

2021 
d
 +
Àn
;

2024 i‡(*
s
 == '\\')

2025 
s
++, 
ãrm
 = '\'';

2027 
ãrm
 = '"';

2028 
	`ißscii
(*
s
Ë&& (
	`ißÕha
(*sË|| 
	`isdigô
(*s) || *s == '_'))

2029 *
d
++ = *
s
++;

2031 *
d
++ = '\n';

2032 *
d
 = '\0';

2033 
Àn
 = 
d
 - 
tokíbuf
;

2034 
d
 = "\n";

2035 i‡(
rsÂ
 || !(
d
=
	`nö°r
(
s
,
bu„nd
,d,d+1)))

2036 
hîewas
 = 
	`°r_make
(
s
,
bu„nd
-s);

2038 
s
--, 
hîewas
 = 
	`°r_make
(s,
d
-s);

2039 
s
 +
hîewas
->
°r_cur
;

2040 i‡(
ãrm
 == '\'')

2041 
do_sögÀ
;

2042 i‡(
ãrm
 == '`')

2043 
do_back
;

2044 
do_doubÀ
;

2046 
d
 = 
tokíbuf
;

2047 
s
 = 
	`˝ytûl
(
d
,s,
bu„nd
,'>',&
Àn
);

2048 i‡(
s
 < 
bu„nd
)

2049 
s
++;

2050 i‡(*
d
 == '$') d++;

2051 *
d
 &&

2052 (
	`ißÕha
(*
d
Ë|| 
	`isdigô
(*d) || *d == '_' || *d == '\''))

2053 
d
++;

2054 i‡(
d
 - 
tokíbuf
 !
Àn
) {

2055 
d
 = 
tokíbuf
;

2056 
¨g
[1].
¨g_ty≥
 = 
A_GLOB
;

2057 
d
 = 
	`nßve°r
(d,
Àn
);

2058 
¨g
[1].
¨g_±r
.
¨g_°ab
 = 
°ab
 = 
	`gí°ab
();

2059 
	`°ab_io
(
°ab
Ë
	`°io_√w
();

2060 
	`°ab_vÆ
(
°ab
Ë
	`°r_make
(
d
,
Àn
);

2061 
	`Sa„‰ì
(
d
);

2062 
	`£t_csh
();

2065 
d
 = 
tokíbuf
;

2066 i‡(!
Àn
)

2067 ()
	`°r˝y
(
d
,"ARGV");

2068 i‡(*
d
 == '$') {

2069 
¨g
[1].
¨g_ty≥
 = 
A_INDREAD
;

2070 
¨g
[1].
¨g_±r
.
¨g_°ab
 = 
	`°abít
(
d
+1,
TRUE
);

2073 
¨g
[1].
¨g_ty≥
 = 
A_READ
;

2074 
¨g
[1].
¨g_±r
.
¨g_°ab
 = 
	`°abít
(
d
,
TRUE
);

2075 i‡(!
	`°ab_io
(
¨g
[1].
¨g_±r
.
¨g_°ab
))

2076 
	`°ab_io
(
¨g
[1].
¨g_±r
.
¨g_°ab
Ë
	`°io_√w
();

2077 i‡(
	`°rEQ
(
d
,"ARGV")) {

2078 ()
	`Ødd
(
¨g
[1].
¨g_±r
.
¨g_°ab
);

2079 
	`°ab_io
(
¨g
[1].
¨g_±r
.
¨g_°ab
)->
Êags
 |=

2080 
IOF_ARGV
|
IOF_START
;

2087 
s
++;

2088 i‡(*
s
 == 'q') {

2089 
s
++;

2090 
do_doubÀ
;

2092 i‡(*
s
 == 'x') {

2093 
s
++;

2094 
do_back
;

2098 
do_sögÀ
:

2099 
ãrm
 = *
s
;

2100 
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

2101 
Àave
 = 
NuŒch
;

2102 
¢¨f_ô
;

2105 
do_doubÀ
:

2106 
ãrm
 = *
s
;

2107 
¨g
[1].
¨g_ty≥
 = 
A_DOUBLE
;

2108 
makesögÀ
 = 
TRUE
;

2109 
Æwaysdﬁœr
 = 
TRUE
;

2110 
¢¨f_ô
;

2112 
do_back
:

2113 
ãrm
 = *
s
;

2114 
¨g
[1].
¨g_ty≥
 = 
A_BACKTICK
;

2115 
	`£t_csh
();

2116 
Æwaysdﬁœr
 = 
TRUE
;

2117 
¢¨f_ô
:

2119 
STR
 *
tmp°r
;

2120 *
tmps
;

2122 
mu…i_°¨t
 = 
curcmd
->
c_löe
;

2123 i‡(
hîeis
)

2124 
mu…i_›í
 = 
mu…i_˛o£
 = '<';

2126 
mu…i_›í
 = 
ãrm
;

2127 i‡(
ãrm
 && (
tmps
 = 
	`ödex
("([{< )]}> )]}>",term)))

2128 
ãrm
 = 
tmps
[5];

2129 
mu…i_˛o£
 = 
ãrm
;

2131 
tmp°r
 = 
	`Så_√w
(87,80);

2132 i‡(
hîeis
) {

2133 
ãrm
 = *
tokíbuf
;

2134 i‡(!
rsÂ
) {

2135 
d
 = 
s
;

2136 
s
 < 
bu„nd
 &&

2137 (*
s
 !
ãrm
 || 
	`bcmp
(s,
tokíbuf
,
Àn
) != 0) ) {

2138 i‡(*
s
++ == '\n')

2139 
curcmd
->
c_löe
++;

2141 i‡(
s
 >
bu„nd
) {

2142 
curcmd
->
c_löe
 = 
mu…i_°¨t
;

2143 
	`Áèl
("EOF in string");

2145 
	`°r_n£t
(
tmp°r
,
d
+1,
s
-d);

2146 
s
 +
Àn
 - 1;

2147 
	`°r_nˇt
(
hîewas
,
s
,
bu„nd
-s);

2148 
	`°r_ª∂a˚
(
löe°r
,
hîewas
);

2149 
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
buÂå
 = 
s
 = 
	`°r_gë
(
löe°r
);

2150 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

2151 
hîeis
 = 
FALSE
;

2154 
	`°r_n£t
(
tmp°r
,"",0);

2157 
s
 = 
	`°r_≠≥nd_tûl
(
tmp°r
,s+1,
bu„nd
,
ãrm
,
Àave
);

2158 
s
 >
bu„nd
) {

2159 i‡(!
rsÂ
 ||

2160 !(
ﬁdﬁdbuÂå
 = 
ﬁdbuÂå
 = 
s
 = 
	`°r_gës
(
löe°r
, 
rsÂ
, 0))) {

2161 
curcmd
->
c_löe
 = 
mu…i_°¨t
;

2162 
	`Áèl
("EOF in string");

2164 
curcmd
->
c_löe
++;

2165 i‡(
≥ædb
) {

2166 
STR
 *
°r
 = 
	`Så_√w
(88,0);

2168 
	`°r_s£t
(
°r
,
löe°r
);

2169 
	`a°‹e
(
	`°ab_x¨øy
(
curcmd
->
c_fûe°ab
),

2170 ()
curcmd
->
c_löe
,
°r
);

2172 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

2173 i‡(
hîeis
) {

2174 i‡(*
s
 =
ãrm
 && 
	`bcmp
(s,
tokíbuf
,
Àn
) == 0) {

2175 
s
 = 
bu„nd
 - 1;

2176 *
s
 = ' ';

2177 
	`°r_sˇt
(
löe°r
,
hîewas
);

2178 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

2181 
s
 = 
bu„nd
;

2182 
	`°r_sˇt
(
tmp°r
,
löe°r
);

2186 
s
 = 
	`°r_≠≥nd_tûl
(
tmp°r
,s,
bu„nd
,
ãrm
,
Àave
);

2188 
mu…i_íd
 = 
curcmd
->
c_löe
;

2189 
s
++;

2190 i‡(
tmp°r
->
°r_cur
 + 5 <Åmp°r->
°r_Àn
) {

2191 
tmp°r
->
°r_Àn
 =Åmp°r->
°r_cur
 + 1;

2192 
	`Ríew
(
tmp°r
->
°r_±r
,Åmp°r->
°r_Àn
, );

2194 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_SINGLE
) {

2195 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
tmp°r
;

2198 
tmps
 = 
s
;

2199 
s
 = 
tmp°r
->
°r_±r
;

2200 
£nd
 = 
s
 + 
tmp°r
->
°r_cur
;

2201 
s
 < 
£nd
) {

2202 i‡(*
s
 ='\\' && s[1] && 
	`isdigô
(s[1]) && !isdigit(s[2]) &&

2203 !
Æwaysdﬁœr
 && 
s
[1] != '0')

2204 *
s
 = '$';

2205 i‡((*
s
 ='$' || *†='@'Ë&& s+1 < 
£nd
 &&

2206 (
Æwaysdﬁœr
 || (
s
[1] != ')' && s[1] != '|'))) {

2207 
makesögÀ
 = 
FALSE
;

2209 i‡(*
s
 ='\\' && s+1 < 
£nd
) {

2210 i‡(
	`ödex
("lLuUE",
s
[1]))

2211 
makesögÀ
 = 
FALSE
;

2212 
s
++;

2214 
s
++;

2216 
s
 = 
d
 = 
tmp°r
->
°r_±r
;

2217 
s
 < 
£nd
) {

2218 i‡((*
s
 ='$' && s+1 < 
£nd
 &&

2219 (
Æwaysdﬁœr
 || (
s
[1] != ')' && s[1] != '|')) ) ||

2220 (*
s
 ='@' && s+1 < 
£nd
) ) {

2221 
Àn
 = 
	`sˇnidít
(
s
,
£nd
,
tokíbuf
) - s;

2222 i‡(*
s
 ='$' || 
	`°rEQ
(
tokíbuf
,"ARGV")

2223 || 
	`°rEQ
(
tokíbuf
,"ENV")

2224 || 
	`°rEQ
(
tokíbuf
,"SIG")

2225 || 
	`°rEQ
(
tokíbuf
,"INC") )

2226 ()
	`°abít
(
tokíbuf
,
TRUE
);

2227 
Àn
--)

2228 *
d
++ = *
s
++;

2231 i‡(*
s
 ='\\' && s+1 < 
£nd
) {

2232 
s
++;

2233 *
s
) {

2235 i‡(!
makesögÀ
 && (!
Àave
 || (*
s
 && 
	`ödex
(leave,*s))))

2236 *
d
++ = '\\';

2237 *
d
++ = *
s
++;

2241 *
d
++ = 
	`sˇno˘
(
s
, 3, &
Àn
);

2242 
s
 +
Àn
;

2245 *
d
++ = 
	`sˇnhex
(++
s
, 2, &
Àn
);

2246 
s
 +
Àn
;

2249 
s
++;

2250 *
d
 = *
s
++;

2251 i‡(
	`i¶owî
(*
d
))

2252 *
d
 = 
	`touµî
(*d);

2253 *
d
++ ^= 64;

2256 *
d
++ = '\b';

2259 *
d
++ = '\n';

2262 *
d
++ = '\r';

2265 *
d
++ = '\f';

2268 *
d
++ = '\t';

2271 *
d
++ = '\033';

2274 *
d
++ = '\007';

2277 
s
++;

2280 *
d
++ = *
s
++;

2282 *
d
 = '\0';

2284 i‡((
¨g
[1].
¨g_ty≥
 & 
A_MASK
Ë=
A_DOUBLE
 && 
makesögÀ
)

2285 
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

2287 
tmp°r
->
°r_cur
 = 
d
 -Åmp°r->
°r_±r
;

2288 
¨g
[1].
¨g_±r
.
¨g_°r
 = 
tmp°r
;

2289 
s
 = 
tmps
;

2293 i‡(
hîeis
)

2294 
	`°r_‰ì
(
hîewas
);

2295  
s
;

2296 
	}
}

2298 
FCMD
 *

2299 
	$lﬂd_f‹m©
()

2301 
FCMD
 
‰oŸ
;

2302 
FCMD
 *
Êöebeg
;

2303 *
eﬁ
;

2304 
FCMD
 *
Âªv
 = &
‰oŸ
;

2305 
FCMD
 *
fcmd
;

2306 *
s
;

2307 *
t
;

2308 
STR
 *
°r
;

2309 
boﬁ
 
nobœnk
;

2310 
boﬁ
 
ª≥©î
;

2312 
	`Zîo
(&
‰oŸ
, 1, 
FCMD
);

2313 
s
 = 
buÂå
;

2314 
s
 < 
bu„nd
 || (
rsÂ
 && (†
	`°r_gës
(
löe°r
,rsÂ, 0)Ë!
NuŒch
)) {

2315 
curcmd
->
c_löe
++;

2316 i‡(
ö_evÆ
 && !
rsÂ
) {

2317 
eﬁ
 = 
	`ödex
(
s
,'\n');

2318 i‡(!
eﬁ
++)

2319 
eﬁ
 = 
bu„nd
;

2322 
eﬁ
 = 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

2323 i‡(
≥ædb
) {

2324 
STR
 *
tmp°r
 = 
	`Så_√w
(89,0);

2326 
	`°r_n£t
(
tmp°r
, 
s
, 
eﬁ
-s);

2327 
	`a°‹e
(
	`°ab_x¨øy
(
curcmd
->
c_fûe°ab
), ()curcmd->
c_löe
,
tmp°r
);

2329 i‡(*
s
 == '.') {

2330 
t
 = 
s
+1; *t == ' ' || *t == '\t';Å++) ;

2331 i‡(*
t
 == '\n') {

2332 
buÂå
 = 
s
;

2333  
‰oŸ
.
f_√xt
;

2336 i‡(*
s
 == '#') {

2337 
s
 = 
eﬁ
;

2340 
Êöebeg
 = 
NuŒfcmd
;

2341 
nobœnk
 = 
FALSE
;

2342 
ª≥©î
 = 
FALSE
;

2343 
s
 < 
eﬁ
) {

2344 
	`Newz
(804,
fcmd
,1,
FCMD
);

2345 
Âªv
->
f_√xt
 = 
fcmd
;

2346 
Âªv
 = 
fcmd
;

2347 
t
=
s
;Å < 
eﬁ
 && *t != '@' && *t != '^';Å++) {

2348 i‡(*
t
 == '~') {

2349 
nobœnk
 = 
TRUE
;

2350 *
t
 = ' ';

2351 i‡(
t
[1] == '~') {

2352 
ª≥©î
 = 
TRUE
;

2353 
t
[1] = ' ';

2357 
fcmd
->
f_¥e
 = 
	`nßve°r
(
s
, 
t
-s);

2358 
fcmd
->
f_¥esize
 = 
t
-
s
;

2359 
s
 = 
t
;

2360 i‡(
s
 >
eﬁ
) {

2361 i‡(
nobœnk
)

2362 
fcmd
->
f_Êags
 |
FC_NOBLANK
;

2363 i‡(
ª≥©î
)

2364 
fcmd
->
f_Êags
 |
FC_REPEAT
;

2367 i‡(!
Êöebeg
)

2368 
Êöebeg
 = 
fcmd
;

2369 i‡(*
s
++ == '^')

2370 
fcmd
->
f_Êags
 |
FC_CHOP
;

2371 *
s
) {

2373 
fcmd
->
f_ty≥
 = 
F_LINES
;

2374 *
s
 = '\0';

2377 
fcmd
->
f_ty≥
 = 
F_LEFT
;

2378 *
s
 == '<')

2379 
s
++;

2382 
fcmd
->
f_ty≥
 = 
F_RIGHT
;

2383 *
s
 == '>')

2384 
s
++;

2387 
fcmd
->
f_ty≥
 = 
F_CENTER
;

2388 *
s
 == '|')

2389 
s
++;

2395 i‡(*
s
 == '.' && s[1] == '.') {

2396 
deÁu…_f‹m©
;

2398 
fcmd
->
f_ty≥
 = 
F_DECIMAL
;

2400 *
p
;

2404 *
s
 == '#')

2405 
s
++;

2406 i‡(*
s
 == '.') {

2407 
s
++;

2408 
p
 = 
s
;

2409 *
s
 == '#')

2410 
s
++;

2411 
fcmd
->
f_decimÆs
 = 
s
-
p
;

2412 
fcmd
->
f_Êags
 |
FC_DP
;

2414 
fcmd
->
f_decimÆs
 = 0;

2419 
deÁu…_f‹m©
:

2420 
fcmd
->
f_ty≥
 = 
F_LEFT
;

2423 i‡(
fcmd
->
f_Êags
 & 
FC_CHOP
 && *
s
 == '.') {

2424 
fcmd
->
f_Êags
 |
FC_MORE
;

2425 *
s
 == '.')

2426 
s
++;

2428 
fcmd
->
f_size
 = 
s
-
t
;

2430 i‡(
Êöebeg
) {

2431 
agaö
:

2432 i‡(
s
 >
bu„nd
 &&

2433 (!
rsÂ
 || (
s
 = 
	`°r_gës
(
löe°r
,ÑsÂ, 0)Ë=
NuŒch
) )

2434 
badf‹m
;

2435 
curcmd
->
c_löe
++;

2436 i‡(
ö_evÆ
 && !
rsÂ
) {

2437 
eﬁ
 = 
	`ödex
(
s
,'\n');

2438 i‡(!
eﬁ
++)

2439 
eﬁ
 = 
bu„nd
;

2442 
eﬁ
 = 
bu„nd
 = 
löe°r
->
°r_±r
 +Üöe°r->
°r_cur
;

2443 i‡(
≥ædb
) {

2444 
STR
 *
tmp°r
 = 
	`Så_√w
(90,0);

2446 
	`°r_n£t
(
tmp°r
, 
s
, 
eﬁ
-s);

2447 
	`a°‹e
(
	`°ab_x¨øy
(
curcmd
->
c_fûe°ab
),

2448 ()
curcmd
->
c_löe
,
tmp°r
);

2450 i‡(
	`°∫EQ
(
s
,".\n",2)) {

2451 
buÂå
 = 
s
;

2452 
	`yyîr‹
("Missing valuesÜine");

2453  
‰oŸ
.
f_√xt
;

2455 i‡(*
s
 == '#') {

2456 
s
 = 
eﬁ
;

2457 
agaö
;

2459 
°r
 = 
Êöebeg
->
f_u≈¨£d
 = 
	`Så_√w
(91,
eﬁ
 - 
s
);

2460 
°r
->
°r_u
.
°r_hash
 = 
cur°ash
;

2461 
	`°r_n£t
(
°r
,"(",1);

2462 
Êöebeg
->
f_löe
 = 
curcmd
->
c_löe
;

2463 
eﬁ
[-1] = '\0';

2464 i‡(!
Êöebeg
->
f_√xt
->
f_ty≥
 || 
	`ödex
(
s
, ',')) {

2465 
eﬁ
[-1] = '\n';

2466 
	`°r_nˇt
(
°r
, 
s
, 
eﬁ
 - s - 1);

2467 
	`°r_nˇt
(
°r
,",$$);",5);

2468 
s
 = 
eﬁ
;

2471 
eﬁ
[-1] = '\n';

2472 
s
 < 
eﬁ
 && 
	`is•a˚
(*s))

2473 
s
++;

2474 
t
 = 
s
;

2475 
s
 < 
eﬁ
) {

2476 *
s
) {

2478 
	`°r_nˇt
(
°r
, 
t
, 
s
 -Å);

2479 
	`°r_nˇt
(
°r
, "," ,1);

2480 
s
 < 
eﬁ
 && (
	`is•a˚
(*s) || *s == ';'))

2481 
s
++;

2482 
t
 = 
s
;

2485 
	`°r_nˇt
(
°r
, 
t
, 
s
 -Å);

2486 
t
 = 
s
;

2487 
s
 = 
	`sˇnidít
(s,
eﬁ
,
tokíbuf
);

2488 
	`°r_nˇt
(
°r
, 
t
, 
s
 -Å);

2489 
t
 = 
s
;

2490 i‡(
s
 < 
eﬁ
 && *†&& 
	`ödex
("$'\"",*s))

2491 
	`°r_nˇt
(
°r
, ",", 1);

2494 
	`°r_nˇt
(
°r
, 
t
, 
s
 -Å);

2495 
t
 = 
s
;

2496 
s
++;

2497 
s
 < 
eﬁ
 && (*†!*
t
 || s[-1] == '\\'))

2498 
s
++;

2499 i‡(
s
 < 
eﬁ
)

2500 
s
++;

2501 
	`°r_nˇt
(
°r
, 
t
, 
s
 -Å);

2502 
t
 = 
s
;

2503 i‡(
s
 < 
eﬁ
 && *†&& 
	`ödex
("$'\"",*s))

2504 
	`°r_nˇt
(
°r
, ",", 1);

2507 
	`yyîr‹
("Please use commasÅo separate fields");

2510 
	`°r_nˇt
(
°r
,"$$);",4);

2514 
badf‹m
:

2515 
buÂå
 = 
	`°r_gë
(
löe°r
);

2516 
	`yyîr‹
("FormatÇotÅerminated");

2517  
‰oŸ
.
f_√xt
;

2518 
	}
}

2520 
	$£t_csh
()

2522 #ifde‡
CSH


2523 i‡(!
cshÀn
)

2524 
cshÀn
 = 
	`°æí
(
csh«me
);

2526 
	}
}

	@tperly.c

1 #ifde‡
BWGC


2 
*
gc_mÆloc
(), *
gc_ªÆloc
();

4 
*
mÆloc
(), *
ªÆloc
();

8 
	~"INTERN.h
"

9 
	~"≥æ.h
"

11 
STAB
 *
	gs¸°ab
;

12 
ARG
 *
	g¨g4
;

13 
ARG
 *
	g¨g5
;

18 
	mivÆ
;

19 *
	mcvÆ
;

20 
ARG
 *
	m¨g
;

21 
CMD
 *
	mcmdvÆ
;

22 
compcmd
 
	mcompvÆ
;

23 
STAB
 *
	m°abvÆ
;

24 
FCMD
 *
	mf‹mvÆ
;

25 } 
	tYYSTYPE
;

26 
	#WORD
 257

	)

27 
	#APPEND
 258

	)

28 
	#OPEN
 259

	)

29 
	#SSELECT
 260

	)

30 
	#LOOPEX
 261

	)

31 
	#USING
 262

	)

32 
	#FORMAT
 263

	)

33 
	#DO
 264

	)

34 
	#SHIFT
 265

	)

35 
	#PUSH
 266

	)

36 
	#POP
 267

	)

37 
	#LVALFUN
 268

	)

38 
	#WHILE
 269

	)

39 
	#UNTIL
 270

	)

40 
	#IF
 271

	)

41 
	#UNLESS
 272

	)

42 
	#ELSE
 273

	)

43 
	#ELSIF
 274

	)

44 
	#CONTINUE
 275

	)

45 
	#SPLIT
 276

	)

46 
	#FLIST
 277

	)

47 
	#FOR
 278

	)

48 
	#FILOP
 279

	)

49 
	#FILOP2
 280

	)

50 
	#FILOP3
 281

	)

51 
	#FILOP4
 282

	)

52 
	#FILOP22
 283

	)

53 
	#FILOP25
 284

	)

54 
	#FUNC0
 285

	)

55 
	#FUNC1
 286

	)

56 
	#FUNC2
 287

	)

57 
	#FUNC2x
 288

	)

58 
	#FUNC3
 289

	)

59 
	#FUNC4
 290

	)

60 
	#FUNC5
 291

	)

61 
	#HSHFUN
 292

	)

62 
	#HSHFUN3
 293

	)

63 
	#FLIST2
 294

	)

64 
	#SUB
 295

	)

65 
	#FILETEST
 296

	)

66 
	#LOCAL
 297

	)

67 
	#DELETE
 298

	)

68 
	#RELOP
 299

	)

69 
	#EQOP
 300

	)

70 
	#MULOP
 301

	)

71 
	#ADDOP
 302

	)

72 
	#PACKAGE
 303

	)

73 
	#AMPER
 304

	)

74 
	#FORMLIST
 305

	)

75 
	#REG
 306

	)

76 
	#ARYLEN
 307

	)

77 
	#ARY
 308

	)

78 
	#HSH
 309

	)

79 
	#STAR
 310

	)

80 
	#SUBST
 311

	)

81 
	#PATTERN
 312

	)

82 
	#RSTRING
 313

	)

83 
	#TRANS
 314

	)

84 
	#LISTOP
 315

	)

85 
	#DOTDOT
 316

	)

86 
	#OROR
 317

	)

87 
	#ANDAND
 318

	)

88 
	#UNIOP
 319

	)

89 
	#LS
 320

	)

90 
	#RS
 321

	)

91 
	#MATCH
 322

	)

92 
	#NMATCH
 323

	)

93 
	#UMINUS
 324

	)

94 
	#POW
 325

	)

95 
	#INC
 326

	)

96 
	#DEC
 327

	)

97 
	#yy˛órö
 
yych¨
 = -1

	)

98 
	#yyîrok
 
yyîrÊag
 = 0

	)

99 

yych¨
;

100 

yyîrÊag
;

101 #i‚de‡
YYMAXDEPTH


102 
	#YYMAXDEPTH
 150

	)

104 
YYSTYPE
 
	gyylvÆ
, 
	gyyvÆ
;

105 
	#YYERRCODE
 256

	)

109 
	gyyexˇ
[] ={

147 
	#YYNPROD
 182

	)

148 
	#YYLAST
 3179

	)

149 
	gyya˘
[]={

469 
	gyy∑˘
[]={

512 
	gyypgo
[]={

517 
	gyyr1
[]={

538 
	gyyr2
[]={

559 
	gyychk
[]={

602 
	gyydef
[]={

645 °ru˘ { *
	mt_«me
; 
	mt_vÆ
; } 
	tyytokty≥
;

646 #i‚de‡
YYDEBUG


647 
	#YYDEBUG
 0

	)

650 #i‡
YYDEBUG


652 
yytokty≥
 
	gyytoks
[] =

738 * 
	gyyªds
[] =

934 
	#YYERROR
 
yyîæab


	)

935 #ifde‡
IGNOREFREE


936 
	#YYACCEPT
 { (0); }

	)

937 
	#YYABORT
 { (1); }

	)

939 
	#YYACCEPT
 { 
	`Sa„‰ì
(
yys
); 
	`‰ì
(
yyv
); (0); }

	)

940 
	#YYABORT
 { 
	`Sa„‰ì
(
yys
); 
	`‰ì
(
yyv
); (1); }

	)

942 
	#YYBACKUP
–
√wtokí
, 
√wvÆue
 )\

944 i‡–
yych¨
 >0 || ( 
yyr2
[ 
yytmp
 ] >> 1 ) != 1 )\

946 
	`yyîr‹
( "syntaxÉrror - cannot backup" );\

947 
yyîæab
;\

949 
yych¨
 = 
√wtokí
;\

950 
yy°©e
 = *
yyps
;\

951 
yylvÆ
 = 
√wvÆue
;\

952 
yy√w°©e
;\

953 }

	)

954 
	#YYRECOVERING
(Ë(!!
yyîrÊag
)

	)

955 #i‚de‡
YYDEBUG


956 
	#YYDEBUG
 1

	)

962 
	gyydebug
;

967 
	#YYFLAG
 (-1000)

	)

972 
YYSTYPE
 *
	gyyv
;

973 *
	gyys
;

975 
YYSTYPE
 *
	gyypv
;

976 *
	gyyps
;

978 
	gyy°©e
;

979 
	gyytmp
;

981 
	gyy√ºs
;

983 
	gyyîrÊag
;

984 
	gyych¨
;

991 
	$yy∑r£
()

993 
YYSTYPE
 *
yypvt
;

994 
yymaxdïth
 = 
YYMAXDEPTH
;

999 #ifde‡
BWGC


1000 
yyv
 = (
YYSTYPE
*)
	`gc_mÆloc
(
yymaxdïth
*(YYSTYPE));

1001 
yys
 = (*)
	`gc_mÆloc
(
yymaxdïth
*());

1003 
yyv
 = (
YYSTYPE
*)
	`mÆloc
(
yymaxdïth
*(YYSTYPE));

1004 
yys
 = (*)
	`mÆloc
(
yymaxdïth
*());

1006 i‡(!
yyv
 || !
yys
)

1008 
	`yyîr‹
( "out of memory" );

1011 
yypv
 = &
yyv
[-1];

1012 
yyps
 = &
yys
[-1];

1013 
yy°©e
 = 0;

1014 
yytmp
 = 0;

1015 
yy√ºs
 = 0;

1016 
yyîrÊag
 = 0;

1017 
yych¨
 = -1;

1019 
yy°ack
;

1021 
YYSTYPE
 *
yy_pv
;

1022 *
yy_ps
;

1023 
yy_°©e
;

1024 
yy_n
;

1030 
yy√w°©e
:

1031 
yy_pv
 = 
yypv
;

1032 
yy_ps
 = 
yyps
;

1033 
yy_°©e
 = 
yy°©e
;

1034 
yy_√w°©e
;

1040 
yy°ack
:

1041 
yy_pv
 = 
yypv
;

1042 
yy_ps
 = 
yyps
;

1043 
yy_°©e
 = 
yy°©e
;

1048 
yy_°ack
:

1052 #i‡
YYDEBUG


1059 i‡–
yydebug
 )

1061 
yy_i
;

1063 ()
	`¥ötf
–"Sèã %d,Åokí ", 
yy_°©e
 );

1064 i‡–
yych¨
 == 0 )

1065 ()
	`¥ötf
( "end-of-file\n" );

1066 i‡–
yych¨
 < 0 )

1067 ()
	`¥ötf
( "-none-\n" );

1070  
yy_i
 = 0; 
yytoks
[yy_i].
t_vÆ
 >= 0;

1071 
yy_i
++ )

1073 i‡–
yytoks
[
yy_i
].
t_vÆ
 =
yych¨
 )

1076 ()
	`¥ötf
–"%s\n", 
yytoks
[
yy_i
].
t_«me
 );

1080 i‡–++
yy_ps
 >&
yys
[ 
yymaxdïth
 ] )

1086 
yyps_ödex
 = (
yy_ps
 - 
yys
);

1087 
yypv_ödex
 = (
yy_pv
 - 
yyv
);

1088 
yypvt_ödex
 = (
yypvt
 - 
yyv
);

1089 
yymaxdïth
 +
YYMAXDEPTH
;

1090 #ifde‡
BWGC


1091 
yyv
 = (
YYSTYPE
*)
	`gc_ªÆloc
((*)yyv,

1092 
yymaxdïth
 * (
YYSTYPE
));

1093 
yys
 = (*)
	`gc_ªÆloc
((*)yys,

1094 
yymaxdïth
 * ());

1096 
yyv
 = (
YYSTYPE
*)
	`ªÆloc
((*)yyv,

1097 
yymaxdïth
 * (
YYSTYPE
));

1098 
yys
 = (*)
	`ªÆloc
((*)yys,

1099 
yymaxdïth
 * ());

1101 i‡(!
yyv
 || !
yys
)

1103 
	`yyîr‹
( "yacc stack overflow" );

1106 
yy_ps
 = 
yys
 + 
yyps_ödex
;

1107 
yy_pv
 = 
yyv
 + 
yypv_ödex
;

1108 
yypvt
 = 
yyv
 + 
yypvt_ödex
;

1110 *
yy_ps
 = 
yy_°©e
;

1111 *++
yy_pv
 = 
yyvÆ
;

1116 
yy_√w°©e
:

1117 i‡––
yy_n
 = 
yy∑˘
[ 
yy_°©e
 ] ) <
YYFLAG
 )

1118 
yydeÁu…
;

1119 #i‡
YYDEBUG


1123 
yytmp
 = 
yych¨
 < 0;

1125 i‡––
yych¨
 < 0 ) && ( ( yych¨ = 
	`yyÀx
() ) < 0 ) )

1126 
yych¨
 = 0;

1127 #i‡
YYDEBUG


1128 i‡–
yydebug
 && 
yytmp
 )

1130 
yy_i
;

1132 ()
	`¥ötf
( "ReceivedÅoken " );

1133 i‡–
yych¨
 == 0 )

1134 ()
	`¥ötf
( "end-of-file\n" );

1135 i‡–
yych¨
 < 0 )

1136 ()
	`¥ötf
( "-none-\n" );

1139  
yy_i
 = 0; 
yytoks
[yy_i].
t_vÆ
 >= 0;

1140 
yy_i
++ )

1142 i‡–
yytoks
[
yy_i
].
t_vÆ
 =
yych¨
 )

1145 ()
	`¥ötf
–"%s\n", 
yytoks
[
yy_i
].
t_«me
 );

1149 i‡–––
yy_n
 +
yych¨
 ) < 0 ) || ( yy_¿>
YYLAST
 ) )

1150 
yydeÁu…
;

1151 i‡–
yychk
[ 
yy_n
 = 
yya˘
[ yy_¿] ] =
yych¨
 )

1153 
yych¨
 = -1;

1154 
yyvÆ
 = 
yylvÆ
;

1155 
yy_°©e
 = 
yy_n
;

1156 i‡–
yyîrÊag
 > 0 )

1157 
yyîrÊag
--;

1158 
yy_°ack
;

1161 
yydeÁu…
:

1162 i‡––
yy_n
 = 
yydef
[ 
yy_°©e
 ] ) == -2 )

1164 #i‡
YYDEBUG


1165 
yytmp
 = 
yych¨
 < 0;

1167 i‡––
yych¨
 < 0 ) && ( ( yych¨ = 
	`yyÀx
() ) < 0 ) )

1168 
yych¨
 = 0;

1169 #i‡
YYDEBUG


1170 i‡–
yydebug
 && 
yytmp
 )

1172 
yy_i
;

1174 ()
	`¥ötf
( "ReceivedÅoken " );

1175 i‡–
yych¨
 == 0 )

1176 ()
	`¥ötf
( "end-of-file\n" );

1177 i‡–
yych¨
 < 0 )

1178 ()
	`¥ötf
( "-none-\n" );

1181  
yy_i
 = 0;

1182 
yytoks
[
yy_i
].
t_vÆ
 >= 0;

1183 
yy_i
++ )

1185 i‡–
yytoks
[
yy_i
].
t_vÆ


1186 =
yych¨
 )

1191 ()
	`¥ötf
–"%s\n", 
yytoks
[
yy_i
].
t_«me
 );

1199 *
yyxi
 = 
yyexˇ
;

1201  ( *
yyxi
 != -1 ) ||

1202 –
yyxi
[1] !
yy_°©e
 ) )

1204 
yyxi
 += 2;

1206  ( *(
yyxi
 += 2) >= 0 ) &&

1207 –*
yyxi
 !
yych¨
 ) )

1209 i‡––
yy_n
 = 
yyxi
[1] ) < 0 )

1210 
YYACCEPT
;

1217 i‡–
yy_n
 == 0 )

1220  
yyîrÊag
 )

1223 
	`yyîr‹
( "syntaxÉrror" );

1224 
skù_öô
;

1225 
yyîæab
:

1230 
yy_pv
 = 
yypv
;

1231 
yy_ps
 = 
yyps
;

1232 
yy_°©e
 = 
yy°©e
;

1233 
yy√ºs
++;

1234 
skù_öô
:

1238 
yyîrÊag
 = 3;

1243  
yy_ps
 >
yys
 )

1245 
yy_n
 = 
yy∑˘
[ *
yy_ps
 ] + 
YYERRCODE
;

1246 i‡–
yy_n
 >0 && yy_¿< 
YYLAST
 &&

1247 
yychk
[
yya˘
[
yy_n
]] =
YYERRCODE
) {

1251 
yy_°©e
 = 
yya˘
[ 
yy_n
 ];

1252 
yy_°ack
;

1258 #i‡
YYDEBUG


1259 
	#_POP_
 "Eº‹ÑecovîyÖ›†°©ê%d, uncovî†°©ê%d\n"

	)

1260 i‡–
yydebug
 )

1261 ()
	`¥ötf
–
_POP_
, *
yy_ps
,

1262 
yy_ps
[-1] );

1263 #unde‡
_POP_


1265 
yy_ps
--;

1266 
yy_pv
--;

1272 
YYABORT
;

1274 #i‡
YYDEBUG


1282 i‡–
yydebug
 )

1284 
yy_i
;

1286 ()
	`¥ötf
( "ErrorÑecovery discards " );

1287 i‡–
yych¨
 == 0 )

1288 ()
	`¥ötf
( "tokenÉnd-of-file\n" );

1289 i‡–
yych¨
 < 0 )

1290 ()
	`¥ötf
( "token -none-\n" );

1293  
yy_i
 = 0;

1294 
yytoks
[
yy_i
].
t_vÆ
 >= 0;

1295 
yy_i
++ )

1297 i‡–
yytoks
[
yy_i
].
t_vÆ


1298 =
yych¨
 )

1303 ()
	`¥ötf
( "token %s\n",

1304 
yytoks
[
yy_i
].
t_«me
 );

1308 i‡–
yych¨
 == 0 )

1309 
YYABORT
;

1310 
yych¨
 = -1;

1311 
yy_√w°©e
;

1318 #i‡
YYDEBUG


1324 i‡–
yydebug
 )

1325 ()
	`¥ötf
( "Reduce by (%d) \"%s\"\n",

1326 
yy_n
, 
yyªds
[ yy_n ] );

1328 
yytmp
 = 
yy_n
;

1329 
yypvt
 = 
yy_pv
;

1344 
yy_Àn
 = 
yyr2
[ 
yy_n
 ];

1346 i‡–!–
yy_Àn
 & 01 ) )

1348 
yy_Àn
 >>= 1;

1349 
yyvÆ
 = ( 
yy_pv
 -
yy_Àn
 )[1];

1350 
yy_°©e
 = 
yypgo
[ 
yy_n
 = 
yyr1
[ yy_n ] ] +

1351 *–
yy_ps
 -
yy_Àn
 ) + 1;

1352 i‡–
yy_°©e
 >
YYLAST
 ||

1353 
yychk
[ 
yy_°©e
 =

1354 
yya˘
[ 
yy_°©e
 ] ] !-
yy_n
 )

1356 
yy_°©e
 = 
yya˘
[ 
yypgo
[ 
yy_n
 ] ];

1358 
yy_°ack
;

1360 
yy_Àn
 >>= 1;

1361 
yyvÆ
 = ( 
yy_pv
 -
yy_Àn
 )[1];

1362 
yy_°©e
 = 
yypgo
[ 
yy_n
 = 
yyr1
[ yy_n ] ] +

1363 *–
yy_ps
 -
yy_Àn
 ) + 1;

1364 i‡–
yy_°©e
 >
YYLAST
 ||

1365 
yychk
[ 
yy_°©e
 = 
yya˘
[ yy_°©ê] ] !-
yy_n
 )

1367 
yy_°©e
 = 
yya˘
[ 
yypgo
[ 
yy_n
 ] ];

1371 
yy°©e
 = 
yy_°©e
;

1372 
yyps
 = 
yy_ps
;

1373 
yypv
 = 
yy_pv
;

1378  
yytmp
 )

1384 #i‡
	`deföed
(
YYDEBUG
Ë&& deföed(
DEBUGGING
)

1385 
yydebug
 = (
debug
 & 1);

1390 { i‡(
ö_evÆ
)

1391 
evÆ_roŸ
 = 
	`block_hód
(
yypvt
[-0].
cmdvÆ
);

1393 
maö_roŸ
 = 
	`block_hód
(
yypvt
[-0].
cmdvÆ
); } ;

1396 { 
yyvÆ
.
compvÆ
.
comp_åue
 = 
yypvt
[-2].
cmdvÆ
; yyvÆ.compvÆ.
comp_Æt
 = yypvt[-0].cmdval; } ;

1399 { 
yyvÆ
.
compvÆ
.
comp_åue
 = 
yypvt
[-1].
cmdvÆ
; yyvÆ.compvÆ.
comp_Æt
 = yypvt[-0].cmdval; } ;

1402 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; } ;

1405 { 
yyvÆ
.
cmdvÆ
 = 
yypvt
[-0].cmdval; } ;

1408 { 
cmdlöe
 = 
yypvt
[-4].
ivÆ
;

1409 
yyvÆ
.
cmdvÆ
 = 
	`make_ccmd
(
C_ELSIF
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
); } ;

1412 { 
yyvÆ
.
cmdvÆ
 = 
	`block_hód
(
yypvt
[-1].cmdval);

1413 i‡(
ßve°ack
->
¨y_fûl
 > 
yypvt
[-2].
ivÆ
)

1414 
	`ª°‹ñi°
(
yypvt
[-2].
ivÆ
); } ;

1417 { 
yyvÆ
.
ivÆ
 = 
ßve°ack
->
¨y_fûl
; } ;

1420 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; } ;

1423 { 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(
yypvt
[-1].cmdval,yypvt[-0].cmdval); } ;

1426 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; } ;

1429 { 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yypvt
[-1].
cvÆ
,yypvt[-0].cmdval); } ;

1432 { i‡(
yypvt
[-1].
cvÆ
 !
NuŒch
) {

1433 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yypvt
[-1].
cvÆ
, 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
,

1434 
NuŒ¨g
, Nullarg) );

1437 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
;

1438 
cmdlöe
 = 
NOLINE
;

1442 { 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yypvt
[-2].
cvÆ
,yypvt[-1].cmdval); } ;

1445 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; } ;

1448 { 
yyvÆ
.
cmdvÆ
 = 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
yypvt
[-0].
¨g
, 
NuŒ¨g
); } ;

1451 { 
yyvÆ
.
cmdvÆ
 = 
	`addc⁄d
(

1452 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yypvt
[-2].
¨g
), yypvt[-0].arg); } ;

1455 { 
yyvÆ
.
cmdvÆ
 = 
	`addc⁄d
(
	`övît
(

1456 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yypvt
[-2].
¨g
)), yypvt[-0].arg); } ;

1459 { 
yyvÆ
.
cmdvÆ
 = 
	`addlo›
(

1460 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yypvt
[-2].
¨g
), yypvt[-0].arg); } ;

1463 { 
yyvÆ
.
cmdvÆ
 = 
	`addlo›
(
	`övît
(

1464 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
, 
NuŒ¨g
, 
yypvt
[-2].
¨g
)), yypvt[-0].arg); } ;

1467 { 
cmdlöe
 = 
yypvt
[-4].
ivÆ
;

1468 
yyvÆ
.
cmdvÆ
 = 
	`make_icmd
(
C_IF
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
); } ;

1471 { 
cmdlöe
 = 
yypvt
[-4].
ivÆ
;

1472 
yyvÆ
.
cmdvÆ
 = 
	`övît
(
	`make_icmd
(
C_IF
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
)); } ;

1475 { 
cmdlöe
 = 
yypvt
[-2].
ivÆ
;

1476 
yyvÆ
.
cmdvÆ
 = 
	`make_ccmd
(
C_IF
,
	`cmd_to_¨g
(
yypvt
[-1].cmdvÆ),yypvt[-0].
compvÆ
); } ;

1479 { 
cmdlöe
 = 
yypvt
[-2].
ivÆ
;

1480 
yyvÆ
.
cmdvÆ
 = 
	`övît
(
	`make_ccmd
(
C_IF
,
	`cmd_to_¨g
(
yypvt
[-1].cmdvÆ),yypvt[-0].
compvÆ
)); } ;

1483 { 
cmdlöe
 = 
yypvt
[-4].
ivÆ
;

1484 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yypvt
[-5].
cvÆ
,

1485 
	`make_ccmd
(
C_WHILE
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
) )); } ;

1488 { 
cmdlöe
 = 
yypvt
[-4].
ivÆ
;

1489 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yypvt
[-5].
cvÆ
,

1490 
	`övît
(
	`make_ccmd
(
C_WHILE
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
)) )); } ;

1493 { 
cmdlöe
 = 
yypvt
[-2].
ivÆ
;

1494 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yypvt
[-3].
cvÆ
,

1495 
	`make_ccmd
(
C_WHILE
, 
	`cmd_to_¨g
(
yypvt
[-1].
cmdvÆ
),yypvt[-0].
compvÆ
) )); } ;

1498 { 
cmdlöe
 = 
yypvt
[-2].
ivÆ
;

1499 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`add_œbñ
(
yypvt
[-3].
cvÆ
,

1500 
	`övît
(
	`make_ccmd
(
C_WHILE
, 
	`cmd_to_¨g
(
yypvt
[-1].
cmdvÆ
),yypvt[-0].
compvÆ
)) )); } ;

1503 { 
cmdlöe
 = 
yypvt
[-5].
ivÆ
;

1516 i‡(
yypvt
[-2].
¨g
->
¨g_ty≥
 !
O_ARRAY
) {

1517 
s¸°ab
 = 
	`Ødd
(
	`gí°ab
());

1518 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(

1519 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
,

1520 
	`l
(
	`make_›
(
O_ASSIGN
,2,

1521 
	`li°ish
(
	`make_›
(
O_ARRAY
, 1,

1522 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

1523 
NuŒ¨g
,Nullarg )),

1524 
	`li°ish
(
	`make_li°
(
yypvt
[-2].
¨g
)),

1525 
NuŒ¨g
)),

1526 
NuŒ¨g
),

1527 
	`w›t
(
	`ovî
(
yypvt
[-4].
°abvÆ
,
	`add_œbñ
(yypvt[-6].
cvÆ
,

1528 
	`make_ccmd
(
C_WHILE
,

1529 
	`make_›
(
O_ARRAY
, 1,

1530 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

1531 
NuŒ¨g
,Nullarg ),

1532 
yypvt
[-0].
compvÆ
)))));

1533 
yyvÆ
.
cmdvÆ
->
c_löe
 = 
yypvt
[-5].
ivÆ
;

1534 
yyvÆ
.
cmdvÆ
->
c_hód
->
c_löe
 = 
yypvt
[-5].
ivÆ
;

1537 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`ovî
(
yypvt
[-4].
°abvÆ
,
	`add_œbñ
(yypvt[-6].
cvÆ
,

1538 
	`make_ccmd
(
C_WHILE
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
) )));

1543 { 
cmdlöe
 = 
yypvt
[-4].
ivÆ
;

1544 i‡(
yypvt
[-2].
¨g
->
¨g_ty≥
 !
O_ARRAY
) {

1545 
s¸°ab
 = 
	`Ødd
(
	`gí°ab
());

1546 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(

1547 
	`make_acmd
(
C_EXPR
, 
NuŒ°ab
,

1548 
	`l
(
	`make_›
(
O_ASSIGN
,2,

1549 
	`li°ish
(
	`make_›
(
O_ARRAY
, 1,

1550 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

1551 
NuŒ¨g
,Nullarg )),

1552 
	`li°ish
(
	`make_li°
(
yypvt
[-2].
¨g
)),

1553 
NuŒ¨g
)),

1554 
NuŒ¨g
),

1555 
	`w›t
(
	`ovî
(
def°ab
,
	`add_œbñ
(
yypvt
[-5].
cvÆ
,

1556 
	`make_ccmd
(
C_WHILE
,

1557 
	`make_›
(
O_ARRAY
, 1,

1558 
	`°ab2¨g
(
A_STAB
,
s¸°ab
),

1559 
NuŒ¨g
,Nullarg ),

1560 
yypvt
[-0].
compvÆ
)))));

1561 
yyvÆ
.
cmdvÆ
->
c_löe
 = 
yypvt
[-4].
ivÆ
;

1562 
yyvÆ
.
cmdvÆ
->
c_hód
->
c_löe
 = 
yypvt
[-4].
ivÆ
;

1565 
yyvÆ
.
cmdvÆ
 = 
	`w›t
(
	`ovî
(
def°ab
,
	`add_œbñ
(
yypvt
[-5].
cvÆ
,

1566 
	`make_ccmd
(
C_WHILE
,
yypvt
[-2].
¨g
,yypvt[-0].
compvÆ
) )));

1571 { 
yyvÆ
.
compvÆ
.
comp_åue
 = 
yypvt
[-0].
cmdvÆ
;

1572 
yyvÆ
.
compvÆ
.
comp_Æt
 = 
yypvt
[-2].
cmdvÆ
;

1573 
cmdlöe
 = 
yypvt
[-8].
ivÆ
;

1574 
yyvÆ
.
cmdvÆ
 = 
	`≠≥nd_löe
(
yypvt
[-6].cmdvÆ,
	`w›t
(
	`add_œbñ
(yypvt[-9].
cvÆ
,

1575 
	`make_ccmd
(
C_WHILE
,
yypvt
[-4].
¨g
,
yyvÆ
.
compvÆ
) ))); } ;

1578 { 
yyvÆ
.
cmdvÆ
 = 
	`add_œbñ
(
yypvt
[-1].
cvÆ
,
	`make_ccmd
(
C_BLOCK
,
NuŒ¨g
,yypvt[-0].
compvÆ
)); } ;

1581 { 
yyvÆ
.
cmdvÆ
 = 
NuŒcmd
; } ;

1584 { ()
	`sˇn°r
("1"); 
yyvÆ
.
¨g
 = 
yylvÆ
.arg; } ;

1587 { 
yyvÆ
.
cvÆ
 = 
NuŒch
; } ;

1590 { 
yyvÆ
.
ivÆ
 = 0; } ;

1593 { 
yyvÆ
.
ivÆ
 = 0; } ;

1596 { 
yyvÆ
.
ivÆ
 = 0; } ;

1599 { i‡(
	`°rEQ
(
yypvt
[-2].
cvÆ
,"stdout"))

1600 
	`make_f‹m
(
	`°abít
("STDOUT",
TRUE
),
yypvt
[-0].
f‹mvÆ
);

1601 i‡(
	`°rEQ
(
yypvt
[-2].
cvÆ
,"stderr"))

1602 
	`make_f‹m
(
	`°abít
("STDERR",
TRUE
),
yypvt
[-0].
f‹mvÆ
);

1604 
	`make_f‹m
(
	`°abít
(
yypvt
[-2].
cvÆ
,
TRUE
),yypvt[-0].
f‹mvÆ
);

1605 
	`Sa„‰ì
(
yypvt
[-2].
cvÆ
); yypvt[-2].cvÆ = 
NuŒch
; } ;

1608 { 
	`make_f‹m
(
	`°abít
("STDOUT",
TRUE
),
yypvt
[-0].
f‹mvÆ
); } ;

1611 { 
	`make_sub
(
yypvt
[-1].
cvÆ
,yypvt[-0].
cmdvÆ
); } ;

1614 { 
tmpbuf
[256];

1615 
STAB
 *
tmp°ab
;

1617 
	`ßveh±r
(&
cur°ash
);

1618 
	`ßveôem
(
cur°«me
);

1619 
	`°r_£t
(
cur°«me
,
yypvt
[-1].
cvÆ
);

1620 
	`•rötf
(
tmpbuf
,"'_%s",
yypvt
[-1].
cvÆ
);

1621 
tmp°ab
 = 
	`°abít
(
tmpbuf
,
TRUE
);

1622 i‡(!
	`°ab_xhash
(
tmp°ab
))

1623 
	`°ab_xhash
(
tmp°ab
Ë
	`h√w
(0);

1624 
cur°ash
 = 
	`°ab_xhash
(
tmp°ab
);

1625 i‡(!
cur°ash
->
tbl_«me
)

1626 
cur°ash
->
tbl_«me
 = 
	`ßve°r
(
yypvt
[-1].
cvÆ
);

1627 
cur°ash
->
tbl_c€ffsize
 = 0;

1628 
	`Sa„‰ì
(
yypvt
[-1].
cvÆ
); yypvt[-1].cvÆ = 
NuŒch
;

1629 
cmdlöe
 = 
NOLINE
;

1633 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1636 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_COMMA
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1639 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1642 { 
yypvt
[-2].
¨g
 = 
	`li°ish
(yypvt[-2].arg);

1643 i‡(
yypvt
[-2].
¨g
->
¨g_ty≥
 =
O_ASSIGN
 && yypvt[-2].¨g->
¨g_Àn
 == 1)

1644 
yypvt
[-2].
¨g
->
¨g_ty≥
 = 
O_ITEM
;

1645 i‡(
yypvt
[-2].
¨g
->
¨g_ty≥
 =
O_LIST
)

1646 
yypvt
[-0].
¨g
 = 
	`li°ish
(yypvt[-0].arg);

1647 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_ASSIGN
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1650 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_POW
, 2, 
yypvt
[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1653 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
yypvt
[-2].
ivÆ
, 2, yypvt[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1656 { 
yyvÆ
.
¨g
 = 
	`rˇtmaybe
(
	`l
(
	`make_›
(
yypvt
[-2].
ivÆ
, 2, yypvt[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)));} ;

1659 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_LEFT_SHIFT
, 2, 
yypvt
[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1662 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_RIGHT_SHIFT
, 2, 
yypvt
[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1665 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_BIT_AND
, 2, 
yypvt
[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1668 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_XOR
, 2, 
yypvt
[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1671 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
O_BIT_OR
, 2, 
yypvt
[-3].¨g, yypvt[-0].¨g, 
NuŒ¨g
)); } ;

1674 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_POW
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1677 { i‡(
yypvt
[-1].
ivÆ
 =
O_REPEAT
)

1678 
yypvt
[-2].
¨g
 = 
	`li°ish
(yypvt[-2].arg);

1679 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
);

1680 i‡(
yypvt
[-1].
ivÆ
 =
O_REPEAT
) {

1681 i‡(
yyvÆ
.
¨g
[1].
¨g_ty≥
 !
A_EXPR
 ||

1682 
yyvÆ
.
¨g
[1].
¨g_±r
.
¨g_¨g
->
¨g_ty≥
 !
O_LIST
)

1683 
yyvÆ
.
¨g
[1].
¨g_Êags
 &~
AF_ARYOK
;

1687 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1690 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_LEFT_SHIFT
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1693 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_RIGHT_SHIFT
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1696 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1699 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1702 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_BIT_AND
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1705 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_XOR
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1708 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_BIT_OR
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1711 { 
¨g4
 = 
NuŒ¨g
;

1712 
yyvÆ
.
¨g
 = 
	`make_›
(
O_F_OR_R
, 4, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1715 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_AND
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1718 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OR
, 2, 
yypvt
[-2].¨g, yypvt[-0].¨g, 
NuŒ¨g
); } ;

1721 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_COND_EXPR
, 3, 
yypvt
[-4].arg, yypvt[-2].arg, yypvt[-0].arg); } ;

1724 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
, 
yypvt
[-2].arg, yypvt[-0].arg); } ;

1727 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_NMATCH
, 
yypvt
[-2].arg, yypvt[-0].arg); } ;

1730 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1733 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_NEGATE
, 1, 
yypvt
[-0].¨g, 
NuŒ¨g
, Nullarg); } ;

1736 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1739 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_NOT
, 1, 
yypvt
[-0].¨g, 
NuŒ¨g
, Nullarg); } ;

1742 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_COMPLEMENT
, 1, 
yypvt
[-0].¨g, 
NuŒ¨g
, Nullarg);} ;

1745 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_POST
|
AF_UP
,

1746 
	`l
(
	`make_›
(
O_ITEM
,1,
yypvt
[-1].
¨g
,
NuŒ¨g
,Nullarg))); } ;

1749 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_POST
,

1750 
	`l
(
	`make_›
(
O_ITEM
,1,
yypvt
[-1].
¨g
,
NuŒ¨g
,Nullarg))); } ;

1753 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_PRE
|
AF_UP
,

1754 
	`l
(
	`make_›
(
O_ITEM
,1,
yypvt
[-0].
¨g
,
NuŒ¨g
,Nullarg))); } ;

1757 { 
yyvÆ
.
¨g
 = 
	`addÊags
(1, 
AF_PRE
,

1758 
	`l
(
	`make_›
(
O_ITEM
,1,
yypvt
[-0].
¨g
,
NuŒ¨g
,Nullarg))); } ;

1761 { 
›¨gs
[
yypvt
[-1].
ivÆ
] = 0;

1762 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 1,

1763 
	`°ab2¨g
(
A_STAB
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)),

1764 
NuŒ¨g
, Nullarg);

1768 { 
›¨gs
[
yypvt
[-1].
ivÆ
] = 1;

1769 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 1, yypvt[-0].¨g, 
NuŒ¨g
, Nullarg); } ;

1772 { 
›¨gs
[
yypvt
[-0].
ivÆ
] = (yypvt[-0].ivÆ !
O_FTTTY
);

1773 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-0].
ivÆ
, 1,

1774 
	`°ab2¨g
(
A_STAB
,

1775 
yypvt
[-0].
ivÆ
 =
O_FTTTY
?
	`°abít
("STDIN",
TRUE
):
def°ab
),

1776 
NuŒ¨g
, Nullarg); } ;

1779 { 
yyvÆ
.
¨g
 = 
	`l
(
	`loˇlize
(
	`make_›
(
O_ASSIGN
, 1,

1780 
	`loˇlize
(
	`li°ish
(
	`make_li°
(
yypvt
[-1].
¨g
))),

1781 
NuŒ¨g
,Nullarg))); } ;

1784 { 
yyvÆ
.
¨g
 = 
	`make_li°
(
yypvt
[-2].arg); } ;

1787 { 
yyvÆ
.
¨g
 = 
	`make_li°
(
yypvt
[-1].arg); } ;

1790 { 
yyvÆ
.
¨g
 = 
	`make_li°
(
NuŒ¨g
); } ;

1793 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_DOFILE
,2,
yypvt
[-0].¨g,
NuŒ¨g
,Nullarg);

1794 
Æl°abs
 = 
TRUE
;} ;

1797 { 
yyvÆ
.
¨g
 = 
	`cmd_to_¨g
(
yypvt
[-0].
cmdvÆ
); } ;

1800 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
); } ;

1803 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAR
,
yypvt
[-0].
°abvÆ
); } ;

1806 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_AELEM
, 2,

1807 
	`°ab2¨g
(
A_STAB
,
	`Ødd
(
yypvt
[-3].
°abvÆ
)), yypvt[-1].
¨g
, 
NuŒ¨g
); } ;

1810 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_HASH
, 1,

1811 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
),

1812 
NuŒ¨g
, Nullarg); } ;

1815 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_ARRAY
, 1,

1816 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
),

1817 
NuŒ¨g
, Nullarg); } ;

1820 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_HELEM
, 2,

1821 
	`°ab2¨g
(
A_STAB
,
	`hadd
(
yypvt
[-3].
°abvÆ
)),

1822 
	`jmaybe
(
yypvt
[-1].
¨g
),

1823 
NuŒ¨g
); } ;

1826 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_LSLICE
, 3,

1827 
NuŒ¨g
,

1828 
	`li°ish
(
	`make_li°
(
yypvt
[-1].
¨g
)),

1829 
	`li°ish
(
	`make_li°
(
yypvt
[-4].
¨g
))); } ;

1832 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_LSLICE
, 3,

1833 
NuŒ¨g
,

1834 
	`li°ish
(
	`make_li°
(
yypvt
[-1].
¨g
)),

1835 
NuŒ¨g
); } ;

1838 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_ASLICE
, 2,

1839 
	`°ab2¨g
(
A_STAB
,
	`Ødd
(
yypvt
[-3].
°abvÆ
)),

1840 
	`li°ish
(
	`make_li°
(
yypvt
[-1].
¨g
)),

1841 
NuŒ¨g
); } ;

1844 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_HSLICE
, 2,

1845 
	`°ab2¨g
(
A_STAB
,
	`hadd
(
yypvt
[-3].
°abvÆ
)),

1846 
	`li°ish
(
	`make_li°
(
yypvt
[-1].
¨g
)),

1847 
NuŒ¨g
); } ;

1850 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_DELETE
, 2,

1851 
	`°ab2¨g
(
A_STAB
,
	`hadd
(
yypvt
[-3].
°abvÆ
)),

1852 
	`jmaybe
(
yypvt
[-1].
¨g
),

1853 
NuŒ¨g
); } ;

1856 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_ARYLEN
,
yypvt
[-0].
°abvÆ
); } ;

1859 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1862 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1865 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1868 { 
yyvÆ
.
¨g
 = 
yypvt
[-0].arg; } ;

1871 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1872 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-3].
cvÆ
,
TRUE
)),

1873 
	`make_li°
(
yypvt
[-1].
¨g
),

1874 
NuŒ¨g
); 
	`Sa„‰ì
(
yypvt
[-3].
cvÆ
); yypvt[-3].cvÆ = 
NuŒch
;

1875 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; } ;

1878 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1879 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-3].
cvÆ
,
TRUE
)),

1880 
	`make_li°
(
yypvt
[-1].
¨g
),

1881 
NuŒ¨g
); 
	`Sa„‰ì
(
yypvt
[-3].
cvÆ
); yypvt[-3].cvÆ = 
NuŒch
; } ;

1884 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1885 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-2].
cvÆ
,
TRUE
)),

1886 
	`make_li°
(
NuŒ¨g
),

1887 
NuŒ¨g
);

1888 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; } ;

1891 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1892 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-2].
cvÆ
,
TRUE
)),

1893 
	`make_li°
(
NuŒ¨g
),

1894 
NuŒ¨g
); } ;

1897 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1898 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)),

1899 
NuŒ¨g
,

1900 
NuŒ¨g
); } ;

1903 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1904 
	`°ab2¨g
(
A_STAB
,
yypvt
[-3].
°abvÆ
),

1905 
	`make_li°
(
yypvt
[-1].
¨g
),

1906 
NuŒ¨g
);

1907 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; } ;

1910 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1911 
	`°ab2¨g
(
A_STAB
,
yypvt
[-3].
°abvÆ
),

1912 
	`make_li°
(
yypvt
[-1].
¨g
),

1913 
NuŒ¨g
); } ;

1916 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1917 
	`°ab2¨g
(
A_STAB
,
yypvt
[-2].
°abvÆ
),

1918 
	`make_li°
(
NuŒ¨g
),

1919 
NuŒ¨g
);

1920 
yyvÆ
.
¨g
->
¨g_Êags
 |
AF_DEPR
; } ;

1923 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1924 
	`°ab2¨g
(
A_STAB
,
yypvt
[-2].
°abvÆ
),

1925 
	`make_li°
(
NuŒ¨g
),

1926 
NuŒ¨g
); } ;

1929 { 
yyvÆ
.
¨g
 = 
	`make_›
((
≥ædb
 ? 
O_DBSUBR
 : 
O_SUBR
), 2,

1930 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
),

1931 
NuŒ¨g
,

1932 
NuŒ¨g
); } ;

1935 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-0].
ivÆ
,0,
NuŒ¨g
,Nullarg,Nullarg); } ;

1938 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
,1,
	`cvÆ_to_¨g
(yypvt[-0].
cvÆ
),

1939 
NuŒ¨g
,Nullarg); } ;

1942 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-0].
ivÆ
,0,
NuŒ¨g
,Nullarg,Nullarg); } ;

1945 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
,1,yypvt[-0].¨g,
NuŒ¨g
,Nullarg); } ;

1948 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SELECT
, 0, 
NuŒ¨g
, Nullarg, Nullarg);} ;

1951 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SELECT
, 1, 
yypvt
[-1].¨g, 
NuŒ¨g
, Nullarg); } ;

1954 { 
¨g4
 = 
yypvt
[-1].
¨g
;

1955 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SSELECT
, 4, 
yypvt
[-4].arg, yypvt[-3].arg, yypvt[-2].arg); } ;

1958 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OPEN
, 2,

1959 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)),

1960 
	`°ab2¨g
(
A_STAB
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)),

1961 
NuŒ¨g
); } ;

1964 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OPEN
, 2,

1965 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-1].
cvÆ
,
TRUE
)),

1966 
	`°ab2¨g
(
A_STAB
,
	`°abít
(
yypvt
[-1].
cvÆ
,
TRUE
)),

1967 
NuŒ¨g
); } ;

1970 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_OPEN
, 2,

1971 
yypvt
[-2].
¨g
,

1972 
yypvt
[-1].
¨g
, 
NuŒ¨g
); } ;

1975 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-3].
ivÆ
, 1,

1976 
yypvt
[-1].
¨g
,

1977 
NuŒ¨g
, Nullarg); } ;

1980 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 1,

1981 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)),

1982 
NuŒ¨g
, Nullarg);

1983 
	`Sa„‰ì
(
yypvt
[-0].
cvÆ
); yypvt[-0].cvÆ = 
NuŒch
; } ;

1986 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 1,

1987 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
),

1988 
NuŒ¨g
, Nullarg); } ;

1991 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-2].
ivÆ
, 1,

1992 
	`°ab2¨g
(
A_WORD
,
NuŒ°ab
),

1993 
NuŒ¨g
, Nullarg); } ;

1996 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-0].
ivÆ
, 0,

1997 
NuŒ¨g
, Nullarg, Nullarg); } ;

2000 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-4].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-1].¨g, 
NuŒ¨g
); } ;

2003 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-5].
ivÆ
, 3, yypvt[-3].¨g, yypvt[-2].¨g, 
	`make_li°
(yypvt[-1].arg)); } ;

2006 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-5].
ivÆ
, 2, yypvt[-3].¨g, yypvt[-1].¨g, 
NuŒ¨g
); } ;

2009 { 
¨g4
 = 
yypvt
[-1].
¨g
; 
yyvÆ
.¨g = 
	`make_›
(yypvt[-6].
ivÆ
, 4, yypvt[-4].arg, yypvt[-3].arg, yypvt[-2].arg); } ;

2012 { 
¨g4
 = 
yypvt
[-2].
¨g
; 
¨g5
 = yypvt[-1].arg;

2013 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-8].
ivÆ
, 5, yypvt[-6].arg, yypvt[-4].arg, yypvt[-3].arg); } ;

2016 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-4].
ivÆ
, 2,

2017 
yypvt
[-2].
¨g
,

2018 
	`make_li°
(
yypvt
[-1].
¨g
),

2019 
NuŒ¨g
); } ;

2022 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_POP
, 1, 
yypvt
[-0].¨g, 
NuŒ¨g
, Nullarg); } ;

2025 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_POP
, 1, 
yypvt
[-1].¨g, 
NuŒ¨g
, Nullarg); } ;

2028 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SHIFT
, 1, 
yypvt
[-0].¨g, 
NuŒ¨g
, Nullarg); } ;

2031 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SHIFT
, 1, 
yypvt
[-1].¨g, 
NuŒ¨g
, Nullarg); } ;

2034 { 
yyvÆ
.
¨g
 = 
	`make_›
(
O_SHIFT
, 1,

2035 
	`°ab2¨g
(
A_STAB
,

2036 
	`Ødd
(
	`°abít
(
sublöe
 ? "_" : "ARGV", 
TRUE
))),

2037 
NuŒ¨g
, Nullarg); } ;

2040 { 
p
[]="/\\s+/";

2041 *
ﬁdíd
 = 
bu„nd
;

2042 
ARG
 *
ﬁd¨g
 = 
yylvÆ
.
¨g
;

2044 
bu„nd
=
p
+5;

2045 ()
	`sˇ≈©
(
p
);

2046 
bu„nd
=
ﬁdíd
;

2047 
yyvÆ
.
¨g
 = 
	`make_•lô
(
def°ab
,
yylvÆ
.¨g,
NuŒ¨g
);

2048 
yylvÆ
.
¨g
 = 
ﬁd¨g
; } ;

2051 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
, 
yypvt
[-2].arg,

2052 
	`make_•lô
(
def°ab
,
yypvt
[-3].
¨g
,yypvt[-1].arg));} ;

2055 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
, 
yypvt
[-1].arg,

2056 
	`make_•lô
(
def°ab
,
yypvt
[-2].
¨g
,
NuŒ¨g
) ); } ;

2059 { 
yyvÆ
.
¨g
 = 
	`mod_m©ch
(
O_MATCH
,

2060 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2061 
	`make_•lô
(
def°ab
,
yypvt
[-1].
¨g
,
NuŒ¨g
) ); } ;

2064 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-4].
ivÆ
, 2,

2065 
yypvt
[-2].
¨g
,

2066 
	`li°ish
(
	`make_li°
(
yypvt
[-1].
¨g
)),

2067 
NuŒ¨g
); } ;

2070 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-3].
ivÆ
, 1,

2071 
	`make_li°
(
yypvt
[-1].
¨g
),

2072 
NuŒ¨g
,

2073 
NuŒ¨g
); } ;

2076 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
yypvt
[-1].
ivÆ
, 1, 
	`fixl
(yypvt[-1].ival,yypvt[-0].arg),

2077 
NuŒ¨g
, Nullarg)); } ;

2080 { 
yyvÆ
.
¨g
 = 
	`l
(
	`make_›
(
yypvt
[-0].
ivÆ
, 1,

2081 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2082 
NuŒ¨g
, Nullarg)); } ;

2085 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-0].
ivÆ
, 0, 
NuŒ¨g
, Nullarg, Nullarg); } ;

2088 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-2].
ivÆ
, 0, 
NuŒ¨g
, Nullarg, Nullarg); } ;

2091 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-2].
ivÆ
, 0, 
NuŒ¨g
, Nullarg, Nullarg); } ;

2094 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-3].
ivÆ
, 1, yypvt[-1].¨g, 
NuŒ¨g
, Nullarg); } ;

2097 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-4].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-1].¨g, 
NuŒ¨g
);

2098 i‡(
yypvt
[-4].
ivÆ
 =
O_INDEX
 && 
yyvÆ
.
¨g
[2].
¨g_ty≥
 =
A_SINGLE
)

2099 
	`fbmcompûe
(
yyvÆ
.
¨g
[2].
¨g_±r
.
¨g_°r
,0); } ;

2102 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-4].
ivÆ
, 2, yypvt[-2].¨g, yypvt[-1].¨g, 
NuŒ¨g
);

2103 i‡(
yypvt
[-4].
ivÆ
 =
O_INDEX
 && 
yyvÆ
.
¨g
[2].
¨g_ty≥
 =
A_SINGLE
)

2104 
	`fbmcompûe
(
yyvÆ
.
¨g
[2].
¨g_±r
.
¨g_°r
,0); } ;

2107 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-5].
ivÆ
, 3, yypvt[-3].arg, yypvt[-2].arg, yypvt[-1].arg);

2108 i‡(
yypvt
[-5].
ivÆ
 =
O_INDEX
 && 
yyvÆ
.
¨g
[2].
¨g_ty≥
 =
A_SINGLE
)

2109 
	`fbmcompûe
(
yyvÆ
.
¨g
[2].
¨g_±r
.
¨g_°r
,0); } ;

2112 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-5].
ivÆ
, 3, yypvt[-3].arg, yypvt[-2].arg, yypvt[-1].arg); } ;

2115 { 
¨g4
 = 
yypvt
[-1].
¨g
;

2116 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-6].
ivÆ
, 4, yypvt[-4].arg, yypvt[-3].arg, yypvt[-2].arg); } ;

2119 { 
¨g4
 = 
yypvt
[-2].
¨g
; 
¨g5
 = yypvt[-1].arg;

2120 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-7].
ivÆ
, 5, yypvt[-5].arg, yypvt[-4].arg, yypvt[-3].arg); } ;

2123 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-3].
ivÆ
, 1,

2124 
yypvt
[-1].
¨g
,

2125 
NuŒ¨g
,

2126 
NuŒ¨g
); } ;

2129 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
, 1,

2130 
yypvt
[-0].
¨g
,

2131 
NuŒ¨g
,

2132 
NuŒ¨g
); } ;

2135 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-5].
ivÆ
, 3, yypvt[-3].arg, yypvt[-2].arg, yypvt[-1].arg); } ;

2138 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-0].
ivÆ
,2,

2139 
	`°ab2¨g
(
A_WORD
,
NuŒ°ab
),

2140 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2141 
NuŒ¨g
); } ;

2144 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
,2,

2145 
	`°ab2¨g
(
A_WORD
,
NuŒ°ab
),

2146 
	`maybñi°ish
(
yypvt
[-1].
ivÆ
,
	`make_li°
(yypvt[-0].
¨g
)),

2147 
NuŒ¨g
); } ;

2150 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-1].
ivÆ
,2,

2151 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)),

2152 
	`°ab2¨g
(
A_STAB
,
def°ab
),

2153 
NuŒ¨g
); } ;

2156 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-2].
ivÆ
,2,

2157 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-1].
cvÆ
,
TRUE
)),

2158 
	`maybñi°ish
(
yypvt
[-2].
ivÆ
,
	`make_li°
(yypvt[-0].
¨g
)),

2159 
NuŒ¨g
); 
	`Sa„‰ì
(
yypvt
[-1].
cvÆ
); yypvt[-1].cvÆ = 
NuŒch
; } ;

2162 { 
yyvÆ
.
¨g
 = 
	`make_›
(
yypvt
[-2].
ivÆ
,2,

2163 
	`°ab2¨g
(
A_STAB
,
yypvt
[-1].
°abvÆ
),

2164 
	`maybñi°ish
(
yypvt
[-2].
ivÆ
,
	`make_li°
(yypvt[-0].
¨g
)),

2165 
NuŒ¨g
); } ;

2168 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_WORD
,
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
));

2169 
	`Sa„‰ì
(
yypvt
[-0].
cvÆ
); yypvt[-0].cvÆ = 
NuŒch
;} ;

2172 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_WORD
,
	`Ødd
(
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)));

2173 
	`Sa„‰ì
(
yypvt
[-0].
cvÆ
); yypvt[-0].cvÆ = 
NuŒch
; } ;

2176 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
); } ;

2179 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_WORD
,
	`hadd
(
	`°abít
(
yypvt
[-0].
cvÆ
,
TRUE
)));

2180 
	`Sa„‰ì
(
yypvt
[-0].
cvÆ
); yypvt[-0].cvÆ = 
NuŒch
; } ;

2183 { 
yyvÆ
.
¨g
 = 
	`°ab2¨g
(
A_STAB
,
yypvt
[-0].
°abvÆ
); } ;

2186 { *
s
;

2187 
yyvÆ
.
¨g
 = 
	`›_√w
(1);

2188 
yyvÆ
.
¨g
->
¨g_ty≥
 = 
O_ITEM
;

2189 
yyvÆ
.
¨g
[1].
¨g_ty≥
 = 
A_SINGLE
;

2190 
yyvÆ
.
¨g
[1].
¨g_±r
.
¨g_°r
 = 
	`°r_make
(
yypvt
[-0].
cvÆ
,0);

2191 
s
 = 
yypvt
[-0].
cvÆ
; *†&& 
	`i¶owî
(*s); s++) ;

2192 i‡(
dow¨n
 && !*
s
)

2193 
	`w¨n
(

2195 
yypvt
[-0].
cvÆ
 );

2198 
yy°ack
;

2199 
	}
}

	@usersub.c

13 
	~"EXTERN.h
"

14 
	~"≥æ.h
"

16 
	$u£röô
()

19 
	}
}

30 #ifde‡
CRYPTSCRIPT


32 
	~<sig«l.h
>

33 #ifde‡
I_VFORK


34 
	~<vf‹k.h
>

37 
	#CRYPT_MAGIC_1
 0xfb

	)

38 
	#CRYPT_MAGIC_2
 0xf1

	)

40 
	$¸y±fûãr
–
fû
 )

41 
FILE
 * 
fû
;

43 
ch
;

45  (
ch
 = 
	`gëc
–
fû
 )Ë!
EOF
 ) {

46 
	`putch¨
–(
ch
 ^ 0x80) );

48 
	}
}

50 #i‚de‡
MSDOS


51 
FILE
 *
	gœ°pùefûe
;

52 
	gpùïid
;

54 #ifde‡
VOIDSIG


55 
	#VOID
 

	)

57 
	#VOID
 

	)

60 
FILE
 *

61 
	$mypfi›í
(
fû
,
func
)

62 
FILE
 *
fû
;

63 
	`VOID
 (*
func
)();

65 
p
[2];

66 
STR
 *
°r
;

68 i‡(
	`pùe
(
p
) < 0) {

69 
	`f˛o£
–
fû
 );

70 
	`Áèl
("Can't getÖipe for decrypt");

74 
	`fÊush
(
°dout
);

75 
	`fÊush
(
°dîr
);

77 (
pùïid
 = 
	`f‹k
()) < 0) {

78 i‡(
î∫o
 !
EAGAIN
) {

79 
	`˛o£
(
p
[0]);

80 
	`˛o£
(
p
[1]);

81 
	`f˛o£
–
fû
 );

82 
	`Áèl
("Can't fork for decrypt");

84 
	`¶ìp
(5);

86 i‡(
pùïid
 == 0) {

87 
	`˛o£
(
p
[0]);

88 i‡(
p
[1] != 1) {

89 
	`dup2
(
p
[1], 1);

90 
	`˛o£
(
p
[1]);

92 (*
func
)(
fû
);

93 
	`fÊush
(
°dout
);

94 
	`fÊush
(
°dîr
);

95 
	`_exô
(0);

97 
	`˛o£
(
p
[1]);

98 
	`f˛o£
(
fû
);

99 
°r
 = 
	`a„tch
(
fdpid
,
p
[0],
TRUE
);

100 
°r
->
°r_u
.
°r_u£ful
 = 
pùïid
;

101  
	`fd›í
(
p
[0], "r");

102 
	}
}

104 
	$¸y±swôch
()

106 
ch
;

107 #ifde‡
STDSTDIO


109 i‡(
rsÂ
->
_˙t
 > 0 && (*rsÂ->
_±r
 & 0xffË!
CRYPT_MAGIC_1
)

112 
ch
 = 
	`gëc
(
rsÂ
);

113 i‡(
ch
 =
CRYPT_MAGIC_1
) {

114 i‡(
	`gëc
(
rsÂ
Ë=
CRYPT_MAGIC_2
) {

115 
rsÂ
 = 
	`mypfi›í
–rsÂ, 
¸y±fûãr
 );

116 
¥ïro˚ss
 = 1;

119 
	`Áèl
( "badÉncryption format" );

122 
	`ungëc
(
ch
,
rsÂ
);

123 
	}
}

125 
FILE
 *

126 
	$¸y±›í
(
cmd
)

127 *
cmd
;

129 
FILE
 *
fû
 = 
	`f›í
–
cmd
, "r" );

131 
œ°pùefûe
 = 
NuŒÂ
;

132 
pùïid
 = 0;

134 if–
fû
 ) {

135 
ch
 = 
	`gëc
–
fû
 );

136 
löes
 = 0;

137 
ch¨s
 = 0;

144  
ch
 !
CRYPT_MAGIC_1
 && ch !
EOF
 && 
löes
 < 5 && 
ch¨s
 < 300 ) {

145 if–
ch
 == '\n' )

146 ++
löes
;

147 
ch
 = 
	`gëc
–
fû
 );

148 ++
ch¨s
;

151 if–
ch
 =
CRYPT_MAGIC_1
 ) {

152 if–(
ch
 = 
	`gëc
–
fû
 ) ) =
CRYPT_MAGIC_2
 ) {

153 if–
≥ædb
 ) 
	`Áèl
("can't debugánÉncrypted script");

155 
fû
 = 
	`mypfi›í
–fû, 
¸y±fûãr
 );

156 –
œ°pùefûe
 = 
fû
 );

159 
	`Áèl
( "badÉncryption format" );

163 
	`ªwöd
–
fû
 );

166 –
fû
 );

167 
	}
}

169 
VOID


170 
	$¸y±˛o£
(
fû
)

171 
FILE
 *
fû
;

173 if–
fû
 =
NuŒÂ
 )

176 if–
fû
 =
œ°pùefûe
 )

177 
	`myp˛o£
–
fû
 );

179 
	`f˛o£
–
fû
 );

180 
	}
}

	@util.c

17 
	~"EXTERN.h
"

18 
	~"≥æ.h
"

20 #i‡!
deföed
(
NSIG
Ë|| deföed(
M_UNIX
Ë|| deföed(
M_XENIX
)

21 
	~<sig«l.h
>

24 #ifde‡
I_VFORK


25 
	~<vf‹k.h
>

28 #ifde‡
I_VARARGS


29 
	~<v¨¨gs.h
>

32 #ifde‡
I_FCNTL


33 
	~<f˙é.h
>

35 #ifde‡
I_SYS_FILE


36 
	~<sys/fûe.h
>

39 
	#FLUSH


	)

41 
	gnomem
[] = "Out of memory!\n";

45 #ifde‡
DEBUGGING


46 
	g™
 = 0;

55 
	$ß„mÆloc
(
size
)

56 #ifde‡
MSDOS


57 
size
;

59 
MEM_SIZE
 
size
;

62 *
±r
;

63 #i‚de‡
__STDC__


64 #ifde‡
BWGC


65 *
	`gc_mÆloc
();

67 *
	`mÆloc
();

71 #ifde‡
MSDOS


72 i‡(
size
 > 0xffff) {

73 
	`Ârötf
(
°dîr
, "AŒoˇti⁄Åoÿœrge: %lx\n", 
size
Ë
FLUSH
;

74 
	`exô
(1);

77 #ifde‡
DEBUGGING


78 i‡(()
size
 < 0)

79 
	`Áèl
("panic: malloc");

81 #ifde‡
BWGC


82 
±r
 = 
	`gc_mÆloc
(
size
?size:1);

84 
±r
 = 
	`mÆloc
(
size
?size:1);

86 #ifde‡
DEBUGGING


87 #i‚de‡
I286


88 i‡(
debug
 & 128)

89 
	`Ârötf
(
°dîr
,"0x%x: (%05dËmÆlo¯%d byãs\n",
±r
,
™
++,
size
);

91 i‡(
debug
 & 128)

92 
	`Ârötf
(
°dîr
,"0x%lx: (%05dËmÆlo¯%d byãs\n",
±r
,
™
++,
size
);

95 i‡(
±r
 !
NuŒch
)

96  
±r
;

98 
	`Âuts
(
nomem
,
°dîr
Ë
FLUSH
;

99 
	`exô
(1);

102 #ifde‡
löt


103  
±r
;

105 
	}
}

110 
	$ß„ªÆloc
(
whîe
,
size
)

111 *
whîe
;

112 #i‚de‡
MSDOS


113 
MEM_SIZE
 
size
;

115 
size
;

118 *
±r
;

119 #i‚de‡
__STDC__


120 #ifde‡
BWGC


121 *
	`gc_ªÆloc
();

123 *
	`ªÆloc
();

127 #ifde‡
MSDOS


128 i‡(
size
 > 0xffff) {

129 
	`Ârötf
(
°dîr
, "RóŒoˇti⁄Åoÿœrge: %lx\n", 
size
Ë
FLUSH
;

130 
	`exô
(1);

133 i‡(!
whîe
)

134 
	`Áèl
("NullÑealloc");

135 #ifde‡
DEBUGGING


136 i‡(()
size
 < 0)

137 
	`Áèl
("panic:Ñealloc");

139 #ifde‡
BWGC


140 
±r
 = 
	`gc_ªÆloc
(
whîe
,
size
?size:1);

142 
±r
 = 
	`ªÆloc
(
whîe
,
size
?size:1);

144 #ifde‡
DEBUGGING


145 #i‚de‡
I286


146 i‡(
debug
 & 128) {

147 
	`Ârötf
(
°dîr
,"0x%x: (%05dËr‰ì\n",
whîe
,
™
++);

148 
	`Ârötf
(
°dîr
,"0x%x: (%05dËªÆlo¯%d byãs\n",
±r
,
™
++,
size
);

151 i‡(
debug
 & 128) {

152 
	`Ârötf
(
°dîr
,"0x%lx: (%05dËr‰ì\n",
whîe
,
™
++);

153 
	`Ârötf
(
°dîr
,"0x%lx: (%05dËªÆlo¯%d byãs\n",
±r
,
™
++,
size
);

157 i‡(
±r
 !
NuŒch
)

158  
±r
;

160 
	`Âuts
(
nomem
,
°dîr
Ë
FLUSH
;

161 
	`exô
(1);

164 #ifde‡
löt


165  
±r
;

167 
	}
}

172 
	$ß„‰ì
(
whîe
)

173 *
whîe
;

175 #ifde‡
DEBUGGING


176 #i‚de‡
I286


177 i‡(
debug
 & 128)

178 
	`Ârötf
(
°dîr
,"0x%x: (%05dË‰ì\n",
whîe
,
™
++);

180 i‡(
debug
 & 128)

181 
	`Ârötf
(
°dîr
,"0x%lx: (%05dË‰ì\n",
whîe
,
™
++);

184 #i‚de‡
IGNOREFREE


185 i‡(
whîe
) {

186 
	`‰ì
(
whîe
);

189 
	}
}

191 #ifde‡
LEAKTEST


193 
	#ALIGN
 ()

	)

196 
	$ß„xmÆloc
(
x
,
size
)

197 
x
;

198 
MEM_SIZE
 
size
;

200 *
whîe
;

202 
whîe
 = 
	`ß„mÆloc
(
size
 + 
ALIGN
);

203 
xcou¡
[
x
]++;

204 
whîe
[0] = 
x
 % 100;

205 
whîe
[1] = 
x
 / 100;

206  
whîe
 + 
ALIGN
;

207 
	}
}

210 
	$ß„xªÆloc
(
whîe
,
size
)

211 *
whîe
;

212 
MEM_SIZE
 
size
;

214  
	`ß„ªÆloc
(
whîe
 - 
ALIGN
, 
size
 + ALIGN) + ALIGN;

215 
	}
}

218 
	$ß„x‰ì
(
whîe
)

219 *
whîe
;

221 
x
;

223 i‡(!
whîe
)

225 
whîe
 -
ALIGN
;

226 
x
 = 
whîe
[0] + 100 * where[1];

227 
xcou¡
[
x
]--;

228 
	`ß„‰ì
(
whîe
);

229 
	}
}

231 
	$x°©
()

233 
i
;

235 
i
 = 0; i < 
MAXXCOUNT
; i++) {

236 i‡(
xcou¡
[
i
] !
œ°xcou¡
[i]) {

237 
	`Ârötf
(
°dîr
,"%2d %2d\t%ld\n", 
i
 / 100, i % 100, 
xcou¡
[i]);

238 
œ°xcou¡
[
i
] = 
xcou¡
[i];

241 
	}
}

248 
	$˝ytûl
(
to
,
‰om
,
‰omíd
,
dñim
,
ªéí
)

249 *
to
;

250 *
‰om
;

251 *
‰omíd
;

252 
dñim
;

253 *
ªéí
;

255 *
‹igto
 = 
to
;

257 ; 
‰om
 < 
‰omíd
; from++,
to
++) {

258 i‡(*
‰om
 == '\\') {

259 i‡(
‰om
[1] =
dñim
)

260 
‰om
++;

261 i‡(
‰om
[1] == '\\')

262 *
to
++ = *
‰om
++;

264 i‡(*
‰om
 =
dñim
)

266 *
to
 = *
‰om
;

268 *
to
 = '\0';

269 *
ªéí
 = 
to
 - 
‹igto
;

270  
‰om
;

271 
	}
}

277 
	$ö°r
(
big
, 
lôée
)

278 *
big
;

279 *
lôée
;

281 *
s
, *
x
;

282 
fú°
;

284 i‡(!
lôée
)

285  
big
;

286 
fú°
 = *
lôée
++;

287 i‡(!
fú°
)

288  
big
;

289 *
big
) {

290 i‡(*
big
++ !
fú°
)

292 
x
=
big
,
s
=
lôée
; *s; ) {

293 i‡(!*
x
)

294  
NuŒch
;

295 i‡(*
s
++ !*
x
++) {

296 
s
--;

300 i‡(!*
s
)

301  
big
-1;

303  
NuŒch
;

304 
	}
}

309 
	$nö°r
(
big
, 
bigíd
, 
lôée
, 
Ànd
)

310 *
big
;

311 *
bigíd
;

312 *
lôée
;

313 *
Ànd
;

315 *
s
, *
x
;

316 
fú°
 = *
lôée
;

317 *
lôéìnd
 = 
Ànd
;

319 i‡(!
fú°
 && 
lôée
 > 
lôéìnd
)

320  
big
;

321 
bigíd
 -
lôéìnd
 - 
lôée
++;

322 
big
 <
bigíd
) {

323 i‡(*
big
++ !
fú°
)

325 
x
=
big
,
s
=
lôée
; s < 
lôéìnd
; ) {

326 i‡(*
s
++ !*
x
++) {

327 
s
--;

331 i‡(
s
 >
lôéìnd
)

332  
big
-1;

334  
NuŒch
;

335 
	}
}

340 
	$∫ö°r
(
big
, 
bigíd
, 
lôée
, 
Ànd
)

341 *
big
;

342 *
bigíd
;

343 *
lôée
;

344 *
Ànd
;

346 *
bigbeg
;

347 *
s
, *
x
;

348 
fú°
 = *
lôée
;

349 *
lôéìnd
 = 
Ànd
;

351 i‡(!
fú°
 && 
lôée
 > 
lôéìnd
)

352  
bigíd
;

353 
bigbeg
 = 
big
;

354 
big
 = 
bigíd
 - (
lôéìnd
 - 
lôée
++);

355 
big
 >
bigbeg
) {

356 i‡(*
big
-- !
fú°
)

358 
x
=
big
+2,
s
=
lôée
; s < 
lôéìnd
; ) {

359 i‡(*
s
++ !*
x
++) {

360 
s
--;

364 i‡(
s
 >
lôéìnd
)

365  
big
+1;

367  
NuŒch
;

368 
	}
}

370 
	gfﬁd
[] = {

405 
	g‰eq
[] = {

441 
	$fbmcompûe
(
°r
, 
iÊag
)

442 
STR
 *
°r
;

443 
iÊag
;

445 *
s
;

446 *
èbÀ
;

447 
i
;

448 
Àn
 = 
°r
->
°r_cur
;

449 
øª°
 = 0;

450 
‰equícy
 = 256;

452 
	`Så_Grow
(
°r
,
Àn
+258);

453 #i‚de‡
löt


454 
èbÀ
 = (*)(
°r
->
°r_±r
 + 
Àn
 + 1);

456 
èbÀ
 = 
	`NuŒ
(*);

458 
s
 = 
èbÀ
 - 2;

459 
i
 = 0; i < 256; i++) {

460 
èbÀ
[
i
] = 
Àn
;

462 
i
 = 0;

463 #i‚de‡
löt


464 
s
 >(*)(
°r
->
°r_±r
))

467 i‡(
èbÀ
[*
s
] =
Àn
) {

468 #i‚de‡
pdp11


469 i‡(
iÊag
)

470 
èbÀ
[*
s
] =ÅabÀ[
fﬁd
[*s]] = 
i
;

472 i‡(
iÊag
) {

473 
j
;

474 
j
 = 
fﬁd
[*
s
];

475 
èbÀ
[
j
] = 
i
;

476 
èbÀ
[*
s
] = 
i
;

480 
èbÀ
[*
s
] = 
i
;

482 
s
--,
i
++;

484 
°r
->
°r_pok
 |
SP_FBM
;

486 #i‚de‡
löt


487 
s
 = (*)(
°r
->
°r_±r
);

489 
s
 = 
	`NuŒ
(*);

491 i‡(
iÊag
) {

492 
tmp
, 
fﬁdtmp
;

493 
°r
->
°r_pok
 |
SP_CASEFOLD
;

494 
i
 = 0; i < 
Àn
; i++) {

495 
tmp
=
‰eq
[
s
[
i
]];

496 
fﬁdtmp
=
‰eq
[
fﬁd
[
s
[
i
]]];

497 i‡(
tmp
 < 
‰equícy
 && 
fﬁdtmp
 < frequency) {

498 
øª°
 = 
i
;

500 
‰equícy
 = (
tmp
 > 
fﬁdtmp
) ?Åmp : foldtmp;

505 
i
 = 0; i < 
Àn
; i++) {

506 i‡(
‰eq
[
s
[
i
]] < 
‰equícy
) {

507 
øª°
 = 
i
;

508 
‰equícy
 = 
‰eq
[
s
[
i
]];

512 
°r
->
°r_øª
 = 
s
[
øª°
];

513 
°r
->
°r_°©e
 = 
øª°
;

514 #ifde‡
DEBUGGING


515 i‡(
debug
 & 512)

516 
	`Ârötf
(
°dîr
,"øª° ch¨ %¯© %d\n",
°r
->
°r_øª
, så->
°r_°©e
);

518 
	}
}

521 
	$fbmö°r
(
big
, 
bigíd
, 
lôée°r
)

522 *
big
;

523 *
bigíd
;

524 
STR
 *
lôée°r
;

526 *
s
;

527 
tmp
;

528 
lôéñí
;

529 *
lôée
;

530 *
èbÀ
;

531 *
ﬁds
;

532 *
ﬁdlôée
;

534 #i‚de‡
löt


535 i‡(!(
lôée°r
->
°r_pok
 & 
SP_FBM
))

536  
	`nö°r
((*)
big
,(*)
bigíd
,

537 
lôée°r
->
°r_±r
,Üôée°r->°r_±∏+Üôée°r->
°r_cur
);

540 
lôéñí
 = 
lôée°r
->
°r_cur
;

541 #i‚de‡
löt


542 i‡(
lôée°r
->
°r_pok
 & 
SP_TAIL
 && !
mu…ûöe
) {

543 i‡(
lôéñí
 > 
bigíd
 - 
big
)

544  
NuŒch
;

545 
lôée
 = (*)
lôée°r
->
°r_±r
;

546 i‡(
lôée°r
->
°r_pok
 & 
SP_CASEFOLD
) {

547 
big
 = 
bigíd
 - 
lôéñí
;

548 i‡(
bigíd
[-1] ='\n' && 
lôée
[
lôéñí
-1] != '\n')

549 
big
--;

552 
s
 = 
bigíd
 - 
lôéñí
;

553 i‡(*
s
 =*
lôée
 && 
	`bcmp
(s,lôée,
lôéñí
)==0)

554  (*)
s
;

555 i‡(
bigíd
[-1] ='\n' && 
lôée
[
lôéñí
-1] != '\n'

556 && 
s
 > 
big
) {

557 
s
--;

558 i‡(*
s
 =*
lôée
 && 
	`bcmp
(s,lôée,
lôéñí
)==0)

559  (*)
s
;

561  
NuŒch
;

564 
èbÀ
 = (*)(
lôée°r
->
°r_±r
 + 
lôéñí
 + 1);

566 
èbÀ
 = 
	`NuŒ
(*);

568 i‡(--
lôéñí
 >
bigíd
 - 
big
)

569  
NuŒch
;

570 
s
 = 
big
 + 
lôéñí
;

571 
ﬁdlôée
 = 
lôée
 = 
èbÀ
 - 2;

572 i‡(
lôée°r
->
°r_pok
 & 
SP_CASEFOLD
) {

573 i‡(
s
 < 
bigíd
) {

574 
t›1
:

575 i‡(
tmp
 = 
èbÀ
[*
s
]) {

576 #ifde‡
POINTERRIGOR


577 i‡(
bigíd
 - 
s
 > 
tmp
) {

578 
s
 +
tmp
;

579 
t›1
;

582 i‡((
s
 +
tmp
Ë< 
bigíd
)

583 
t›1
;

585  
NuŒch
;

588 
tmp
 = 
lôéñí
;

589 
ﬁds
 = 
s
;

590 
tmp
--) {

591 i‡(*--
s
 =*--
lôée
 || 
fﬁd
[*s] == *little)

593 
s
 = 
ﬁds
 + 1;

594 
lôée
 = 
ﬁdlôée
;

595 i‡(
s
 < 
bigíd
)

596 
t›1
;

597  
NuŒch
;

599 #i‚de‡
löt


600  (*)
s
;

606 i‡(
s
 < 
bigíd
) {

607 
t›2
:

608 i‡(
tmp
 = 
èbÀ
[*
s
]) {

609 #ifde‡
POINTERRIGOR


610 i‡(
bigíd
 - 
s
 > 
tmp
) {

611 
s
 +
tmp
;

612 
t›2
;

615 i‡((
s
 +
tmp
Ë< 
bigíd
)

616 
t›2
;

618  
NuŒch
;

621 
tmp
 = 
lôéñí
;

622 
ﬁds
 = 
s
;

623 
tmp
--) {

624 i‡(*--
s
 =*--
lôée
)

626 
s
 = 
ﬁds
 + 1;

627 
lôée
 = 
ﬁdlôée
;

628 i‡(
s
 < 
bigíd
)

629 
t›2
;

630  
NuŒch
;

632 #i‚de‡
löt


633  (*)
s
;

638  
NuŒch
;

639 
	}
}

642 
	$s¸ómö°r
(
big°r
, 
lôée°r
)

643 
STR
 *
big°r
;

644 
STR
 *
lôée°r
;

646 *
s
, *
x
;

647 *
big
;

648 
pos
;

649 
¥evious
;

650 
fú°
;

651 *
lôée
;

652 *
bigíd
;

653 *
lôéìnd
;

655 i‡((
pos
 = 
s¸ómfú°
[
lôée°r
->
°r_øª
]) < 0)

656  
NuŒch
;

657 #i‚de‡
löt


658 
lôée
 = (*)(
lôée°r
->
°r_±r
);

660 
lôée
 = 
	`NuŒ
(*);

662 
lôéìnd
 = 
lôée
 + 
lôée°r
->
°r_cur
;

663 
fú°
 = *
lôée
++;

664 
¥evious
 = 
lôée°r
->
°r_°©e
;

665 #i‚de‡
löt


666 
big
 = (*)(
big°r
->
°r_±r
);

668 
big
 = 
	`NuŒ
(*);

670 
bigíd
 = 
big
 + 
big°r
->
°r_cur
;

671 
big
 -
¥evious
;

672 
pos
 < 
¥evious
) {

673 #i‚de‡
löt


674 i‡(!(
pos
 +
s¸óm√xt
[pos]))

676  
NuŒch
;

678 i‡(
lôée°r
->
°r_pok
 & 
SP_CASEFOLD
) {

680 i‡(
big
[
pos
] !
fú°
 && big[pos] !
fﬁd
[first])

682 
x
=
big
+
pos
+1,
s
=
lôée
; s < 
lôéìnd
; ) {

683 i‡(
x
 >
bigíd
)

684  
NuŒch
;

685 i‡(*
s
++ !*
x
++ && 
fﬁd
[*(s-1)] != *(x-1)) {

686 
s
--;

690 i‡(
s
 =
lôéìnd
)

691 #i‚de‡
löt


692  (*)(
big
+
pos
);

694  
NuŒch
;

697 #i‚de‡
löt


698 
pos
 +
s¸óm√xt
[pos]

700 
pos
 +
s¸óm√xt
[0]

706 i‡(
big
[
pos
] !
fú°
)

708 
x
=
big
+
pos
+1,
s
=
lôée
; s < 
lôéìnd
; ) {

709 i‡(
x
 >
bigíd
)

710  
NuŒch
;

711 i‡(*
s
++ !*
x
++) {

712 
s
--;

716 i‡(
s
 =
lôéìnd
)

717 #i‚de‡
löt


718  (*)(
big
+
pos
);

720  
NuŒch
;

723 #i‚de‡
löt


724 
pos
 +
s¸óm√xt
[pos]

726 
pos
 +
s¸óm√xt
[0]

730  
NuŒch
;

731 
	}
}

736 
	$ßve°r
(
°r
)

737 *
°r
;

739 *
√waddr
;

741 
	`New
(902,
√waddr
,
	`°æí
(
°r
)+1,);

742 ()
	`°r˝y
(
√waddr
,
°r
);

743  
√waddr
;

744 
	}
}

749 
	$nßve°r
(
°r
, 
Àn
)

750 *
°r
;

751 
Àn
;

753 *
√waddr
;

755 
	`New
(903,
√waddr
,
Àn
+1,);

756 ()
	`bc›y
(
°r
,
√waddr
,
Àn
);

757 
√waddr
[
Àn
] = '\0';

758  
√waddr
;

759 
	}
}

764 
	$grow°r
(
°Ωå
,
cuæí
,
√wÀn
)

765 **
°Ωå
;

766 *
cuæí
;

767 
√wÀn
;

769 i‡(
√wÀn
 > *
cuæí
) {

770 i‡(*
cuæí
)

771 
	`Ríew
(*
°Ωå
,
√wÀn
,);

773 
	`New
(905,*
°Ωå
,
√wÀn
,);

774 *
cuæí
 = 
√wÀn
;

776 
	}
}

778 #i‚de‡
I_VARARGS


780 
	$mess
(
∑t
,
a1
,
a2
,
a3
,
a4
)

781 *
∑t
;

782 
a1
, 
a2
, 
a3
, 
a4
;

784 *
s
;

786 
s
 = 
buf
;

787 ()
	`•rötf
(
s
,
∑t
,
a1
,
a2
,
a3
,
a4
);

788 
s
 +
	`°æí
(s);

789 i‡(
s
[-1] != '\n') {

790 i‡(
curcmd
->
c_löe
) {

791 ()
	`•rötf
(
s
,"át %sÜine %ld",

792 
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
, ()curcmd->
c_löe
);

793 
s
 +
	`°æí
(s);

795 i‡(
œ°_ö_°ab
 &&

796 
	`°ab_io
(
œ°_ö_°ab
) &&

797 
	`°ab_io
(
œ°_ö_°ab
)->
löes
 ) {

798 ()
	`•rötf
(
s
,", <%s>Üine %ld",

799 
œ°_ö_°ab
 =
¨gv°ab
 ? "" : 
	`°ab_«me
(last_in_stab),

800 ()
	`°ab_io
(
œ°_ö_°ab
)->
löes
);

801 
s
 +
	`°æí
(s);

803 ()
	`°r˝y
(
s
,".\n");

805 
	}
}

808 
	$Áèl
(
∑t
,
a1
,
a2
,
a3
,
a4
)

809 *
∑t
;

810 
a1
, 
a2
, 
a3
, 
a4
;

812 
FILE
 *
e_Â
;

813 
*
e_tm≤ame
;

814 *
tmps
;

816 
	`mess
(
∑t
,
a1
,
a2
,
a3
,
a4
);

817 i‡(
ö_evÆ
) {

818 
	`°r_£t
(
	`°ab_vÆ
(
	`°abít
("@",
TRUE
)),
buf
);

819 
tmps
 = "_EVAL_";

820 
lo›_±r
 >0 && (!
lo›_°ack
[lo›_±r].
lo›_œbñ
 ||

821 
	`°rNE
(
tmps
,
lo›_°ack
[
lo›_±r
].
lo›_œbñ
) )) {

822 #ifde‡
DEBUGGING


823 i‡(
debug
 & 4) {

824 
	`deb
("(SkùpögÜabñ #%d %s)\n",
lo›_±r
,

825 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
);

828 
lo›_±r
--;

830 #ifde‡
DEBUGGING


831 i‡(
debug
 & 4) {

832 
	`deb
("(FoundÜabñ #%d %s)\n",
lo›_±r
,

833 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
);

836 i‡(
lo›_±r
 < 0) {

837 
ö_evÆ
 = 0;

838 
	`Áèl
("BadÜabñ: %s", 
tmps
);

840 
	`l⁄gjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
, 1);

842 
	`Âuts
(
buf
,
°dîr
);

843 ()
	`fÊush
(
°dîr
);

844 i‡(
e_Â
)

845 ()
	`UNLINK
(
e_tm≤ame
);

846 
°©usvÆue
 >>= 8;

847 
	`exô
(()((
î∫o
&255)?î∫o:((
°©usvÆue
&255)?statusvalue:255)));

848 
	}
}

851 
	$w¨n
(
∑t
,
a1
,
a2
,
a3
,
a4
)

852 *
∑t
;

853 
a1
, 
a2
, 
a3
, 
a4
;

855 
	`mess
(
∑t
,
a1
,
a2
,
a3
,
a4
);

856 
	`Âuts
(
buf
,
°dîr
);

857 #ifde‡
LEAKTEST


858 #ifde‡
DEBUGGING


859 i‡(
debug
 & 4096)

860 
	`x°©
();

863 ()
	`fÊush
(
°dîr
);

864 
	}
}

867 
	$mess
(
¨gs
)

868 
va_li°
 
¨gs
;

870 *
∑t
;

871 *
s
;

872 #ifde‡
CHARVSPRINTF


873 *
	`v•rötf
();

875 
	`v•rötf
();

878 
s
 = 
buf
;

879 #ifde‡
löt


880 
∑t
 = 
NuŒch
;

882 
∑t
 = 
	`va_¨g
(
¨gs
, *);

884 (Ë
	`v•rötf
(
s
,
∑t
,
¨gs
);

886 
s
 +
	`°æí
(s);

887 i‡(
s
[-1] != '\n') {

888 i‡(
curcmd
->
c_löe
) {

889 ()
	`•rötf
(
s
,"át %sÜine %ld",

890 
	`°ab_vÆ
(
curcmd
->
c_fûe°ab
)->
°r_±r
, ()curcmd->
c_löe
);

891 
s
 +
	`°æí
(s);

893 i‡(
œ°_ö_°ab
 &&

894 
	`°ab_io
(
œ°_ö_°ab
) &&

895 
	`°ab_io
(
œ°_ö_°ab
)->
löes
 ) {

896 ()
	`•rötf
(
s
,", <%s>Üine %ld",

897 
œ°_ö_°ab
 =
¨gv°ab
 ? "" :Üa°_ö_°ab->
°r_magic
->
°r_±r
,

898 ()
	`°ab_io
(
œ°_ö_°ab
)->
löes
);

899 
s
 +
	`°æí
(s);

901 ()
	`°r˝y
(
s
,".\n");

903 
	}
}

906 
	$Áèl
(
va_Æi°
)

907 
va_d˛


909 
va_li°
 
¨gs
;

910 
FILE
 *
e_Â
;

911 
*
e_tm≤ame
;

912 *
tmps
;

914 #i‚de‡
löt


915 
	`va_°¨t
(
¨gs
);

917 
¨gs
 = 0;

919 
	`mess
(
¨gs
);

920 
	`va_íd
(
¨gs
);

921 i‡(
ö_evÆ
) {

922 
	`°r_£t
(
	`°ab_vÆ
(
	`°abít
("@",
TRUE
)),
buf
);

923 
tmps
 = "_EVAL_";

924 
lo›_±r
 >0 && (!
lo›_°ack
[lo›_±r].
lo›_œbñ
 ||

925 
	`°rNE
(
tmps
,
lo›_°ack
[
lo›_±r
].
lo›_œbñ
) )) {

926 #ifde‡
DEBUGGING


927 i‡(
debug
 & 4) {

928 
	`deb
("(SkùpögÜabñ #%d %s)\n",
lo›_±r
,

929 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
);

932 
lo›_±r
--;

934 #ifde‡
DEBUGGING


935 i‡(
debug
 & 4) {

936 
	`deb
("(FoundÜabñ #%d %s)\n",
lo›_±r
,

937 
lo›_°ack
[
lo›_±r
].
lo›_œbñ
);

940 i‡(
lo›_±r
 < 0) {

941 
ö_evÆ
 = 0;

942 
	`Áèl
("BadÜabñ: %s", 
tmps
);

944 
	`l⁄gjmp
(
lo›_°ack
[
lo›_±r
].
lo›_ív
, 1);

946 
	`Âuts
(
buf
,
°dîr
);

947 ()
	`fÊush
(
°dîr
);

948 i‡(
e_Â
)

949 ()
	`UNLINK
(
e_tm≤ame
);

950 
°©usvÆue
 >>= 8;

951 
	`exô
(()((
î∫o
&255)?î∫o:((
°©usvÆue
&255)?statusvalue:255)));

952 
	}
}

955 
	$w¨n
(
va_Æi°
)

956 
va_d˛


958 
va_li°
 
¨gs
;

960 #i‚de‡
löt


961 
	`va_°¨t
(
¨gs
);

963 
¨gs
 = 0;

965 
	`mess
(
¨gs
);

966 
	`va_íd
(
¨gs
);

968 
	`Âuts
(
buf
,
°dîr
);

969 #ifde‡
LEAKTEST


970 #ifde‡
DEBUGGING


971 i‡(
debug
 & 4096)

972 
	`x°©
();

975 ()
	`fÊush
(
°dîr
);

976 
	}
}

980 
	$my_£ãnv
(
«m
,
vÆ
)

981 *
«m
, *
vÆ
;

983 
i
=
	`ívix
(
«m
);

985 i‡(
ívú⁄
 =
‹igívú⁄
) {

986 
j
;

987 
max
;

988 **
tm≥nv
;

990 
max
 = 
i
; 
ívú⁄
[max]; max++) ;

991 
	`New
(901,
tm≥nv
, 
max
+2, *);

992 
j
=0; j<
max
; j++)

993 
tm≥nv
[
j
] = 
	`ßve°r
(
ívú⁄
[j]);

994 
tm≥nv
[
max
] = 
NuŒch
;

995 
ívú⁄
 = 
tm≥nv
;

997 i‡(!
vÆ
) {

998 
ívú⁄
[
i
]) {

999 
ívú⁄
[
i
] =Énviron[i+1];

1000 
i
++;

1004 i‡(!
ívú⁄
[
i
]) {

1005 
	`Ríew
(
ívú⁄
, 
i
+2, *);

1006 
ívú⁄
[
i
+1] = 
NuŒch
;

1009 
	`Sa„‰ì
(
ívú⁄
[
i
]);

1010 
	`New
(904, 
ívú⁄
[
i
], 
	`°æí
(
«m
Ë+ såÀn(
vÆ
) + 2, );

1011 #i‚de‡
MSDOS


1012 ()
	`•rötf
(
ívú⁄
[
i
],"%s=%s",
«m
,
vÆ
);

1019 
	`°r˝y
(
ívú⁄
[
i
],
«m
); 
	`°ru¥
(environ[i]);

1020 ()
	`•rötf
(
ívú⁄
[
i
] + 
	`°æí
(
«m
),"=%s",
vÆ
);

1022 
	}
}

1025 
	$ívix
(
«m
)

1026 *
«m
;

1028 
i
, 
Àn
 = 
	`°æí
(
«m
);

1030 
i
 = 0; 
ívú⁄
[i]; i++) {

1031 i‡(
	`°∫EQ
(
ívú⁄
[
i
],
«m
,
Àn
) &&Énviron[i][len] == '=')

1034  
i
;

1035 
	}
}

1037 #ifde‡
EUNICE


1038 
	$u∆nk
(
f
)

1039 *
f
;

1041 
i
;

1043 
i
 = 0; 
	`u∆ök
(
f
) >= 0; i++) ;

1044  
i
 ? 0 : -1;

1045 
	}
}

1048 #i‚de‡
HAS_MEMCPY


1049 #i‚de‡
HAS_BCOPY


1051 
	$bc›y
(
‰om
,
to
,
Àn
)

1052 *
‰om
;

1053 *
to
;

1054 
Àn
;

1056 *
ªtvÆ
 = 
to
;

1058 
Àn
--)

1059 *
to
++ = *
‰om
++;

1060  
ªtvÆ
;

1061 
	}
}

1064 #i‚de‡
HAS_BZERO


1066 
	$bzîo
(
loc
,
Àn
)

1067 *
loc
;

1068 
Àn
;

1070 *
ªtvÆ
 = 
loc
;

1072 
Àn
--)

1073 *
loc
++ = 0;

1074  
ªtvÆ
;

1075 
	}
}

1079 #ifde‡
I_VARARGS


1080 #i‚de‡
HAS_VPRINTF


1082 #ifde‡
CHARVSPRINTF


1087 
	$v•rötf
(
de°
, 
∑t
, 
¨gs
)

1088 *
de°
, *
∑t
, *
¨gs
;

1090 
FILE
 
Ákebuf
;

1092 
Ákebuf
.
_±r
 = 
de°
;

1093 
Ákebuf
.
_˙t
 = 32767;

1094 #i‚de‡
_IOSTRG


1095 
	#_IOSTRG
 0

	)

1097 
Ákebuf
.
_Êag
 = 
_IOWRT
|
_IOSTRG
;

1098 
	`_d›∫t
(
∑t
, 
¨gs
, &
Ákebuf
);

1099 ()
	`putc
('\0', &
Ákebuf
);

1100 #ifde‡
CHARVSPRINTF


1101 (
de°
);

1105 
	}
}

1107 #ifde‡
DEBUGGING


1109 
	$vÂrötf
(
fd
, 
∑t
, 
¨gs
)

1110 
FILE
 *
fd
;

1111 *
∑t
, *
¨gs
;

1113 
	`_d›∫t
(
∑t
, 
¨gs
, 
fd
);

1115 
	}
}

1120 #ifde‡
MYSWAP


1121 #i‡
BYTEORDER
 != 0x4321

1123 
	$my_sw≠
(
s
)

1124 
s
;

1126 #i‡(
BYTEORDER
 & 1) == 0

1127 
ªsu…
;

1129 
ªsu…
 = ((
s
 & 255) << 8) + ((s >> 8) & 255);

1130  
ªsu…
;

1132  
s
;

1134 
	}
}

1137 
	$ht⁄l
(
l
)

1138 
l
;

1141 
ªsu…
;

1142 
c
[()];

1143 } 
u
;

1145 #i‡
BYTEORDER
 == 0x1234

1146 
u
.
c
[0] = (
l
 >> 24) & 255;

1147 
u
.
c
[1] = (
l
 >> 16) & 255;

1148 
u
.
c
[2] = (
l
 >> 8) & 255;

1149 
u
.
c
[3] = 
l
 & 255;

1150  
u
.
ªsu…
;

1152 #i‡((
BYTEORDER
 - 0x1111) & 0x444) || !(BYTEORDER & 0xf)

1153 
	`Áèl
("Unknown BYTEORDER\n");

1155 
o
;

1156 
s
;

1158 
o
 = 
BYTEORDER
 - 0x1111, 
s
 = 0; s < (()*8); o >>= 4, s += 8) {

1159 
u
.
c
[
o
 & 0xf] = (
l
 >> 
s
) & 255;

1161  
u
.
ªsu…
;

1164 
	}
}

1167 
	$¡ohl
(
l
)

1168 
l
;

1171 
l
;

1172 
c
[()];

1173 } 
u
;

1175 #i‡
BYTEORDER
 == 0x1234

1176 
u
.
c
[0] = (
l
 >> 24) & 255;

1177 
u
.
c
[1] = (
l
 >> 16) & 255;

1178 
u
.
c
[2] = (
l
 >> 8) & 255;

1179 
u
.
c
[3] = 
l
 & 255;

1180  
u
.
l
;

1182 #i‡((
BYTEORDER
 - 0x1111) & 0x444) || !(BYTEORDER & 0xf)

1183 
	`Áèl
("Unknown BYTEORDER\n");

1185 
o
;

1186 
s
;

1188 
u
.
l
 =Ü;

1189 
l
 = 0;

1190 
o
 = 
BYTEORDER
 - 0x1111, 
s
 = 0; s < (()*8); o >>= 4, s += 8) {

1191 
l
 |(
u
.
c
[
o
 & 0xf] & 255Ë<< 
s
;

1193  
l
;

1196 
	}
}

1201 #i‚de‡
MSDOS


1202 
FILE
 *

1203 
	$myp›í
(
cmd
,
mode
)

1204 *
cmd
;

1205 *
mode
;

1207 
p
[2];

1208 
this
, 
th©
;

1209 
pid
;

1210 
STR
 *
°r
;

1211 
d€xec
 = 
	`°rNE
(
cmd
,"-");

1213 i‡(
	`pùe
(
p
) < 0)

1214  
NuŒÂ
;

1215 
this
 = (*
mode
 == 'w');

1216 
th©
 = !
this
;

1217 (
pid
 = (
d€xec
?
	`vf‹k
():
	`f‹k
())) < 0) {

1218 i‡(
î∫o
 !
EAGAIN
) {

1219 
	`˛o£
(
p
[
this
]);

1220 i‡(!
d€xec
)

1221 
	`Áèl
("Can't fork");

1222  
NuŒÂ
;

1224 
	`¶ìp
(5);

1226 i‡(
pid
 == 0) {

1227 
	#THIS
 
th©


	)

1228 
	#THAT
 
this


	)

1229 
	`˛o£
(
p
[
THAT
]);

1230 i‡(
p
[
THIS
] !(*
mode
 == 'r')) {

1231 
	`dup2
(
p
[
THIS
], *
mode
 == 'r');

1232 
	`˛o£
(
p
[
THIS
]);

1234 i‡(
d€xec
) {

1235 #i‡!
	`deföed
(
I_FCNTL
Ë|| !deföed(
F_SETFD
)

1236 
fd
;

1238 #i‚de‡
NOFILE


1239 
	#NOFILE
 20

	)

1241 
fd
 = 3; fd < 
NOFILE
; fd++)

1242 
	`˛o£
(
fd
);

1244 
	`do_exec
(
cmd
);

1245 
	`_exô
(1);

1247 i‡(
tmp°ab
 = 
	`°abít
("$",
Æl°abs
))

1248 
	`°r_num£t
(
	`STAB_STR
(
tmp°ab
),()
	`gëpid
());

1249 
f‹k¥o˚ss
 = 0;

1250 
	`h˛ór
(
pid°©us
, 
FALSE
);

1251  
NuŒÂ
;

1252 #unde‡
THIS


1253 #unde‡
THAT


1255 
	`do_exec‰ì
();

1256 
	`˛o£
(
p
[
th©
]);

1257 i‡(
p
[
th©
] <Ö[
this
]) {

1258 
	`dup2
(
p
[
this
],Ö[
th©
]);

1259 
	`˛o£
(
p
[
this
]);

1260 
p
[
this
] =Ö[
th©
];

1262 
°r
 = 
	`a„tch
(
fdpid
,
p
[
this
],
TRUE
);

1263 
°r
->
°r_u
.
°r_u£ful
 = 
pid
;

1264 
f‹k¥o˚ss
 = 
pid
;

1265  
	`fd›í
(
p
[
this
], 
mode
);

1266 
	}
}

1269 #ifde‡
NOTDEF


1270 
	$dumpfds
(
s
)

1271 *
s
;

1273 
fd
;

1274 
°©
 
tmp°©buf
;

1276 
	`Ârötf
(
°dîr
,"%s", 
s
);

1277 
fd
 = 0; fd < 32; fd++) {

1278 i‡(
	`f°©
(
fd
,&
tmp°©buf
) >= 0)

1279 
	`Ârötf
(
°dîr
," %d",
fd
);

1281 
	`Ârötf
(
°dîr
,"\n");

1282 
	}
}

1285 #i‚de‡
HAS_DUP2


1286 
	$dup2
(
ﬁdfd
,
√wfd
)

1287 
ﬁdfd
;

1288 
√wfd
;

1290 #i‡
	`deföed
(
HAS_FCNTL
Ë&& deföed(
F_DUPFD
)

1291 
	`˛o£
(
√wfd
);

1292 
	`f˙é
(
ﬁdfd
, 
F_DUPFD
, 
√wfd
);

1294 
fdtmp
[20];

1295 
fdx
 = 0;

1296 
fd
;

1298 i‡(
ﬁdfd
 =
√wfd
)

1300 
	`˛o£
(
√wfd
);

1301 (
fd
 = 
	`dup
(
ﬁdfd
)Ë!
√wfd
)

1302 
fdtmp
[
fdx
++] = 
fd
;

1303 
fdx
 > 0)

1304 
	`˛o£
(
fdtmp
[--
fdx
]);

1306 
	}
}

1309 #i‚de‡
MSDOS


1311 
	$myp˛o£
(
±r
)

1312 
FILE
 *
±r
;

1314 #ifde‡
VOIDSIG


1315 (*
h°©
)(), (*
i°©
)(), (*
q°©
)();

1317 (*
h°©
)(), (*
i°©
)(), (*
q°©
)();

1319 
°©us
;

1320 
STR
 *
°r
;

1321 
pid
;

1323 
°r
 = 
	`a„tch
(
fdpid
,
	`fûío
(
±r
),
TRUE
);

1324 
	`a°‹e
(
fdpid
,
	`fûío
(
±r
),
NuŒ°r
);

1325 
	`f˛o£
(
±r
);

1326 
pid
 = ()
°r
->
°r_u
.
°r_u£ful
;

1327 
h°©
 = 
	`sig«l
(
SIGHUP
, 
SIG_IGN
);

1328 
i°©
 = 
	`sig«l
(
SIGINT
, 
SIG_IGN
);

1329 
q°©
 = 
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

1330 
pid
 = 
	`waô4pid
’id, &
°©us
, 0);

1331 
	`sig«l
(
SIGHUP
, 
h°©
);

1332 
	`sig«l
(
SIGINT
, 
i°©
);

1333 
	`sig«l
(
SIGQUIT
, 
q°©
);

1334 (
pid
 < 0 ?Öid : 
°©us
);

1335 
	}
}

1338 
	$waô4pid
(
pid
,
°©u•
,
Êags
)

1339 
pid
;

1340 *
°©u•
;

1341 
Êags
;

1343 
ªsu…
;

1344 
STR
 *
°r
;

1345 
•id
[16];

1347 i‡(!
pid
)

1349 #ifde‡
HAS_WAIT4


1350  
	`waô4
((
pid
==-1)?0:pid,
°©u•
,
Êags
,
	`NuŒ
(
rußge
 *));

1352 #ifde‡
HAS_WAITPID


1353  
	`waôpid
(
pid
,
°©u•
,
Êags
);

1355 i‡(
pid
 > 0) {

1356 
	`•rötf
(
•id
, "%d", 
pid
);

1357 
°r
 = 
	`h„tch
(
pid°©us
,
•id
,
	`°æí
(•id),
FALSE
);

1358 i‡(
°r
 !&
°r_undef
) {

1359 *
°©u•
 = ()
°r
->
°r_u
.
°r_u£ful
;

1360 
	`hdñëe
(
pid°©us
,
•id
,
	`°æí
(spid));

1361  
pid
;

1365 
HENT
 *
íåy
;

1367 
	`hôîöô
(
pid°©us
);

1368 i‡(
íåy
 = 
	`hôî√xt
(
pid°©us
)) {

1369 
pid
 = 
	`©oi
(
	`hôîkey
(
íåy
,
°©u•
));

1370 
°r
 = 
	`hôîvÆ
(
íåy
);

1371 *
°©u•
 = ()
°r
->
°r_u
.
°r_u£ful
;

1372 
	`•rötf
(
•id
, "%d", 
pid
);

1373 
	`hdñëe
(
pid°©us
,
•id
,
	`°æí
(spid));

1374  
pid
;

1377 i‡(
Êags
)

1378 
	`Áèl
("Can't do waitpid with flags");

1380 (
ªsu…
 = 
	`waô
(
°©u•
)Ë!
pid
 &&Öid > 0 &&Ñesult >= 0)

1381 
	`pidg⁄e
(
ªsu…
,*
°©u•
);

1382 i‡(
ªsu…
 < 0)

1383 *
°©u•
 = -1;

1385  
ªsu…
;

1388 
	}
}

1390 
	$pidg⁄e
(
pid
,
°©us
)

1391 
pid
;

1392 
°©us
;

1394 #i‡
	`deföed
(
HAS_WAIT4
Ë|| deföed(
HAS_WAITPID
)

1396 
STR
 *
°r
;

1397 
•id
[16];

1399 
	`•rötf
(
•id
, "%d", 
pid
);

1400 
°r
 = 
	`h„tch
(
pid°©us
,
•id
,
	`°æí
(•id),
TRUE
);

1401 
°r
->
°r_u
.
°r_u£ful
 = 
°©us
;

1404 
	}
}

1407 #i‚de‡
HAS_MEMCMP


1408 
	$memcmp
(
s1
,
s2
,
Àn
)

1409 *
s1
;

1410 *
s2
;

1411 
Àn
;

1413 
tmp
;

1415 
Àn
--) {

1416 i‡(
tmp
 = *
s1
++ - *
s2
++)

1417  
tmp
;

1420 
	}
}

1424 
	$ª≥©˝y
(
to
,
‰om
,
Àn
,
cou¡
)

1425 *
to
;

1426 *
‰om
;

1427 
Àn
;

1428 
cou¡
;

1430 
todo
;

1431 *
‰omba£
 = 
‰om
;

1433 i‡(
Àn
 == 1) {

1434 
todo
 = *
‰om
;

1435 
cou¡
-- > 0)

1436 *
to
++ = 
todo
;

1439 
cou¡
-- > 0) {

1440 
todo
 = 
Àn
;Åodo > 0;Åodo--) {

1441 *
to
++ = *
‰om
++;

1443 
‰om
 = 
‰omba£
;

1445 
	}
}

1447 #i‚de‡
CASTNEGFLOAT


1449 
	$ˇ°ul⁄g
(
f
)

1450 
f
;

1452 
Æ⁄g
;

1454 #i‡
CASTFLAGS
 & 2

1455 
	#BIGDOUBLE
 2147483648.0

	)

1456 i‡(
f
 >
BIGDOUBLE
)

1457  ()(
f
-()(f/
BIGDOUBLE
)*BIGDOUBLE)|0x80000000;

1459 i‡(
f
 >= 0.0)

1460  ()
f
;

1461 
Æ⁄g
 = ()
f
;

1462  ()
Æ⁄g
;

1463 
	}
}

1466 #i‚de‡
HAS_RENAME


1468 
	$ßme_dúít
(
a
,
b
)

1469 *
a
;

1470 *
b
;

1472 *
Á
 = 
	`rödex
(
a
,'/');

1473 *
fb
 = 
	`rödex
(
b
,'/');

1474 
°©
 
tmp°©buf1
;

1475 
°©
 
tmp°©buf2
;

1476 #i‚de‡
MAXPATHLEN


1477 
	#MAXPATHLEN
 1024

	)

1479 
tmpbuf
[
MAXPATHLEN
+1];

1481 i‡(
Á
)

1482 
Á
++;

1484 
Á
 = 
a
;

1485 i‡(
fb
)

1486 
fb
++;

1488 
fb
 = 
b
;

1489 i‡(
	`°rNE
(
a
,
b
))

1490  
FALSE
;

1491 i‡(
Á
 =
a
)

1492 
	`°r˝y
(
tmpbuf
,".");

1494 
	`°∫˝y
(
tmpbuf
, 
a
, 
Á
 -á);

1495 i‡(
	`°©
(
tmpbuf
, &
tmp°©buf1
) < 0)

1496  
FALSE
;

1497 i‡(
fb
 =
b
)

1498 
	`°r˝y
(
tmpbuf
,".");

1500 
	`°∫˝y
(
tmpbuf
, 
b
, 
fb
 - b);

1501 i‡(
	`°©
(
tmpbuf
, &
tmp°©buf2
) < 0)

1502  
FALSE
;

1503  
tmp°©buf1
.
°_dev
 =
tmp°©buf2
.st_dev &&

1504 
tmp°©buf1
.
°_öo
 =
tmp°©buf2
.st_ino;

1505 
	}
}

1509 
	$sˇno˘
(
°¨t
, 
Àn
, 
ªéí
)

1510 *
°¨t
;

1511 
Àn
;

1512 *
ªéí
;

1514 *
s
 = 
°¨t
;

1515 
ªtvÆ
 = 0;

1517 
Àn
-- && *
s
 >= '0' && *s <= '7') {

1518 
ªtvÆ
 <<= 3;

1519 
ªtvÆ
 |*
s
++ - '0';

1521 *
ªéí
 = 
s
 - 
°¨t
;

1522  
ªtvÆ
;

1523 
	}
}

1526 
	$sˇnhex
(
°¨t
, 
Àn
, 
ªéí
)

1527 *
°¨t
;

1528 
Àn
;

1529 *
ªéí
;

1531 *
s
 = 
°¨t
;

1532 
ªtvÆ
 = 0;

1533 *
tmp
;

1535 
Àn
-- && *
s
 && (
tmp
 = 
	`ödex
(
hexdigô
, *s))) {

1536 
ªtvÆ
 <<= 4;

1537 
ªtvÆ
 |(
tmp
 - 
hexdigô
) & 15;

1538 
s
++;

1540 *
ªéí
 = 
s
 - 
°¨t
;

1541  
ªtvÆ
;

1542 
	}
}

	@util.h

14 
EXT
 *
s¸ómfú°
 
INIT
(
NuŒ
(*));

15 
EXT
 *
s¸óm√xt
 
INIT
(
NuŒ
(*));

17 *
ß„mÆloc
();

18 *
ß„ªÆloc
();

19 *
˝ytûl
();

20 *
ö°r
();

21 *
fbmö°r
();

22 *
s¸ómö°r
();

23 
fbmcompûe
();

24 *
ßve°r
();

25 
my_£ãnv
(*, *);

26 
ívix
();

27 
grow°r
();

28 *
nö°r
();

29 *
∫ö°r
();

30 *
nßve°r
();

31 
FILE
 *
myp›í
();

32 
myp˛o£
();

33 #i‚de‡
HAS_MEMCPY


34 #i‚de‡
HAS_BCOPY


35 *
bc›y
();

37 #i‚de‡
HAS_BZERO


38 *
bzîo
();

41 
sˇno˘
();

42 
sˇnhex
();

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

75 
__c⁄°
 *
__˘y≥_b
;

76 
__c⁄°
 
__öt32_t
 *
__˘y≥_tﬁowî
;

77 
__c⁄°
 
__öt32_t
 *
__˘y≥_touµî
;

79 
	#__is˘y≥
(
c
, 
ty≥
) \

80 (
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

82 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

83 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

85 
	#__ex˘y≥
(
«me
Ë

	`«me
 (Ë
__THROW


	)

91 
__ex˘y≥
 (
iß um
);

92 
__ex˘y≥
 (
ißÕha
);

93 
__ex˘y≥
 (
is˙ål
);

94 
__ex˘y≥
 (
isdigô
);

95 
__ex˘y≥
 (
i¶owî
);

96 
__ex˘y≥
 (
isgøph
);

97 
__ex˘y≥
 (
i•röt
);

98 
__ex˘y≥
 (
i•un˘
);

99 
__ex˘y≥
 (
is•a˚
);

100 
__ex˘y≥
 (
isuµî
);

101 
__ex˘y≥
 (
isxdigô
);

103 #ifdef 
__USE_ISOC99


104 
__ex˘y≥
 (
isbœnk
);

109 

	$tﬁowî
 (
__c
Ë
__THROW
;

112 

	$touµî
 (
__c
Ë
__THROW
;

115 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


119 

	$ißscii
 (
__c
Ë
__THROW
;

123 

	$tﬂscii
 (
__c
Ë
__THROW
;

127 
	`__ex˘y≥
 (
_touµî
);

128 
	`__ex˘y≥
 (
_tﬁowî
);

132 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

133 (
__exãnsi⁄__
 \

134 ({ 
__ªs
; \

135 i‡( (
c
) > 1) \

137 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

139 
__c
 = (
c
); \

140 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: 
a
[__c]; \

143 
__ªs
 = 
f
 
¨gs
; \

146 
__ªs
 = 
a
[(Ë(
c
)]; \

147 
__ªs
; 
	}
}))

	)

149 #i‚def 
__NO_CTYPE


150 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

151 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

152 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

153 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

154 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

155 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

156 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

157 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

158 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

159 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

160 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

162 #ifdef 
__USE_ISOC99


163 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

166 #ifde‡
__USE_EXTERN_INLINES


167 
__ölöe
 

168 
	$tﬁowî
 (
__c
Ë
__THROW


170  
__c
 >-128 && __¯< 256 ? 
__˘y≥_tﬁowî
[__c] : __c;

171 
	}
}

173 
__ölöe
 

174 
	$touµî
 (
__c
Ë
__THROW


176  
__c
 >-128 && __¯< 256 ? 
__˘y≥_touµî
[__c] : __c;

177 
	}
}

180 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


181 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, 
__˘y≥_tﬁowî
, (c))

	)

182 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, 
__˘y≥_touµî
, (c))

	)

185 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


186 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

187 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

189 
	#_tﬁowî
(
c
Ë((Ë
__˘y≥_tﬁowî
[(Ë(c)])

	)

190 
	#_touµî
(
c
Ë((Ë
__˘y≥_touµî
[(Ë(c)])

	)

196 #ifde‡
__USE_GNU


210 
	~<xloˇÀ.h
>

214 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

215 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

217 
	#__ex˘y≥_l
(
«me
Ë

	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

223 
__ex˘y≥_l
 (
__iß um_l
);

224 
__ex˘y≥_l
 (
__ißÕha_l
);

225 
__ex˘y≥_l
 (
__is˙ål_l
);

226 
__ex˘y≥_l
 (
__isdigô_l
);

227 
__ex˘y≥_l
 (
__i¶owî_l
);

228 
__ex˘y≥_l
 (
__isgøph_l
);

229 
__ex˘y≥_l
 (
__i•röt_l
);

230 
__ex˘y≥_l
 (
__i•un˘_l
);

231 
__ex˘y≥_l
 (
__is•a˚_l
);

232 
__ex˘y≥_l
 (
__isuµî_l
);

233 
__ex˘y≥_l
 (
__isxdigô_l
);

235 
__ex˘y≥_l
 (
__isbœnk_l
);

239 

	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

242 

	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

244 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


245 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

246 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

247 
	#__touµî_l
(
c
, 
loˇÀ
) \

248 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

252 #i‚de‡
__NO_CTYPE


253 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

254 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

255 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

256 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

257 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

258 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

259 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

260 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

261 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

262 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

263 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

265 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

267 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


268 
	#__ißscii_l
(
c
,
l
Ë
	`__ißscii
(c)

	)

269 
	#__tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii
(c)

	)

276 
__END_DECLS


	@/usr/include/dirent.h

23 #i‚def 
_DIRENT_H


24 
	#_DIRENT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 #i‚de‡
__öo_t_deföed


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__öo_t
 
	töo_t
;

37 
__öo64_t
 
	töo_t
;

39 
	#__öo_t_deföed


	)

41 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


42 
__öo64_t
 
	töo64_t
;

43 
	#__öo64_t_deföed


	)

62 
	~<bôs/dúít.h
>

64 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


65 
	#d_öo
 
d_fûío


	)

82 #ifde‡
_DIRENT_HAVE_D_NAMLEN


83 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

84 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

86 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

87 #ifde‡
_DIRENT_HAVE_D_RECLEN


88 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

90 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

91 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

96 #ifde‡
__USE_BSD


100 
	mDT_UNKNOWN
 = 0,

101 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

102 
	mDT_FIFO
 = 1,

103 
	#DT_FIFO
 
DT_FIFO


	)

104 
	mDT_CHR
 = 2,

105 
	#DT_CHR
 
DT_CHR


	)

106 
	mDT_DIR
 = 4,

107 
	#DT_DIR
 
DT_DIR


	)

108 
	mDT_BLK
 = 6,

109 
	#DT_BLK
 
DT_BLK


	)

110 
	mDT_REG
 = 8,

111 
	#DT_REG
 
DT_REG


	)

112 
	mDT_LNK
 = 10,

113 
	#DT_LNK
 
DT_LNK


	)

114 
	mDT_SOCK
 = 12,

115 
	#DT_SOCK
 
DT_SOCK


	)

116 
	mDT_WHT
 = 14

117 
	#DT_WHT
 
DT_WHT


	)

121 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

122 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

128 
__dú°ªam
 
	tDIR
;

132 
DIR
 *
	$›ídú
 (
__c⁄°
 *
__«me
Ë
__THROW
;

136 

	$˛o£dú
 (
DIR
 *
__dúp
Ë
__THROW
;

145 #i‚de‡
__USE_FILE_OFFSET64


146 

dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
__THROW
;

148 #ifde‡
__REDIRECT


149 

dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
Ë
__THROW
, 
ªaddú64
);

151 
	#ªaddú
 
ªaddú64


	)

155 #ifde‡
__USE_LARGEFILE64


156 

dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
__THROW
;

159 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


162 #i‚de‡
__USE_FILE_OFFSET64


163 

	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

164 
dúít
 *
__ª°ri˘
 
__íåy
,

165 
dúít
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

167 #ifde‡
__REDIRECT


168 

	`__REDIRECT
 (
ªaddú_r
,

169 (
DIR
 *
__ª°ri˘
 
__dúp
,

170 
dúít
 *
__ª°ri˘
 
__íåy
,

171 
dúít
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
,

172 
ªaddú64_r
);

174 
	#ªaddú_r
 
ªaddú64_r


	)

178 #ifde‡
__USE_LARGEFILE64


179 

	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

180 
dúít64
 *
__ª°ri˘
 
__íåy
,

181 
dúít64
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

186 

	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
;

188 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


189 
	~<bôs/ty≥s.h
>

192 

	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
;

195 

	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
;

198 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


201 

	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
;

203 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


204 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

207 #i‚de‡
MAXNAMLEN


209 
	~<bôs/posix1_lim.h
>

212 #ifde‡
NAME_MAX


213 
	#MAXNAMLEN
 
NAME_MAX


	)

215 
	#MAXNAMLEN
 255

	)

219 
	#__√ed_size_t


	)

220 
	~<°ddef.h
>

226 #i‚de‡
__USE_FILE_OFFSET64


227 

	`sˇndú
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

228 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

229 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

230 (*
__cmp
Ë(
__c⁄°
 *, __c⁄° *)Ë
__THROW
;

232 #ifde‡
__REDIRECT


233 

	`__REDIRECT
 (
sˇndú
,

234 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

235 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

236 (*
__£À˘‹
Ë(
__c⁄°
 
dúít
 *),

237 (*
__cmp
Ë(
__c⁄°
 *, __c⁄° *)Ë
__THROW
,

238 
sˇndú64
);

240 
	#sˇndú
 
sˇndú64


	)

244 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


247 

	`sˇndú64
 (
__c⁄°
 *
__ª°ri˘
 
__dú
,

248 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

249 (*
__£À˘‹
Ë(
__c⁄°
 
dúít64
 *),

250 (*
__cmp
Ë(
__c⁄°
 *, __c⁄° *)Ë
__THROW
;

254 #i‚de‡
__USE_FILE_OFFSET64


255 

	$Æphas‹t
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

256 
__THROW
 
__©åibuã_puª__
;

258 #ifde‡
__REDIRECT


259 

	`__REDIRECT
 (
Æphas‹t
,

260 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

261 
__THROW
,

262 
Æphas‹t64
Ë
__©åibuã_puª__
;

264 
	#Æphas‹t
 
Æphas‹t64


	)

268 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


269 

	$Æphas‹t64
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__USE_GNU


275 #i‚de‡
__USE_FILE_OFFSET64


276 

	$vîsi⁄s‹t
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

277 
__THROW
 
__©åibuã_puª__
;

279 #ifde‡
__REDIRECT


280 

	`__REDIRECT
 (
vîsi⁄s‹t
,

281 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

282 
__THROW
,

283 
vîsi⁄s‹t64
Ë
__©åibuã_puª__
;

285 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

289 #ifde‡
__USE_LARGEFILE64


290 

	$vîsi⁄s‹t64
 (
__c⁄°
 *
__e1
, __c⁄° *
__e2
)

291 
__THROW
 
__©åibuã_puª__
;

299 #i‚de‡
__USE_FILE_OFFSET64


300 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

301 
size_t
 
__nbyãs
,

302 
__off_t
 *
__ª°ri˘
 
__ba£p
Ë
__THROW
;

304 #ifde‡
__REDIRECT


305 
__ssize_t
 
	`__REDIRECT
 (
gëdúíåõs
,

306 (
__fd
, *
__ª°ri˘
 
__buf
,

307 
size_t
 
__nbyãs
,

308 
__off64_t
 *
__ª°ri˘
 
__ba£p
Ë
__THROW
,

309 
gëdúíåõs64
);

311 
	#gëdúíåõs
 
gëdúíåõs64


	)

315 #ifde‡
__USE_LARGEFILE64


316 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

317 
size_t
 
__nbyãs
,

318 
__off64_t
 *
__ª°ri˘
 
__ba£p
Ë
__THROW
;

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 

î∫o
;

50 #ifde‡
__USE_GNU


55 
*
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

23 #i‚def 
_FCNTL_H


24 
	#_FCNTL_H
 1

	)

26 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 
	~<bôs/f˙é.h
>

36 #ifde‡
__USE_XOPEN


37 
	~<sys/°©.h
>

40 #ifdef 
__USE_MISC


41 #i‚de‡
R_OK


44 
	#R_OK
 4

	)

45 
	#W_OK
 2

	)

46 
	#X_OK
 1

	)

47 
	#F_OK
 0

	)

52 #ifde‡
__USE_XOPEN


53 
	#SEEK_SET
 0

	)

54 
	#SEEK_CUR
 1

	)

55 
	#SEEK_END
 2

	)

60 

	$f˙é
 (
__fd
, 
__cmd
, ...Ë
__THROW
;

65 #i‚de‡
__USE_FILE_OFFSET64


66 

	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
__THROW
;

68 #ifde‡
__REDIRECT


69 

	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
__THROW
,

70 
›í64
);

72 
	#›í
 
›í64


	)

75 #ifde‡
__USE_LARGEFILE64


76 

	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
__THROW
;

82 #i‚de‡
__USE_FILE_OFFSET64


83 

	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

85 #ifde‡
__REDIRECT


86 

	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
,

87 
¸ót64
);

89 
	#¸ót
 
¸ót64


	)

92 #ifde‡
__USE_LARGEFILE64


93 

	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

96 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

97 && !
deföed
 
__USE_POSIX
))

106 
	#F_ULOCK
 0

	)

107 
	#F_LOCK
 1

	)

108 
	#F_TLOCK
 2

	)

109 
	#F_TEST
 3

	)

111 #i‚de‡
__USE_FILE_OFFSET64


112 

	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__THROW
;

114 #ifde‡
__REDIRECT


115 

	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__THROW
,

116 
lockf64
);

118 
	#lockf
 
lockf64


	)

121 #ifde‡
__USE_LARGEFILE64


122 

	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__THROW
;

126 #ifde‡
__USE_XOPEN2K


129 #i‚de‡
__USE_FILE_OFFSET64


130 

	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, 
size_t
 
__Àn
,

131 
__advi£
Ë
__THROW
;

133 #ifde‡
__REDIRECT


134 

	`__REDIRECT
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

135 
size_t
 
__Àn
, 
__advi£
Ë
__THROW
,

136 
posix_Ádvi£64
);

138 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

141 #ifde‡
__USE_LARGEFILE64


142 

	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__Àn
,

143 
__advi£
Ë
__THROW
;

148 #i‚de‡
__USE_FILE_OFFSET64


149 

	$posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, 
size_t
 
__Àn
Ë
__THROW
;

151 #ifde‡
__REDIRECT


152 

	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

153 
size_t
 
__Àn
Ë
__THROW
,

154 
posix_ÁŒoˇã64
);

156 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

159 #ifde‡
__USE_LARGEFILE64


160 

	$posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__Àn
)

161 
__THROW
;

165 
__END_DECLS


	@/usr/include/gdbm.h

30 #i‚de‡
_GDBM_H_


31 
	#_GDBM_H_


	)

35 
	#GDBM_READER
 0

	)

36 
	#GDBM_WRITER
 1

	)

37 
	#GDBM_WRCREAT
 2

	)

38 
	#GDBM_NEWDB
 3

	)

39 
	#GDBM_FAST
 0x10

	)

40 
	#GDBM_SYNC
 0x20

	)

41 
	#GDBM_NOLOCK
 0x40

	)

45 
	#GDBM_INSERT
 0

	)

46 
	#GDBM_REPLACE
 1

	)

49 
	#GDBM_CACHESIZE
 1

	)

50 
	#GDBM_FASTMODE
 2

	)

51 
	#GDBM_SYNCMODE
 3

	)

52 
	#GDBM_CENTFREE
 4

	)

53 
	#GDBM_COALESCEBLKS
 5

	)

57 *
	md±r
;

58 
	mdsize
;

59 } 
	td©um
;

63 °ru˘ {
	mdummy
[10];} *
	tGDBM_FILE
;

66 #i‚de‡
__P


67 #i‡
deföed
(
__STDC__
Ë|| deföed(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

68 
	#__P
(
x
Ë
	)
x

70 
	#__P
(
x
Ë()

	)

75 
*
gdbm_vîsi⁄
;

79 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

85 
GDBM_FILE
 
gdbm_›í
 
__P
((*, , , , (*)()));

86 

gdbm_˛o£
 
__P
((
GDBM_FILE
));

87 

gdbm_°‹e
 
__P
((
GDBM_FILE
, 
d©um
, datum, ));

88 
d©um
 
gdbm_„tch
 
__P
((
GDBM_FILE
, datum));

89 

gdbm_dñëe
 
__P
((
GDBM_FILE
, 
d©um
));

90 
d©um
 
gdbm_fú°key
 
__P
((
GDBM_FILE
));

91 
d©um
 
gdbm_√xtkey
 
__P
((
GDBM_FILE
, datum));

92 

gdbm_ª‹g™ize
 
__P
((
GDBM_FILE
));

93 

gdbm_sync
 
__P
((
GDBM_FILE
));

94 

gdbm_exi°s
 
__P
((
GDBM_FILE
, 
d©um
));

95 

gdbm_£t›t
 
__P
((
GDBM_FILE
, , *, ));

96 

gdbm_fdesc
 
__P
((
GDBM_FILE
));

98 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

102 
	#GDBM_NO_ERROR
 0

	)

103 
	#GDBM_MALLOC_ERROR
 1

	)

104 
	#GDBM_BLOCK_SIZE_ERROR
 2

	)

105 
	#GDBM_FILE_OPEN_ERROR
 3

	)

106 
	#GDBM_FILE_WRITE_ERROR
 4

	)

107 
	#GDBM_FILE_SEEK_ERROR
 5

	)

108 
	#GDBM_FILE_READ_ERROR
 6

	)

109 
	#GDBM_BAD_MAGIC_NUMBER
 7

	)

110 
	#GDBM_EMPTY_DATABASE
 8

	)

111 
	#GDBM_CANT_BE_READER
 9

	)

112 
	#GDBM_CANT_BE_WRITER
 10

	)

113 
	#GDBM_READER_CANT_DELETE
 11

	)

114 
	#GDBM_READER_CANT_STORE
 12

	)

115 
	#GDBM_READER_CANT_REORGANIZE
 13

	)

116 
	#GDBM_UNKNOWN_UPDATE
 14

	)

117 
	#GDBM_ITEM_NOT_FOUND
 15

	)

118 
	#GDBM_REORGANIZE_FAILED
 16

	)

119 
	#GDBM_CANNOT_REPLACE
 17

	)

120 
	#GDBM_ILLEGAL_DATA
 18

	)

121 
	#GDBM_OPT_ALREADY_SET
 19

	)

122 
	#GDBM_OPT_ILLEGAL
 29

	)

123 
	tgdbm_îr‹
;

124 
gdbm_îr‹
 
gdbm_î∫o
;

129 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

133 
*
gdbm_°ªº‹
 
__P
((
gdbm_îr‹
));

135 #i‡
deföed
(
__˝lu•lus
Ë|| deföed(
c_∂u•lus
)

	@/usr/include/grp.h

23 #i‚def 
_GRP_H


24 
	#_GRP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

37 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

43 
	sgroup


45 *
	mgr_«me
;

46 *
	mgr_∑sswd
;

47 
__gid_t
 
	mgr_gid
;

48 **
	mgr_mem
;

52 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


53 
	#__√ed_FILE


	)

54 
	~<°dio.h
>

58 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


60 

	$£tgª¡
 (Ë
__THROW
;

63 

	$ídgª¡
 (Ë
__THROW
;

66 

group
 *
	$gëgª¡
 (Ë
__THROW
;

69 #ifdef 
__USE_SVID


71 

group
 *
	$fgëgª¡
 (
FILE
 *
__°ªam
Ë
__THROW
;

74 #ifde‡
__USE_GNU


76 

	$putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

77 
FILE
 *
__ª°ri˘
 
__f
Ë
__THROW
;

81 

group
 *
	$gëgrgid
 (
__gid_t
 
__gid
Ë
__THROW
;

84 

group
 *
	$gëg∫am
 (
__c⁄°
 *
__«me
Ë
__THROW
;

86 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


88 #ifde‡
__USE_MISC


91 
	#NSS_BUFLEN_GROUP
 1024

	)

102 #ifde‡
__USE_GNU


103 

	$gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

104 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

105 
group
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

109 

	$gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

110 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

111 
group
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

114 

	$gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

115 
group
 *
__ª°ri˘
 
__ªsu…buf
,

116 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

117 
group
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

119 #ifdef 
__USE_SVID


122 

	$fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

123 
group
 *
__ª°ri˘
 
__ªsu…buf
,

124 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

125 
group
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

131 #ifdef 
__USE_BSD


133 
	#__√ed_size_t


	)

134 
	~<°ddef.h
>

137 

	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

142 

	$gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

143 
__gid_t
 *
__groups
, *
__ngroups
Ë
__THROW
;

148 

	$öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
Ë
__THROW
;

152 
__END_DECLS


	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
__BEGIN_DECLS


57 

h_î∫o
;

60 
*
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

62 #ifde‡
_LIBC


63 #ifde‡
_LIBC_REENTRANT


64 
ölöe
 

65 
	$__£t_h_î∫o
 (
__îr
)

67  *
	`__h_î∫o_loˇti⁄
 (Ë
__îr
;

68 
	}
}

70 
	#__£t_h_î∫o
(
x
Ë(
h_î∫o
 = (x))

	)

75 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


77 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

82 
	#NETDB_INTERNAL
 -1

	)

83 
	#NETDB_SUCCESS
 0

	)

84 
	#HOST_NOT_FOUND
 1

	)

85 
	#TRY_AGAIN
 2

	)

87 
	#NO_RECOVERY
 3

	)

89 
	#NO_DATA
 4

	)

91 
	#NO_ADDRESS
 
NO_DATA


	)

93 #ifde‡
__USE_XOPEN2K


95 
	#IPPORT_RESERVED
 1024

	)

98 #ifde‡
__USE_GNU


100 
	#SCOPE_DELIMITER
 '%'

	)

105 

	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

108 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

113 
	sho°ít


115 *
h_«me
;

116 **
h_Æü£s
;

117 
h_addπy≥
;

118 
h_Àngth
;

119 **
h_addr_li°
;

120 
	#h_addr
 
h_addr_li°
[0]

	)

125 

	$£tho°ít
 (
__°ay_›í
Ë
__THROW
;

128 

	$ídho°ít
 (Ë
__THROW
;

132 

ho°ít
 *
	$gëho°ít
 (Ë
__THROW
;

136 

ho°ít
 *
	$gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

137 
__ty≥
Ë
__THROW
;

140 

ho°ít
 *
	$gëho°by«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

142 #ifde‡
__USE_MISC


146 

ho°ít
 *
	$gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
Ë
__THROW
;

153 

	$gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

154 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

155 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

156 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

158 

	$gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

159 
__ty≥
,

160 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

162 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

163 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

165 

	$gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

166 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

168 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

169 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

171 

	$gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

172 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

173 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

174 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

175 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

181 

	$£äëít
 (
__°ay_›í
Ë
__THROW
;

184 

	$íd√ã¡
 (Ë
__THROW
;

188 

√ã¡
 *
	$gë√ã¡
 (Ë
__THROW
;

192 

√ã¡
 *
	$gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
)

193 
__THROW
;

196 

√ã¡
 *
	$gë√tby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

198 #ifdef 
__USE_MISC


204 

	$gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

205 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

206 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

207 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

209 

	$gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

210 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

211 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

212 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

213 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

215 

	$gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

216 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

217 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

218 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

219 *
__ª°ri˘
 
__h_î∫›
Ë
__THROW
;

224 
	s£rvít


226 *
s_«me
;

227 **
s_Æü£s
;

228 
s_p‹t
;

229 *
s_¥Ÿo
;

234 

	$£t£rvít
 (
__°ay_›í
Ë
__THROW
;

237 

	$íd£rvít
 (Ë
__THROW
;

241 

£rvít
 *
	$gë£rvít
 (Ë
__THROW
;

245 

£rvít
 *
	$gë£rvby«me
 (
__c⁄°
 *
__«me
,

246 
__c⁄°
 *
__¥Ÿo
Ë
__THROW
;

250 

£rvít
 *
	$gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
)

251 
__THROW
;

254 #ifdef 
__USE_MISC


257 

	$gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

258 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

259 
£rvít
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

261 

	$gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

262 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

263 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

264 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

265 
£rvít
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

267 

	$gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

268 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

269 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

270 
£rvít
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

275 
	s¥Ÿ€¡


277 *
p_«me
;

278 **
p_Æü£s
;

279 
p_¥Ÿo
;

284 

	$£çrŸ€¡
 (
__°ay_›í
Ë
__THROW
;

287 

	$íd¥Ÿ€¡
 (Ë
__THROW
;

291 

¥Ÿ€¡
 *
	$gë¥Ÿ€¡
 (Ë
__THROW
;

294 

¥Ÿ€¡
 *
	$gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

297 

¥Ÿ€¡
 *
	$gë¥Ÿobynumbî
 (
__¥Ÿo
Ë
__THROW
;

300 #ifdef 
__USE_MISC


303 

	$gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

304 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

305 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

307 

	$gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

308 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

312 

	$gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

313 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

314 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

315 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

320 

	$£äëgª¡
 (
__c⁄°
 *
__√tgroup
Ë
__THROW
;

323 

	$íd√tgª¡
 (Ë
__THROW
;

327 

	$gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

328 **
__ª°ri˘
 
__u£Ω
,

329 **
__ª°ri˘
 
__domaöp
Ë
__THROW
;

331 #ifdef 
__USE_MISC


333 

	$ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

334 
__c⁄°
 *
__u£r
, __c⁄° *
domaö
Ë
__THROW
;

337 

	$gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

338 **
__ª°ri˘
 
__u£Ω
,

339 **
__ª°ri˘
 
__domaöp
,

340 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
Ë
__THROW
;

344 #ifde‡
__USE_BSD


351 

	$rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

352 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

353 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

354 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
)

355 
__THROW
;

359 

	$rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

360 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

361 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

362 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

363 
ß_Ámûy_t
 
__af
Ë
__THROW
;

370 

	$ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

371 
__c⁄°
 *
__ª°ri˘
 
__«me
,

372 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

373 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
)

374 
__THROW
;

378 

	$ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

379 
__c⁄°
 *
__ª°ri˘
 
__«me
,

380 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

381 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

382 
ß_Ámûy_t
 
__af
Ë
__THROW
;

387 

	$ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

388 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
Ë
__THROW
;

392 

	$ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

393 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

394 
ß_Ámûy_t
 
__af
Ë
__THROW
;

399 

	$ºesvp‹t
 (*
__Æp‹t
Ë
__THROW
;

403 

	$ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
Ë
__THROW
;

408 #ifdef 
__USE_POSIX


410 
	saddröfo


412 
ai_Êags
;

413 
ai_Ámûy
;

414 
ai_sockty≥
;

415 
ai_¥Ÿocﬁ
;

416 
sockÀn_t
 
ai_addæí
;

417 
sockaddr
 *
ai_addr
;

418 *
ai_ˇn⁄«me
;

419 
addröfo
 *
ai_√xt
;

422 #ifde‡
__USE_GNU


424 
	sgaicb


426 c⁄° *
¨_«me
;

427 c⁄° *
¨_£rvi˚
;

428 c⁄° 
addröfo
 *
¨_ªque°
;

429 
addröfo
 *
¨_ªsu…
;

431 
__ªtu∫
;

432 
__unu£d
[5];

436 
	#GAI_WAIT
 0

	)

437 
	#GAI_NOWAIT
 1

	)

441 
	#AI_PASSIVE
 0x0001

	)

442 
	#AI_CANONNAME
 0x0002

	)

443 
	#AI_NUMERICHOST
 0x0004

	)

446 
	#EAI_BADFLAGS
 -1

	)

447 
	#EAI_NONAME
 -2

	)

448 
	#EAI_AGAIN
 -3

	)

449 
	#EAI_FAIL
 -4

	)

450 
	#EAI_NODATA
 -5

	)

451 
	#EAI_FAMILY
 -6

	)

452 
	#EAI_SOCKTYPE
 -7

	)

453 
	#EAI_SERVICE
 -8

	)

454 
	#EAI_ADDRFAMILY
 -9

	)

455 
	#EAI_MEMORY
 -10

	)

456 
	#EAI_SYSTEM
 -11

	)

457 #ifde‡
__USE_GNU


458 
	#EAI_INPROGRESS
 -100

	)

459 
	#EAI_CANCELED
 -101

	)

460 
	#EAI_NOTCANCELED
 -102

	)

461 
	#EAI_ALLDONE
 -103

	)

462 
	#EAI_INTR
 -104

	)

465 
	#NI_MAXHOST
 1025

	)

466 
	#NI_MAXSERV
 32

	)

468 
	#NI_NUMERICHOST
 1

	)

469 
	#NI_NUMERICSERV
 2

	)

470 
	#NI_NOFQDN
 4

	)

471 
	#NI_NAMEREQD
 8

	)

472 
	#NI_DGRAM
 16

	)

476 

	$gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

477 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

478 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

479 
addröfo
 **
__ª°ri˘
 
__∑i
Ë
__THROW
;

482 

	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

485 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

488 

	$gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

489 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

490 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

491 
sockÀn_t
 
__£rvÀn
, 
__Êags
Ë
__THROW
;

493 #ifde‡
__USE_GNU


497 

	$gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

498 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
)

499 
__THROW
;

504 

	$gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

505 
__c⁄°
 
time•ec
 *
__timeout
Ë
__THROW
;

508 

	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

511 

	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

515 
__END_DECLS


	@/usr/include/netinet/in.h

19 #i‚def 
_NETINET_IN_H


20 
	#_NETINET_IN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°döt.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


32 
	mIPPROTO_IP
 = 0,

33 
	#IPPROTO_IP
 
IPPROTO_IP


	)

34 
	mIPPROTO_HOPOPTS
 = 0,

35 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

36 
	mIPPROTO_ICMP
 = 1,

37 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

38 
	mIPPROTO_IGMP
 = 2,

39 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

40 
	mIPPROTO_IPIP
 = 4,

41 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

42 
	mIPPROTO_TCP
 = 6,

43 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

44 
	mIPPROTO_EGP
 = 8,

45 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

46 
	mIPPROTO_PUP
 = 12,

47 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

48 
	mIPPROTO_UDP
 = 17,

49 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

50 
	mIPPROTO_IDP
 = 22,

51 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

52 
	mIPPROTO_TP
 = 29,

53 
	#IPPROTO_TP
 
IPPROTO_TP


	)

54 
	mIPPROTO_IPV6
 = 41,

55 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

56 
	mIPPROTO_ROUTING
 = 43,

57 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

58 
	mIPPROTO_FRAGMENT
 = 44,

59 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

60 
	mIPPROTO_RSVP
 = 46,

61 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

62 
	mIPPROTO_GRE
 = 47,

63 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

64 
	mIPPROTO_ESP
 = 50,

65 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

66 
	mIPPROTO_AH
 = 51,

67 
	#IPPROTO_AH
 
IPPROTO_AH


	)

68 
	mIPPROTO_ICMPV6
 = 58,

69 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

70 
	mIPPROTO_NONE
 = 59,

71 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

72 
	mIPPROTO_DSTOPTS
 = 60,

73 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_ENCAP
 = 98,

77 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

78 
	mIPPROTO_PIM
 = 103,

79 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

80 
	mIPPROTO_COMP
 = 108,

81 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

82 
	mIPPROTO_RAW
 = 255,

83 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

84 
	mIPPROTO_MAX


89 
uöt16_t
 
	tö_p‹t_t
;

94 
	mIPPORT_ECHO
 = 7,

95 
	mIPPORT_DISCARD
 = 9,

96 
	mIPPORT_SYSTAT
 = 11,

97 
	mIPPORT_DAYTIME
 = 13,

98 
	mIPPORT_NETSTAT
 = 15,

99 
	mIPPORT_FTP
 = 21,

100 
	mIPPORT_TELNET
 = 23,

101 
	mIPPORT_SMTP
 = 25,

102 
	mIPPORT_TIMESERVER
 = 37,

103 
	mIPPORT_NAMESERVER
 = 42,

104 
	mIPPORT_WHOIS
 = 43,

105 
	mIPPORT_MTP
 = 57,

107 
	mIPPORT_TFTP
 = 69,

108 
	mIPPORT_RJE
 = 77,

109 
	mIPPORT_FINGER
 = 79,

110 
	mIPPORT_TTYLINK
 = 87,

111 
	mIPPORT_SUPDUP
 = 95,

114 
	mIPPORT_EXECSERVER
 = 512,

115 
	mIPPORT_LOGINSERVER
 = 513,

116 
	mIPPORT_CMDSERVER
 = 514,

117 
	mIPPORT_EFSSERVER
 = 520,

120 
	mIPPORT_BIFFUDP
 = 512,

121 
	mIPPORT_WHOSERVER
 = 513,

122 
	mIPPORT_ROUTESERVER
 = 520,

125 
	mIPPORT_RESERVED
 = 1024,

128 
	mIPPORT_USERRESERVED
 = 5000

133 
uöt32_t
 
	tö_addr_t
;

134 
	sö_addr


136 
ö_addr_t
 
	ms_addr
;

145 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

146 
	#IN_CLASSA_NET
 0xff000000

	)

147 
	#IN_CLASSA_NSHIFT
 24

	)

148 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

149 
	#IN_CLASSA_MAX
 128

	)

151 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

152 
	#IN_CLASSB_NET
 0xffff0000

	)

153 
	#IN_CLASSB_NSHIFT
 16

	)

154 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

155 
	#IN_CLASSB_MAX
 65536

	)

157 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

158 
	#IN_CLASSC_NET
 0xffffff00

	)

159 
	#IN_CLASSC_NSHIFT
 8

	)

160 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

162 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

163 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

165 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

166 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

169 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

171 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

173 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

176 
	#IN_LOOPBACKNET
 127

	)

178 #i‚de‡
INADDR_LOOPBACK


179 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

183 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

184 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

185 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

186 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

190 
	sö6_addr


194 
uöt8_t
 
	mu6_addr8
[16];

195 
uöt16_t
 
	mu6_addr16
[8];

196 
uöt32_t
 
	mu6_addr32
[4];

197 } 
	mö6_u
;

198 
	#s6_addr
 
ö6_u
.
u6_addr8


	)

199 
	#s6_addr16
 
ö6_u
.
u6_addr16


	)

200 
	#s6_addr32
 
ö6_u
.
u6_addr32


	)

203 
c⁄° 
ö6_addr
 
ö6addr_™y
;

204 
c⁄° 
ö6_addr
 
ö6addr_lo›back
;

205 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

206 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

208 
	#INET_ADDRSTRLEN
 16

	)

209 
	#INET6_ADDRSTRLEN
 46

	)

212 
	~<bôs/sockë.h
>

216 
	ssockaddr_ö


218 
__SOCKADDR_COMMON
 (
sö_
);

219 
ö_p‹t_t
 
	msö_p‹t
;

220 
ö_addr
 
	msö_addr
;

223 
	msö_zîo
[ (
sockaddr
) -

224 
__SOCKADDR_COMMON_SIZE
 -

225  (
ö_p‹t_t
) -

226  (
ö_addr
)];

230 
	ssockaddr_ö6


232 
__SOCKADDR_COMMON
 (
sö6_
);

233 
ö_p‹t_t
 
	msö6_p‹t
;

234 
uöt32_t
 
	msö6_Êowöfo
;

235 
ö6_addr
 
	msö6_addr
;

236 
uöt32_t
 
	msö6_sc›e_id
;

240 
	sùv6_mªq


243 
ö6_addr
 
	mùv6mr_mu…üddr
;

246 
	mùv6mr_öãrÁ˚
;

250 
	~<bôs/ö.h
>

259 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

260 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

261 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

262 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

263 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

264 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

265 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

267 
	~<ídün.h
>

270 
	~<bôs/byãsw≠.h
>

272 #ifde‡
__OPTIMIZE__


276 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


279 
	#¡ohl
(
x
Ë(x)

	)

280 
	#¡ohs
(
x
Ë(x)

	)

281 
	#ht⁄l
(
x
Ë(x)

	)

282 
	#ht⁄s
(
x
Ë(x)

	)

284 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


285 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

286 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

287 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

288 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

293 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

294 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

295 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

296 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

297 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

299 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

300 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

301 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

302 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

303 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

305 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

307 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

308 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

309 =
	`ht⁄l
 (0x„800000))

	)

311 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

312 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

313 =
	`ht⁄l
 (0x„c00000))

	)

315 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

316 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

317 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

318 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

320 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

321 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

322 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

323 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

324 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

326 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

327 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

328 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

329 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

330 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

333 

	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

336 

	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

337 
__THROW
;

340 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

341 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

342 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

344 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

345 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

346 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

348 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

349 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

350 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

352 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

353 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

354 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

356 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

357 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

358 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

361 
	sö6_pktöfo


363 
ö6_addr
 
ùi6_addr
;

364 
ùi6_ifödex
;

367 
__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #ifde‡
__USE_XOPEN


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


70 

	$£çwít
 (Ë
__THROW
;

73 

	$ídpwít
 (Ë
__THROW
;

76 

∑sswd
 *
	$gëpwít
 (Ë
__THROW
;

79 #ifdef 
__USE_SVID


81 

∑sswd
 *
	$fgëpwít
 (
FILE
 *
__°ªam
Ë
__THROW
;

84 

	$puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

85 
FILE
 *
__ª°ri˘
 
__f
Ë
__THROW
;

89 

∑sswd
 *
	$gëpwuid
 (
__uid_t
 
__uid
Ë
__THROW
;

92 

∑sswd
 *
	$gëpw«m
 (
__c⁄°
 *
__«me
Ë
__THROW
;

94 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


96 #ifde‡
__USE_MISC


99 
	#NSS_BUFLEN_PASSWD
 1024

	)

110 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


111 

	$gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

112 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

113 
∑sswd
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

116 

	$gëpwuid_r
 (
__uid_t
 
__uid
,

117 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

118 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

119 
∑sswd
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

121 

	$gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

122 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

123 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

124 
∑sswd
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

127 #ifdef 
__USE_SVID


130 

	$fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

131 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

132 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

133 
∑sswd
 **
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

138 #ifde‡
__USE_GNU


142 

	$gëpw
 (
__uid_t
 
__uid
, *
__buf„r
Ë
__THROW
;

145 
__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

43 } 
	tjmp_buf
[1];

48 

	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

52 

	$_£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

57 

	$__sig£tjmp
 (
jmp_buf
 
__ív
, 
__ßvemask
Ë
__THROW
;

59 #i‚def 
__FAVOR_BSD


62 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

67 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

73 

	$l⁄gjmp
 (
jmp_buf
 
__ív
, 
__vÆ
)

74 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

75 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


79 

	$_l⁄gjmp
 (
jmp_buf
 
__ív
, 
__vÆ
)

80 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 #ifdef 
__USE_POSIX


88 
jmp_buf
 
	tsigjmp_buf
;

92 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

98 

	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

99 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

102 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__sig_©omic_t
 
	tsig_©omic_t
;

42 #unde‡
__√ed_sig_©omic_t


45 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

46 #i‚de‡
__sig£t_t_deföed


47 
	#__sig£t_t_deföed


	)

48 
__sig£t_t
 
	tsig£t_t
;

50 #unde‡
__√ed_sig£t_t


53 #ifde‡
_SIGNAL_H


55 
	~<bôs/ty≥s.h
>

56 
	~<bôs/signum.h
>

58 #ifde‡
__USE_XOPEN


59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

63 #i‚de‡
__uid_t_deföed


64 
__uid_t
 
	tuid_t
;

65 
	#__uid_t_deföed


	)

71 (*
	t__sigh™dÀr_t
) ();

76 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

77 
__THROW
;

78 #ifde‡
__USE_GNU


79 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

80 
__THROW
;

86 #ifde‡
__USE_BSD


87 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

90 #ifde‡
__REDIRECT


91 
__sigh™dÀr_t
 
	`__REDIRECT
 (
sig«l
,

92 (
__sig
,

93 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
,

94 
__sysv_sig«l
);

96 
	#sig«l
 
__sysv_sig«l


	)

100 #ifde‡
__USE_XOPEN


103 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

109 #ifde‡
__USE_POSIX


110 

	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

113 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


117 

	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

121 

	$øi£
 (
__sig
Ë
__THROW
;

123 #ifde‡
__USE_SVID


125 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
Ë
__THROW
;

126 

	$gsig«l
 (
__sig
Ë
__THROW
;

129 #ifde‡
__USE_MISC


131 

	$psig«l
 (
__sig
, 
__c⁄°
 *
__s
Ë
__THROW
;

140 

	$__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
Ë
__THROW
;

142 #ifde‡
__USE_BSD


145 

	$sig∑u£
 (
__mask
Ë
__THROW
;

146 
	#sig∑u£
(
mask
Ë
	`__sig∑u£
 ((mask), 0)

	)

148 #ifde‡
__USE_XOPEN


149 #ifde‡
__GNUC__


150 

	$sig∑u£
 (
__sig
Ë
__THROW
 
	`__asm__
 ("__xpg_sigpause");

153 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

158 #ifde‡
__USE_BSD


165 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

168 

	$sigblock
 (
__mask
Ë
__THROW
;

171 

	$sig£tmask
 (
__mask
Ë
__THROW
;

174 

	$siggëmask
 (Ë
__THROW
;

178 #ifde‡
__USE_MISC


179 
	#NSIG
 
_NSIG


	)

182 #ifde‡
__USE_GNU


183 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

187 #ifde‡
__USE_BSD


188 
__sigh™dÀr_t
 
	tsig_t
;

191 #ifde‡
__USE_POSIX


193 #ifde‡
__USE_POSIX199309


195 
	#__√ed_time•ec


	)

196 
	~<time.h
>

199 
	~<bôs/sigöfo.h
>

203 

	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
;

206 

	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
;

209 

	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

212 

	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

215 

	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
;

217 #ifde‡
__USE_GNU


219 

	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
;

222 

	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

223 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
;

226 

	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

227 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
;

232 
	~<bôs/siga˘i⁄.h
>

235 

	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

236 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

240 

	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
;

243 

	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

244 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

247 

	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
;

251 

	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

252 
__THROW
;

254 #ifde‡
__USE_POSIX199309


256 

	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

257 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
__THROW
;

261 

	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

263 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

264 
__THROW
;

268 

	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

269 
__THROW
;

274 #ifde‡
__USE_BSD


278 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

279 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

282 
	ssigvec


284 
__sigh™dÀr_t
 
sv_h™dÀr
;

285 
sv_mask
;

287 
sv_Êags
;

288 
	#sv_⁄°ack
 
sv_Êags


	)

292 
	#SV_ONSTACK
 (1 << 0)

	)

293 
	#SV_INTERRUPT
 (1 << 1)

	)

294 
	#SV_RESETHAND
 (1 << 2)

	)

302 

	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

303 
sigvec
 *
__ovec
Ë
__THROW
;

307 
	~<bôs/sigc⁄ãxt.h
>

310 

	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

315 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


320 

	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

322 
	~<bôs/sig°ack.h
>

323 #ifde‡
__USE_XOPEN


324 
	~<uc⁄ãxt.h
>

330 

	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
Ë
__THROW
;

334 

	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

335 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

339 #ifde‡
__USE_UNIX98


343 

	$sighﬁd
 (
__sig
Ë
__THROW
;

346 

	$sigªl£
 (
__sig
Ë
__THROW
;

349 

	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/sigthªad.h
>

365 

	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

367 

	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

371 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
_IO_FILE
 
	tFILE
;

47 
	#__FILE_deföed
 1

	)

49 #unde‡
__√ed_FILE


52 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


55 
_IO_FILE
 
	t__FILE
;

57 
	#____FILE_deföed
 1

	)

59 #unde‡
__√ed___FILE


62 #ifdef 
_STDIO_H


63 
	#_STDIO_USES_IOSTREAM


	)

65 
	~<libio.h
>

67 #ifde‡
__USE_XOPEN


68 #ifde‡
__GNUC__


69 #i‚de‡
_VA_LIST_DEFINED


70 
_G_va_li°
 
	tva_li°
;

71 
	#_VA_LIST_DEFINED


	)

74 
	~<°d¨g.h
>

79 #i‚de‡
__USE_FILE_OFFSET64


80 
_G_Âos_t
 
	tÂos_t
;

82 
_G_Âos64_t
 
	tÂos_t
;

84 #ifde‡
__USE_LARGEFILE64


85 
_G_Âos64_t
 
	tÂos64_t
;

89 
	#_IOFBF
 0

	)

90 
	#_IOLBF
 1

	)

91 
	#_IONBF
 2

	)

95 #i‚de‡
BUFSIZ


96 
	#BUFSIZ
 
_IO_BUFSIZ


	)

102 #i‚de‡
EOF


103 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

114 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


116 
	#P_tmpdú
 "/tmp"

	)

129 
	~<bôs/°dio_lim.h
>

133 
FILE
 *
°dö
;

134 
FILE
 *
°dout
;

135 
FILE
 *
°dîr
;

136 #ifde‡
__STDC__


138 
	#°dö
 
°dö


	)

139 
	#°dout
 
°dout


	)

140 
	#°dîr
 
°dîr


	)

144 

	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

146 

	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

150 #i‚de‡
__USE_FILE_OFFSET64


151 
FILE
 *
	$tmpfûe
 (Ë
__THROW
;

153 #ifde‡
__REDIRECT


154 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (Ë
__THROW
, 
tmpfûe64
);

156 
	#tmpfûe
 
tmpfûe64


	)

159 #ifde‡
__USE_LARGEFILE64


160 
FILE
 *
	$tmpfûe64
 (Ë
__THROW
;

163 
*
	$tm≤am
 (*
__s
Ë
__THROW
;

165 #ifde‡
__USE_MISC


168 
*
	$tm≤am_r
 (*
__s
Ë
__THROW
;

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


180 
*
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

181 
__THROW
 
__©åibuã_mÆloc__
;

186 

	$f˛o£
 (
FILE
 *
__°ªam
Ë
__THROW
;

188 

	$fÊush
 (
FILE
 *
__°ªam
Ë
__THROW
;

190 #ifde‡
__USE_MISC


192 

	$fÊush_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

195 #ifde‡
__USE_GNU


197 

	$f˛o£Æl
 (Ë
__THROW
;

201 #i‚de‡
__USE_FILE_OFFSET64


203 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

204 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__THROW
;

206 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

207 
__c⁄°
 *
__ª°ri˘
 
__modes
,

208 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

210 #ifde‡
__REDIRECT


211 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

212 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__THROW
,

213 
f›í64
);

214 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

215 
__c⁄°
 *
__ª°ri˘
 
__modes
,

216 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
,

217 
‰e›í64
);

219 
	#f›í
 
f›í64


	)

220 
	#‰e›í
 
‰e›í64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

225 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__THROW
;

226 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

227 
__c⁄°
 *
__ª°ri˘
 
__modes
,

228 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

231 #ifdef 
__USE_POSIX


233 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
;

236 #ifdef 
__USE_GNU


239 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

240 
__c⁄°
 *
__ª°ri˘
 
__modes
,

241 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
;

244 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
Ë
__THROW
;

249 
FILE
 *
	$›í_mem°ªam
 (**
__ª°ri˘
 
__buÊoc
,

250 
size_t
 *
__ª°ri˘
 
__sizñoc
Ë
__THROW
;

256 

	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

260 

	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

261 
__modes
, 
size_t
 
__n
Ë
__THROW
;

263 #ifdef 
__USE_BSD


266 

	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

267 
size_t
 
__size
Ë
__THROW
;

270 

	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

275 

	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

276 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

278 

	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

280 

	$•rötf
 (*
__ª°ri˘
 
__s
,

281 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

284 

	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

285 
_G_va_li°
 
__¨g
Ë
__THROW
;

287 

	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

288 
__THROW
;

290 

	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

291 
_G_va_li°
 
__¨g
Ë
__THROW
;

293 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


295 

	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

296 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

297 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

299 

	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

300 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

301 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

304 #ifde‡
__USE_GNU


307 

	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

308 
_G_va_li°
 
__¨g
)

309 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

310 

	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

311 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

312 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

313 

	$a•rötf
 (**
__ª°ri˘
 
__±r
,

314 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

315 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

318 

	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

319 
_G_va_li°
 
__¨g
)

320 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

321 

	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

322 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

327 

	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

328 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

330 

	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

332 

	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

333 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

335 #ifdef 
__USE_ISOC99


337 

	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

338 
_G_va_li°
 
__¨g
)

339 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

342 

	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

343 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 1, 0)));

346 

	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

347 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

348 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

353 

	$fgëc
 (
FILE
 *
__°ªam
Ë
__THROW
;

354 

	$gëc
 (
FILE
 *
__°ªam
Ë
__THROW
;

357 

	$gëch¨
 (Ë
__THROW
;

361 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

363 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


365 

	$gëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

366 

	$gëch¨_u∆ocked
 (Ë
__THROW
;

369 #ifde‡
__USE_MISC


371 

	$fgëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

376 

	$Âutc
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

377 

	$putc
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

380 

	$putch¨
 (
__c
Ë
__THROW
;

384 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

386 #ifde‡
__USE_MISC


388 

	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


393 

	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

394 

	$putch¨_u∆ocked
 (
__c
Ë
__THROW
;

398 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


400 

	$gëw
 (
FILE
 *
__°ªam
Ë
__THROW
;

403 

	$putw
 (
__w
, 
FILE
 *
__°ªam
Ë
__THROW
;

408 
*
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

409 
__THROW
;

411 #ifde‡
__USE_GNU


413 
*
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

414 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

419 
*
	$gës
 (*
__s
Ë
__THROW
;

422 #ifdef 
__USE_GNU


428 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

429 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

430 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

431 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

432 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

433 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

436 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

437 
size_t
 *
__ª°ri˘
 
__n
,

438 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

443 

	$Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
)

444 
__THROW
;

446 #ifde‡
__USE_GNU


448 

	$Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

449 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

453 

	$puts
 (
__c⁄°
 *
__s
Ë
__THROW
;

457 

	$ungëc
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW
;

461 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

462 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

464 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

465 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__THROW
;

467 #ifde‡
__USE_MISC


469 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

470 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

471 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

472 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

477 

	$f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
Ë
__THROW
;

479 

	$·ñl
 (
FILE
 *
__°ªam
Ë
__THROW
;

481 

	$ªwöd
 (
FILE
 *
__°ªam
Ë
__THROW
;

488 #i‚de‡
__USE_FILE_OFFSET64


489 #ifde‡
__USE_LARGEFILE


491 

	$f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
Ë
__THROW
;

493 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__THROW
;

497 

	$fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
)

498 
__THROW
;

500 

	$f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
Ë
__THROW
;

502 #ifde‡
__REDIRECT


503 #ifde‡
__USE_LARGEFILE


504 

	`__REDIRECT
 (
f£eko
,

505 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
Ë
__THROW
,

506 
f£eko64
);

507 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
Ë
__THROW
, 
·ñlo64
);

509 

	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

510 
Âos_t
 *
__ª°ri˘
 
__pos
Ë
__THROW
, 
fgëpos64
);

511 

	`__REDIRECT
 (
f£ços
,

512 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
Ë
__THROW
,

513 
f£ços64
);

515 #ifde‡
__USE_LARGEFILE


516 
	#f£eko
 
f£eko64


	)

517 
	#·ñlo
 
·ñlo64


	)

519 
	#fgëpos
 
fgëpos64


	)

520 
	#f£ços
 
f£ços64


	)

524 #ifde‡
__USE_LARGEFILE64


525 

	$f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
Ë
__THROW
;

526 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__THROW
;

527 

	$fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
)

528 
__THROW
;

529 

	$f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
Ë
__THROW
;

533 

	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

535 

	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
;

537 

	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
;

539 #ifde‡
__USE_MISC


541 

	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

542 

	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

543 

	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

548 

	$≥º‹
 (
__c⁄°
 *
__s
Ë
__THROW
;

552 #ifdef 
__USE_BSD


553 

sys_√º
;

554 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

556 #ifdef 
__USE_GNU


557 

_sys_√º
;

558 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

562 #ifdef 
__USE_POSIX


564 

	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
;

567 #ifde‡
__USE_MISC


569 

	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

573 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

574 
deföed
 
__USE_MISC
)

576 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__THROW
;

579 

	$p˛o£
 (
FILE
 *
__°ªam
Ë
__THROW
;

583 #ifdef 
__USE_POSIX


585 
*
	$˘îmid
 (*
__s
Ë
__THROW
;

589 #ifde‡
__USE_XOPEN


591 
*
	$cu£rid
 (*
__s
Ë
__THROW
;

595 #ifdef 
__USE_GNU


596 
ob°ack
;

599 

	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

600 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

601 

	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

602 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

603 
_G_va_li°
 
__¨gs
Ë
__THROW
;

607 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


611 

	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

615 

	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

618 

	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

621 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


625 
	#__√ed_gë›t


	)

626 
	~<gë›t.h
>

631 #ifde‡
__USE_EXTERN_INLINES


632 
	~<bôs/°dio.h
>

635 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 ({ uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; } 
__u
; \

53 
__u
.
__ö
 = (
°©us
); __u.
__i
; }))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
(
	`__WAIT_INT
(°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
(
	`__WAIT_INT
(°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
(
	`__WAIT_INT
(°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
(
	`__WAIT_INT
(°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
(
	`__WAIT_INT
(°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
(
	`__WAIT_INT
(°©us))

	)

96 
	mquŸ
;

97 
	mªm
;

98 } 
	tdiv_t
;

101 #i‚de‡
__ldiv_t_deföed


104 
	mquŸ
;

105 
	mªm
;

106 } 
	tldiv_t
;

107 
	#__ldiv_t_deföed
 1

	)

110 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


112 
__exãnsi⁄__
 struct

114 
	mquŸ
;

115 
	mªm
;

116 } 
	tŒdiv_t
;

117 
	#__Œdiv_t_deföed
 1

	)

122 
	#RAND_MAX
 2147483647

	)

127 
	#EXIT_FAILURE
 1

	)

128 
	#EXIT_SUCCESS
 0

	)

132 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

133 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
;

137 

	$©of
 (
__c⁄°
 *
__≈å
Ë
__THROW
 
__©åibuã_puª__
;

139 

	$©oi
 (
__c⁄°
 *
__≈å
Ë
__THROW
 
__©åibuã_puª__
;

141 

	$©ﬁ
 (
__c⁄°
 *
__≈å
Ë
__THROW
 
__©åibuã_puª__
;

143 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

145 
__exãnsi⁄__
 

	$©ﬁl
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
;

150 

	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

151 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

153 #ifdef 
__USE_ISOC99


155 

	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

156 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

158 

	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

163 

	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

164 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

166 

	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

167 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

168 
__THROW
;

170 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


172 
__exãnsi⁄__


173 

	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

176 
__exãnsi⁄__


177 

	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
;

182 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

186 
__exãnsi⁄__


187 

	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

190 
__exãnsi⁄__


191 

	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

192 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

193 
__THROW
;

197 #ifde‡
__USE_GNU


211 
	~<xloˇÀ.h
>

215 

	$__°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

217 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 

	$__°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

220 **
__ª°ri˘
 
__íd±r
,

221 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 
__exãnsi⁄__


224 

	$__°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

225 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

228 
__exãnsi⁄__


229 

	$__°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

230 **
__ª°ri˘
 
__íd±r
,

231 
__ba£
, 
__loˇÀ_t
 
__loc
)

232 
__THROW
;

234 

	$__°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

235 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

236 
__THROW
;

238 

	$__°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

239 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

241 

	$__°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

242 **
__ª°ri˘
 
__íd±r
,

243 
__loˇÀ_t
 
__loc
Ë
__THROW
;

250 

	$__°πod_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__group
)

252 
__THROW
;

253 

	$__°πof_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

254 **
__ª°ri˘
 
__íd±r
, 
__group
)

255 
__THROW
;

256 

	$__°πﬁd_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__group
Ë
__THROW
;

259 #i‚de‡
__°πﬁ_öã∫Æ_deföed


260 

	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
,

262 
__ba£
, 
__group
Ë
__THROW
;

263 
	#__°πﬁ_öã∫Æ_deföed
 1

	)

265 #i‚de‡
__°πoul_öã∫Æ_deföed


266 

	$__°πoul_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

267 **
__ª°ri˘
 
__íd±r
,

268 
__ba£
, 
__group
Ë
__THROW
;

269 
	#__°πoul_öã∫Æ_deföed
 1

	)

271 #i‡
deföed
 
__GNUC__
 || deföed 
__USE_ISOC99


272 #i‚de‡
__°πﬁl_öã∫Æ_deföed


273 
__exãnsi⁄__


274 

	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
,

276 
__ba£
, 
__group
Ë
__THROW
;

277 
	#__°πﬁl_öã∫Æ_deföed
 1

	)

279 #i‚de‡
__°πouŒ_öã∫Æ_deföed


280 
__exãnsi⁄__


281 

	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

282 
__ª°ri˘
 
__≈å
,

283 **
__ª°ri˘
 
__íd±r
,

284 
__ba£
, 
__group
)

285 
__THROW
;

286 
	#__°πouŒ_öã∫Æ_deföed
 1

	)

290 #ifde‡
__USE_EXTERN_INLINES


293 
__ölöe
 

294 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
Ë
__THROW


296  
	`__°πod_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

297 
	}
}

298 
__ölöe
 

299 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

300 
__ba£
Ë
__THROW


302  
	`__°πﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

303 
	}
}

304 
__ölöe
 

305 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

306 
__ba£
Ë
__THROW


308  
	`__°πoul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

309 
	}
}

311 #ifde‡
__USE_ISOC99


312 
__ölöe
 

313 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
Ë
__THROW


315  
	`__°πof_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

316 
	}
}

317 
__ölöe
 

318 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
Ë
__THROW


320  
	`__°πﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0);

321 
	}
}

324 #ifde‡
__USE_BSD


325 
__exãnsi⁄__
 
__ölöe
 

326 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

327 
__ba£
Ë
__THROW


329  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

330 
	}
}

331 
__exãnsi⁄__
 
__ölöe
 

332 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

333 
__ba£
Ë
__THROW


335  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

336 
	}
}

339 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


340 
__exãnsi⁄__
 
__ölöe
 

341 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

342 
__ba£
Ë
__THROW


344  
	`__°πﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

345 
	}
}

346 
__exãnsi⁄__
 
__ölöe
 

347 
	$°πouŒ
 (
__c⁄°
 * 
__ª°ri˘
 
__≈å
, **__ª°ri˘ 
__íd±r
,

348 
__ba£
Ë
__THROW


350  
	`__°πouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0);

351 
	}
}

354 
__ölöe
 

355 
	$©of
 (
__c⁄°
 *
__≈å
Ë
__THROW


357  
	`°πod
 (
__≈å
, (**Ë
NULL
);

358 
	}
}

359 
__ölöe
 

360 
	$©oi
 (
__c⁄°
 *
__≈å
Ë
__THROW


362  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

363 
	}
}

364 
__ölöe
 

365 
	$©ﬁ
 (
__c⁄°
 *
__≈å
Ë
__THROW


367  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

368 
	}
}

370 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


371 
__exãnsi⁄__
 
__ölöe
 

372 
	$©ﬁl
 (
__c⁄°
 *
__≈å
Ë
__THROW


374  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

375 
	}
}

380 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


384 
*
	$l64a
 (
__n
Ë
__THROW
;

387 

	$a64l
 (
__c⁄°
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

390 
	~<sys/ty≥s.h
>

397 

	$øndom
 (Ë
__THROW
;

400 

	$§™dom
 (
__£ed
Ë
__THROW
;

406 
*
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

407 
size_t
 
__°©ñí
Ë
__THROW
;

411 
*
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
;

414 #ifde‡
__USE_MISC


419 
	søndom_d©a


421 
öt32_t
 *
Âå
;

422 
öt32_t
 *
Ωå
;

423 
öt32_t
 *
°©e
;

424 
ønd_ty≥
;

425 
ønd_deg
;

426 
ønd_£p
;

427 
öt32_t
 *
íd_±r
;

430 

	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

431 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

433 

	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
Ë
__THROW
;

435 

	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

436 
size_t
 
__°©ñí
,

437 
øndom_d©a
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

439 

	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

440 
øndom_d©a
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

446 

	$ønd
 (Ë
__THROW
;

448 

	$§™d
 (
__£ed
Ë
__THROW
;

450 #ifde‡
__USE_POSIX


452 

	$ønd_r
 (*
__£ed
Ë
__THROW
;

456 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


460 

	$dønd48
 (Ë
__THROW
;

461 

	`î™d48
 (
__xsubi
[3]Ë
__THROW
;

464 

	$Ã™d48
 (Ë
__THROW
;

465 

	`ƒ™d48
 (
__xsubi
[3]Ë
__THROW
;

468 

	$mønd48
 (Ë
__THROW
;

469 

	`jønd48
 (
__xsubi
[3]Ë
__THROW
;

472 

	$§™d48
 (
__£edvÆ
Ë
__THROW
;

473 
*
	`£ed48
 (
__£ed16v
[3]Ë
__THROW
;

474 

	`lc⁄g48
 (
__∑øm
[7]Ë
__THROW
;

476 #ifde‡
__USE_MISC


480 
	sdønd48_d©a


482 
__x
[3];

483 
__ﬁd_x
[3];

484 
__c
;

485 
__öô
;

486 
__a
;

490 

	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

491 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

492 

	`î™d48_r
 (
__xsubi
[3],

493 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

494 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

497 

	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

498 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

499 

	`ƒ™d48_r
 (
__xsubi
[3],

500 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

501 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

504 

	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

506 

	`jønd48_r
 (
__xsubi
[3],

507 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

508 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
;

511 

	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

512 
__THROW
;

514 

	`£ed48_r
 (
__£ed16v
[3],

515 
dønd48_d©a
 *
__buf„r
Ë
__THROW
;

517 

	`lc⁄g48_r
 (
__∑øm
[7],

518 
dønd48_d©a
 *
__buf„r
Ë
__THROW
;

524 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


525 
	#__mÆloc_™d_ˇŒoc_deföed


	)

527 
*
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

529 
*
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

530 
__THROW
 
__©åibuã_mÆloc__
;

533 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


536 
*
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

538 

	$‰ì
 (*
__±r
Ë
__THROW
;

540 #ifdef 
__USE_MISC


542 

	$c‰ì
 (*
__±r
Ë
__THROW
;

545 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


546 
	~<Æloˇ.h
>

549 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


551 
*
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
;

554 #ifde‡
__USE_XOPEN2K


556 

	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

557 
__THROW
 
__©åibuã_mÆloc__
;

561 

	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

565 

	`©exô
 ((*
__func
Ë()Ë
__THROW
;

567 #ifdef 
__USE_MISC


570 

	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

571 
__THROW
;

577 

	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

579 #ifde‡
__USE_ISOC99


582 

	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

587 
*
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
;

591 
*
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
;

593 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


597 

	$puãnv
 (*
__°rög
Ë
__THROW
;

600 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


603 

	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

604 
__THROW
;

607 

	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
;

610 #ifdef 
__USE_MISC


614 

	$˛óªnv
 (Ë
__THROW
;

618 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


623 
*
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
;

630 #i‚de‡
__USE_FILE_OFFSET64


631 

	$mk°emp
 (*
__ãm∂©e
Ë
__THROW
;

633 #ifde‡
__REDIRECT


634 

	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
Ë
__THROW
, 
mk°emp64
);

636 
	#mk°emp
 
mk°emp64


	)

639 #ifde‡
__USE_LARGEFILE64


640 

	$mk°emp64
 (*
__ãm∂©e
Ë
__THROW
;

644 #ifde‡
__USE_BSD


650 
*
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
;

655 

	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__THROW
;

658 #ifdef 
__USE_GNU


662 
*
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

665 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


672 
*
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

673 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
;

678 #i‚de‡
__COMPAR_FN_T


679 
	#__COMPAR_FN_T


	)

680 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

682 #ifdef 
__USE_GNU


683 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

689 
*
	`b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

690 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
);

694 

	`qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

695 
__com∑r_‚_t
 
__com∑r
);

699 

	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

700 

	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

701 #ifde‡
__USE_ISOC99


702 
__exãnsi⁄__
 

	$Œabs
 (
__x
)

703 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

710 
div_t
 
	$div
 (
__numî
, 
__díom
)

711 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

712 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

713 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

714 #ifde‡
__USE_ISOC99


715 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

716 
__díom
)

717 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

721 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


728 
*
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

729 *
__ª°ri˘
 
__sign
Ë
__THROW
;

734 
*
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

735 *
__ª°ri˘
 
__sign
Ë
__THROW
;

740 
*
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
Ë
__THROW
;

743 #ifde‡
__USE_MISC


745 
*
	$qecvt
 (
__vÆue
, 
__ndigô
,

746 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
Ë
__THROW
;

747 
*
	$qfcvt
 (
__vÆue
, 
__ndigô
,

748 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
Ë
__THROW
;

749 
*
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
Ë
__THROW
;

754 

	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

755 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

756 
size_t
 
__Àn
Ë
__THROW
;

757 

	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

758 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

759 
size_t
 
__Àn
Ë
__THROW
;

761 

	$qecvt_r
 (
__vÆue
, 
__ndigô
,

762 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

763 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

764 

	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

765 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

766 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

773 

	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

776 

	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

777 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

780 

	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

784 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

785 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

787 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

788 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

789 
__THROW
;

792 #ifde‡
__USE_SVID


797 

	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
;

801 #ifde‡
__USE_XOPEN_EXTENDED


808 

	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

809 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

810 **
__ª°ri˘
 
__vÆuï
Ë
__THROW
;

814 #ifde‡
__USE_XOPEN


816 

	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
;

822 #ifde‡
__USE_XOPEN2K


824 

	$posix_›í±
 (
__oÊag
Ë
__THROW
;

827 #ifde‡
__USE_XOPEN


832 

	$gø¡±
 (
__fd
Ë
__THROW
;

836 

	$u∆ock±
 (
__fd
Ë
__THROW
;

841 
*
	$±¢ame
 (
__fd
Ë
__THROW
;

844 #ifde‡
__USE_GNU


848 

	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
Ë
__THROW
;

851 

	$gë±
 (Ë
__THROW
;

854 #ifde‡
__USE_BSD


858 

	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
Ë
__THROW
;

862 #unde‡
__√ed_mÆloc_™d_ˇŒoc


864 
__END_DECLS


	@/usr/include/string.h

23 #i‚def 
_STRING_H


24 
	#_STRING_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

37 
*
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

38 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

41 
*
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

42 
__THROW
;

47 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


48 
*
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

49 
__c
, 
size_t
 
__n
)

50 
__THROW
;

55 
*
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
;

58 

	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

59 
__THROW
 
__©åibuã_puª__
;

62 
*
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

63 
__THROW
 
__©åibuã_puª__
;

65 #ifde‡
__USE_GNU


68 
*
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

71 
*
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
__©åibuã_puª__
;

77 
*
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

78 
__THROW
;

80 
*
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

81 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

84 
*
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

85 
__THROW
;

87 
*
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

88 
size_t
 
__n
Ë
__THROW
;

91 

	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

92 
__THROW
 
__©åibuã_puª__
;

94 

	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

95 
__THROW
 
__©åibuã_puª__
;

98 

	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

99 
__THROW
 
__©åibuã_puª__
;

101 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

102 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

104 #ifde‡
__USE_GNU


108 
	~<xloˇÀ.h
>

111 

	$__°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

112 
__THROW
 
__©åibuã_puª__
;

114 
size_t
 
	$__°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

115 
__loˇÀ_t
 
__l
Ë
__THROW
;

118 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


120 
*
	$°rdup
 (
__c⁄°
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

126 #i‡
deföed
 
__USE_GNU


127 
*
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

128 
__THROW
 
__©åibuã_mÆloc__
;

131 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


133 
	#°rdu∑
(
s
) \

134 (
__exãnsi⁄__
 \

136 
__c⁄°
 *
__ﬁd
 = (
s
); \

137 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

138 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

139 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

140 
	}
}))

	)

143 
	#°∫du∑
(
s
, 
n
) \

144 (
__exãnsi⁄__
 \

146 
__c⁄°
 *
__ﬁd
 = (
s
); \

147 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

148 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

149 
__√w
[
__Àn
] = '\0'; \

150 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

151 }))

	)

155 
*
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

157 
*
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

159 #ifde‡
__USE_GNU


162 
*
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

167 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

168 
__THROW
 
__©åibuã_puª__
;

171 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

172 
__THROW
 
__©åibuã_puª__
;

174 
*
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

175 
__THROW
 
__©åibuã_puª__
;

177 
*
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

178 
__THROW
 
__©åibuã_puª__
;

180 #ifde‡
__USE_GNU


182 
*
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

183 
__THROW
 
__©åibuã_puª__
;

187 
*
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

188 
__THROW
;

192 
*
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

193 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

194 **
__ª°ri˘
 
__ßve_±r
Ë
__THROW
;

195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


196 
*
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

197 **
__ª°ri˘
 
__ßve_±r
Ë
__THROW
;

200 #ifde‡
__USE_GNU


204 
*
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

205 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

206 
__THROW
 
__©åibuã_puª__
;

210 
*
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

211 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

212 
*
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

213 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

218 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

220 #ifdef 
__USE_GNU


223 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

224 
__THROW
 
__©åibuã_puª__
;

229 
*
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

230 #ifdef 
__USE_MISC


233 
*
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
Ë
__THROW
;

238 

	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

240 #i‡
deföed
 
__USE_BSD


242 

	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

245 

	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

248 

	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

249 
__THROW
 
__©åibuã_puª__
;

252 
*
	$ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

255 
*
	$rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW
 
__©åibuã_puª__
;

259 

	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

263 #ifdef 
__USE_GNU


264 

	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

265 #ifde‡
__GNUC__


266 
__exãnsi⁄__
 

	$ff¶l
 (
__Œ
)

267 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

272 

	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

273 
__THROW
 
__©åibuã_puª__
;

276 

	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

277 
__THROW
 
__©åibuã_puª__
;

280 #ifdef 
__USE_GNU


283 

	$__°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

284 
__loˇÀ_t
 
__loc
Ë
__THROW
 
__©åibuã_puª__
;

286 

	$__°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

287 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

288 
__THROW
 
__©åibuã_puª__
;

291 #ifdef 
__USE_BSD


294 
*
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

295 
__c⁄°
 *
__ª°ri˘
 
__dñim
Ë
__THROW
;

298 #ifdef 
__USE_GNU


300 

	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

301 
__THROW
 
__©åibuã_puª__
;

304 
*
	$°rsig«l
 (
__sig
Ë
__THROW
;

307 
*
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

308 
__THROW
;

309 
*
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

310 
__THROW
;

314 
*
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

315 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

316 
*
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

317 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
Ë
__THROW
;

320 
*
	$°r‰y
 (*
__°rög
Ë
__THROW
;

323 
*
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

325 #i‚de‡
ba£«me


330 
*
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

335 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

336 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

337 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


357 
	~<bôs/°rög.h
>

360 
	~<bôs/°rög2.h
>

364 
__END_DECLS


	@/usr/include/sys/dir.h

19 #i‚def 
_SYS_DIR_H


20 
	#_SYS_DIR_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<dúít.h
>

26 
	#dúe˘
 
dúít


	)

	@/usr/include/sys/file.h

19 #i‚def 
_SYS_FILE_H


20 
	#_SYS_FILE_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‚def 
_FCNTL_H


25 
	~<f˙é.h
>

28 
	g__BEGIN_DECLS


33 #i‚de‡
L_SET


34 
	#L_SET
 0

	)

35 
	#L_INCR
 1

	)

36 
	#L_XTND
 2

	)

41 
	#LOCK_SH
 1

	)

42 
	#LOCK_EX
 2

	)

43 
	#LOCK_UN
 8

	)

46 
	#LOCK_NB
 4

	)

51 

	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

54 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 

	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/ipc.h

19 #i‚de‡
_SYS_IPC_H


20 
	#_SYS_IPC_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‡!
deföed
 
__USE_SVID
 && !deföed 
__USE_XOPEN
 && 
__GNUC__
 >= 2

29 
	~<bôs/ùc.h
>

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 #i‚de‡
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

41 #i‚de‡
__mode_t_deföed


42 
__mode_t
 
	tmode_t
;

43 
	#__mode_t_deföed


	)

46 #i‚de‡
__key_t_deföed


47 
__key_t
 
	tkey_t
;

48 
	#__key_t_deföed


	)

51 
__BEGIN_DECLS


54 
key_t
 
	$·ok
 (
__c⁄°
 *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

56 
__END_DECLS


	@/usr/include/sys/msg.h

19 #i‚de‡
_SYS_MSG_H


20 
	#_SYS_MSG_H


	)

22 
	~<„©uªs.h
>

25 
	~<sys/ùc.h
>

28 
	~<bôs/msq.h
>

31 
	#__√ed_time_t


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

39 #i‚de‡
__ssize_t_deföed


40 
__ssize_t
 
	tssize_t
;

41 
	#__ssize_t_deföed


	)

47 #ifde‡
__USE_GNU


49 
	smsgbuf


51 
	mmty≥
;

52 
	mmãxt
[1];

57 
__BEGIN_DECLS


60 

	$msg˘l
 (
__msqid
, 
__cmd
, 
msqid_ds
 *
__buf
Ë
__THROW
;

63 

	$msggë
 (
key_t
 
__key
, 
__msgÊg
Ë
__THROW
;

66 

	$msgrcv
 (
__msqid
, *
__msgp
, 
size_t
 
__msgsz
,

67 
__msgtyp
, 
__msgÊg
Ë
__THROW
;

70 

	$msg¢d
 (
__msqid
, 
__c⁄°
 *
__msgp
, 
size_t
 
__msgsz
,

71 
__msgÊg
Ë
__THROW
;

73 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	~<limôs.h
>

23 
	~<löux/limôs.h
>

24 
	~<löux/∑øm.h
>

28 
	#NBBY
 
CHAR_BIT


	)

29 #i‚def 
NGROUPS


30 
	#NGROUPS
 
NGROUPS_MAX


	)

32 
	#MAXSYMLINKS
 20

	)

33 
	#CANBSIZ
 
MAX_CANON


	)

34 
	#NCARGS
 
ARG_MAX


	)

35 
	#MAXPATHLEN
 
PATH_MAX


	)

39 
	#NOFILE
 256

	)

42 
	~<sys/ty≥s.h
>

45 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

46 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

47 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

48 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

51 #i‚de‡
howm™y


52 
	#howm™y
(
x
, 
y
Ë(((x)+((y)-1))/(y))

	)

54 
	#roundup
(
x
, 
y
Ë((((x)+((y)-1))/(y))*(y))

	)

55 
	#powîof2
(
x
Ë((((x)-1)&(x))==0)

	)

58 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

59 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

63 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 
	#__NFDBITS
 (8 *  (
__fd_mask
))

	)

59 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

60 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

67 #ifde‡
__USE_XOPEN


68 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

69 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

71 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

72 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

74 } 
	tfd_£t
;

77 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

79 #ifde‡
__USE_MISC


81 
__fd_mask
 
	tfd_mask
;

84 
	#NFDBITS
 
__NFDBITS


	)

89 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

90 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

91 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

92 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

95 
__BEGIN_DECLS


102 

	$£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

103 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

104 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

105 
timevÆ
 *
__ª°ri˘
 
__timeout
Ë
__THROW
;

107 #ifde‡
__USE_XOPEN2K


111 

	$p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

112 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

113 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

114 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

115 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
Ë
__THROW
;

118 
__END_DECLS


	@/usr/include/sys/sem.h

19 #i‚de‡
_SYS_SEM_H


20 
	#_SYS_SEM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/£m.h
>

37 
	s£mbuf


39 
	m£m_num
;

40 
	m£m_›
;

41 
	m£m_Êg
;

45 
__BEGIN_DECLS


48 

	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

51 

	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

54 

	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

56 
__END_DECLS


	@/usr/include/sys/shm.h

19 #i‚de‡
_SYS_SHM_H


20 
	#_SYS_SHM_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

28 
	~<sys/ùc.h
>

31 
	~<bôs/shm.h
>

34 
	#__√ed_time_t


	)

35 
	~<time.h
>

37 #ifde‡
__USE_XOPEN


38 #i‚de‡
__pid_t_deföed


39 
__pid_t
 
	tpid_t
;

40 
	#__pid_t_deföed


	)

44 
	g__BEGIN_DECLS


47 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

48 

	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

55 

	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

58 

	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

61 
*
	$shm©
 (
__shmid
, 
__c⁄°
 *
__shmaddr
, 
__shmÊg
)

62 
__THROW
;

65 

	$shmdt
 (
__c⁄°
 *
__shmaddr
Ë
__THROW
;

67 
__END_DECLS


	@/usr/include/sys/socket.h

20 #i‚def 
_SYS_SOCKET_H


21 
	#_SYS_SOCKET_H
 1

	)

23 
	~<„©uªs.h
>

25 
	g__BEGIN_DECLS


27 
	~<sys/uio.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

35 
	~<bôs/sockë.h
>

37 #ifde‡
__USE_BSD


40 
	sosockaddr


42 
	mß_Ámûy
;

43 
	mß_d©a
[14];

51 
	mSHUT_RD
 = 0,

52 
	#SHUT_RD
 
SHUT_RD


	)

53 
	mSHUT_WR
,

54 
	#SHUT_WR
 
SHUT_WR


	)

55 
	mSHUT_RDWR


56 
	#SHUT_RDWR
 
SHUT_RDWR


	)

65 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


66 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

67 
	#__CONST_SOCKADDR_ARG
 
__c⁄°
 
sockaddr
 *

	)

71 
	#__SOCKADDR_ALLTYPES
 \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

77 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

78 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

79 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

80 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

81 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

82 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

83 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

84 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

86 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

87 uni⁄ { 
	m__SOCKADDR_ALLTYPES


88 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

89 #unde‡
__SOCKADDR_ONETYPE


90 
	#__SOCKADDR_ONETYPE
(
ty≥
Ë
__c⁄°
 ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

91 uni⁄ { 
	m__SOCKADDR_ALLTYPES


92 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

93 #unde‡
__SOCKADDR_ONETYPE


100 

	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

106 

	`sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

107 
__fds
[2]Ë
__THROW
;

110 

	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

111 
__THROW
;

114 

	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

115 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

121 

	$c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

122 
__THROW
;

126 

	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

127 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

131 
ssize_t
 
	$£nd
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
, 
__Êags
)

132 
__THROW
;

136 
ssize_t
 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

137 
__THROW
;

141 
ssize_t
 
	$£ndto
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

142 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

143 
sockÀn_t
 
__addr_Àn
Ë
__THROW
;

149 
ssize_t
 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

150 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

151 
__THROW
;

156 
ssize_t
 
	$£ndmsg
 (
__fd
, 
__c⁄°
 
msghdr
 *
__mesßge
, 
__Êags
)

157 
__THROW
;

161 
ssize_t
 
	$ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
)

162 
__THROW
;

168 

	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

169 *
__ª°ri˘
 
__›tvÆ
,

170 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

175 

	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

176 
__c⁄°
 *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

182 

	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

189 

	$ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

190 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

191 
__THROW
;

199 

	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

202 #ifde‡
__USE_XOPEN2K


204 

	$sock©m¨k
 (
__fd
Ë
__THROW
;

208 #ifde‡
__USE_MISC


212 

	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

215 
__END_DECLS


	@/usr/include/sys/stat.h

23 #i‚def 
_SYS_STAT_H


24 
	#_SYS_STAT_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 #ifde‡
__USE_XOPEN


31 
	#__√ed_time_t


	)

32 
	~<time.h
>

36 #i‚de‡
__dev_t_deföed


37 
__dev_t
 
	tdev_t
;

38 
	#__dev_t_deföed


	)

41 #i‚de‡
__gid_t_deföed


42 
__gid_t
 
	tgid_t
;

43 
	#__gid_t_deföed


	)

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

55 #i‚de‡
__mode_t_deföed


56 
__mode_t
 
	tmode_t
;

57 
	#__mode_t_deföed


	)

60 #i‚de‡
__∆ök_t_deföed


61 
__∆ök_t
 
	t∆ök_t
;

62 
	#__∆ök_t_deföed


	)

65 #i‚de‡
__off_t_deföed


66 #i‚de‡
__USE_FILE_OFFSET64


67 
__off_t
 
	toff_t
;

69 
__off64_t
 
	toff_t
;

71 
	#__off_t_deföed


	)

74 #i‚de‡
__uid_t_deföed


75 
__uid_t
 
	tuid_t
;

76 
	#__uid_t_deföed


	)

80 #ifde‡
__USE_UNIX98


81 #i‚de‡
__blk˙t_t_deföed


82 #i‚de‡
__USE_FILE_OFFSET64


83 
__blk˙t_t
 
	tblk˙t_t
;

85 
__blk˙t64_t
 
	tblk˙t_t
;

87 
	#__blk˙t_t_deföed


	)

90 #i‚de‡
__blksize_t_deföed


91 
__blksize_t
 
	tblksize_t
;

92 
	#__blksize_t_deföed


	)

96 
	g__BEGIN_DECLS


98 
	~<bôs/°©.h
>

100 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_IFMT
 
__S_IFMT


	)

102 
	#S_IFDIR
 
__S_IFDIR


	)

103 
	#S_IFCHR
 
__S_IFCHR


	)

104 
	#S_IFBLK
 
__S_IFBLK


	)

105 
	#S_IFREG
 
__S_IFREG


	)

106 #ifde‡
__S_IFIFO


107 
	#S_IFIFO
 
__S_IFIFO


	)

109 #ifde‡
__S_IFLNK


110 
	#S_IFLNK
 
__S_IFLNK


	)

112 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K
) \

113 && 
deföed
 
	g__S_IFSOCK


114 
	#S_IFSOCK
 
__S_IFSOCK


	)

120 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

122 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

123 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

124 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

125 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

126 #ifde‡
__S_IFIFO


127 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

129 #ifde‡
__S_IFLNK


130 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

133 #ifdef 
__USE_BSD


134 #i‚de‡
__S_IFLNK


135 
	#S_ISLNK
(
mode
Ë0

	)

137 #ifde‡
__S_IFSOCK


138 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

146 #ifdef 
__USE_POSIX199309


147 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

148 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

149 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

155 
	#S_ISUID
 
__S_ISUID


	)

156 
	#S_ISGID
 
__S_ISGID


	)

158 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


160 
	#S_ISVTX
 
__S_ISVTX


	)

163 
	#S_IRUSR
 
__S_IREAD


	)

164 
	#S_IWUSR
 
__S_IWRITE


	)

165 
	#S_IXUSR
 
__S_IEXEC


	)

167 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

169 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


170 
	#S_IREAD
 
S_IRUSR


	)

171 
	#S_IWRITE
 
S_IWUSR


	)

172 
	#S_IEXEC
 
S_IXUSR


	)

175 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

176 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

177 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

179 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

181 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

182 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

183 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

185 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

188 #ifdef 
__USE_BSD


190 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

191 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

192 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

194 
	#S_BLKSIZE
 512

	)

198 #i‚de‡
__USE_FILE_OFFSET64


200 

	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

201 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

205 

	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
;

207 #ifde‡
__REDIRECT


208 

	`__REDIRECT
 (
°©
,

209 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

210 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
,

211 
°©64
);

212 

	`__REDIRECT
 (
f°©
, (
__fd
, 
°©
 *
__buf
Ë
__THROW
, 
f°©64
);

214 
	#°©
 
°©64


	)

215 
	#f°©
 
f°©64


	)

218 #ifde‡
__USE_LARGEFILE64


219 

	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

221 

	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
;

224 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


225 #i‚de‡
__USE_FILE_OFFSET64


228 

	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

229 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

231 #ifde‡
__REDIRECT


232 

	`__REDIRECT
 (
l°©
,

233 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

234 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
,

235 
l°©64
);

237 
	#l°©
 
l°©64


	)

240 #ifde‡
__USE_LARGEFILE64


241 

	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

242 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
;

249 

	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
__THROW
;

252 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


253 

	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

259 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

261 #ifdef 
__USE_GNU


264 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

268 

	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
Ë
__THROW
;

273 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


274 

	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

275 
__THROW
;

280 

	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
Ë
__THROW
;

297 #i‚de‡
_STAT_VER


298 
	#_STAT_VER
 0

	)

300 #i‚de‡
_MKNOD_VER


301 
	#_MKNOD_VER
 0

	)

305 #i‚de‡
__USE_FILE_OFFSET64


306 

	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
Ë
__THROW
;

307 

	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

308 
°©
 *
__°©_buf
Ë
__THROW
;

309 

	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

310 
°©
 *
__°©_buf
Ë
__THROW
;

312 #ifde‡
__REDIRECT


313 

	`__REDIRECT
 (
__fx°©
, (
__vî
, 
__fûdes
,

314 
°©
 *
__°©_buf
Ë
__THROW
,

315 
__fx°©64
);

316 

	`__REDIRECT
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

317 
°©
 *
__°©_buf
Ë
__THROW
, 
__x°©64
);

318 

	`__REDIRECT
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

319 
°©
 *
__°©_buf
Ë
__THROW
,

320 
__lx°©64
);

323 
	#__fx°©
 
__fx°©64


	)

324 
	#__x°©
 
__x°©64


	)

325 
	#__lx°©
 
__lx°©64


	)

329 #ifde‡
__USE_LARGEFILE64


330 

	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

331 
__THROW
;

332 

	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

333 
°©64
 *
__°©_buf
Ë
__THROW
;

334 

	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

335 
°©64
 *
__°©_buf
Ë
__THROW
;

337 

	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

338 
__dev_t
 *
__dev
Ë
__THROW
;

340 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

343 
__ölöe__
 
	$°©
 (
__c⁄°
 *
__∑th
,

344 
°©
 *
__°©buf
Ë
__THROW


346  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

347 
	}
}

349 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


350 
__ölöe__
 
	$l°©
 (
__c⁄°
 *
__∑th
,

351 
°©
 *
__°©buf
Ë
__THROW


353  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

354 
	}
}

357 
__ölöe__
 
	$f°©
 (
__fd
, 
°©
 *
__°©buf
Ë
__THROW


359  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

360 
	}
}

362 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


363 
__ölöe__
 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

364 
__dev_t
 
__dev
Ë
__THROW


366  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

367 
	}
}

370 #i‡
deföed
 
__USE_LARGEFILE64
 \

371 && (! 
deföed
 
__USE_FILE_OFFSET64
 \

372 || (
deföed
 
__REDIRECT
 && deföed 
__OPTIMIZE__
))

373 
__ölöe__
 
	$°©64
 (
__c⁄°
 *
__∑th
,

374 
°©64
 *
__°©buf
Ë
__THROW


376  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

377 
	}
}

379 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


380 
__ölöe__
 
	$l°©64
 (
__c⁄°
 *
__∑th
,

381 
°©64
 *
__°©buf
Ë
__THROW


383  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

384 
	}
}

387 
__ölöe__
 
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
Ë
__THROW


389  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

390 
	}
}

395 
__END_DECLS


	@/usr/include/sys/time.h

19 #i‚de‡
_SYS_TIME_H


20 
	#_SYS_TIME_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_time_t


	)

26 
	~<time.h
>

27 
	#__√ed_timevÆ


	)

28 
	~<bôs/time.h
>

30 
	~<sys/£À˘.h
>

32 #i‚de‡
__su£c⁄ds_t_deföed


33 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

34 
	#__su£c⁄ds_t_deföed


	)

38 
	g__BEGIN_DECLS


40 #ifde‡
__USE_GNU


42 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

43 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

44 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

45 }

	)

46 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

47 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

48 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

49 }

	)

53 #ifde‡
__USE_BSD


56 
	stimez⁄e


58 
	mtz_möuãswe°
;

59 
	mtz_d°time
;

62 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

64 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

72 

	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

73 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
;

75 #ifde‡
__USE_BSD


78 

	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

79 
__c⁄°
 
timez⁄e
 *
__tz
Ë
__THROW
;

85 

	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

86 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

91 
	e__ôimî_which


94 
ITIMER_REAL
 = 0,

95 
	#ITIMER_REAL
 
ITIMER_REAL


	)

97 
ITIMER_VIRTUAL
 = 1,

98 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

101 
ITIMER_PROF
 = 2

102 
	#ITIMER_PROF
 
ITIMER_PROF


	)

107 
	sôimîvÆ


110 
timevÆ
 
ô_öãrvÆ
;

112 
timevÆ
 
ô_vÆue
;

115 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


118 
__ôimî_which
 
	t__ôimî_which_t
;

120 
	t__ôimî_which_t
;

125 

	$gëôimî
 (
__ôimî_which_t
 
__which
,

126 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

131 

	$£tôimî
 (
__ôimî_which_t
 
__which
,

132 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

133 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

137 

	`utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

138 
__THROW
;

141 #ifde‡
__USE_BSD


144 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

145 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

146 
	#timîcmp
(
a
, 
b
, 
CMP
) \

147 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

148 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

149 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

150 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

152 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

153 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

154 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

156 ++(
ªsu…
)->
tv_£c
; \

157 (
ªsu…
)->
tv_u£c
 -= 1000000; \

159 
	}
} 0)

	)

160 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

162 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

163 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

164 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

165 --(
ªsu…
)->
tv_£c
; \

166 (
ªsu…
)->
tv_u£c
 += 1000000; \

168 } 0)

	)

171 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #ifde‡
__USE_XOPEN


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__GLIBC_HAVE_LONG_LONG


166 
__exãnsi⁄__
 
	töt64_t
;

171 
	tu_öt8_t
;

172 
	tu_öt16_t
;

173 
	tu_öt32_t
;

174 #i‡
__GLIBC_HAVE_LONG_LONG


175 
__exãnsi⁄__
 
	tu_öt64_t
;

178 
	tªgi°î_t
;

183 
	#__ötN_t
(
N
, 
MODE
) \

184 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

185 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

186 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

188 #i‚de‡
	t__öt8_t_deföed


189 
	t__öt8_t_deföed


	)

190 
	t__ötN_t
 (8, 
	t__QI__
);

191 
__ötN_t
 (16, 
__HI__
);

192 
__ötN_t
 (32, 
__SI__
);

193 
__ötN_t
 (64, 
__DI__
);

196 
__u_ötN_t
 (8, 
__QI__
);

197 
__u_ötN_t
 (16, 
__HI__
);

198 
__u_ötN_t
 (32, 
__SI__
);

199 
__u_ötN_t
 (64, 
__DI__
);

201 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

207 
	#__BIT_TYPES_DEFINED__
 1

	)

210 #ifdef 
__USE_BSD


212 
	~<ídün.h
>

215 
	~<sys/£À˘.h
>

218 
	~<sys/sysma¸os.h
>

222 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__blksize_t_deföed


223 
__blksize_t
 
	tblksize_t
;

224 
	#__blksize_t_deföed


	)

228 #i‚de‡
__USE_FILE_OFFSET64


229 #i‚de‡
__blk˙t_t_deföed


230 
__blk˙t_t
 
	tblk˙t_t
;

231 
	#__blk˙t_t_deföed


	)

233 #i‚de‡
__fsblk˙t_t_deföed


234 
__fsblk˙t_t
 
	tfsblk˙t_t
;

235 
	#__fsblk˙t_t_deföed


	)

237 #i‚de‡
__fsfû˙t_t_deföed


238 
__fsfû˙t_t
 
	tfsfû˙t_t
;

239 
	#__fsfû˙t_t_deföed


	)

242 #i‚de‡
__blk˙t_t_deföed


243 
__blk˙t64_t
 
	tblk˙t_t
;

244 
	#__blk˙t_t_deföed


	)

246 #i‚de‡
__fsblk˙t_t_deföed


247 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

248 
	#__fsblk˙t_t_deföed


	)

250 #i‚de‡
__fsfû˙t_t_deföed


251 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

252 
	#__fsfû˙t_t_deföed


	)

256 #ifde‡
__USE_LARGEFILE64


257 
__blk˙t64_t
 
	tblk˙t64_t
;

258 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

259 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

262 
	g__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

59 
__˛ock_t
 
	t˛ock_t
;

62 #unde‡
__√ed_˛ock_t


64 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

65 
	#__time_t_deföed
 1

	)

67 
	~<bôs/ty≥s.h
>

70 
__time_t
 
	ttime_t
;

73 #unde‡
__√ed_time_t


75 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

76 ((
deföed
 
	g_TIME_H
 && deföed 
	g__USE_POSIX199309
Ë|| deföed 
	g__√ed_˛ockid_t
)

77 
	#__˛ockid_t_deföed
 1

	)

79 
	~<bôs/ty≥s.h
>

82 
__˛ockid_t
 
	t˛ockid_t
;

85 #unde‡
__˛ockid_time_t


87 #i‡!
deföed
 
__timî_t_deföed
 && \

88 ((
deföed
 
	g_TIME_H
 && deföed 
	g__USE_POSIX199309
Ë|| deföed 
	g__√ed_timî_t
)

89 
	#__timî_t_deföed
 1

	)

91 
	~<bôs/ty≥s.h
>

94 
__timî_t
 
	ttimî_t
;

97 #unde‡
__√ed_timî_t


100 #i‡!
deföed
 
__time•ec_deföed
 && \

101 ((
deföed
 
	g_TIME_H
 && deföed 
	g__USE_POSIX199309
Ë|| deföed 
	g__√ed_time•ec
)

102 
	#__time•ec_deföed
 1

	)

106 
	stime•ec


108 
__time_t
 
	mtv_£c
;

109 
	mtv_n£c
;

113 #unde‡
__√ed_time•ec


116 #ifdef 
_TIME_H


118 
	stm


120 
	mtm_£c
;

121 
	mtm_mö
;

122 
	mtm_hour
;

123 
	mtm_mday
;

124 
	mtm_m⁄
;

125 
	mtm_yór
;

126 
	mtm_wday
;

127 
	mtm_yday
;

128 
	mtm_isd°
;

130 #ifdef 
__USE_BSD


131 
	mtm_gmtoff
;

132 
__c⁄°
 *
	mtm_z⁄e
;

134 
	m__tm_gmtoff
;

135 
__c⁄°
 *
	m__tm_z⁄e
;

140 #ifde‡
__USE_POSIX199309


142 
	sôimî•ec


144 
time•ec
 
	mô_öãrvÆ
;

145 
time•ec
 
	mô_vÆue
;

149 
	gsigevít
;

153 #ifde‡
__USE_XOPEN2K


154 #i‚de‡
__pid_t_deföed


155 
__pid_t
 
	tpid_t
;

156 
	#__pid_t_deföed


	)

163 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

166 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

169 

	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

170 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

173 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

179 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

180 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

181 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

183 #ifde‡
__USE_XOPEN


186 
*
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

187 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

188 
__THROW
;

194 

tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

198 

tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

200 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


203 

tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

204 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 

tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

209 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

214 
*
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

217 
*
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

219 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


224 
*
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

225 *
__ª°ri˘
 
__buf
Ë
__THROW
;

228 
*
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

229 *
__ª°ri˘
 
__buf
Ë
__THROW
;

234 
*
__tz«me
[2];

235 

__daylight
;

236 

__timez⁄e
;

239 #ifdef 
__USE_POSIX


241 
*
tz«me
[2];

245 

	$tz£t
 (Ë
__THROW
;

248 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


249 

daylight
;

250 

timez⁄e
;

253 #ifde‡
__USE_SVID


256 

	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

262 
	#__i¶óp
(
yór
) \

263 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

266 #ifde‡
__USE_MISC


271 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

274 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

277 

	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

281 #ifde‡
__USE_POSIX199309


283 

	$«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

284 
time•ec
 *
__ªmaöög
Ë
__THROW
;

288 

	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

291 

	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

294 

	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

295 
__THROW
;

297 #ifde‡
__USE_XOPEN2K


299 

	$˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

300 
__c⁄°
 
time•ec
 *
__ªq
,

301 
time•ec
 *
__ªm
Ë
__THROW
;

304 

	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

309 

	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

310 
sigevít
 *
__ª°ri˘
 
__evp
,

311 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

314 

	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

317 

	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

318 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

319 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

322 

	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

323 
__THROW
;

326 

	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

330 #ifde‡
__USE_XOPEN_EXTENDED


342 

gëd©e_îr
;

348 

tm
 *
	$gëd©e
 (
__c⁄°
 *
__°rög
Ë
__THROW
;

351 #ifde‡
__USE_GNU


357 

	$gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

358 
tm
 *
__ª°ri˘
 
__ªsbuÂ
Ë
__THROW
;

362 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifde‡
__USE_XOPEN


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 

	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
Ë
__THROW
;

49 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 
*
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/byteswap.h

20 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H


24 #i‚de‡
_BITS_BYTESWAP_H


25 
	#_BITS_BYTESWAP_H
 1

	)

28 
	#__bsw≠_c⁄°™t_16
(
x
) \

29 ((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8))

	)

31 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

32 
	#__bsw≠_16
(
x
) \

33 (
__exãnsi⁄__
 \

34 ({ 
__v
; \

35 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

36 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
x
); \

38 
__asm__
 
	`__vﬁ©ûe__
 ("rorw $8, %w0" \

39 : "Ù" (
__v
) \

40 : "0" ((Ë(
x
)) \

42 
__v
; }))

	)

45 
	#__bsw≠_16
(
x
Ë
	`__bsw≠_c⁄°™t_16
 (x)

	)

50 
	#__bsw≠_c⁄°™t_32
(
x
) \

51 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

52 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

54 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__


58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
; \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
x
); \

64 
__asm__
 
	`__vﬁ©ûe__
 ("rorw $8, %w0;" \

67 : "Ù" (
__v
) \

68 : "0" ((Ë(
x
)) \

70 
__v
; }))

	)

72 
	#__bsw≠_32
(
x
) \

73 (
__exãnsi⁄__
 \

74 ({ 
__v
; \

75 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

76 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
x
); \

78 
__asm__
 
	`__vﬁ©ûe__
 ("bswap %0" \

79 : "Ù" (
__v
) \

80 : "0" ((Ë(
x
))); \

81 
__v
; }))

	)

84 
	#__bsw≠_32
(
x
Ë
	`__bsw≠_c⁄°™t_32
 (x)

	)

88 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

90 
	#__bsw≠_c⁄°™t_64
(
x
) \

91 ((((
x
) & 0xff00000000000000ull) >> 56) \

92 | (((
x
) & 0x00ff000000000000ull) >> 40) \

93 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

94 | (((
x
) & 0x000000ff00000000ull) >> 8) \

95 | (((
x
) & 0x00000000ff000000ull) << 8) \

96 | (((
x
) & 0x0000000000ff0000ull) << 24) \

97 | (((
x
) & 0x000000000000ff00ull) << 40) \

98 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

100 
	#__bsw≠_64
(
x
) \

101 (
__exãnsi⁄__
 \

102 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

103 
__l
[2]; } 
__w
, 
__r
; \

104 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

105 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

108 
__w
.
__Œ
 = (
x
); \

109 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

110 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

112 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/dirent.h

19 #i‚de‡
_DIRENT_H


23 
	sdúít


25 #i‚de‡
__USE_FILE_OFFSET64


26 
__öo_t
 
	md_öo
;

27 
__off_t
 
	md_off
;

29 
__öo64_t
 
	md_öo
;

30 
__off64_t
 
	md_off
;

32 
	md_ª˛í
;

33 
	md_ty≥
;

34 
	md_«me
[256];

37 #ifde‡
__USE_LARGEFILE64


38 
	sdúít64


40 
__öo64_t
 
	md_öo
;

41 
__off64_t
 
	md_off
;

42 
	md_ª˛í
;

43 
	md_ty≥
;

44 
	md_«me
[256];

48 
	#d_fûío
 
d_öo


	)

50 #unde‡
_DIRENT_HAVE_D_NAMLEN


51 
	#_DIRENT_HAVE_D_RECLEN


	)

52 
	#_DIRENT_HAVE_D_OFF


	)

53 
	#_DIRENT_HAVE_D_TYPE


	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

32 
	#ECANCELED
 125

	)

34 #i‚de‡
__ASSEMBLER__


36 

î∫o
;

39 
*
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

41 #i‡
deföed
 
_LIBC


43 
	#__£t_î∫o
(
vÆ
Ë(*
	`__î∫o_loˇti⁄
 ()Ë(vÆ)

	)

46 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


48 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

53 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


57 
	#EDOM
 33

	)

58 
	#EILSEQ
 84

	)

59 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

20 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

29 
	#O_ACCMODE
 0003

	)

30 
	#O_RDONLY
 00

	)

31 
	#O_WRONLY
 01

	)

32 
	#O_RDWR
 02

	)

33 
	#O_CREAT
 0100

	)

34 
	#O_EXCL
 0200

	)

35 
	#O_NOCTTY
 0400

	)

36 
	#O_TRUNC
 01000

	)

37 
	#O_APPEND
 02000

	)

38 
	#O_NONBLOCK
 04000

	)

39 
	#O_NDELAY
 
O_NONBLOCK


	)

40 
	#O_SYNC
 010000

	)

41 
	#O_FSYNC
 
O_SYNC


	)

42 
	#O_ASYNC
 020000

	)

44 #ifde‡
__USE_GNU


45 
	#O_DIRECT
 040000

	)

46 
	#O_DIRECTORY
 0200000

	)

47 
	#O_NOFOLLOW
 0400000

	)

53 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


54 
	#O_DSYNC
 
O_SYNC


	)

55 
	#O_RSYNC
 
O_SYNC


	)

58 #ifde‡
__USE_LARGEFILE64


59 
	#O_LARGEFILE
 0100000

	)

63 
	#F_DUPFD
 0

	)

64 
	#F_GETFD
 1

	)

65 
	#F_SETFD
 2

	)

66 
	#F_GETFL
 3

	)

67 
	#F_SETFL
 4

	)

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	#F_GETLK
 5

	)

70 
	#F_SETLK
 6

	)

71 
	#F_SETLKW
 7

	)

73 
	#F_GETLK
 
F_GETLK64


	)

74 
	#F_SETLK
 
F_SETLK64


	)

75 
	#F_SETLKW
 
F_SETLKW64


	)

77 
	#F_GETLK64
 12

	)

78 
	#F_SETLK64
 13

	)

79 
	#F_SETLKW64
 14

	)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


82 
	#F_SETOWN
 8

	)

83 
	#F_GETOWN
 9

	)

86 #ifde‡
__USE_GNU


87 
	#F_SETSIG
 10

	)

88 
	#F_GETSIG
 11

	)

91 #ifde‡
__USE_GNU


92 
	#F_SETLEASE
 1024

	)

93 
	#F_GETLEASE
 1025

	)

94 
	#F_NOTIFY
 1026

	)

98 
	#FD_CLOEXEC
 1

	)

101 
	#F_RDLCK
 0

	)

102 
	#F_WRLCK
 1

	)

103 
	#F_UNLCK
 2

	)

106 
	#F_EXLCK
 4

	)

107 
	#F_SHLCK
 8

	)

109 #ifde‡
__USE_BSD


111 
	#LOCK_SH
 1

	)

112 
	#LOCK_EX
 2

	)

113 
	#LOCK_NB
 4

	)

115 
	#LOCK_UN
 8

	)

118 #ifde‡
__USE_GNU


119 
	#LOCK_MAND
 32

	)

120 
	#LOCK_READ
 64

	)

121 
	#LOCK_WRITE
 128

	)

122 
	#LOCK_RW
 192

	)

125 #ifde‡
__USE_GNU


127 
	#DN_ACCESS
 0x00000001

	)

128 
	#DN_MODIFY
 0x00000002

	)

129 
	#DN_CREATE
 0x00000004

	)

130 
	#DN_DELETE
 0x00000008

	)

131 
	#DN_RENAME
 0x00000010

	)

132 
	#DN_ATTRIB
 0x00000020

	)

133 
	#DN_MULTISHOT
 0x80000000

	)

136 
	sÊock


138 
	ml_ty≥
;

139 
	ml_whí˚
;

140 #i‚de‡
__USE_FILE_OFFSET64


141 
__off_t
 
	ml_°¨t
;

142 
__off_t
 
	ml_Àn
;

144 
__off64_t
 
	ml_°¨t
;

145 
__off64_t
 
	ml_Àn
;

147 
__pid_t
 
	ml_pid
;

150 #ifde‡
__USE_LARGEFILE64


151 
	sÊock64


153 
	ml_ty≥
;

154 
	ml_whí˚
;

155 
__off64_t
 
	ml_°¨t
;

156 
__off64_t
 
	ml_Àn
;

157 
__pid_t
 
	ml_pid
;

163 #ifdef 
__USE_BSD


164 
	#FAPPEND
 
O_APPEND


	)

165 
	#FFSYNC
 
O_FSYNC


	)

166 
	#FASYNC
 
O_ASYNC


	)

167 
	#FNONBLOCK
 
O_NONBLOCK


	)

168 
	#FNDELAY
 
O_NDELAY


	)

172 #ifde‡
__USE_XOPEN2K


173 
	#POSIX_FADV_NORMAL
 0

	)

174 
	#POSIX_FADV_RANDOM
 1

	)

175 
	#POSIX_FADV_SEQUENTIAL
 2

	)

176 
	#POSIX_FADV_WILLNEED
 3

	)

177 
	#POSIX_FADV_DONTNEED
 4

	)

178 
	#POSIX_FADV_NOREUSE
 5

	)

	@/usr/include/bits/in.h

21 #i‚de‡
_NETINET_IN_H


28 
	#IP_TOS
 1

	)

29 
	#IP_TTL
 2

	)

30 
	#IP_HDRINCL
 3

	)

31 
	#IP_OPTIONS
 4

	)

32 
	#IP_ROUTER_ALERT
 5

	)

33 
	#IP_RECVOPTS
 6

	)

34 
	#IP_RETOPTS
 7

	)

35 
	#IP_PKTINFO
 8

	)

36 
	#IP_PKTOPTIONS
 9

	)

37 
	#IP_PMTUDISC
 10

	)

38 
	#IP_MTU_DISCOVER
 10

	)

39 
	#IP_RECVERR
 11

	)

40 
	#IP_RECVTTL
 12

	)

41 
	#IP_RECVTOS
 13

	)

42 
	#IP_MULTICAST_IF
 32

	)

43 
	#IP_MULTICAST_TTL
 33

	)

44 
	#IP_MULTICAST_LOOP
 34

	)

45 
	#IP_ADD_MEMBERSHIP
 35

	)

46 
	#IP_DROP_MEMBERSHIP
 36

	)

49 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

52 
	#IP_PMTUDISC_DONT
 0

	)

53 
	#IP_PMTUDISC_WANT
 1

	)

54 
	#IP_PMTUDISC_DO
 2

	)

57 
	#SOL_IP
 0

	)

59 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

60 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

61 
	#IP_MAX_MEMBERSHIPS
 20

	)

66 
	sù_›ts


68 
ö_addr
 
	mù_d°
;

69 
	mù_›ts
[40];

73 
	sù_mªq


75 
ö_addr
 
	mimr_mu…üddr
;

76 
ö_addr
 
	mimr_öãrÁ˚
;

80 
	sù_mªqn


82 
ö_addr
 
	mimr_mu…üddr
;

83 
ö_addr
 
	mimr_addªss
;

84 
	mimr_ifödex
;

88 
	sö_pktöfo


90 
	mùi_ifödex
;

91 
ö_addr
 
	mùi_•ec_d°
;

92 
ö_addr
 
	mùi_addr
;

98 
	#IPV6_ADDRFORM
 1

	)

99 
	#IPV6_PKTINFO
 2

	)

100 
	#IPV6_HOPOPTS
 3

	)

101 
	#IPV6_DSTOPTS
 4

	)

102 
	#IPV6_RTHDR
 5

	)

103 
	#IPV6_PKTOPTIONS
 6

	)

104 
	#IPV6_CHECKSUM
 7

	)

105 
	#IPV6_HOPLIMIT
 8

	)

106 
	#IPV6_NEXTHOP
 9

	)

107 
	#IPV6_AUTHHDR
 10

	)

108 
	#IPV6_UNICAST_HOPS
 16

	)

109 
	#IPV6_MULTICAST_IF
 17

	)

110 
	#IPV6_MULTICAST_HOPS
 18

	)

111 
	#IPV6_MULTICAST_LOOP
 19

	)

112 
	#IPV6_JOIN_GROUP
 20

	)

113 
	#IPV6_LEAVE_GROUP
 21

	)

114 
	#IPV6_ROUTER_ALERT
 22

	)

115 
	#IPV6_MTU_DISCOVER
 23

	)

116 
	#IPV6_MTU
 24

	)

117 
	#IPV6_RECVERR
 25

	)

119 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

122 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

123 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

124 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

125 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

129 
	#IPV6_PMTUDISC_DONT
 0

	)

130 
	#IPV6_PMTUDISC_WANT
 1

	)

131 
	#IPV6_PMTUDISC_DO
 2

	)

134 
	#SOL_IPV6
 41

	)

135 
	#SOL_ICMPV6
 58

	)

138 
	#IPV6_RTHDR_LOOSE
 0

	)

139 
	#IPV6_RTHDR_STRICT
 1

	)

141 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFHWADDR
 0x8924

	)

52 
	#SIOCGIFENCAP
 0x8925

	)

53 
	#SIOCSIFENCAP
 0x8926

	)

54 
	#SIOCGIFHWADDR
 0x8927

	)

55 
	#SIOCGIFSLAVE
 0x8929

	)

56 
	#SIOCSIFSLAVE
 0x8930

	)

57 
	#SIOCADDMULTI
 0x8931

	)

58 
	#SIOCDELMULTI
 0x8932

	)

59 
	#SIOCGIFINDEX
 0x8933

	)

60 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

61 
	#SIOCSIFPFLAGS
 0x8934

	)

62 
	#SIOCGIFPFLAGS
 0x8935

	)

63 
	#SIOCDIFADDR
 0x8936

	)

64 
	#SIOCSIFHWBROADCAST
 0x8937

	)

65 
	#SIOCGIFCOUNT
 0x8938

	)

67 
	#SIOCGIFBR
 0x8940

	)

68 
	#SIOCSIFBR
 0x8941

	)

70 
	#SIOCGIFTXQLEN
 0x8942

	)

71 
	#SIOCSIFTXQLEN
 0x8943

	)

76 
	#SIOCDARP
 0x8953

	)

77 
	#SIOCGARP
 0x8954

	)

78 
	#SIOCSARP
 0x8955

	)

81 
	#SIOCDRARP
 0x8960

	)

82 
	#SIOCGRARP
 0x8961

	)

83 
	#SIOCSRARP
 0x8962

	)

87 
	#SIOCGIFMAP
 0x8970

	)

88 
	#SIOCSIFMAP
 0x8971

	)

92 
	#SIOCADDDLCI
 0x8980

	)

93 
	#SIOCDELDLCI
 0x8981

	)

102 
	#SIOCDEVPRIVATE
 0x89F0

	)

108 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/ipc.h

19 #i‚de‡
_SYS_IPC_H


23 
	~<bôs/ty≥s.h
>

26 
	#IPC_CREAT
 01000

	)

27 
	#IPC_EXCL
 02000

	)

28 
	#IPC_NOWAIT
 04000

	)

31 
	#IPC_RMID
 0

	)

32 
	#IPC_SET
 1

	)

33 
	#IPC_STAT
 2

	)

34 #ifde‡
__USE_GNU


35 
	#IPC_INFO
 3

	)

39 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

43 
	sùc_≥rm


45 
__key_t
 
	m__key
;

46 
__uid_t
 
	muid
;

47 
__gid_t
 
	mgid
;

48 
__uid_t
 
	mcuid
;

49 
__gid_t
 
	mcgid
;

50 
	mmode
;

51 
	m__∑d1
;

52 
	m__£q
;

53 
	m__∑d2
;

54 
	m__unu£d1
;

55 
	m__unu£d2
;

	@/usr/include/bits/msq.h

19 #i‚de‡
_SYS_MSG_H


23 
	~<bôs/ty≥s.h
>

26 
	#MSG_NOERROR
 010000

	)

27 #ifde‡
__USE_GNU


28 
	#MSG_EXCEPT
 020000

	)

32 
	tmsgqnum_t
;

33 
	tmsgÀn_t
;

38 
	smsqid_ds


40 
ùc_≥rm
 
	mmsg_≥rm
;

41 
__time_t
 
	mmsg_°ime
;

42 
	m__unu£d1
;

43 
__time_t
 
	mmsg_πime
;

44 
	m__unu£d2
;

45 
__time_t
 
	mmsg_˘ime
;

46 
	m__unu£d3
;

47 
	m__msg_cbyãs
;

48 
msgqnum_t
 
	mmsg_qnum
;

49 
msgÀn_t
 
	mmsg_qbyãs
;

50 
__pid_t
 
	mmsg_l•id
;

51 
__pid_t
 
	mmsg_Ãpid
;

52 
	m__unu£d4
;

53 
	m__unu£d5
;

56 #ifde‡
__USE_MISC


58 
	#msg_cbyãs
 
__msg_cbyãs


	)

61 
	#MSG_STAT
 11

	)

62 
	#MSG_INFO
 12

	)

65 
	smsgöfo


67 
	mmsgpoﬁ
;

68 
	mmsgm≠
;

69 
	mmsgmax
;

70 
	mmsgmnb
;

71 
	mmsgmni
;

72 
	mmsgssz
;

73 
	mmsgtql
;

74 
	mmsg£g
;

	@/usr/include/bits/netdb.h

19 #i‚de‡
_NETDB_H


27 
	s√ã¡


29 *
	mn_«me
;

30 **
	mn_Æü£s
;

31 
	mn_addπy≥
;

32 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 
	#_POSIX_CHILD_MAX
 6

	)

44 
	#_POSIX_DELAYTIMER_MAX
 32

	)

47 
	#_POSIX_LINK_MAX
 8

	)

50 
	#_POSIX_MAX_CANON
 255

	)

54 
	#_POSIX_MAX_INPUT
 255

	)

57 
	#_POSIX_MQ_OPEN_MAX
 8

	)

60 
	#_POSIX_MQ_PRIO_MAX
 32

	)

63 
	#_POSIX_NGROUPS_MAX
 0

	)

66 
	#_POSIX_OPEN_MAX
 16

	)

70 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 
	#_POSIX_PATH_MAX
 256

	)

79 
	#_POSIX_PIPE_BUF
 512

	)

82 
	#_POSIX_RTSIG_MAX
 8

	)

85 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

88 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

91 
	#_POSIX_SIGQUEUE_MAX
 32

	)

94 
	#_POSIX_SSIZE_MAX
 32767

	)

97 
	#_POSIX_STREAM_MAX
 8

	)

100 
	#_POSIX_TZNAME_MAX
 6

	)

103 
	#_POSIX_QLIMIT
 1

	)

107 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

110 
	#_POSIX_UIO_MAXIOV
 16

	)

113 
	#_POSIX_TTY_NAME_MAX
 9

	)

116 
	#_POSIX_TIMER_MAX
 32

	)

119 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

122 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

126 
	~<bôs/loˇl_lim.h
>

129 #i‚def 
SSIZE_MAX


130 
	#SSIZE_MAX
 
INT_MAX


	)

137 #i‚def 
NGROUPS_MAX


138 
	#NGROUPS_MAX
 
_POSIX_NGROUPS_MAX


	)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

26 
	#__FD_ZERO
(
fd•
) \

28 
__d0
, 
__d1
; \

29 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

30 : "=c" (
__d0
), "=D" (
__d1
) \

31 : "a" (0), "0" ( (
fd_£t
) \

32 /  (
__fd_mask
)), \

33 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

35 } 0)

	)

37 
	#__FD_SET
(
fd
, 
fd•
) \

38 
__asm__
 
	`__vﬁ©ûe__
 ("btsl %1,%0" \

39 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

40 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

41 : "cc","mem‹y")

	)

42 
	#__FD_CLR
(
fd
, 
fd•
) \

43 
__asm__
 
	`__vﬁ©ûe__
 ("btrl %1,%0" \

44 : "=m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

45 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
) \

46 : "cc","mem‹y")

	)

47 
	#__FD_ISSET
(
fd
, 
fd•
) \

48 (
__exãnsi⁄__
 \

49 ({
__ªsu…
; \

50 
__asm__
 
	`__vﬁ©ûe__
 ("btl %1,%2 ; setcb %b0" \

51 : "=q" (
__ªsu…
) \

52 : "r" (((Ë(
fd
)Ë% 
__NFDBITS
), \

53 "m" (
	`__FDS_BITS
 (
fd•
)[
	`__FDELT
 (
fd
)]) \

55 
__ªsu…
; }))

	)

61 
	#__FD_ZERO
(
£t
) \

63 
__i
; \

64 
fd_£t
 *
__¨r
 = (
£t
); \

65 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

66 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

67 } 0)

	)

68 
	#__FD_SET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] |
	`__FDMASK
 (d))

	)

69 
	#__FD_CLR
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] &~
	`__FDMASK
 (d))

	)

70 
	#__FD_ISSET
(
d
, 
£t
Ë(
	`__FDS_BITS
 (£t)[
	`__FDELT
 (d)] & 
	`__FDMASK
 (d))

	)

	@/usr/include/bits/sem.h

19 #i‚de‡
_SYS_SEM_H


23 
	~<sys/ty≥s.h
>

26 
	#SEM_UNDO
 0x1000

	)

29 
	#GETPID
 11

	)

30 
	#GETVAL
 12

	)

31 
	#GETALL
 13

	)

32 
	#GETNCNT
 14

	)

33 
	#GETZCNT
 15

	)

34 
	#SETVAL
 16

	)

35 
	#SETALL
 17

	)

39 
	s£mid_ds


41 
ùc_≥rm
 
	m£m_≥rm
;

42 
__time_t
 
	m£m_Ÿime
;

43 
	m__unu£d1
;

44 
__time_t
 
	m£m_˘ime
;

45 
	m__unu£d2
;

46 
	m£m_n£ms
;

47 
	m__unu£d3
;

48 
	m__unu£d4
;

65 
	#_SEM_SEMUN_UNDEFINED
 1

	)

67 #ifde‡
__USE_MISC


70 
	#SEM_STAT
 18

	)

71 
	#SEM_INFO
 19

	)

73 
	s£möfo


75 
	m£mm≠
;

76 
	m£mmni
;

77 
	m£mmns
;

78 
	m£mmnu
;

79 
	m£mm¶
;

80 
	m£m›m
;

81 
	m£mume
;

82 
	m£musz
;

83 
	m£mvmx
;

84 
	m£m´m
;

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_SETJMP_H


25 #i‡
deföed
 
__USE_MISC
 || deföed 
_ASM


26 
	#JB_BX
 0

	)

27 
	#JB_SI
 1

	)

28 
	#JB_DI
 2

	)

29 
	#JB_BP
 3

	)

30 
	#JB_SP
 4

	)

31 
	#JB_PC
 5

	)

32 
	#JB_SIZE
 24

	)

35 #i‚def 
_ASM


36 
	t__jmp_buf
[6];

41 
	#_JMPBUF_UNWINDS
(
jmpbuf
, 
addªss
) \

42 ((*Ë(
addªss
Ë< (*Ë(
jmpbuf
)[
JB_SP
])

	)

	@/usr/include/bits/shm.h

19 #i‚de‡
_SYS_SHM_H


23 
	~<bôs/ty≥s.h
>

26 
	#SHM_R
 0400

	)

27 
	#SHM_W
 0200

	)

30 
	#SHM_RDONLY
 010000

	)

31 
	#SHM_RND
 020000

	)

32 
	#SHM_REMAP
 040000

	)

35 
	#SHM_LOCK
 11

	)

36 
	#SHM_UNLOCK
 12

	)

40 
	tshm©t_t
;

43 
	sshmid_ds


45 
ùc_≥rm
 
	mshm_≥rm
;

46 
size_t
 
	mshm_£gsz
;

47 
__time_t
 
	mshm_©ime
;

48 
	m__unu£d1
;

49 
__time_t
 
	mshm_dtime
;

50 
	m__unu£d2
;

51 
__time_t
 
	mshm_˘ime
;

52 
	m__unu£d3
;

53 
__pid_t
 
	mshm_˝id
;

54 
__pid_t
 
	mshm_Õid
;

55 
shm©t_t
 
	mshm_«âch
;

56 
	m__unu£d4
;

57 
	m__unu£d5
;

60 #ifde‡
__USE_MISC


63 
	#SHM_STAT
 13

	)

64 
	#SHM_INFO
 14

	)

67 
	#SHM_DEST
 01000

	)

68 
	#SHM_LOCKED
 02000

	)

70 
	sshmöfo


72 
	mshmmax
;

73 
	mshmmö
;

74 
	mshmmni
;

75 
	mshm£g
;

76 
	mshmÆl
;

77 
	m__unu£d1
;

78 
	m__unu£d2
;

79 
	m__unu£d3
;

80 
	m__unu£d4
;

83 
	sshm_öfo


85 
	mu£d_ids
;

86 
	mshm_tŸ
;

87 
	mshm_rss
;

88 
	mshm_swp
;

89 
	msw≠_©ãm±s
;

90 
	msw≠_suc˚s£s
;

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

60 
	#SA_RESTART
 0x10000000

	)

61 
	#SA_NODEFER
 0x40000000

	)

63 
	#SA_RESETHAND
 0x80000000

	)

65 #ifde‡
__USE_MISC


66 
	#SA_INTERRUPT
 0x20000000

	)

69 
	#SA_NOMASK
 
SA_NODEFER


	)

70 
	#SA_ONESHOT
 
SA_RESETHAND


	)

71 
	#SA_STACK
 
SA_ONSTACK


	)

75 
	#SIG_BLOCK
 0

	)

76 
	#SIG_UNBLOCK
 1

	)

77 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	m_timî1
;

73 
	m_timî2
;

74 } 
	m_timî
;

79 
__pid_t
 
	msi_pid
;

80 
__uid_t
 
	msi_uid
;

81 
sigvÆ_t
 
	msi_sigvÆ
;

82 } 
	m_π
;

87 
__pid_t
 
	msi_pid
;

88 
__uid_t
 
	msi_uid
;

89 
	msi_°©us
;

90 
__˛ock_t
 
	msi_utime
;

91 
__˛ock_t
 
	msi_°ime
;

92 } 
	m_sigchld
;

97 *
	msi_addr
;

98 } 
	m_sigÁu…
;

103 
	msi_b™d
;

104 
	msi_fd
;

105 } 
	m_sigpﬁl
;

106 } 
	m_sifõlds
;

107 } 
	tsigöfo_t
;

111 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

112 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

113 
	#si_timî1
 
_sifõlds
.
_timî
.
_timî1


	)

114 
	#si_timî2
 
_sifõlds
.
_timî
.
_timî2


	)

115 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

116 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

117 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

118 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

119 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

120 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

121 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

122 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

123 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

130 
	mSI_ASYNCNL
 = -6,

131 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

132 
	mSI_SIGIO
,

133 
	#SI_SIGIO
 
SI_SIGIO


	)

134 
	mSI_ASYNCIO
,

135 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

136 
	mSI_MESGQ
,

137 
	#SI_MESGQ
 
SI_MESGQ


	)

138 
	mSI_TIMER
,

139 
	#SI_TIMER
 
SI_TIMER


	)

140 
	mSI_QUEUE
,

141 
	#SI_QUEUE
 
SI_QUEUE


	)

142 
	mSI_USER
,

143 
	#SI_USER
 
SI_USER


	)

144 
	mSI_KERNEL
 = 0x80

145 
	#SI_KERNEL
 
SI_KERNEL


	)

152 
	mILL_ILLOPC
 = 1,

153 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

154 
	mILL_ILLOPN
,

155 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

156 
	mILL_ILLADR
,

157 
	#ILL_ILLADR
 
ILL_ILLADR


	)

158 
	mILL_ILLTRP
,

159 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

160 
	mILL_PRVOPC
,

161 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

162 
	mILL_PRVREG
,

163 
	#ILL_PRVREG
 
ILL_PRVREG


	)

164 
	mILL_COPROC
,

165 
	#ILL_COPROC
 
ILL_COPROC


	)

166 
	mILL_BADSTK


167 
	#ILL_BADSTK
 
ILL_BADSTK


	)

173 
	mFPE_INTDIV
 = 1,

174 
	#FPE_INTDIV
 
FPE_INTDIV


	)

175 
	mFPE_INTOVF
,

176 
	#FPE_INTOVF
 
FPE_INTOVF


	)

177 
	mFPE_FLTDIV
,

178 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

179 
	mFPE_FLTOVF
,

180 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

181 
	mFPE_FLTUND
,

182 
	#FPE_FLTUND
 
FPE_FLTUND


	)

183 
	mFPE_FLTRES
,

184 
	#FPE_FLTRES
 
FPE_FLTRES


	)

185 
	mFPE_FLTINV
,

186 
	#FPE_FLTINV
 
FPE_FLTINV


	)

187 
	mFPE_FLTSUB


188 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

194 
	mSEGV_MAPERR
 = 1,

195 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

196 
	mSEGV_ACCERR


197 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

203 
	mBUS_ADRALN
 = 1,

204 
	#BUS_ADRALN
 
BUS_ADRALN


	)

205 
	mBUS_ADRERR
,

206 
	#BUS_ADRERR
 
BUS_ADRERR


	)

207 
	mBUS_OBJERR


208 
	#BUS_OBJERR
 
BUS_OBJERR


	)

214 
	mTRAP_BRKPT
 = 1,

215 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

216 
	mTRAP_TRACE


217 
	#TRAP_TRACE
 
TRAP_TRACE


	)

223 
	mCLD_EXITED
 = 1,

224 
	#CLD_EXITED
 
CLD_EXITED


	)

225 
	mCLD_KILLED
,

226 
	#CLD_KILLED
 
CLD_KILLED


	)

227 
	mCLD_DUMPED
,

228 
	#CLD_DUMPED
 
CLD_DUMPED


	)

229 
	mCLD_TRAPPED
,

230 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

231 
	mCLD_STOPPED
,

232 
	#CLD_STOPPED
 
CLD_STOPPED


	)

233 
	mCLD_CONTINUED


234 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

240 
	mPOLL_IN
 = 1,

241 
	#POLL_IN
 
POLL_IN


	)

242 
	mPOLL_OUT
,

243 
	#POLL_OUT
 
POLL_OUT


	)

244 
	mPOLL_MSG
,

245 
	#POLL_MSG
 
POLL_MSG


	)

246 
	mPOLL_ERR
,

247 
	#POLL_ERR
 
POLL_ERR


	)

248 
	mPOLL_PRI
,

249 
	#POLL_PRI
 
POLL_PRI


	)

250 
	mPOLL_HUP


251 
	#POLL_HUP
 
POLL_HUP


	)

254 #unde‡
__√ed_sigöfo_t


258 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

259 && !
deföed
 
	g__have_sigevít_t


260 
	#__have_sigevít_t
 1

	)

263 
	#__SIGEV_MAX_SIZE
 64

	)

264 #i‡
__WORDSIZE
 == 64

265 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

267 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

271 
	g__±hªad_©å_s
;

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

286 
__±hªad_©å_s
 *
	m_©åibuã
;

287 } 
	m_sigev_thªad
;

288 } 
	m_sigev_un
;

289 } 
	tsigevít_t
;

292 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

293 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

298 
	mSIGEV_SIGNAL
 = 0,

299 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

300 
	mSIGEV_NONE
,

301 
	#SIGEV_NONE
 
SIGEV_NONE


	)

302 
	mSIGEV_THREAD


303 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 64

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

20 #i‚def 
_SIGSET_H_ty≥s


21 
	#_SIGSET_H_ty≥s
 1

	)

23 
	t__sig_©omic_t
;

27 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

30 
	m__vÆ
[
_SIGSET_NWORDS
];

31 } 
	t__sig£t_t
;

42 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


43 
	#_SIGSET_H_‚s
 1

	)

45 #i‚de‡
_EXTERN_INLINE


46 
	#_EXTERN_INLINE
 
__ölöe


	)

50 
	#__sigmask
(
sig
) \

51 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

54 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

56 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

57 
	#__sigem±y£t
(
£t
) \

58 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

59 
sig£t_t
 *
__£t
 = (
£t
); \

60 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

61 0; }))

	)

62 
	#__sigfûl£t
(
£t
) \

63 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

64 
sig£t_t
 *
__£t
 = (
£t
); \

65 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

66 0; }))

	)

68 #ifde‡
__USE_GNU


72 
	#__sigi£m±y£t
(
£t
) \

73 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

74 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

75 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

76 !
__ªt
 && --
__˙t
 >= 0) \

77 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

78 
__ªt
 =0; }))

	)

79 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

80 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

81 
sig£t_t
 *
__de°
 = (
de°
); \

82 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

83 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

84 --
__˙t
 >= 0) \

85 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

86 & 
__right
->
__vÆ
[
__˙t
]); \

87 0; }))

	)

88 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

89 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

90 
sig£t_t
 *
__de°
 = (
de°
); \

91 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

92 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

93 --
__˙t
 >= 0) \

94 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

95 | 
__right
->
__vÆ
[
__˙t
]); \

96 0; }))

	)

103 

__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

104 

__sigadd£t
 (
__sig£t_t
 *, );

105 

__sigdñ£t
 (
__sig£t_t
 *, );

107 #ifde‡
__USE_EXTERN_INLINES


108 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

109 
_EXTERN_INLINE
 \

110 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

112 
__mask
 = 
	`__sigmask
 (
__sig
); \

113 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

114  
BODY
; \

115 }

	)

117 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

118 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

119 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

121 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 

	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 

	$±hªad_kûl
 (
±hªad_t
 
__thªad
, 
__signo
Ë
__THROW
;

	@/usr/include/bits/socket.h

20 #i‚de‡
__BITS_SOCKET_H


21 
	#__BITS_SOCKET_H


	)

23 #i‡!
deföed
 
_SYS_SOCKET_H
 && !deföed 
_NETINET_IN_H


27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<limôs.h
>

32 
	~<sys/ty≥s.h
>

35 #i‚de‡
__sockÀn_t_deföed


36 
__sockÀn_t
 
	tsockÀn_t
;

37 
	#__sockÀn_t_deföed


	)

41 
	e__sockë_ty≥


43 
	mSOCK_STREAM
 = 1,

45 
	#SOCK_STREAM
 
SOCK_STREAM


	)

46 
	mSOCK_DGRAM
 = 2,

48 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

49 
	mSOCK_RAW
 = 3,

50 
	#SOCK_RAW
 
SOCK_RAW


	)

51 
	mSOCK_RDM
 = 4,

52 
	#SOCK_RDM
 
SOCK_RDM


	)

53 
	mSOCK_SEQPACKET
 = 5,

55 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

56 
	mSOCK_PACKET
 = 10

59 
	#SOCK_PACKET
 
SOCK_PACKET


	)

63 
	#PF_UNSPEC
 0

	)

64 
	#PF_LOCAL
 1

	)

65 
	#PF_UNIX
 
PF_LOCAL


	)

66 
	#PF_FILE
 
PF_LOCAL


	)

67 
	#PF_INET
 2

	)

68 
	#PF_AX25
 3

	)

69 
	#PF_IPX
 4

	)

70 
	#PF_APPLETALK
 5

	)

71 
	#PF_NETROM
 6

	)

72 
	#PF_BRIDGE
 7

	)

73 
	#PF_ATMPVC
 8

	)

74 
	#PF_X25
 9

	)

75 
	#PF_INET6
 10

	)

76 
	#PF_ROSE
 11

	)

77 
	#PF_DEC√t
 12

	)

78 
	#PF_NETBEUI
 13

	)

79 
	#PF_SECURITY
 14

	)

80 
	#PF_KEY
 15

	)

81 
	#PF_NETLINK
 16

	)

82 
	#PF_ROUTE
 
PF_NETLINK


	)

83 
	#PF_PACKET
 17

	)

84 
	#PF_ASH
 18

	)

85 
	#PF_ECONET
 19

	)

86 
	#PF_ATMSVC
 20

	)

87 
	#PF_SNA
 22

	)

88 
	#PF_IRDA
 23

	)

89 
	#PF_PPPOX
 24

	)

90 
	#PF_WANPIPE
 25

	)

91 
	#PF_BLUETOOTH
 31

	)

92 
	#PF_MAX
 32

	)

95 
	#AF_UNSPEC
 
PF_UNSPEC


	)

96 
	#AF_LOCAL
 
PF_LOCAL


	)

97 
	#AF_UNIX
 
PF_UNIX


	)

98 
	#AF_FILE
 
PF_FILE


	)

99 
	#AF_INET
 
PF_INET


	)

100 
	#AF_AX25
 
PF_AX25


	)

101 
	#AF_IPX
 
PF_IPX


	)

102 
	#AF_APPLETALK
 
PF_APPLETALK


	)

103 
	#AF_NETROM
 
PF_NETROM


	)

104 
	#AF_BRIDGE
 
PF_BRIDGE


	)

105 
	#AF_ATMPVC
 
PF_ATMPVC


	)

106 
	#AF_X25
 
PF_X25


	)

107 
	#AF_INET6
 
PF_INET6


	)

108 
	#AF_ROSE
 
PF_ROSE


	)

109 
	#AF_DEC√t
 
PF_DEC√t


	)

110 
	#AF_NETBEUI
 
PF_NETBEUI


	)

111 
	#AF_SECURITY
 
PF_SECURITY


	)

112 
	#AF_KEY
 
PF_KEY


	)

113 
	#AF_NETLINK
 
PF_NETLINK


	)

114 
	#AF_ROUTE
 
PF_ROUTE


	)

115 
	#AF_PACKET
 
PF_PACKET


	)

116 
	#AF_ASH
 
PF_ASH


	)

117 
	#AF_ECONET
 
PF_ECONET


	)

118 
	#AF_ATMSVC
 
PF_ATMSVC


	)

119 
	#AF_SNA
 
PF_SNA


	)

120 
	#AF_IRDA
 
PF_IRDA


	)

121 
	#AF_PPPOX
 
PF_PPPOX


	)

122 
	#AF_WANPIPE
 
PF_WANPIPE


	)

123 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

124 
	#AF_MAX
 
PF_MAX


	)

130 
	#SOL_RAW
 255

	)

131 
	#SOL_DECNET
 261

	)

132 
	#SOL_X25
 262

	)

133 
	#SOL_PACKET
 263

	)

134 
	#SOL_ATM
 264

	)

135 
	#SOL_AAL
 265

	)

136 
	#SOL_IRDA
 266

	)

139 
	#SOMAXCONN
 128

	)

142 
	~<bôs/sockaddr.h
>

145 
	ssockaddr


147 
__SOCKADDR_COMMON
 (
ß_
);

148 
	mß_d©a
[14];

154 #i‡
ULONG_MAX
 > 0xffffffff

155 
	#__ss_Æig¡y≥
 
__uöt64_t


	)

157 
	#__ss_Æig¡y≥
 
__uöt32_t


	)

159 
	#_SS_SIZE
 128

	)

160 
	#_SS_PADSIZE
 (
_SS_SIZE
 - (2 *  (
__ss_Æig¡y≥
)))

	)

162 
	ssockaddr_°‹age


164 
__SOCKADDR_COMMON
 (
ss_
);

165 
__ss_Æig¡y≥
 
	m__ss_Æign
;

166 
	m__ss_∑ddög
[
_SS_PADSIZE
];

173 
	mMSG_OOB
 = 0x01,

174 
	#MSG_OOB
 
MSG_OOB


	)

175 
	mMSG_PEEK
 = 0x02,

176 
	#MSG_PEEK
 
MSG_PEEK


	)

177 
	mMSG_DONTROUTE
 = 0x04,

178 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

179 #ifde‡
__USE_GNU


181 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

182 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

184 
	mMSG_CTRUNC
 = 0x08,

185 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

186 
	mMSG_PROXY
 = 0x10,

187 
	#MSG_PROXY
 
MSG_PROXY


	)

188 
	mMSG_TRUNC
 = 0x20,

189 
	#MSG_TRUNC
 
MSG_TRUNC


	)

190 
	mMSG_DONTWAIT
 = 0x40,

191 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

192 
	mMSG_EOR
 = 0x80,

193 
	#MSG_EOR
 
MSG_EOR


	)

194 
	mMSG_WAITALL
 = 0x100,

195 
	#MSG_WAITALL
 
MSG_WAITALL


	)

196 
	mMSG_FIN
 = 0x200,

197 
	#MSG_FIN
 
MSG_FIN


	)

198 
	mMSG_SYN
 = 0x400,

199 
	#MSG_SYN
 
MSG_SYN


	)

200 
	mMSG_CONFIRM
 = 0x800,

201 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

202 
	mMSG_RST
 = 0x1000,

203 
	#MSG_RST
 
MSG_RST


	)

204 
	mMSG_ERRQUEUE
 = 0x2000,

205 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

206 
	mMSG_NOSIGNAL
 = 0x4000,

207 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

208 
	mMSG_MORE
 = 0x8000

209 
	#MSG_MORE
 
MSG_MORE


	)

215 
	smsghdr


217 *
	mmsg_«me
;

218 
sockÀn_t
 
	mmsg_«mñí
;

220 
iovec
 *
	mmsg_iov
;

221 
	mmsg_iovÀn
;

223 *
	mmsg_c⁄åﬁ
;

224 
sockÀn_t
 
	mmsg_c⁄åﬁÀn
;

226 
	mmsg_Êags
;

230 
	scmsghdr


232 
size_t
 
	mcmsg_Àn
;

234 
	mcmsg_Àvñ
;

235 
	mcmsg_ty≥
;

236 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

237 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

242 #i‡(!
deföed
 
__STRICT_ANSI__
 && 
__GNUC__
 >2Ë|| 
__STDC_VERSION__
 >= 199901L

243 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

245 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

247 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

248 
	#CMSG_FIRSTHDR
(
mhdr
) \

249 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

250 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë
NULL
)

	)

251 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

252 & (
size_t
Ë~( (size_tË- 1))

	)

253 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

254 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

255 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

257 

cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

258 
cmsghdr
 *
__cmsg
Ë
__THROW
;

259 #ifde‡
__USE_EXTERN_INLINES


260 #i‚de‡
_EXTERN_INLINE


261 
	#_EXTERN_INLINE
 
__ölöe


	)

263 
_EXTERN_INLINE
 
cmsghdr
 *

264 
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
Ë
__THROW


266 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

270 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

271 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

272 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


273 + 
__mhdr
->
msg_c⁄åﬁÀn
)

274 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

275 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

278  
__cmsg
;

279 
	}
}

286 
SCM_RIGHTS
 = 0x01,

287 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

288 #ifde‡
__USE_BSD


289 
SCM_CREDENTIALS
 = 0x02,

290 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

292 
__SCM_CONNECT
 = 0x03

297 
	su¸ed


299 
pid_t
 
	mpid
;

300 
uid_t
 
	muid
;

301 
gid_t
 
	mgid
;

305 
	~<asm/sockë.h
>

309 
	slögî


311 
	ml_⁄off
;

312 
	ml_lögî
;

	@/usr/include/bits/stat.h

19 #i‚de‡
_SYS_STAT_H


24 
	#_STAT_VER_LINUX_OLD
 1

	)

25 
	#_STAT_VER_KERNEL
 1

	)

26 
	#_STAT_VER_SVR4
 2

	)

27 
	#_STAT_VER_LINUX
 3

	)

28 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

31 
	#_MKNOD_VER_LINUX
 1

	)

32 
	#_MKNOD_VER_SVR4
 2

	)

33 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

36 
	s°©


38 
__dev_t
 
	m°_dev
;

39 
	m__∑d1
;

40 #i‚de‡
__USE_FILE_OFFSET64


41 
__öo_t
 
	m°_öo
;

43 
__öo_t
 
	m__°_öo
;

45 
__mode_t
 
	m°_mode
;

46 
__∆ök_t
 
	m°_∆ök
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 
__dev_t
 
	m°_rdev
;

50 
	m__∑d2
;

51 #i‚de‡
__USE_FILE_OFFSET64


52 
__off_t
 
	m°_size
;

54 
__off64_t
 
	m°_size
;

56 
__blksize_t
 
	m°_blksize
;

58 #i‚de‡
__USE_FILE_OFFSET64


59 
__blk˙t_t
 
	m°_blocks
;

61 
__blk˙t64_t
 
	m°_blocks
;

63 
__time_t
 
	m°_©ime
;

64 
	m__unu£d1
;

65 
__time_t
 
	m°_mtime
;

66 
	m__unu£d2
;

67 
__time_t
 
	m°_˘ime
;

68 
	m__unu£d3
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	m__unu£d4
;

71 
	m__unu£d5
;

73 
__öo64_t
 
	m°_öo
;

77 #ifde‡
__USE_LARGEFILE64


78 
	s°©64


80 
__dev_t
 
	m°_dev
;

81 
	m__∑d1
;

83 
__öo_t
 
	m__°_öo
;

84 
__mode_t
 
	m°_mode
;

85 
__∆ök_t
 
	m°_∆ök
;

86 
__uid_t
 
	m°_uid
;

87 
__gid_t
 
	m°_gid
;

88 
__dev_t
 
	m°_rdev
;

89 
	m__∑d2
;

90 
__off64_t
 
	m°_size
;

91 
__blksize_t
 
	m°_blksize
;

93 
__blk˙t64_t
 
	m°_blocks
;

94 
__time_t
 
	m°_©ime
;

95 
	m__unu£d1
;

96 
__time_t
 
	m°_mtime
;

97 
	m__unu£d2
;

98 
__time_t
 
	m°_˘ime
;

99 
	m__unu£d3
;

100 
__öo64_t
 
	m°_öo
;

105 
	#_STATBUF_ST_BLKSIZE


	)

106 
	#_STATBUF_ST_RDEV


	)

110 
	#__S_IFMT
 0170000

	)

113 
	#__S_IFDIR
 0040000

	)

114 
	#__S_IFCHR
 0020000

	)

115 
	#__S_IFBLK
 0060000

	)

116 
	#__S_IFREG
 0100000

	)

117 
	#__S_IFIFO
 0010000

	)

118 
	#__S_IFLNK
 0120000

	)

119 
	#__S_IFSOCK
 0140000

	)

123 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

124 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

125 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

129 
	#__S_ISUID
 04000

	)

130 
	#__S_ISGID
 02000

	)

131 
	#__S_ISVTX
 01000

	)

132 
	#__S_IREAD
 0400

	)

133 
	#__S_IWRITE
 0200

	)

134 
	#__S_IEXEC
 0100

	)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #ifde‡
__˝lu•lus


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


33 
__STDIO_INLINE
 

34 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
Ë
__THROW


36  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

37 
	}
}

40 
__STDIO_INLINE
 

41 
	$gëch¨
 (Ë
__THROW


43  
	`_IO_gëc
 (
°dö
);

44 
	}
}

47 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


49 
__STDIO_INLINE
 

50 
	$gëc_u∆ocked
 (
FILE
 *
__Â
Ë
__THROW


52  
	`_IO_gëc_u∆ocked
 (
__Â
);

53 
	}
}

56 
__STDIO_INLINE
 

57 
	$gëch¨_u∆ocked
 (Ë
__THROW


59  
	`_IO_gëc_u∆ocked
 (
°dö
);

60 
	}
}

65 
__STDIO_INLINE
 

66 
	$putch¨
 (
__c
Ë
__THROW


68  
	`_IO_putc
 (
__c
, 
°dout
);

69 
	}
}

72 #ifde‡
__USE_MISC


74 
__STDIO_INLINE
 

75 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW


77  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

78 
	}
}

82 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


84 
__STDIO_INLINE
 

85 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
__THROW


87  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

88 
	}
}

91 
__STDIO_INLINE
 

92 
	$putch¨_u∆ocked
 (
__c
Ë
__THROW


94  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

95 
	}
}

99 #ifdef 
__USE_GNU


101 
__STDIO_INLINE
 
_IO_ssize_t


102 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
Ë
__THROW


104  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

105 
	}
}

109 #ifde‡
__USE_MISC


111 
__STDIO_INLINE
 

112 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW


114  
	`_IO_„of_u∆ocked
 (
__°ªam
);

115 
	}
}

118 
__STDIO_INLINE
 

119 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW


121  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

122 
	}
}

128 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__


130 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

131 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

132 && (
size_t
Ë((
size
Ë* (
n
)) <= 8 && (size) != 0) \

133 ? ({ *
__±r
 = (*Ë(
±r
); \

134 
FILE
 *
__°ªam
 = (
°ªam
); \

135 
size_t
 
__˙t
; \

136 
__˙t
 = (
size
Ë* (
n
); __cnt > 0; --__cnt) \

138 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

139 i‡(
__c
 =
EOF
) \

141 *
__±r
++ = 
__c
; \

143 ((
size_t
Ë((
size
Ë* (
n
)Ë- 
__˙t
) / (size); }) \

144 : (((
	`__buûtö_c⁄°™t_p
 (
size
) && (size) == 0) \

145 || (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) == 0)) \

147 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

148 (Ë(
n
), 0) \

149 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

151 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

152 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

153 && (
size_t
Ë((
size
Ë* (
n
)) <= 8 && (size) != 0) \

154 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

155 
FILE
 *
__°ªam
 = (
°ªam
); \

156 
size_t
 
__˙t
; \

157 
__˙t
 = (
size
Ë* (
n
); __cnt > 0; --__cnt) \

158 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

160 ((
size_t
Ë((
size
Ë* (
n
)Ë- 
__˙t
) / (size); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
) && (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), 
n
) \

165 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 
	#L_cu£rid
 9

	)

34 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


35 #unde‡
FOPEN_MAX


36 
	#FOPEN_MAX
 16

	)

39 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


40 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


25 
	#_STRING_ARCH_u«lig√d
 1

	)

30 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

31 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


33 #i‚de‡
__STRING_INLINE


34 #ifde‡
__˝lu•lus


35 
	#__STRING_INLINE
 
ölöe


	)

37 
	#__STRING_INLINE
 
__ölöe


	)

43 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

44 
	#mem˝y
(
de°
, 
§c
, 
n
) \

45 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

46 ? 
	`__mem˝y_c
 (
de°
, 
§c
, 
n
) \

47 : 
	`mem˝y
 (
de°
, 
§c
, 
n
)))

	)

50 
__STRING_INLINE
 *
__mem˝y_c
 (*
__de°
, 
__c⁄°
 *
__§c
,

51 
size_t
 
__n
);

53 
__STRING_INLINE
 *

54 
	$__mem˝y_c
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

56 
__d0
, 
__d1
, 
__d2
;

58 
__ui
;

59 
__usi
;

60 
__uc
;

61 } *
__u
 = 
__de°
;

62 
__n
)

65  
__de°
;

67 
__u
->
__uc
 = *(c⁄° *Ë
__§c
;

68  
__de°
;

70 
__u
->
__usi
 = *(c⁄° *Ë
__§c
;

71  
__de°
;

73 
__u
->
__usi
 = *(c⁄° *Ë
__§c
;

74 
__u
 = (*) __u + 2;

75 
__u
->
__uc
 = *(2 + (c⁄° *Ë
__§c
);

76  
__de°
;

78 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

79  
__de°
;

81 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

82 
__u
 = (*) __u + 4;

83 
__u
->
__usi
 = *(2 + (c⁄° *Ë
__§c
);

84  
__de°
;

86 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

87 
__u
 = (*) __u + 4;

88 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

89  
__de°
;

91 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

92 
__u
 = (*) __u + 4;

93 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

94 
__u
 = (*) __u + 4;

95 
__u
->
__ui
 = *(2 + (c⁄° *Ë
__§c
);

96  
__de°
;

98 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

99 
__u
 = (*) __u + 4;

100 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

101 
__u
 = (*) __u + 4;

102 
__u
->
__ui
 = *(2 + (c⁄° *Ë
__§c
);

103 
__u
 = (*) __u + 4;

104 
__u
->
__ui
 = *(3 + (c⁄° *Ë
__§c
);

105  
__de°
;

107 
__u
->
__ui
 = *(c⁄° *Ë
__§c
;

108 
__u
 = (*) __u + 4;

109 
__u
->
__ui
 = *(1 + (c⁄° *Ë
__§c
);

110 
__u
 = (*) __u + 4;

111 
__u
->
__ui
 = *(2 + (c⁄° *Ë
__§c
);

112 
__u
 = (*) __u + 4;

113 
__u
->
__ui
 = *(3 + (c⁄° *Ë
__§c
);

114 
__u
 = (*) __u + 4;

115 
__u
->
__ui
 = *(4 + (c⁄° *Ë
__§c
);

116  
__de°
;

118 
	#__COMMON_CODE
(
x
) \

119 
__asm__
 
__vﬁ©ûe__
 \

122 
x
 \

123 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
) \

124 : "0" (
__n
 / 4), "1" (&
__u
->
__uc
), "2" (
__§c
) \

125 : "mem‹y");

	)

127 
__n
 % 4)

130 
	`__COMMON_CODE
 ("");

133 
	`__COMMON_CODE
 ("\n\tmovsb");

136 
	`__COMMON_CODE
 ("\n\tmovsw");

139 
	`__COMMON_CODE
 ("\n\tmovsw\n\tmovsb");

142  
__de°
;

143 #unde‡
__COMMON_CODE


144 
	}
}

149 
	#_HAVE_STRING_ARCH_memmove
 1

	)

150 #i‚de‡
_FORCE_INLINES


151 
__STRING_INLINE
 *

152 
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

154 
__d0
, 
__d1
, 
__d2
;

155 i‡(
__de°
 < 
__§c
)

156 
__asm__
 
__vﬁ©ûe__


160 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

161 : "0" (
__n
), "1" (
__§c
), "2" (
__de°
)

164 
__asm__
 
__vﬁ©ûe__


169 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

170 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

171 "2" (
__n
 - 1 + (*Ë
__de°
)

173  
__de°
;

174 
	}
}

178 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

179 
	#_USE_STRING_ARCH_mem£t
 1

	)

180 
	#mem£t
(
s
, 
c
, 
n
) \

181 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

182 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

183 ? 
	`__mem£t_cc
 (
s
, 0x01010101UL * (Ë(
c
), 
n
) \

184 : 
	`__mem£t_cg
 (
s
, 0x01010101UL * (Ë(
c
), 
n
))\

185 : 
	`__mem£t_gg
 (
s
, 
c
, 
n
)))

	)

187 
__STRING_INLINE
 *
__mem£t_cc
 (*
__s
, 
__∑âîn
,

188 
size_t
 
__n
);

190 
__STRING_INLINE
 *

191 
	$__mem£t_cc
 (*
__s
, 
__∑âîn
, 
size_t
 
__n
)

193 
__d0
, 
__d1
;

195 
__ui
;

196 
__usi
;

197 
__uc
;

198 } *
__u
 = 
__s
;

199 
__n
)

202  
__s
;

204 
__u
->
__uc
 = 
__∑âîn
;

205  
__s
;

207 
__u
->
__usi
 = 
__∑âîn
;

208  
__s
;

210 
__u
->
__usi
 = 
__∑âîn
;

211 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

212 
__u
->
__uc
 = 
__∑âîn
;

213  
__s
;

215 
__u
->
__ui
 = 
__∑âîn
;

216  
__s
;

218 
	#__COMMON_CODE
(
x
) \

219 
__asm__
 
__vﬁ©ûe__
 \

222 
x
 \

223 : "=&c" (
__d0
), "=&D" (
__d1
) \

224 : "a" (
__∑âîn
), "0" (
__n
 / 4), "1" (&
__u
->
__uc
) \

225 : "mem‹y")

	)

227 
__n
 % 4)

230 
	`__COMMON_CODE
 ("");

233 
	`__COMMON_CODE
 ("\n\tstosb");

236 
	`__COMMON_CODE
 ("\n\tstosw");

239 
	`__COMMON_CODE
 ("\n\tstosw\n\tstosb");

242  
__s
;

243 #unde‡
__COMMON_CODE


244 
	}
}

246 
__STRING_INLINE
 *
__mem£t_cg
 (*
__s
, 
__c
, 
size_t
 
__n
);

248 
__STRING_INLINE
 *

249 
	$__mem£t_cg
 (*
__s
, 
__c
, 
size_t
 
__n
)

251 
__d0
, 
__d1
;

252 
__asm__
 
__vﬁ©ûe__


263 : "=&c" (
__d0
), "=&D" (
__d1
)

264 : "a" (
__c
), "q" (
__n
), "0" (__¿/ 4), "1" (
__s
)

266  
__s
;

267 
	}
}

269 
__STRING_INLINE
 *
__mem£t_gg
 (*
__s
, 
__c
, 
size_t
 
__n
);

271 
__STRING_INLINE
 *

272 
	$__mem£t_gg
 (*
__s
, 
__c
, 
size_t
 
__n
)

274 
__d0
, 
__d1
;

275 
__asm__
 
__vﬁ©ûe__


278 : "=&D" (
__d0
), "=&c" (
__d1
)

279 : "a" (
__c
), "0" (
__s
), "1" (
__n
)

281  
__s
;

282 
	}
}

288 
	#_HAVE_STRING_ARCH_memchr
 1

	)

289 #i‚de‡
_FORCE_INLINES


290 
__STRING_INLINE
 *

291 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

293 
__d0
;

294 *
__ªs
;

295 i‡(
__n
 == 0)

296  
NULL
;

297 
__asm__
 
__vﬁ©ûe__


303 : "=D" (
__ªs
), "=&c" (
__d0
)

304 : "a" (
__c
), "0" (
__s
), "1" (
__n
)

306  
__ªs
 - 1;

307 
	}
}

310 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

311 #i‚de‡
_FORCE_INLINES


312 
__STRING_INLINE
 *

313 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

315 
__d0
;

316 *
__ªs
;

317 i‡(
__n
 == 0)

318  
NULL
;

319 
__asm__
 
__vﬁ©ûe__


325 : "=D" (
__ªs
), "=&c" (
__d0
)

326 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n)

328  
__ªs
 + 1;

329 
	}
}

330 #ifde‡
__USE_GNU


331 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 (s, c,Ç)

	)

336 
	#_HAVE_STRING_ARCH_°æí
 1

	)

337 #i‚de‡
_FORCE_INLINES


338 
__STRING_INLINE
 
size_t


339 
	$°æí
 (
__c⁄°
 *
__°r
)

341 
__d0
;

342 
size_t
 
__ªs
;

343 
__asm__
 
__vﬁ©ûe__


347 : "=c" (
__ªs
), "=&D" (
__d0
)

348 : "1" (
__°r
), "a" (0), "0" (0xffffffff)

350  
__ªs
 - 1;

351 
	}
}

355 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

356 #i‚de‡
_FORCE_INLINES


357 
__STRING_INLINE
 *

358 
	$°r˝y
 (*
__de°
, 
__c⁄°
 *
__§c
)

360 
__d0
, 
__d1
;

361 
__asm__
 
__vﬁ©ûe__


368 : "=&S" (
__d0
), "=&D" (
__d1
)

369 : "0" (
__§c
), "1" (
__de°
)

371  
__de°
;

372 
	}
}

376 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

377 #i‚de‡
_FORCE_INLINES


378 
__STRING_INLINE
 *

379 
	$°∫˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

381 
__d0
, 
__d1
, 
__d2
;

382 
__asm__
 
__vﬁ©ûe__


393 : "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

394 : "0" (
__§c
), "1" (
__de°
), "2" (
__n
)

396  
__de°
;

397 
	}
}

401 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

402 #i‚de‡
_FORCE_INLINES


403 
__STRING_INLINE
 *

404 
	$°rˇt
 (*
__de°
, 
__c⁄°
 *
__§c
)

406 
__d0
, 
__d1
, 
__d2
, 
__d3
;

407 
__asm__
 
__vﬁ©ûe__


416 : "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
), "=&a" (
__d3
)

417 : "0" (
__§c
), "1" (
__de°
), "2" (0xffffffff), "3" (0)

419  
__de°
;

420 
	}
}

424 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

425 #i‚de‡
_FORCE_INLINES


426 
__STRING_INLINE
 *

427 
	$°∫ˇt
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

429 
__d0
, 
__d1
, 
__d2
, 
__d3
;

430 
__asm__
 
__vﬁ©ûe__


447 : "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
), "=&a" (
__d3
)

448 : "g" (
__n
), "0" (
__§c
), "1" (
__de°
), "2" (0xffffffff), "3" (0)

450  
__de°
;

451 
	}
}

455 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

456 #i‚de‡
_FORCE_INLINES


457 
__STRING_INLINE
 

458 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

460 
__d0
, 
__d1
;

461 
__ªs
;

462 
__asm__
 
__vﬁ©ûe__


476 : "˜" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
)

477 : "1" (
__s1
), "2" (
__s2
)

479  
__ªs
;

480 
	}
}

484 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

485 #i‚de‡
_FORCE_INLINES


486 
__STRING_INLINE
 

487 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

489 
__d0
, 
__d1
, 
__d2
;

490 
__ªs
;

491 
__asm__
 
__vﬁ©ûe__


508 : "˜" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

509 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
)

511  
__ªs
;

512 
	}
}

516 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

517 
	#_USE_STRING_ARCH_°rchr
 1

	)

518 
	#°rchr
(
s
, 
c
) \

519 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

520 ? 
	`__°rchr_c
 (
s
, ((
c
) & 0xff) << 8) \

521 : 
	`__°rchr_g
 (
s
, 
c
)))

	)

523 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

525 
__STRING_INLINE
 *

526 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

528 
__d0
;

529 *
__ªs
;

530 
__asm__
 
__vﬁ©ûe__


542 : "˜" (
__ªs
), "=&S" (
__d0
)

543 : "0" (
__c
), "1" (
__s
)

545  
__ªs
 - 1;

546 
	}
}

548 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

550 
__STRING_INLINE
 *

551 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

553 
__d0
;

554 *
__ªs
;

555 
__asm__
 
__vﬁ©ûe__


566 : "˜" (
__ªs
), "=&S" (
__d0
)

567 : "0" (
__c
), "1" (
__s
)

569  
__ªs
 - 1;

570 
	}
}

574 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

575 
	#__°rch∫ul
(
s
, 
c
) \

576 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

577 ? ((
c
) == '\0' \

578 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

579 : 
	`__°rch∫ul_c
 (
s
, ((
c
) & 0xff) << 8)) \

580 : 
	`__°rch∫ul_g
 (
s
, 
c
)))

	)

582 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

584 
__STRING_INLINE
 *

585 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

587 
__d0
;

588 *
__ªs
;

589 
__asm__
 
__vﬁ©ûe__


600 : "˜" (
__ªs
), "=&S" (
__d0
)

601 : "0" (
__c
), "1" (
__s
)

603  
__ªs
 - 1;

604 
	}
}

606 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

608 
__STRING_INLINE
 *

609 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

611 
__d0
;

612 *
__ªs
;

613 
__asm__
 
__vﬁ©ûe__


623 : "˜" (
__ªs
), "=&S" (
__d0
)

624 : "0" (
__c
), "1" (
__s
)

626  
__ªs
 - 1;

627 
	}
}

628 #ifde‡
__USE_GNU


629 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 (s, c)

	)

635 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

636 #i‚de‡
_FORCE_INLINES


637 #ifde‡
__PIC__


638 
__STRING_INLINE
 
size_t


639 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

641 
__d0
, 
__d1
, 
__d2
;

642 *
__ªs
;

643 
__asm__
 
__vﬁ©ûe__


661 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

662 : "d" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

664  (
__ªs
 - 1Ë- 
__s
;

665 
	}
}

667 
__STRING_INLINE
 
size_t


668 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

670 
__d0
, 
__d1
, 
__d2
, 
__d3
;

671 *
__ªs
;

672 
__asm__
 
__vﬁ©ûe__


688 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

689 : "g" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

691  (
__ªs
 - 1Ë- 
__s
;

692 
	}
}

699 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

700 #i‚de‡
_FORCE_INLINES


701 #ifde‡
__PIC__


702 
__STRING_INLINE
 
size_t


703 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

705 
__d0
, 
__d1
, 
__d2
;

706 *
__ªs
;

707 
__asm__
 
__vﬁ©ûe__


725 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

726 : "r" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

728  (
__ªs
 - 1Ë- 
__s
;

729 
	}
}

731 
__STRING_INLINE
 
size_t


732 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

734 
__d0
, 
__d1
, 
__d2
, 
__d3
;

735 *
__ªs
;

736 
__asm__
 
__vﬁ©ûe__


752 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

753 : "g" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

755  (
__ªs
 - 1Ë- 
__s
;

756 
	}
}

762 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

763 #i‚de‡
_FORCE_INLINES


764 #ifde‡
__PIC__


765 
__STRING_INLINE
 *

766 
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

768 
__d0
, 
__d1
, 
__d2
;

769 *
__ªs
;

770 
__asm__
 
__vﬁ©ûe__


792 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

793 : "r" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

795  
__ªs
;

796 
	}
}

798 
__STRING_INLINE
 *

799 
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

801 
__d0
, 
__d1
, 
__d2
, 
__d3
;

802 *
__ªs
;

803 
__asm__
 
__vﬁ©ûe__


823 : "=&S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

824 : "g" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

826  
__ªs
;

827 
	}
}

833 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

834 #i‚de‡
_FORCE_INLINES


835 #ifde‡
__PIC__


836 
__STRING_INLINE
 *

837 
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

839 
__d0
, 
__d1
, 
__d2
;

840 *
__ªs
;

841 
__asm__
 
__vﬁ©ûe__


862 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

863 : "r" (
__√edÀ
), "0" (0), "1" (0xffffffff), "2" (
__hay°ack
)

865  
__ªs
;

866 
	}
}

868 
__STRING_INLINE
 *

869 
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

871 
__d0
, 
__d1
, 
__d2
, 
__d3
;

872 *
__ªs
;

873 
__asm__
 
__vﬁ©ûe__


892 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

893 : "g" (
__√edÀ
), "0" (0), "1" (0xffffffff), "2" (
__hay°ack
)

895  
__ªs
;

896 
	}
}

900 #i‚de‡
_FORCE_INLINES


901 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__STRING2_COPY_ARR
##
	tN
 
	t__©åibuã__
 ((
	t∑cked
))

	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‚de‡
_HAVE_STRING_ARCH_mem£t


98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

189 #i‡
__GNUC_PREREQ
 (2, 91)

190 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

198 #ifde‡
__USE_GNU


199 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


200 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


201 #i‡
__GNUC_PREREQ
 (3, 0)

202 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

203 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

204 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

205 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

206 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

216 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

219 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


220 #i‡
_STRING_ARCH_u«lig√d


221 #i‚de‡
_FORCE_INLINES


222 
	#__memp˝y_¨gs
(
§c
) \

223 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

224 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

225 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

226 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

227 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

228 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

230 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

231 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

232 
__uöt32_t
, 
size_t
);

233 
__STRING_INLINE
 *

234 
	$__memp˝y_smÆl
 (*
__de°1
,

235 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

236 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

237 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

238 
size_t
 
__§˛í
)

241 
__uöt32_t
 
__ui
;

242 
__uöt16_t
 
__usi
;

243 
__uc
;

244 
__c
;

245 } *
__u
 = 
__de°1
;

246 (Ë
__§˛í
)

249 
__u
->
__c
 = 
__§c0_1
;

250 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

253 
__u
->
__usi
 = 
__§c0_2
;

254 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

257 
__u
->
__usi
 = 
__§c0_2
;

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

259 
__u
->
__c
 = 
__§c2_1
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

263 
__u
->
__ui
 = 
__§c0_4
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

267 
__u
->
__ui
 = 
__§c0_4
;

268 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

269 
__u
->
__c
 = 
__§c4_1
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__usi
 = 
__§c4_2
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

283 
__u
->
__c
 = 
__§c6_1
;

284 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

287 
__u
->
__ui
 = 
__§c0_4
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

289 
__u
->
__ui
 = 
__§c4_4
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

293  (*Ë
__u
;

294 
	}
}

296 #i‚de‡
_FORCE_INLINES


297 
	#__memp˝y_¨gs
(
§c
) \

298 ((
__c⁄°
 *Ë(
§c
))[0], \

299 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

300 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

301 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

302 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

303 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

304 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

305 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

306 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

308 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

309 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

310 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

314 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

315 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

316 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

317 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

318 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

319 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

320 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

321 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

322 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

323 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

324 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

326 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

327 
__STRING2_COPY_ARR3
,

328 
__STRING2_COPY_ARR4
,

329 
__STRING2_COPY_ARR5
,

330 
__STRING2_COPY_ARR6
,

331 
__STRING2_COPY_ARR7
,

332 
__STRING2_COPY_ARR8
, 
size_t
);

333 
__STRING_INLINE
 *

334 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

335 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

336 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

337 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

338 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

341 
__c
;

342 
__STRING2_COPY_ARR2
 
__sˇ2
;

343 
__STRING2_COPY_ARR3
 
__sˇ3
;

344 
__STRING2_COPY_ARR4
 
__sˇ4
;

345 
__STRING2_COPY_ARR5
 
__sˇ5
;

346 
__STRING2_COPY_ARR6
 
__sˇ6
;

347 
__STRING2_COPY_ARR7
 
__sˇ7
;

348 
__STRING2_COPY_ARR8
 
__sˇ8
;

349 } *
__u
 = 
__de°
;

350 (Ë
__§˛í
)

353 
__u
->
__c
 = 
__§c1
;

356 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

359 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

362 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

365 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

368 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

371 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

374 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

377  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

378 
	}
}

386 #i‚de‡
_HAVE_STRING_ARCH_°rchr


387 
*
__øwmemchr
 (c⁄° *
__s
, 
__c
);

388 
	#°rchr
(
s
, 
c
) \

389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

390 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

391 : 
	`°rchr
 (
s
, 
c
)))

	)

396 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

397 || 
deföed
 
	g_FORCE_INLINES


398 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

399 
	#°r˝y
(
de°
, 
§c
) \

400 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

401 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

402 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

403 
	`°æí
 (
§c
) + 1) \

404 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

405 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

408 #i‡
_STRING_ARCH_u«lig√d


409 #i‚de‡
_FORCE_INLINES


410 
	#__°r˝y_¨gs
(
§c
) \

411 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

412 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

413 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

414 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

416 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

417 
__uöt32_t
, __uöt32_t, 
size_t
);

418 
__STRING_INLINE
 *

419 
	$__°r˝y_smÆl
 (*
__de°
,

420 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

421 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

422 
size_t
 
__§˛í
)

425 
__uöt32_t
 
__ui
;

426 
__uöt16_t
 
__usi
;

427 
__uc
;

428 } *
__u
 = (*Ë
__de°
;

429 (Ë
__§˛í
)

432 
__u
->
__uc
 = '\0';

435 
__u
->
__usi
 = 
__§c0_2
;

438 
__u
->
__usi
 = 
__§c0_2
;

439 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

440 
__u
->
__uc
 = '\0';

443 
__u
->
__ui
 = 
__§c0_4
;

446 
__u
->
__ui
 = 
__§c0_4
;

447 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

448 
__u
->
__uc
 = '\0';

451 
__u
->
__ui
 = 
__§c0_4
;

452 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

453 
__u
->
__usi
 = 
__§c4_2
;

456 
__u
->
__ui
 = 
__§c0_4
;

457 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

458 
__u
->
__usi
 = 
__§c4_2
;

459 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

460 
__u
->
__uc
 = '\0';

463 
__u
->
__ui
 = 
__§c0_4
;

464 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

465 
__u
->
__ui
 = 
__§c4_4
;

468  
__de°
;

469 
	}
}

471 #i‚de‡
_FORCE_INLINES


472 
	#__°r˝y_¨gs
(
§c
) \

473 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

474 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

475 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

476 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

478 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

479 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

480 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

481 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

482 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

483 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

485 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

486 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

487 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

488 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

490 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

491 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

492 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

494 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

495 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

496 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

497 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

498 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

500 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

501 
__STRING2_COPY_ARR3
,

502 
__STRING2_COPY_ARR4
,

503 
__STRING2_COPY_ARR5
,

504 
__STRING2_COPY_ARR6
,

505 
__STRING2_COPY_ARR7
,

506 
__STRING2_COPY_ARR8
, 
size_t
);

507 
__STRING_INLINE
 *

508 
	$__°r˝y_smÆl
 (*
__de°
,

509 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

510 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

511 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

512 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

515 
__c
;

516 
__STRING2_COPY_ARR2
 
__sˇ2
;

517 
__STRING2_COPY_ARR3
 
__sˇ3
;

518 
__STRING2_COPY_ARR4
 
__sˇ4
;

519 
__STRING2_COPY_ARR5
 
__sˇ5
;

520 
__STRING2_COPY_ARR6
 
__sˇ6
;

521 
__STRING2_COPY_ARR7
 
__sˇ7
;

522 
__STRING2_COPY_ARR8
 
__sˇ8
;

523 } *
__u
 = (*Ë
__de°
;

524 (Ë
__§˛í
)

527 
__u
->
__c
 = '\0';

530 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

533 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

536 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

539 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

542 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

545 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

548 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

551  
__de°
;

552 
	}
}

558 #ifde‡
__USE_GNU


559 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


560 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


561 #i‡
__GNUC_PREREQ
 (3, 0)

562 
	#__°p˝y
(
de°
, 
§c
) \

563 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

564 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

565 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

566 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

568 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

570 
	#__°p˝y
(
de°
, 
§c
) \

571 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

572 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

573 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

574 
	`°æí
 (
§c
) + 1) \

575 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

577 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

581 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

584 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


585 #i‡
_STRING_ARCH_u«lig√d


586 #i‚de‡
_FORCE_INLINES


587 
	#__°p˝y_¨gs
(
§c
) \

588 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

589 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

590 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

591 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

593 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

594 
__uöt32_t
, __uöt32_t, 
size_t
);

595 
__STRING_INLINE
 *

596 
	$__°p˝y_smÆl
 (*
__de°
,

597 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

598 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

599 
size_t
 
__§˛í
)

602 
__ui
;

603 
__usi
;

604 
__uc
;

605 
__c
;

606 } *
__u
 = (*Ë
__de°
;

607 (Ë
__§˛í
)

610 
__u
->
__uc
 = '\0';

613 
__u
->
__usi
 = 
__§c0_2
;

614 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

617 
__u
->
__usi
 = 
__§c0_2
;

618 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

619 
__u
->
__uc
 = '\0';

622 
__u
->
__ui
 = 
__§c0_4
;

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

626 
__u
->
__ui
 = 
__§c0_4
;

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

628 
__u
->
__uc
 = '\0';

631 
__u
->
__ui
 = 
__§c0_4
;

632 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

633 
__u
->
__usi
 = 
__§c4_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

637 
__u
->
__ui
 = 
__§c0_4
;

638 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

639 
__u
->
__usi
 = 
__§c4_2
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

641 
__u
->
__uc
 = '\0';

644 
__u
->
__ui
 = 
__§c0_4
;

645 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

646 
__u
->
__ui
 = 
__§c4_4
;

647 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

650  &
__u
->
__c
;

651 
	}
}

653 #i‚de‡
_FORCE_INLINES


654 
	#__°p˝y_¨gs
(
§c
) \

655 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

656 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

657 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

658 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

660 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

661 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

662 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

663 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

664 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

665 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

667 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

668 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

669 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

670 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

672 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

673 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

674 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

677 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

678 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

679 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

680 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

682 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

683 
__STRING2_COPY_ARR3
,

684 
__STRING2_COPY_ARR4
,

685 
__STRING2_COPY_ARR5
,

686 
__STRING2_COPY_ARR6
,

687 
__STRING2_COPY_ARR7
,

688 
__STRING2_COPY_ARR8
, 
size_t
);

689 
__STRING_INLINE
 *

690 
	$__°p˝y_smÆl
 (*
__de°
,

691 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

692 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

693 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

694 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

697 
__c
;

698 
__STRING2_COPY_ARR2
 
__sˇ2
;

699 
__STRING2_COPY_ARR3
 
__sˇ3
;

700 
__STRING2_COPY_ARR4
 
__sˇ4
;

701 
__STRING2_COPY_ARR5
 
__sˇ5
;

702 
__STRING2_COPY_ARR6
 
__sˇ6
;

703 
__STRING2_COPY_ARR7
 
__sˇ7
;

704 
__STRING2_COPY_ARR8
 
__sˇ8
;

705 } *
__u
 = (*Ë
__de°
;

706 (Ë
__§˛í
)

709 
__u
->
__c
 = '\0';

712 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

715 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

718 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

721 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

724 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

727 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

730 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

733  
__de°
 + 
__§˛í
 - 1;

734 
	}
}

742 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


743 #i‡
deföed
 
_USE_STRING_ARCH_mem£t
 && deföed 
_USE_STRING_ARCH_memp˝y


744 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

745 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

746 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

747 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

748 ? (*Ë
	`mem˝y
 (
__de°
, 
§c
, 
n
) \

749 : (
	`mem£t
 (
	`__memp˝y
 (
__de°
, 
§c
, 
	`°æí
 (src)), \

750 '\0', 
n
 - 
	`°æí
 (
§c
)), \

751 
__de°
)) \

752 : 
	`°∫˝y
 (
__de°
, 
§c
, 
n
); }))

	)

754 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

755 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

756 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

757 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

758 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

759 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

765 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


766 #ifde‡
_USE_STRING_ARCH_°rchr


767 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

768 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

769 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

770 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

771 ? 
	`°rˇt
 (
__de°
, 
§c
) \

772 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

773 
§c
, 
n
)Ë'\0', 
__de°
)) \

774 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
de°
, 
§c
) \

780 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

781 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

787 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


788 
	#°rcmp
(
s1
, 
s2
) \

789 
__exãnsi⁄__
 \

790 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

791 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

792 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

793 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

794 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

795 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

796 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

797 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

798 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

799 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

800 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

801 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

802 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

803 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

804 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

805 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

806 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

807 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

809 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

810 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

811 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

812 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

813 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

815 
__ªsu…
 = (((
__c⁄°
 *) \

816 (
__c⁄°
 *Ë(
s1
))[1] \

817 - ((
__c⁄°
 *) \

818 (
__c⁄°
 *Ë(
s2
))[1]); \

819 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

821 
__ªsu…
 = \

822 (((
__c⁄°
 *) \

823 (
__c⁄°
 *Ë(
s1
))[2] \

824 - ((
__c⁄°
 *) \

825 (
__c⁄°
 *Ë(
s2
))[2]); \

826 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

827 
__ªsu…
 = \

828 (((
__c⁄°
 *) \

829 (
__c⁄°
 *Ë(
s1
))[3] \

830 - ((
__c⁄°
 *) \

831 (
__c⁄°
 *Ë(
s2
))[3]); \

834 
__ªsu…
; }))

	)

836 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

837 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

838 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

839 
__ªsu…
 = \

840 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

841 - 
__s2
[0]); \

842 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

844 
__ªsu…
 = (((
__c⁄°
 *) \

845 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

846 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

850 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

851 
__ªsu…
 = (((
__c⁄°
 *) \

852 (
__c⁄°
 *Ë(
s1
))[3] \

853 - 
__s2
[3]); \

856 
__ªsu…
; }))

	)

858 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

859 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

860 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

861 
__ªsu…
 = \

862 
__s1
[0] - ((
__c⁄°
 *) \

863 (
__c⁄°
 *Ë(
s2
))[0]; \

864 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

866 
__ªsu…
 = (
__s1
[1] \

867 - ((
__c⁄°
 *) \

868 (
__c⁄°
 *Ë(
s2
))[1]); \

869 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

871 
__ªsu…
 = \

872 (
__s1
[2] - ((
__c⁄°
 *) \

873 (
__c⁄°
 *Ë(
s2
))[2]); \

874 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

875 
__ªsu…
 = \

876 (
__s1
[3] \

877 - ((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s2
))[3]); \

881 
__ªsu…
; }))

	)

886 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


887 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

888 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

889 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

890 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

891 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

892 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

893 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

899 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


900 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


901 
	#°rc•n
(
s
, 
ªje˘
) \

902 
__exãnsi⁄__
 \

903 ({ 
__r0
, 
__r1
, 
__r2
; \

904 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

905 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

906 ? 
	`°æí
 (
s
) \

907 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

908 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

909 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

910 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

911 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

912 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

913 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

914 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

917 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

918 
__STRING_INLINE
 
size_t


919 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

921 
size_t
 
__ªsu…
 = 0;

922 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

923 ++
__ªsu…
;

924  
__ªsu…
;

925 
	}
}

927 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

928 
__ªje˘2
);

929 
__STRING_INLINE
 
size_t


930 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

932 
size_t
 
__ªsu…
 = 0;

933 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


934 && 
__s
[
__ªsu…
] !
__ªje˘2
)

935 ++
__ªsu…
;

936  
__ªsu…
;

937 
	}
}

939 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

940 
__ªje˘2
, 
__ªje˘3
);

941 
__STRING_INLINE
 
size_t


942 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

943 
__ªje˘3
)

945 
size_t
 
__ªsu…
 = 0;

946 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


947 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

948 ++
__ªsu…
;

949  
__ªsu…
;

950 
	}
}

956 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


957 #i‚de‡
_HAVE_STRING_ARCH_°r•n


958 
	#°r•n
(
s
, 
ac˚±
) \

959 
__exãnsi⁄__
 \

960 ({ 
__a0
, 
__a1
, 
__a2
; \

961 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

962 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

963 ? ((Ë(
s
), 0) \

964 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

965 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

966 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

967 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

968 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

969 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

970 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

971 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

974 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

975 
__STRING_INLINE
 
size_t


976 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

978 
size_t
 
__ªsu…
 = 0;

980 
__s
[
__ªsu…
] =
__ac˚±
)

981 ++
__ªsu…
;

982  
__ªsu…
;

983 
	}
}

985 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

986 
__ac˚±2
);

987 
__STRING_INLINE
 
size_t


988 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

990 
size_t
 
__ªsu…
 = 0;

992 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

993 ++
__ªsu…
;

994  
__ªsu…
;

995 
	}
}

997 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

998 
__ac˚±2
, 
__ac˚±3
);

999 
__STRING_INLINE
 
size_t


1000 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1002 
size_t
 
__ªsu…
 = 0;

1004 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1005 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1006 ++
__ªsu…
;

1007  
__ªsu…
;

1008 
	}
}

1013 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1014 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1015 
	#°Ωbrk
(
s
, 
ac˚±
) \

1016 
__exãnsi⁄__
 \

1017 ({ 
__a0
, 
__a1
, 
__a2
; \

1018 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1019 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1020 ? ((Ë(
s
), 
NULL
) \

1021 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1022 ? 
	`°rchr
 (
s
, 
__a0
) \

1023 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1024 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1025 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1026 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1027 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1028 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1031 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1032 
__ac˚±2
);

1033 
__STRING_INLINE
 *

1034 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1038 ++
__s
;

1039  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1040 
	}
}

1042 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1043 
__ac˚±2
, 
__ac˚±3
);

1044 
__STRING_INLINE
 *

1045 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1046 
__ac˚±3
)

1049 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1050 && *
__s
 !
__ac˚±3
)

1051 ++
__s
;

1052  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1053 
	}
}

1059 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1060 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1061 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1062 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1063 ? (*Ë(
size_t
Ë(
hay°ack
) \

1064 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1065 ? 
	`°rchr
 (
hay°ack
, \

1066 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1067 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1068 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1072 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1073 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1074 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1075 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1076 ? (((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1077 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1078 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1079 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)) \

1080 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1083 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1084 
__STRING_INLINE
 *

1085 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1087 *
__ªsu…
;

1088 i‡(
__s
 =
NULL
)

1089 
__s
 = *
__√xç
;

1090 *
__s
 =
__£p
)

1091 ++
__s
;

1092 
__ªsu…
 = 
NULL
;

1093 i‡(*
__s
 != '\0')

1095 
__ªsu…
 = 
__s
++;

1096 *
__s
 != '\0')

1097 i‡(*
__s
++ =
__£p
)

1099 
__s
[-1] = '\0';

1102 *
__√xç
 = 
__s
;

1104  
__ªsu…
;

1105 
	}
}

1106 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1107 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1112 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1113 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1115 
*
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1116 
	#__°r£p
(
s
, 
ªje˘
) \

1117 
__exãnsi⁄__
 \

1118 ({ 
__r0
, 
__r1
, 
__r2
; \

1119 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1120 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1121 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1122 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1123 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1124 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1125 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1126 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1127 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1128 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1129 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1130 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1133 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1134 
__STRING_INLINE
 *

1135 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1137 *
__ªtvÆ
 = *
__s
;

1138 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1139 *(*
__s
)++ = '\0';

1140  
__ªtvÆ
;

1141 
	}
}

1143 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1144 
__STRING_INLINE
 *

1145 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1147 *
__ªtvÆ
 = *
__s
;

1148 i‡(
__ªtvÆ
 !
NULL
)

1150 *
__˝
 = 
__ªtvÆ
;

1153 i‡(*
__˝
 == '\0')

1155 
__˝
 = 
NULL
;

1158 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1160 *
__˝
++ = '\0';

1163 ++
__˝
;

1165 *
__s
 = 
__˝
;

1167  
__ªtvÆ
;

1168 
	}
}

1170 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1171 
__ªje˘3
);

1172 
__STRING_INLINE
 *

1173 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1175 *
__ªtvÆ
 = *
__s
;

1176 i‡(
__ªtvÆ
 !
NULL
)

1178 *
__˝
 = 
__ªtvÆ
;

1181 i‡(*
__˝
 == '\0')

1183 
__˝
 = 
NULL
;

1186 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1188 *
__˝
++ = '\0';

1191 ++
__˝
;

1193 *
__s
 = 
__˝
;

1195  
__ªtvÆ
;

1196 
	}
}

1197 #ifde‡
__USE_BSD


1198 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1205 #ifde‡
__USE_MISC


1207 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1208 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1209 
	~<°dlib.h
>

1212 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1214 
*
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1215 
	#__°rdup
(
s
) \

1216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1217 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1218 ? (*Ë
	`ˇŒoc
 (1, 1) \

1219 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1220 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1221 i‡(
__ªtvÆ
 !
NULL
) \

1222 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1223 
__ªtvÆ
; 
	}
})) \

1224 : 
	`__°rdup
 (
s
)))

	)

1226 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1227 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1231 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1233 
*
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1234 
__THROW
 
__©åibuã_mÆloc__
;

1235 
	#__°∫dup
(
s
, 
n
) \

1236 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1237 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1238 ? (*Ë
	`ˇŒoc
 (1, 1) \

1239 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1240 
size_t
 
__n
 = (
n
); \

1241 *
__ªtvÆ
; \

1242 i‡(
__n
 < 
__Àn
) \

1243 
__Àn
 = 
__n
 + 1; \

1244 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1245 i‡(
__ªtvÆ
 !
NULL
) \

1247 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1248 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1249 
__Àn
 - 1); \

1251 
__ªtvÆ
; 
	}
})) \

1252 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1254 #ifde‡
__USE_GNU


1255 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1261 #i‚de‡
_FORCE_INLINES


1262 #unde‡
__STRING_INLINE


	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 

__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

50 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

53 
	#TIMER_ABSTIME
 1

	)

59 #ifde‡
__√ed_timevÆ


60 #unde‡
__√ed_timevÆ


61 #i‚de‡
_STRUCT_TIMEVAL


62 
	#_STRUCT_TIMEVAL
 1

	)

63 
	~<bôs/ty≥s.h
>

67 
	stimevÆ


69 
__time_t
 
	mtv_£c
;

70 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

32 
	t__u_ch¨
;

33 
	t__u_sh‹t
;

34 
	t__u_öt
;

35 
	t__u_l⁄g
;

36 #ifde‡
__GLIBC_HAVE_LONG_LONG


37 
__exãnsi⁄__
 
	t__u_quad_t
;

38 
__exãnsi⁄__
 
	t__quad_t
;

42 
	m__vÆ
[2];

43 } 
	t__quad_t
;

46 
__u_l⁄g
 
	m__vÆ
[2];

47 } 
	t__u_quad_t
;

49 sig√d 
	t__öt8_t
;

50 
	t__uöt8_t
;

51 sig√d 
	t__öt16_t
;

52 
	t__uöt16_t
;

53 sig√d 
	t__öt32_t
;

54 
	t__uöt32_t
;

55 #ifde‡
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

57 
__exãnsi⁄__
 
	t__uöt64_t
;

59 
__quad_t
 *
	t__qaddr_t
;

61 
__u_quad_t
 
	t__dev_t
;

62 
__u_öt
 
	t__uid_t
;

63 
__u_öt
 
	t__gid_t
;

64 
__u_l⁄g
 
	t__öo_t
;

65 
__u_öt
 
	t__mode_t
;

66 
__u_öt
 
	t__∆ök_t
;

67 
	t__off_t
;

68 
__quad_t
 
	t__loff_t
;

69 
	t__pid_t
;

70 
	t__ssize_t
;

71 
__u_l⁄g
 
	t__æim_t
;

72 
__u_quad_t
 
	t__æim64_t
;

73 
__u_öt
 
	t__id_t
;

77 
	m__vÆ
[2];

78 } 
	t__fsid_t
;

81 
	t__daddr_t
;

82 *
	t__ˇddr_t
;

83 
	t__time_t
;

84 
	t__u£c⁄ds_t
;

85 
	t__su£c⁄ds_t
;

86 
	t__swblk_t
;

88 
	t__˛ock_t
;

91 
	t__˛ockid_t
;

94 
	t__timî_t
;

98 
	#__FD_SETSIZE
 1024

	)

101 
	t__key_t
;

104 
	t__ùc_pid_t
;

108 
	t__blksize_t
;

113 
	t__blk˙t_t
;

114 
__quad_t
 
	t__blk˙t64_t
;

117 
__u_l⁄g
 
	t__fsblk˙t_t
;

118 
__u_quad_t
 
	t__fsblk˙t64_t
;

121 
__u_l⁄g
 
	t__fsfû˙t_t
;

122 
__u_quad_t
 
	t__fsfû˙t64_t
;

125 
__u_quad_t
 
	t__öo64_t
;

128 
__loff_t
 
	t__off64_t
;

131 
	t__t_sˇœr_t
;

132 
	t__t_usˇœr_t
;

135 
	t__öçå_t
;

138 
	t__sockÀn_t
;

142 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


143 
	~<bôs/±hªadty≥s.h
>

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

29 
	#__WALL
 0x40000000

	)

30 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 #ifdef 
__GNUC__


42 
	#__WIFSIGNALED
(
°©us
) \

43 (
	`__exãnsi⁄__
 ({ 
__°©us
 = (
°©us
); \

44 !
	`__WIFSTOPPED
(
__°©us
Ë&& !
	`__WIFEXITED
(__°©us); }))

	)

46 
	#__WIFSIGNALED
(
°©us
Ë(!
	`__WIFSTOPPED
(°©usË&& !
	`__WIFEXITED
(°©us))

	)

50 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__WCOREFLAG
 0x80

	)

61 #ifdef 
__USE_BSD


63 
	~<ídün.h
>

65 
	uwaô


67 
	mw_°©us
;

70 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


71 
	m__w_ãrmsig
:7;

72 
	m__w_c‹edump
:1;

73 
	m__w_ªtcode
:8;

76 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


78 
	m__w_ªtcode
:8;

79 
	m__w_c‹edump
:1;

80 
	m__w_ãrmsig
:7;

82 } 
	m__waô_ãrmö©ed
;

85 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


86 
	m__w_°›vÆ
:8;

87 
	m__w_°›sig
:8;

90 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


92 
	m__w_°›sig
:8;

93 
	m__w_°›vÆ
:8;

95 } 
	m__waô_°›≥d
;

98 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

99 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

100 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

101 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

102 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/features.h

19 #i‚def 
_FEATURES_H


20 
	#_FEATURES_H
 1

	)

86 #unde‡
__USE_ISOC99


87 #unde‡
__USE_POSIX


88 #unde‡
__USE_POSIX2


89 #unde‡
__USE_POSIX199309


90 #unde‡
__USE_POSIX199506


91 #unde‡
__USE_XOPEN


92 #unde‡
__USE_XOPEN_EXTENDED


93 #unde‡
__USE_UNIX98


94 #unde‡
__USE_XOPEN2K


95 #unde‡
__USE_LARGEFILE


96 #unde‡
__USE_LARGEFILE64


97 #unde‡
__USE_FILE_OFFSET64


98 #unde‡
__USE_BSD


99 #unde‡
__USE_SVID


100 #unde‡
__USE_MISC


101 #unde‡
__USE_GNU


102 #unde‡
__USE_REENTRANT


103 #unde‡
__FAVOR_BSD


104 #unde‡
__KERNEL_STRICT_NAMES


108 #i‚de‡
_LOOSE_KERNEL_NAMES


109 
	#__KERNEL_STRICT_NAMES


	)

113 
	#__USE_ANSI
 1

	)

117 #i‡
deföed
 
_BSD_SOURCE
 && \

118 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

119 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_XOPEN_SOURCE_EXTENDED
 || \

120 
deföed
 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

121 
	#__FAVOR_BSD
 1

	)

125 #ifde‡
_GNU_SOURCE


126 #unde‡
_ISOC99_SOURCE


127 
	#_ISOC99_SOURCE
 1

	)

128 #unde‡
_POSIX_SOURCE


129 
	#_POSIX_SOURCE
 1

	)

130 #unde‡
_POSIX_C_SOURCE


131 
	#_POSIX_C_SOURCE
 199506L

	)

132 #unde‡
_XOPEN_SOURCE


133 
	#_XOPEN_SOURCE
 600

	)

134 #unde‡
_XOPEN_SOURCE_EXTENDED


135 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

136 #unde‡
_LARGEFILE64_SOURCE


137 
	#_LARGEFILE64_SOURCE
 1

	)

138 #unde‡
_BSD_SOURCE


139 
	#_BSD_SOURCE
 1

	)

140 #unde‡
_SVID_SOURCE


141 
	#_SVID_SOURCE
 1

	)

146 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

147 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

148 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_XOPEN_SOURCE_EXTENDED
 && \

149 !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

150 
	#_BSD_SOURCE
 1

	)

151 
	#_SVID_SOURCE
 1

	)

158 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

159 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

160 
	#__USE_ISOC99
 1

	)

165 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_POSIX_SOURCE
 && \

166 !
deföed
 
_POSIX_C_SOURCE
)

167 
	#_POSIX_SOURCE
 1

	)

168 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

169 
	#_POSIX_C_SOURCE
 2

	)

171 
	#_POSIX_C_SOURCE
 199506L

	)

175 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


176 
	#__USE_POSIX
 1

	)

179 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


180 
	#__USE_POSIX2
 1

	)

183 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

184 
	#__USE_POSIX199309
 1

	)

187 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

188 
	#__USE_POSIX199506
 1

	)

191 #ifdef 
_XOPEN_SOURCE


192 
	#__USE_XOPEN
 1

	)

193 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

194 
	#__USE_XOPEN_EXTENDED
 1

	)

195 
	#__USE_UNIX98
 1

	)

196 #unde‡
_LARGEFILE_SOURCE


197 
	#_LARGEFILE_SOURCE
 1

	)

198 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

199 
	#__USE_XOPEN2K
 1

	)

200 #unde‡
__USE_ISOC99


201 
	#__USE_ISOC99
 1

	)

204 #ifde‡
_XOPEN_SOURCE_EXTENDED


205 
	#__USE_XOPEN_EXTENDED
 1

	)

210 #ifde‡
_LARGEFILE_SOURCE


211 
	#__USE_LARGEFILE
 1

	)

214 #ifde‡
_LARGEFILE64_SOURCE


215 
	#__USE_LARGEFILE64
 1

	)

218 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

219 
	#__USE_FILE_OFFSET64
 1

	)

222 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


223 
	#__USE_MISC
 1

	)

226 #ifdef 
_BSD_SOURCE


227 
	#__USE_BSD
 1

	)

230 #ifdef 
_SVID_SOURCE


231 
	#__USE_SVID
 1

	)

234 #ifdef 
_GNU_SOURCE


235 
	#__USE_GNU
 1

	)

238 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


239 
	#__USE_REENTRANT
 1

	)

243 
	#__STDC_IEC_559__
 1

	)

244 
	#__STDC_IEC_559_COMPLEX__
 1

	)

247 
	#__STDC_ISO_10646__
 200009L

	)

255 #unde‡
__GNU_LIBRARY__


256 
	#__GNU_LIBRARY__
 6

	)

260 
	#__GLIBC__
 2

	)

261 
	#__GLIBC_MINOR__
 2

	)

270 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


271 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

272 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

274 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

277 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

278 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

281 #i‡
deföed
 
__GNUC__
 \

282 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

283 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

284 || (
deföed
 
	g__STDC_VERSION
 && __STDC_VERSION >= 199901L)

285 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

289 #i‚de‡
__ASSEMBLER__


290 #i‚de‡
_SYS_CDEFS_H


291 
	~<sys/cdefs.h
>

296 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


297 
	#__USE_LARGEFILE
 1

	)

298 
	#__USE_LARGEFILE64
 1

	)

304 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

305 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__


306 
	#__USE_EXTERN_INLINES
 1

	)

310 #i‚de‡
_LIBC


320 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #ifdef 
__˝lu•lus


47 
*
›èrg
;

61 

›töd
;

66 

›ãº
;

70 

›t›t
;

72 #i‚de‡
__√ed_gë›t


94 
	s›ti⁄


96 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


97 c⁄° *
	g«me
;

99 *
	g«me
;

103 
	ghas_¨g
;

104 *
	gÊag
;

105 
	gvÆ
;

110 
	#no_¨gumít
 0

	)

111 
	#ªquúed_¨gumít
 1

	)

112 
	#›ti⁄Æ_¨gumít
 2

	)

140 #i‡(
deföed
 
__STDC__
 && __STDC__Ë|| deföed 
__˝lu•lus


141 #ifde‡
__GNU_LIBRARY__


145 

gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
);

147 

gë›t
 ();

150 #i‚de‡
__√ed_gë›t


151 

gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

152 c⁄° *
__sh‹t›ts
,

153 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

154 

gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

155 c⁄° *
__sh‹t›ts
,

156 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
);

159 

_gë›t_öã∫Æ
 (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
,

161 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
,

162 
__l⁄g_⁄ly
);

165 

gë›t
 ();

166 #i‚de‡
__√ed_gë›t


167 

gë›t_l⁄g
 ();

168 

gë›t_l⁄g_⁄ly
 ();

170 

_gë›t_öã∫Æ
 ();

174 #ifdef 
__˝lu•lus


179 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

141 
	#_IO_SKIPWS
 01

	)

142 
	#_IO_LEFT
 02

	)

143 
	#_IO_RIGHT
 04

	)

144 
	#_IO_INTERNAL
 010

	)

145 
	#_IO_DEC
 020

	)

146 
	#_IO_OCT
 040

	)

147 
	#_IO_HEX
 0100

	)

148 
	#_IO_SHOWBASE
 0200

	)

149 
	#_IO_SHOWPOINT
 0400

	)

150 
	#_IO_UPPERCASE
 01000

	)

151 
	#_IO_SHOWPOS
 02000

	)

152 
	#_IO_SCIENTIFIC
 04000

	)

153 
	#_IO_FIXED
 010000

	)

154 
	#_IO_UNITBUF
 020000

	)

155 
	#_IO_STDIO
 040000

	)

156 
	#_IO_DONT_CLOSE
 0100000

	)

157 
	#_IO_BOOLALPHA
 0200000

	)

160 
_IO_jump_t
; 
	g_IO_FILE
;

163 #ifde‡
_IO_MTSAFE_IO


164 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

165 
	~<bôs/°dio-lock.h
>

170 
	t_IO_lock_t
;

176 
	s_IO_m¨kî
 {

177 
_IO_m¨kî
 *
	m_√xt
;

178 
_IO_FILE
 *
	m_sbuf
;

182 
	m_pos
;

184 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

185 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

186 
	mpublic
:

187 
°ªamm¨kî
(
°ªambuf
 *
sb
);

188 ~
°ªamm¨kî
();

189 
ßvög
(Ë{  
	m_•os
 == -2; }

190 
dñè
(
°ªamm¨kî
&);

191 
dñè
();

196 
	e__codecvt_ªsu…


198 
	m__codecvt_ok
,

199 
	m__codecvt_∑πül
,

200 
	m__codecvt_îr‹
,

201 
	m__codecvt_noc⁄v


204 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


207 
	s_IO_codecvt


209 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

210 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

211 
	m__mb°©e_t
 *,

212 c⁄° 
	mwch¨_t
 *,

213 c⁄° 
	mwch¨_t
 *,

214 c⁄° 
	mwch¨_t
 **, *,

216 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

217 
	m__mb°©e_t
 *, *,

219 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

220 
	m__mb°©e_t
 *,

222 c⁄° **, 
	mwch¨_t
 *,

223 
	mwch¨_t
 *, wchar_t **);

224 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

225 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

226 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

227 c⁄° *, c⁄° *, 
	m_IO_size_t
);

228 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

230 
_IO_ic⁄v_t
 
	m__cd_ö
;

231 
_IO_ic⁄v_t
 
	m__cd_out
;

235 
	s_IO_wide_d©a


237 
wch¨_t
 *
	m_IO_ªad_±r
;

238 
wch¨_t
 *
	m_IO_ªad_íd
;

239 
wch¨_t
 *
	m_IO_ªad_ba£
;

240 
wch¨_t
 *
	m_IO_wrôe_ba£
;

241 
wch¨_t
 *
	m_IO_wrôe_±r
;

242 
wch¨_t
 *
	m_IO_wrôe_íd
;

243 
wch¨_t
 *
	m_IO_buf_ba£
;

244 
wch¨_t
 *
	m_IO_buf_íd
;

246 
wch¨_t
 *
	m_IO_ßve_ba£
;

247 
wch¨_t
 *
	m_IO_backup_ba£
;

249 
wch¨_t
 *
	m_IO_ßve_íd
;

251 
__mb°©e_t
 
	m_IO_°©e
;

252 
__mb°©e_t
 
	m_IO_œ°_°©e
;

253 
_IO_codecvt
 
	m_codecvt
;

255 
wch¨_t
 
	m_sh‹tbuf
[1];

257 
_IO_jump_t
 *
	m_wide_vèbÀ
;

261 
	s_IO_FILE
 {

262 
	m_Êags
;

263 
	#_IO_fûe_Êags
 
_Êags


	)

267 * 
	m_IO_ªad_±r
;

268 * 
	m_IO_ªad_íd
;

269 * 
	m_IO_ªad_ba£
;

270 * 
	m_IO_wrôe_ba£
;

271 * 
	m_IO_wrôe_±r
;

272 * 
	m_IO_wrôe_íd
;

273 * 
	m_IO_buf_ba£
;

274 * 
	m_IO_buf_íd
;

276 *
	m_IO_ßve_ba£
;

277 *
	m_IO_backup_ba£
;

278 *
	m_IO_ßve_íd
;

280 
_IO_m¨kî
 *
	m_m¨kîs
;

282 
_IO_FILE
 *
	m_chaö
;

284 
	m_fûío
;

285 
	m_blksize
;

286 
_IO_off_t
 
	m_ﬁd_off£t
;

288 
	#__HAVE_COLUMN


	)

290 
	m_cur_cﬁumn
;

291 sig√d 
	m_vèbÀ_off£t
;

292 
	m_sh‹tbuf
[1];

296 
_IO_lock_t
 *
	m_lock
;

297 #ifde‡
_IO_USE_OLD_IO_FILE


300 
	s_IO_FILE_com∂ëe


302 
_IO_FILE
 
	m_fûe
;

304 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

305 
_IO_off64_t
 
	m_off£t
;

306 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


308 
_IO_codecvt
 *
	m_codecvt
;

309 
_IO_wide_d©a
 *
	m_wide_d©a
;

311 *
	m__∑d1
;

312 *
	m__∑d2
;

314 
	m_mode
;

316 
	m_unu£d2
[15 *  () - 2 *  (*)];

320 #i‚de‡
__˝lu•lus


321 
_IO_FILE
 
	t_IO_FILE
;

324 
	g_IO_FILE_∂us
;

326 

_IO_FILE_∂us
 
_IO_2_1_°dö_
;

327 

_IO_FILE_∂us
 
_IO_2_1_°dout_
;

328 

_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

329 #i‚de‡
_LIBC


330 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

331 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

332 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

334 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

335 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

336 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

344 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

352 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

353 
	tsize_t
 
	t__n
);

361 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

364 
	t__io_˛o£_‚
 (*
	t__cookõ
);

367 #ifde‡
_GNU_SOURCE


369 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

370 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

371 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

372 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

377 
__io_ªad_‚
 *
	mªad
;

378 
__io_wrôe_‚
 *
	mwrôe
;

379 
__io_£ek_‚
 *
	m£ek
;

380 
__io_˛o£_‚
 *
	m˛o£
;

381 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

382 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

384 
	g_IO_cookõ_fûe
;

387 

_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

388 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

392 #ifde‡
__˝lu•lus


396 

__undîÊow
 (
_IO_FILE
 *Ë
__THROW
;

397 

__uÊow
 (
_IO_FILE
 *Ë
__THROW
;

398 

__ovîÊow
 (
_IO_FILE
 *, Ë
__THROW
;

399 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *Ë
__THROW
;

400 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *Ë
__THROW
;

401 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wöt_tË
__THROW
;

403 
	#_IO_gëc_u∆ocked
(
_Â
) \

404 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
 ? 
	`__uÊow
 (_fp) \

405 : *(*Ë(
_Â
)->
_IO_ªad_±r
++)

	)

406 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

407 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
 \

408 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

409 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

410 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

411 (((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

412 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

413 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

415 
	#_IO_gëwc_u∆ocked
(
_Â
) \

416 ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 >(_Â)->_wide_d©a->
_IO_ªad_íd
 \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 >(_Â)->_wide_d©a->
_IO_wrôe_íd
 \

420 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

421 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

423 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

424 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

426 

_IO_gëc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

427 

_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

428 

_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

429 

_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

431 

_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

435 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

437 

_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

438 

_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

439 

_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 #ifde‡
_IO_MTSAFE_IO


442 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

443 
	#_IO_Êockfûe
(
_Â
) \

444 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

445 
	#_IO_fu∆ockfûe
(
_Â
) \

446 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

448 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

449 
	#_IO_Êockfûe
(
_Â
Ë

	)

450 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

451 
	#_IO_·rylockfûe
(
_Â
Ë

	)

452 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

453 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

456 

_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

457 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

458 

_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

459 
_IO_va_li°
Ë
__THROW
;

460 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_tË
__THROW
;

461 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_tË
__THROW
;

463 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , Ë
__THROW
;

464 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, Ë
__THROW
;

466 

_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

468 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


469 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

470 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
Ë
__THROW
;

471 

_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

472 #i‡
__GNUC__
 >= 2

475 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


476 
	~<shlib-com∑t.h
>

477 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

478 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

479 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

480 
c⁄° 
_IO_°dö_u£d
;

481 
wók_exã∫
 (
_IO_°dö_u£d
);

484 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


485 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

489 
	#_IO_fwide
(
__Â
, 
__mode
) \

490 ({ 
__ªsu…
 = (
__mode
); \

491 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

493 i‡((
__Â
)->
_mode
 == 0) \

495 (
__Â
)->
_mode
 = -1; \

496 
__ªsu…
 = (
__Â
)->
_mode
; \

498 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

502 
__ªsu…
; })

	)

505 

_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

506 
_IO_va_li°
, *
__ª°ri˘
Ë
__THROW
;

507 

_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

508 
_IO_va_li°
Ë
__THROW
;

509 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_tË
__THROW
;

510 

_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

513 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

23 #i‚de‡
_LIBC_LIMITS_H_


24 
	#_LIBC_LIMITS_H_
 1

	)

26 
	~<„©uªs.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

129 #ifde‡
__USE_ISOC99


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 
LONG_LONG_MIN


	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
LONG_LONG_MAX


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 
ULONG_LONG_MAX


	)

142 #ifdef 
__USE_POSIX


144 
	~<bôs/posix1_lim.h
>

147 #ifdef 
__USE_POSIX2


148 
	~<bôs/posix2_lim.h
>

151 #ifdef 
__USE_XOPEN


152 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 32

	)

7 
	#ARG_MAX
 131072

	)

8 
	#CHILD_MAX
 999

	)

9 
	#OPEN_MAX
 256

	)

10 
	#LINK_MAX
 127

	)

11 
	#MAX_CANON
 255

	)

12 
	#MAX_INPUT
 255

	)

13 
	#NAME_MAX
 255

	)

14 
	#PATH_MAX
 4096

	)

15 
	#PIPE_BUF
 4096

	)

17 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 

	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 

	$ídΩ˚¡
 (Ë
__THROW
;

55 

Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 

Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 

Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 

	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 

	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 

	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë¯## 
U


	)

301 
	#UINT16_C
(
c
Ë¯## 
U


	)

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/sys/sysmacros.h

20 #i‚de‡
_SYS_SYSMACROS_H


21 
	#_SYS_SYSMACROS_H
 1

	)

27 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 
	#maj‹
(
dev
Ë(()(((devË>> 8Ë& 0xff))

	)

29 
	#mö‹
(
dev
Ë(()((devË& 0xff))

	)

30 
	#makedev
(
maj‹
, 
mö‹
) (((() (major)) << 8) \

31 | ((Ë(
mö‹
)))

	)

35 
	~<ídün.h
>

36 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


37 
	#maj‹
(
dev
Ë(((dev).
__vÆ
[1] >> 8Ë& 0xff)

	)

38 
	#mö‹
(
dev
Ë((dev).
__vÆ
[1] & 0xff)

	)

39 
	#makedev
(
maj‹
, 
mö‹
) { 0, (((() (major)) << 8) \

40 | ((Ë(
mö‹
))Ë}

	)

42 
	#maj‹
(
dev
Ë(((dev).
__vÆ
[0] >> 8Ë& 0xff)

	)

43 
	#mö‹
(
dev
Ë((dev).
__vÆ
[0] & 0xff)

	)

44 
	#makedev
(
maj‹
, 
mö‹
) { (((() (major)) << 8) \

45 | ((Ë(
mö‹
))), 0 }

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/uio.h

19 #i‚de‡
_SYS_UIO_H


20 
	#_SYS_UIO_H
 1

	)

22 
	~<„©uªs.h
>

24 
	~<sys/ty≥s.h
>

26 
	g__BEGIN_DECLS


29 
	~<bôs/uio.h
>

37 
ssize_t
 
	$ªadv
 (
__fd
, 
__c⁄°
 
iovec
 *
__ve˘‹
, 
__cou¡
)

38 
__THROW
;

45 
ssize_t
 
	$wrôev
 (
__fd
, 
__c⁄°
 
iovec
 *
__ve˘‹
, 
__cou¡
)

46 
__THROW
;

48 
__END_DECLS


	@/usr/include/ucontext.h

21 #i‚de‡
_UCONTEXT_H


22 
	#_UCONTEXT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<sys/uc⁄ãxt.h
>

29 
__BEGIN_DECLS


32 

	$gëc⁄ãxt
 (
uc⁄ãxt_t
 *
__u˝
Ë
__THROW
;

35 

	$£tc⁄ãxt
 (
__c⁄°
 
uc⁄ãxt_t
 *
__u˝
Ë
__THROW
;

39 

	$sw≠c⁄ãxt
 (
uc⁄ãxt_t
 *
__ª°ri˘
 
__ou˝
,

40 
__c⁄°
 
uc⁄ãxt_t
 *
__ª°ri˘
 
__u˝
Ë
__THROW
;

48 

	`makec⁄ãxt
 (
uc⁄ãxt_t
 *
__u˝
, (*
__func
) (),

49 
__¨gc
, ...Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

37 } *
	t__loˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 
	#__√ed_wch¨_t


	)

12 
	#__√ed_wöt_t


	)

13 
	#__√ed_NULL


	)

14 
	~<°ddef.h
>

15 #i‚de‡
_WINT_T


20 
	#_WINT_T


	)

21 
	twöt_t
;

23 
	#__√ed_mb°©e_t


	)

24 
	~<wch¨.h
>

25 
	#_G_size_t
 
size_t


	)

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 
	#_G_ssize_t
 
__ssize_t


	)

37 
	#_G_off_t
 
__off_t


	)

38 
	#_G_off64_t
 
__off64_t


	)

39 
	#_G_pid_t
 
__pid_t


	)

40 
	#_G_uid_t
 
__uid_t


	)

41 
	#_G_wch¨_t
 
wch¨_t


	)

42 
	#_G_wöt_t
 
wöt_t


	)

43 
	#_G_°©64
 
°©64


	)

44 
	~<gc⁄v.h
>

47 
__gc⁄v_öfo
 
	m__cd
;

50 
__gc⁄v_öfo
 
	m__cd
;

51 
__gc⁄v_°ï_d©a
 
	m__d©a
;

52 } 
	m__comböed
;

53 } 
	t_G_ic⁄v_t
;

55 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

57 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

58 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

60 
	#_G_HAVE_BOOL
 1

	)

64 
	#_G_HAVE_ATEXIT
 1

	)

65 
	#_G_HAVE_SYS_CDEFS
 1

	)

66 
	#_G_HAVE_SYS_WAIT
 1

	)

67 
	#_G_NEED_STDARG_H
 1

	)

68 
	#_G_va_li°
 
__gnuc_va_li°


	)

70 
	#_G_HAVE_PRINTF_FP
 1

	)

71 
	#_G_HAVE_MMAP
 1

	)

72 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

73 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

74 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

76 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

78 
	#_G_OPEN64
 
__›í64


	)

79 
	#_G_LSEEK64
 
__l£ek64


	)

80 
	#_G_MMAP64
 
__mm≠64


	)

81 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

84 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

86 
	#_G_BUFSIZ
 8192

	)

89 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

90 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

91 
	#_G_USING_THUNKS
 1

	)

92 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

93 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

96 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


97 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

99 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 #i‚de‡
__ARCH_I386_IOCTLS_H__


2 
	#__ARCH_I386_IOCTLS_H__


	)

4 
	~<asm/io˘l.h
>

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#FIONREAD
 0x541B

	)

35 
	#TIOCINQ
 
FIONREAD


	)

36 
	#TIOCLINUX
 0x541C

	)

37 
	#TIOCCONS
 0x541D

	)

38 
	#TIOCGSERIAL
 0x541E

	)

39 
	#TIOCSSERIAL
 0x541F

	)

40 
	#TIOCPKT
 0x5420

	)

41 
	#FIONBIO
 0x5421

	)

42 
	#TIOCNOTTY
 0x5422

	)

43 
	#TIOCSETD
 0x5423

	)

44 
	#TIOCGETD
 0x5424

	)

45 
	#TCSBRKP
 0x5425

	)

46 
	#TIOCTTYGSTRUCT
 0x5426

	)

47 
	#TIOCSBRK
 0x5427

	)

48 
	#TIOCCBRK
 0x5428

	)

49 
	#TIOCGSID
 0x5429

	)

50 
	#TIOCGPTN
 
	`_IOR
('T',0x30, Ë

	)

51 
	#TIOCSPTLCK
 
	`_IOW
('T',0x31, Ë

	)

53 
	#FIONCLEX
 0x5450

	)

54 
	#FIOCLEX
 0x5451

	)

55 
	#FIOASYNC
 0x5452

	)

56 
	#TIOCSERCONFIG
 0x5453

	)

57 
	#TIOCSERGWILD
 0x5454

	)

58 
	#TIOCSERSWILD
 0x5455

	)

59 
	#TIOCGLCKTRMIOS
 0x5456

	)

60 
	#TIOCSLCKTRMIOS
 0x5457

	)

61 
	#TIOCSERGSTRUCT
 0x5458

	)

62 
	#TIOCSERGETLSR
 0x5459

	)

63 
	#TIOCSERGETMULTI
 0x545A

	)

64 
	#TIOCSERSETMULTI
 0x545B

	)

66 
	#TIOCMIWAIT
 0x545C

	)

67 
	#TIOCGICOUNT
 0x545D

	)

68 
	#TIOCGHAYESESP
 0x545E

	)

69 
	#TIOCSHAYESESP
 0x545F

	)

70 
	#FIOQSIZE
 0x5460

	)

73 
	#TIOCPKT_DATA
 0

	)

74 
	#TIOCPKT_FLUSHREAD
 1

	)

75 
	#TIOCPKT_FLUSHWRITE
 2

	)

76 
	#TIOCPKT_STOP
 4

	)

77 
	#TIOCPKT_START
 8

	)

78 
	#TIOCPKT_NOSTOP
 16

	)

79 
	#TIOCPKT_DOSTOP
 32

	)

81 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm/param.h

1 #i‚de‡
_ASMi386_PARAM_H


2 
	#_ASMi386_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 
	#EXEC_PAGESIZE
 4096

	)

10 #i‚de‡
NGROUPS


11 
	#NGROUPS
 32

	)

14 #i‚de‡
NOGROUP


15 
	#NOGROUP
 (-1)

	)

18 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASMi386_SIGCONTEXT_H


2 
	#_ASMi386_SIGCONTEXT_H


	)

18 
	s_Âªg
 {

19 
	msignifiˇnd
[4];

20 
	mexp⁄ít
;

23 
	s_Âxªg
 {

24 
	msignifiˇnd
[4];

25 
	mexp⁄ít
;

26 
	m∑ddög
[3];

29 
	s_xmmªg
 {

30 
	mñemít
[4];

33 
	s_Â°©e
 {

35 
	mcw
;

36 
	msw
;

37 
	mèg
;

38 
	mùoff
;

39 
	mcs£l
;

40 
	md©aoff
;

41 
	md©a£l
;

42 
_Âªg
 
	m_°
[8];

43 
	m°©us
;

44 
	mmagic
;

47 
	m_fx§_ív
[6];

48 
	mmxc§
;

49 
	mª£rved
;

50 
_Âxªg
 
	m_fx§_°
[8];

51 
_xmmªg
 
	m_xmm
[8];

52 
	m∑ddög
[56];

55 
	#X86_FXSR_MAGIC
 0x0000

	)

57 
	ssigc⁄ãxt
 {

58 
	mgs
, 
	m__gsh
;

59 
	mfs
, 
	m__fsh
;

60 
	mes
, 
	m__esh
;

61 
	mds
, 
	m__dsh
;

62 
	medi
;

63 
	mesi
;

64 
	mebp
;

65 
	me•
;

66 
	mebx
;

67 
	medx
;

68 
	mecx
;

69 
	móx
;

70 
	må≠no
;

71 
	mîr
;

72 
	meù
;

73 
	mcs
, 
	m__csh
;

74 
	meÊags
;

75 
	me•_©_sig«l
;

76 
	mss
, 
	m__ssh
;

77 
_Â°©e
 * 
	mÂ°©e
;

78 
	mﬁdmask
;

79 
	m¸2
;

	@/usr/include/asm/socket.h

1 #i‚de‡
_ASM_SOCKET_H


2 
	#_ASM_SOCKET_H


	)

4 
	~<asm/sockios.h
>

7 
	#SOL_SOCKET
 1

	)

9 
	#SO_DEBUG
 1

	)

10 
	#SO_REUSEADDR
 2

	)

11 
	#SO_TYPE
 3

	)

12 
	#SO_ERROR
 4

	)

13 
	#SO_DONTROUTE
 5

	)

14 
	#SO_BROADCAST
 6

	)

15 
	#SO_SNDBUF
 7

	)

16 
	#SO_RCVBUF
 8

	)

17 
	#SO_KEEPALIVE
 9

	)

18 
	#SO_OOBINLINE
 10

	)

19 
	#SO_NO_CHECK
 11

	)

20 
	#SO_PRIORITY
 12

	)

21 
	#SO_LINGER
 13

	)

22 
	#SO_BSDCOMPAT
 14

	)

24 
	#SO_PASSCRED
 16

	)

25 
	#SO_PEERCRED
 17

	)

26 
	#SO_RCVLOWAT
 18

	)

27 
	#SO_SNDLOWAT
 19

	)

28 
	#SO_RCVTIMEO
 20

	)

29 
	#SO_SNDTIMEO
 21

	)

32 
	#SO_SECURITY_AUTHENTICATION
 22

	)

33 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

34 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

36 
	#SO_BINDTODEVICE
 25

	)

39 
	#SO_ATTACH_FILTER
 26

	)

40 
	#SO_DETACH_FILTER
 27

	)

42 
	#SO_PEERNAME
 28

	)

43 
	#SO_TIMESTAMP
 29

	)

44 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

46 
	#SO_ACCEPTCONN
 30

	)

49 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

51 
	#SOCK_STREAM
 1

	)

52 
	#SOCK_DGRAM
 2

	)

53 
	#SOCK_RAW
 3

	)

54 
	#SOCK_RDM
 4

	)

55 
	#SOCK_SEQPACKET
 5

	)

56 
	#SOCK_PACKET
 10

	)

61 
	#SOCK_MAX
 (
SOCK_PACKET
+1)

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

36 
	~<löux/limôs.h
>

39 #ifde‡
__undef_NR_OPEN


40 #unde‡
NR_OPEN


41 #unde‡
__undef_NR_OPEN


44 #ifde‡
__undef_LINK_MAX


45 #unde‡
LINK_MAX


46 #unde‡
__undef_LINK_MAX


49 #ifde‡
__undef_OPEN_MAX


50 #unde‡
OPEN_MAX


51 #unde‡
__undef_OPEN_MAX


55 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

57 
	#PTHREAD_KEYS_MAX
 1024

	)

60 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

62 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

65 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

67 
	#PTHREAD_THREADS_MAX
 1024

	)

71 
	#AIO_PRIO_DELTA_MAX
 20

	)

74 
	#PTHREAD_STACK_MIN
 16384

	)

77 
	#TIMER_MAX
 256

	)

80 
	#DELAYTIMER_MAX
 2147483647

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/pthreadtypes.h

15 #i‡!
deföed
 
_BITS_TYPES_H
 && !deföed 
_PTHREAD_H


19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__√ed_sched∑øm


	)

23 
	~<bôs/sched.h
>

26 
	s_±hªad_Á°lock


28 
	m__°©us
;

29 
	m__•ölock
;

33 #i‚de‡
_PTHREAD_DESCR_DEFINED


35 
_±hªad_des¸_°ru˘
 *
	t_±hªad_des¸
;

36 
	#_PTHREAD_DESCR_DEFINED


	)

41 
	s__±hªad_©å_s


43 
	m__dëach°©e
;

44 
	m__schedpﬁicy
;

45 
__sched_∑øm
 
	m__sched∑øm
;

46 
	m__öhîôsched
;

47 
	m__sc›e
;

48 
size_t
 
	m__gu¨dsize
;

49 
	m__°ackaddr_£t
;

50 *
	m__°ackaddr
;

51 
size_t
 
	m__°acksize
;

52 } 
	t±hªad_©å_t
;

58 
_±hªad_Á°lock
 
	m__c_lock
;

59 
_±hªad_des¸
 
	m__c_waôög
;

60 } 
	t±hªad_c⁄d_t
;

66 
	m__dummy
;

67 } 
	t±hªad_c⁄d©å_t
;

70 
	t±hªad_key_t
;

78 
	m__m_ª£rved
;

79 
	m__m_cou¡
;

80 
_±hªad_des¸
 
	m__m_ow√r
;

81 
	m__m_köd
;

82 
_±hªad_Á°lock
 
	m__m_lock
;

83 } 
	t±hªad_muãx_t
;

89 
	m__muãxköd
;

90 } 
	t±hªad_muãx©å_t
;

94 
	t±hªad_⁄˚_t
;

97 #ifde‡
__USE_UNIX98


99 
	s_±hªad_rwlock_t


101 
_±hªad_Á°lock
 
	m__rw_lock
;

102 
	m__rw_ªadîs
;

103 
_±hªad_des¸
 
	m__rw_wrôî
;

104 
_±hªad_des¸
 
	m__rw_ªad_waôög
;

105 
_±hªad_des¸
 
	m__rw_wrôe_waôög
;

106 
	m__rw_köd
;

107 
	m__rw_psh¨ed
;

108 } 
	t±hªad_rwlock_t
;

114 
	m__lockköd
;

115 
	m__psh¨ed
;

116 } 
	t±hªad_rwlock©å_t
;

119 #ifde‡
__USE_XOPEN2K


121 vﬁ©ûê
	t±hªad_•ölock_t
;

125 
_±hªad_Á°lock
 
	m__ba_lock
;

126 
	m__ba_ªquúed
;

127 
	m__ba_¥e£¡
;

128 
_±hªad_des¸
 
	m__ba_waôög
;

129 } 
	t±hªad_b¨rõr_t
;

133 
	m__psh¨ed
;

134 } 
	t±hªad_b¨rõøâr_t
;

140 
	t±hªad_t
;

	@/usr/include/bits/sockaddr.h

24 #i‚de‡
_BITS_SOCKADDR_H


25 
	#_BITS_SOCKADDR_H
 1

	)

29 
	tß_Ámûy_t
;

35 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

36 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

38 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

40 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

41 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

42 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

43 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

44 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

45 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

	@/usr/include/bits/uio.h

19 #i‚de‡
_SYS_UIO_H


24 
	~<sys/ty≥s.h
>

38 
	#UIO_MAXIOV
 1024

	)

42 
	siovec


44 *
	miov_ba£
;

45 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs.h

5 
	#__°ub___kî√l_co¶


	)

6 
	#__°ub___kî√l_söl


	)

7 
	#__°ub___kî√l_è∆


	)

8 
	#__°ub_chÊags


	)

9 
	#__°ub_Áâach


	)

10 
	#__°ub_fchÊags


	)

11 
	#__°ub_fdëach


	)

12 
	#__°ub_„xecve


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_posix_Ádvi£


	)

15 
	#__°ub_posix_Ádvi£64


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


35 #unde‡
__P


36 #unde‡
__PMT


38 #ifde‡
__GNUC__


43 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

44 
	#__THROW
 
	`throw
 ()

	)

46 
	#__THROW


	)

48 
	#__P
(
¨gs
Ë¨g†
__THROW


	)

51 
	#__PMT
(
¨gs
Ë
	)
args

55 
	#__ölöe


	)

57 
	#__THROW


	)

58 
	#__P
(
¨gs
Ë
	)
args

59 
	#__PMT
(
¨gs
Ë
	)
args

61 
	#__c⁄°
 c⁄°

	)

62 
	#__sig√d
 sig√d

	)

63 
	#__vﬁ©ûe
 vﬁ©ûe

	)

70 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

71 
	#__STRING
(
x
Ë#x

	)

74 
	#__±r_t
 *

	)

75 
	#__l⁄g_doubÀ_t
 

	)

79 #ifdef 
__˝lu•lus


80 
	#__BEGIN_DECLS
 
"C" {

	)

81 
	#__END_DECLS
 }

	)

83 
	#__BEGIN_DECLS


	)

84 
	#__END_DECLS


	)

89 #i‚de‡
__BOUNDED_POINTERS__


90 
	#__bounded


	)

91 
	#__unbounded


	)

92 
	#__±rvÆue


	)

97 #i‡
__GNUC_PREREQ
 (2,97)

99 
	#__Êex¨r
 []

	)

101 #ifde‡
__GNUC__


102 
	#__Êex¨r
 [0]

	)

104 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

105 
	#__Êex¨r
 []

	)

108 
	#__Êex¨r
 [1]

	)

124 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

126 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

127 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

128 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

141 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

142 
	#__©åibuã__
(
xyz
Ë

	)

148 #i‡
__GNUC_PREREQ
 (2,96)

149 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

151 
	#__©åibuã_mÆloc__


	)

157 #i‡
__GNUC_PREREQ
 (2,96)

158 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

160 
	#__©åibuã_puª__


	)

166 #i‡
__GNUC_PREREQ
 (3,1)

167 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

168 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

170 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

171 
	#__©åibuã_noölöe__


	)

180 #i‡
__GNUC_PREREQ
 (2,8)

181 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

183 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

190 #i‡
__GNUC_PREREQ
 (2,97)

191 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

192 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

194 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

201 #i‡!
__GNUC_PREREQ
 (2,8)

202 
	#__exãnsi⁄__


	)

206 #i‡!
__GNUC_PREREQ
 (2,92)

207 
	#__ª°ri˘


	)

213 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


214 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

216 #ifde‡
__GNUC__


217 
	#__ª°ri˘_¨r


	)

219 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

220 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

223 
	#__ª°ri˘_¨r


	)

	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/asm/errno.h

1 #i‚de‡
_I386_ERRNO_H


2 
	#_I386_ERRNO_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

38 
	#EDEADLK
 35

	)

39 
	#ENAMETOOLONG
 36

	)

40 
	#ENOLCK
 37

	)

41 
	#ENOSYS
 38

	)

42 
	#ENOTEMPTY
 39

	)

43 
	#ELOOP
 40

	)

44 
	#EWOULDBLOCK
 
EAGAIN


	)

45 
	#ENOMSG
 42

	)

46 
	#EIDRM
 43

	)

47 
	#ECHRNG
 44

	)

48 
	#EL2NSYNC
 45

	)

49 
	#EL3HLT
 46

	)

50 
	#EL3RST
 47

	)

51 
	#ELNRNG
 48

	)

52 
	#EUNATCH
 49

	)

53 
	#ENOCSI
 50

	)

54 
	#EL2HLT
 51

	)

55 
	#EBADE
 52

	)

56 
	#EBADR
 53

	)

57 
	#EXFULL
 54

	)

58 
	#ENOANO
 55

	)

59 
	#EBADRQC
 56

	)

60 
	#EBADSLT
 57

	)

62 
	#EDEADLOCK
 
EDEADLK


	)

64 
	#EBFONT
 59

	)

65 
	#ENOSTR
 60

	)

66 
	#ENODATA
 61

	)

67 
	#ETIME
 62

	)

68 
	#ENOSR
 63

	)

69 
	#ENONET
 64

	)

70 
	#ENOPKG
 65

	)

71 
	#EREMOTE
 66

	)

72 
	#ENOLINK
 67

	)

73 
	#EADV
 68

	)

74 
	#ESRMNT
 69

	)

75 
	#ECOMM
 70

	)

76 
	#EPROTO
 71

	)

77 
	#EMULTIHOP
 72

	)

78 
	#EDOTDOT
 73

	)

79 
	#EBADMSG
 74

	)

80 
	#EOVERFLOW
 75

	)

81 
	#ENOTUNIQ
 76

	)

82 
	#EBADFD
 77

	)

83 
	#EREMCHG
 78

	)

84 
	#ELIBACC
 79

	)

85 
	#ELIBBAD
 80

	)

86 
	#ELIBSCN
 81

	)

87 
	#ELIBMAX
 82

	)

88 
	#ELIBEXEC
 83

	)

89 
	#EILSEQ
 84

	)

90 
	#ERESTART
 85

	)

91 
	#ESTRPIPE
 86

	)

92 
	#EUSERS
 87

	)

93 
	#ENOTSOCK
 88

	)

94 
	#EDESTADDRREQ
 89

	)

95 
	#EMSGSIZE
 90

	)

96 
	#EPROTOTYPE
 91

	)

97 
	#ENOPROTOOPT
 92

	)

98 
	#EPROTONOSUPPORT
 93

	)

99 
	#ESOCKTNOSUPPORT
 94

	)

100 
	#EOPNOTSUPP
 95

	)

101 
	#EPFNOSUPPORT
 96

	)

102 
	#EAFNOSUPPORT
 97

	)

103 
	#EADDRINUSE
 98

	)

104 
	#EADDRNOTAVAIL
 99

	)

105 
	#ENETDOWN
 100

	)

106 
	#ENETUNREACH
 101

	)

107 
	#ENETRESET
 102

	)

108 
	#ECONNABORTED
 103

	)

109 
	#ECONNRESET
 104

	)

110 
	#ENOBUFS
 105

	)

111 
	#EISCONN
 106

	)

112 
	#ENOTCONN
 107

	)

113 
	#ESHUTDOWN
 108

	)

114 
	#ETOOMANYREFS
 109

	)

115 
	#ETIMEDOUT
 110

	)

116 
	#ECONNREFUSED
 111

	)

117 
	#EHOSTDOWN
 112

	)

118 
	#EHOSTUNREACH
 113

	)

119 
	#EALREADY
 114

	)

120 
	#EINPROGRESS
 115

	)

121 
	#ESTALE
 116

	)

122 
	#EUCLEAN
 117

	)

123 
	#ENOTNAM
 118

	)

124 
	#ENAVAIL
 119

	)

125 
	#EISNAM
 120

	)

126 
	#EREMOTEIO
 121

	)

127 
	#EDQUOT
 122

	)

129 
	#ENOMEDIUM
 123

	)

130 
	#EMEDIUMTYPE
 124

	)

	@/usr/include/asm/ioctl.h

6 #i‚de‡
_ASMI386_IOCTL_H


7 
	#_ASMI386_IOCTL_H


	)

27 
	#_IOC_NRBITS
 8

	)

28 
	#_IOC_TYPEBITS
 8

	)

29 
	#_IOC_SIZEBITS
 14

	)

30 
	#_IOC_DIRBITS
 2

	)

32 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

33 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

34 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

35 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

37 
	#_IOC_NRSHIFT
 0

	)

38 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

39 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

40 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

45 
	#_IOC_NONE
 0U

	)

46 
	#_IOC_WRITE
 1U

	)

47 
	#_IOC_READ
 2U

	)

49 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

50 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

51 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

52 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

53 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

56 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

57 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

58 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

59 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

62 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

63 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

64 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

65 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

69 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

70 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

71 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

72 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

73 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm/sockios.h

1 #i‚de‡
__ARCH_I386_SOCKIOS__


2 
	#__ARCH_I386_SOCKIOS__


	)

5 
	#FIOSETOWN
 0x8901

	)

6 
	#SIOCSPGRP
 0x8902

	)

7 
	#FIOGETOWN
 0x8903

	)

8 
	#SIOCGPGRP
 0x8904

	)

9 
	#SIOCATMARK
 0x8905

	)

10 
	#SIOCGSTAMP
 0x8906

	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

26 #i‡
deföed
(
_LIBC
Ë|| deföed(
_IO_MTSAFE_IO
)

27 
±hªad_muãx_t
 
	t__libc_lock_t
;

28 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

29 #ifde‡
__USE_UNIX98


30 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

32 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_›aque__
 
	t__libc_lock_t
;

36 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

37 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

41 
±hªad_key_t
 
	t__libc_key_t
;

50 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

51 
CLASS
 
__libc_lock_t
 
NAME
;

	)

52 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

54 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

66 #i‡
__LT_SPINLOCK_INIT
 == 0

67 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

68 
CLASS
 
__libc_lock_t
 
NAME
;

	)

70 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

71 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

74 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

79 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

81 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

82 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

86 
	#__libc_lock_öô
(
NAME
) \

87 (
__±hªad_muãx_öô
 !
NULL
 ? 
	`__±hªad_muãx_öô
 (&(
NAME
), NULLË: 0);

	)

88 
	#__libc_rwlock_öô
(
NAME
) \

89 (
__±hªad_rwlock_öô
 !
NULL
 ? 
	`__±hªad_rwlock_öô
 (&(
NAME
), NULLË: 0);

	)

92 
	#__libc_lock_öô_ªcursive
(
NAME
) \

94 i‡(
__±hªad_muãx_öô
 !
NULL
) \

96 
±hªad_muãx©å_t
 
__©å
; \

97 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

98 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

99 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

100 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

102 } 0);

	)

107 
	#__libc_lock_föi
(
NAME
) \

108 (
__±hªad_muãx_de°roy
 !
NULL
 ? 
	`__±hªad_muãx_de°roy
 (&(
NAME
)Ë: 0);

	)

109 
	#__libc_rwlock_föi
(
NAME
) \

110 (
__±hªad_rwlock_de°roy
 !
NULL
 ? 
	`__±hªad_rwlock_de°roy
 (&(
NAME
)Ë: 0);

	)

113 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

116 
	#__libc_lock_lock
(
NAME
) \

117 (
__±hªad_muãx_lock
 !
NULL
 ? 
	`__±hªad_muãx_lock
 (&(
NAME
)Ë: 0);

	)

118 
	#__libc_rwlock_rdlock
(
NAME
) \

119 (
__±hªad_rwlock_rdlock
 !
NULL
 ? 
	`__±hªad_rwlock_rdlock
 (&(
NAME
)Ë: 0);

	)

120 
	#__libc_rwlock_wæock
(
NAME
) \

121 (
__±hªad_rwlock_wæock
 !
NULL
 ? 
	`__±hªad_rwlock_wæock
 (&(
NAME
)Ë: 0);

	)

124 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

127 
	#__libc_lock_åylock
(
NAME
) \

128 (
__±hªad_muãx_åylock
 !
NULL
 ? 
	`__±hªad_muãx_åylock
 (&(
NAME
)Ë: 0)

	)

129 
	#__libc_rwlock_åyrdlock
(
NAME
) \

130 (
__±hªad_rwlock_åyrdlock
 !
NULL
 \

131 ? 
	`__±hªad_rwlock_åyrdlock
 (&(
NAME
)Ë: 0)

	)

132 
	#__libc_rwlock_åywæock
(
NAME
) \

133 (
__±hªad_rwlock_åywæock
 !
NULL
 \

134 ? 
	`__±hªad_rwlock_åywæock
 (&(
NAME
)Ë: 0)

	)

137 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

140 
	#__libc_lock_u∆ock
(
NAME
) \

141 (
__±hªad_muãx_u∆ock
 !
NULL
 ? 
	`__±hªad_muãx_u∆ock
 (&(
NAME
)Ë: 0);

	)

142 
	#__libc_rwlock_u∆ock
(
NAME
) \

143 (
__±hªad_rwlock_u∆ock
 !
NULL
 ? 
	`__±hªad_rwlock_u∆ock
 (&(
NAME
)Ë: 0);

	)

146 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

150 #i‡
PTHREAD_ONCE_INIT
 == 0

153 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

154 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

156 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

157 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

161 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

163 i‡(
__±hªad_⁄˚
 !
NULL
) \

164 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

165 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

166 
	`INIT_FUNCTION
 (); \

167 (
ONCE_CONTROL
Ë!
PTHREAD_ONCE_INIT
; \

169 } 0)

	)

173 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

174 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

175 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

176 i‡(
_avaû
) { \

177 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

178 }

	)

181 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

182 i‡(
_avaû
) { \

183 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

185 }

	)

188 
	#__libc_˛ónup_íd
(
DOIT
) \

189 i‡(
_avaû
) { \

190 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

191 }

	)

194 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

195 (
__±hªad_key_¸óã
 !
NULL
 ? 
	`__±hªad_key_¸óã
 (
KEY
, 
DESTRUCTOR
Ë: 1)

	)

198 
	#__libc_gë•ecific
(
KEY
) \

199 (
__±hªad_gë•ecific
 !
NULL
 ? 
	`__±hªad_gë•ecific
 (
KEY
Ë: NULL)

	)

202 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

203 (
__±hªad_£t•ecific
 !
NULL
 ? 
	`__±hªad_£t•ecific
 (
KEY
, 
VALUE
Ë: 0)

	)

207 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

208 (
__±hªad_©f‹k
 !
NULL
 ? 
	`__±hªad_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
Ë: 0)

	)

213 

__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

214 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

216 

__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

218 

__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

220 

__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

222 

__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

224 

__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

226 

__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

228 

__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

229 
__köd
);

231 #ifde‡
__USE_UNIX98


232 

__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

233 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

235 

__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

237 

__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

239 

__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

241 

__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

243 

__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

245 

__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

248 

__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

249 (*
__de°r_fun˘i⁄
) (*));

251 

	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

252 
__c⁄°
 *
__poöãr
);

254 
*
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

256 

	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

257 (*
__öô_routöe
) ());

259 

	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

260 (*
__∑ª¡
) (),

261 (*
__chûd
) ());

267 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


268 #ifde‡
wók_exã∫


269 #i‡
_LIBC


270 
	~<bp-sym.h
>

272 
	#BP_SYM
 (
sym
Ë
	)
sym

274 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

275 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

276 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

277 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

278 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

279 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

280 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

281 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

282 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

283 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

284 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

285 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

286 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

287 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

288 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

289 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

290 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

291 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

292 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

293 
	$wók_exã∫
 (
__±hªad_öôülize
)

294 
	$wók_exã∫
 (
__±hªad_©f‹k
)

295 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

296 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

298 #¥agm®
wók
 
__±hªad_muãx_öô


299 #¥agm®
wók
 
__±hªad_muãx_de°roy


300 #¥agm®
wók
 
__±hªad_muãx_lock


301 #¥agm®
wók
 
__±hªad_muãx_åylock


302 #¥agm®
wók
 
__±hªad_muãx_u∆ock


303 #¥agm®
wók
 
__±hªad_muãx©å_öô


304 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


305 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


306 #¥agm®
wók
 
__±hªad_rwlock_de°roy


307 #¥agm®
wók
 
__±hªad_rwlock_rdlock


308 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


309 #¥agm®
wók
 
__±hªad_rwlock_wæock


310 #¥agm®
wók
 
__±hªad_rwlock_åywæock


311 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


312 #¥agm®
wók
 
__±hªad_key_¸óã


313 #¥agm®
wók
 
__±hªad_£t•ecific


314 #¥agm®
wók
 
__±hªad_gë•ecific


315 #¥agm®
wók
 
__±hªad_⁄˚


316 #¥agm®
wók
 
__±hªad_öôülize


317 #¥agm®
wók
 
__±hªad_©f‹k


318 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


319 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


325 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/sched.h

21 #i‚de‡
__√ed_sched∑øm


23 #i‚de‡
_SCHED_H


29 
	#SCHED_OTHER
 0

	)

30 
	#SCHED_FIFO
 1

	)

31 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_MISC


35 
	#CSIGNAL
 0x000000f‡

	)

36 
	#CLONE_VM
 0x00000100

	)

37 
	#CLONE_FS
 0x00000200

	)

38 
	#CLONE_FILES
 0x00000400

	)

39 
	#CLONE_SIGHAND
 0x00000800

	)

40 
	#CLONE_PID
 0x00001000

	)

41 
	#CLONE_PTRACE
 0x00002000

	)

42 
	#CLONE_VFORK
 0x00004000

	)

47 
	ssched_∑øm


49 
	m__sched_¥i‹ôy
;

52 
	g__BEGIN_DECLS


55 #ifde‡
__USE_MISC


56 

˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

57 
__Êags
, *
__¨g
Ë
__THROW
;

60 
__END_DECLS


64 #i‡!
deföed
 
__deföed_sched∑øm
 \

65 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

66 
	#__deföed_sched∑øm
 1

	)

68 
	s__sched_∑øm


70 
__sched_¥i‹ôy
;

72 #unde‡
__√ed_sched∑øm


	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

63 
	g__gc⁄v_°ï
;

64 
	g__gc⁄v_°ï_d©a
;

65 
	g__gc⁄v_lﬂded_obje˘
;

66 
	g__gc⁄v_å™s_d©a
;

70 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

71 
	t__c⁄°
 **, __const *,

72 **, 
	tsize_t
 *, , );

75 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

76 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

81 
	t__gc⁄v_°ï_d©a
 *, *,

82 
	t__c⁄°
 *,

83 
	t__c⁄°
 **,

84 
	t__c⁄°
 *, **,

85 
	tsize_t
 *);

88 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

89 
	t__c⁄°
 *,

93 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

94 
	tsize_t
 *);

97 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

98 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

100 
	s__gc⁄v_å™s_d©a


103 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

104 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

105 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

106 *
__d©a
;

107 
__gc⁄v_å™s_d©a
 *
__√xt
;

112 
	s__gc⁄v_°ï


114 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

115 
__c⁄°
 *
__mod«me
;

117 
__cou¡î
;

119 *
__‰om_«me
;

120 *
__to_«me
;

122 
__gc⁄v_f˘
 
__f˘
;

123 
__gc⁄v_öô_f˘
 
__öô_f˘
;

124 
__gc⁄v_íd_f˘
 
__íd_f˘
;

128 
__mö_√eded_‰om
;

129 
__max_√eded_‰om
;

130 
__mö_√eded_to
;

131 
__max_√eded_to
;

134 
__°©eful
;

136 *
__d©a
;

141 
	s__gc⁄v_°ï_d©a


143 *
__outbuf
;

144 *
__outbu„nd
;

148 
__Êags
;

152 
__övoˇti⁄_cou¡î
;

156 
__öã∫Æ_u£
;

158 
__mb°©e_t
 *
__°©ï
;

159 
__mb°©e_t
 
__°©e
;

163 
__gc⁄v_å™s_d©a
 *
__å™s
;

168 
	s__gc⁄v_öfo


170 
size_t
 
__n°ïs
;

171 
__gc⁄v_°ï
 *
__°ïs
;

172 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

173 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‚de‡
__√ed_mb°©e_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #ifde‡
__USE_UNIX98


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

43 
	#__√ed_size_t


	)

44 
	#__√ed_wch¨_t


	)

45 
	#__√ed_NULL


	)

47 
	#__√ed_wöt_t


	)

48 
	~<°ddef.h
>

50 
	~<bôs/wch¨.h
>

54 #i‚de‡
_WINT_T


59 
	#_WINT_T


	)

60 
	twöt_t
;

64 #i‚de‡
__mb°©e_t_deföed


65 
	#__mb°©e_t_deföed
 1

	)

69 
	m__cou¡
;

72 
wöt_t
 
	m__wch
;

73 
	m__wchb
[4];

74 } 
	m__vÆue
;

75 } 
	t__mb°©e_t
;

77 #unde‡
__√ed_mb°©e_t


82 #ifde‡
_WCHAR_H


85 
__mb°©e_t
 
	tmb°©e_t
;

87 #i‚de‡
WCHAR_MIN


89 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

90 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

93 #i‚de‡
WEOF


94 
	#WEOF
 (0xffffffffu)

	)

99 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


100 
	~<w˘y≥.h
>

105 
	gtm
;

108 
__BEGIN_DECLS


111 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

112 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

114 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

115 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

116 
__THROW
;

119 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

120 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

122 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

123 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

124 
__THROW
;

127 

	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

128 
__THROW
 
__©åibuã_puª__
;

130 

	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

131 
__THROW
 
__©åibuã_puª__
;

133 #ifde‡
__USE_GNU


135 

	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

138 

	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

139 
size_t
 
__n
Ë
__THROW
;

143 
	~<xloˇÀ.h
>

145 

	$__wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

146 
__loˇÀ_t
 
__loc
Ë
__THROW
;

148 

	$__wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

149 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

154 

	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

158 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

159 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

161 #ifde‡
__USE_GNU


167 

	$__wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

168 
__loˇÀ_t
 
__loc
Ë
__THROW
;

172 
size_t
 
	$__wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

173 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

176 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

180 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

181 
__THROW
 
__©åibuã_puª__
;

183 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

184 
__THROW
 
__©åibuã_puª__
;

186 #ifde‡
__USE_GNU


189 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

190 
__THROW
 
__©åibuã_puª__
;

195 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

196 
__THROW
 
__©åibuã_puª__
;

199 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

200 
__THROW
 
__©åibuã_puª__
;

202 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

203 
__THROW
 
__©åibuã_puª__
;

205 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

206 
__THROW
 
__©åibuã_puª__
;

208 #ifde‡
__USE_XOPEN


210 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

211 
__THROW
 
__©åibuã_puª__
;

215 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

216 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

217 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

220 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

222 #ifde‡
__USE_GNU


224 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

225 
__THROW
 
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

231 
__THROW
 
__©åibuã_puª__
;

234 

	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

235 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

236 
__THROW
 
__©åibuã_puª__
;

239 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

244 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

245 
__THROW
;

248 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

250 #ifde‡
__USE_GNU


253 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

254 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

255 
__THROW
;

261 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

265 

	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

269 

	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

273 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

274 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
mb°©e_t
 *
__p
Ë
__THROW
;

278 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

279 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

282 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

283 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

284 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

285 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

287 #ifde‡
__USE_EXTERN_INLINES


289 
__ölöe
 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

290 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW


291 {  (
__ps
 !
NULL


292 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

297 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

298 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

299 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

303 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

304 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

305 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

308 #ifdef 
__USE_GNU


311 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

312 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

313 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

317 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

318 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

319 
size_t
 
__nwc
, size_à
__Àn
,

320 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

325 #ifde‡
__USE_XOPEN


327 

	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

331 

	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

337 

	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

338 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

340 #ifde‡
__USE_ISOC99


342 

	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

343 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

344 

	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

345 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

351 

	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

352 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

356 

	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

357 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

358 
__THROW
;

360 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


363 
__exãnsi⁄__


364 

	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

365 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

366 
__THROW
;

370 
__exãnsi⁄__


371 

	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

372 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
Ë
__THROW
;

376 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

379 
__exãnsi⁄__


380 

	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

381 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

382 
__THROW
;

386 
__exãnsi⁄__


387 

	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

388 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

389 
__ba£
Ë
__THROW
;

392 #ifde‡
__USE_GNU


406 
	~<xloˇÀ.h
>

410 

	$__wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

411 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

412 
__loˇÀ_t
 
__loc
Ë
__THROW
;

414 

	$__wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

415 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

416 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

418 
__exãnsi⁄__


419 

	$__wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

420 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

421 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

423 
__exãnsi⁄__


424 

	$__wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

425 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

426 
__ba£
, 
__loˇÀ_t
 
__loc
)

427 
__THROW
;

429 

	$__wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

430 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

431 
__THROW
;

433 

	$__wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

434 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

435 
__THROW
;

437 

	$__wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

439 
__loˇÀ_t
 
__loc
Ë
__THROW
;

445 

	$__wc°od_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

446 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

447 
__THROW
;

448 

	$__wc°of_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__group
)

450 
__THROW
;

451 

	$__wc°ﬁd_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

452 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

453 
__group
Ë
__THROW
;

455 #i‚de‡
__wc°ﬁ_öã∫Æ_deföed


456 

	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

458 
__ba£
, 
__group
Ë
__THROW
;

459 
	#__wc°ﬁ_öã∫Æ_deföed
 1

	)

461 #i‚de‡
__wc°oul_öã∫Æ_deföed


462 

	$__wc°oul_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈t
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

464 
__ba£
, 
__group
Ë
__THROW
;

465 
	#__wc°oul_öã∫Æ_deföed
 1

	)

467 #i‚de‡
__wc°ﬁl_öã∫Æ_deföed


468 
__exãnsi⁄__


469 

	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

470 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

471 
__ba£
, 
__group
Ë
__THROW
;

472 
	#__wc°ﬁl_öã∫Æ_deföed
 1

	)

474 #i‚de‡
__wc°ouŒ_öã∫Æ_deföed


475 
__exãnsi⁄__


476 

	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
wch¨_t
 *

477 
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **

479 
__ª°ri˘
 
__íd±r
,

480 
__ba£
,

481 
__group
Ë
__THROW
;

482 
	#__wc°ouŒ_öã∫Æ_deföed
 1

	)

486 #i‡
deföed
 
__OPTIMIZE__
 && 
__GNUC__
 >= 2

489 
__ölöe
 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

490 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


491 {  
	`__wc°od_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

492 
__ölöe
 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

493 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

494 
__ba£
Ë
__THROW


495 {  
	`__wc°ﬁ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

496 
__ölöe
 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

498 
__ba£
Ë
__THROW


499 {  
	`__wc°oul_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

501 #ifde‡
__USE_GNU


502 
__ölöe
 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

503 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


504 {  
	`__wc°of_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

505 
__ölöe
 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW


507 {  
	`__wc°ﬁd_öã∫Æ
 (
__≈å
, 
__íd±r
, 0); 
	}
}

510 
__exãnsi⁄__


511 
__ölöe
 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

512 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

513 
__ba£
Ë
__THROW


514 {  
	`__wc°ﬁl_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

515 
__exãnsi⁄__


516 
__ölöe
 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *

517 
__ª°ri˘
 
__≈å
,

518 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

519 
__ba£
Ë
__THROW


520 {  
	`__wc°ouŒ_öã∫Æ
 (
__≈å
, 
__íd±r
, 
__ba£
, 0); 
	}
}

525 #ifdef 
__USE_GNU


528 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
Ë
__THROW
;

532 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__de°
, 
__c⁄°
 wch¨_à*
__§c
, 
size_t
 
__n
)

533 
__THROW
;

538 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


541 

	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

545 

	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

546 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

547 
__THROW
 ;

549 

	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

550 
__THROW
 ;

552 

	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

553 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

554 
__THROW
 ;

557 

	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

558 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

559 
__gnuc_va_li°
 
__¨g
)

560 
__THROW
 ;

562 

	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

563 
__gnuc_va_li°
 
__¨g
)

564 
__THROW
 ;

567 

	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

569 
__gnuc_va_li°
 
__¨g
)

570 
__THROW
 ;

574 

	$fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

575 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

576 
__THROW
 ;

578 

	$wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

579 
__THROW
 ;

581 

	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

582 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

583 
__THROW
 ;

586 #ifde‡
__USE_ISOC99


588 

	$vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

589 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

590 
__gnuc_va_li°
 
__¨g
)

591 
__THROW
 ;

593 

	$vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

594 
__gnuc_va_li°
 
__¨g
)

595 
__THROW
 ;

597 

	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

598 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

599 
__gnuc_va_li°
 
__¨g
)

600 
__THROW
 ;

605 
wöt_t
 
	$fgëwc
 (
__FILE
 *
__°ªam
Ë
__THROW
;

606 
wöt_t
 
	$gëwc
 (
__FILE
 *
__°ªam
Ë
__THROW
;

609 
wöt_t
 
	$gëwch¨
 (Ë
__THROW
;

613 
wöt_t
 
	$Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

614 
wöt_t
 
	$putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

617 
wöt_t
 
	$putwch¨
 (
wch¨_t
 
__wc
Ë
__THROW
;

622 
wch¨_t
 *
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__ws
, 
__n
,

623 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

626 

	$Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

627 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

631 
wöt_t
 
	$ungëwc
 (
wöt_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

634 #ifde‡
__USE_GNU


637 
wöt_t
 
	$gëwc_u∆ocked
 (
__FILE
 *
__°ªam
Ë
__THROW
;

638 
wöt_t
 
	$gëwch¨_u∆ocked
 (Ë
__THROW
;

641 
wöt_t
 
	$fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
Ë
__THROW
;

644 
wöt_t
 
	$Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

648 
wöt_t
 
	$putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
Ë
__THROW
;

649 
wöt_t
 
	$putwch¨_u∆ocked
 (
wch¨_t
 
__wc
Ë
__THROW
;

653 
wch¨_t
 *
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__ws
, 
__n
,

654 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

657 

	$Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

658 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__THROW
;

665 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

667 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

675 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


676 
	#__√ed_iswxxx


	)

677 
	~<w˘y≥.h
>

680 
__END_DECLS


	@/usr/include/pthread.h

15 #i‚de‡
_PTHREAD_H


16 
	#_PTHREAD_H
 1

	)

18 
	~<„©uªs.h
>

20 
	~<sched.h
>

21 
	~<time.h
>

23 
	#__√ed_sig£t_t


	)

24 
	~<sig«l.h
>

25 
	~<bôs/±hªadty≥s.h
>

26 
	~<bôs/öô•ö.h
>

29 
	g__BEGIN_DECLS


33 
	#PTHREAD_MUTEX_INITIALIZER
 \

34 {0, 0, 0, 
PTHREAD_MUTEX_TIMED_NP
, 
__LOCK_INITIALIZER
}

	)

35 #ifde‡
__USE_GNU


36 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

37 {0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__LOCK_INITIALIZER
}

	)

38 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

39 {0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__LOCK_INITIALIZER
}

	)

40 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

41 {0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__LOCK_INITIALIZER
}

	)

44 
	#PTHREAD_COND_INITIALIZER
 {
__LOCK_INITIALIZER
, 0}

	)

46 #ifde‡
__USE_UNIX98


47 
	#PTHREAD_RWLOCK_INITIALIZER
 \

48 { 
__LOCK_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

49 
PTHREAD_RWLOCK_DEFAULT_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

51 #ifde‡
__USE_GNU


52 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

53 { 
__LOCK_INITIALIZER
, 0, 
NULL
, NULL, NULL, \

54 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, 
PTHREAD_PROCESS_PRIVATE
 }

	)

61 
	mPTHREAD_CREATE_JOINABLE
,

62 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

63 
	mPTHREAD_CREATE_DETACHED


64 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

69 
	mPTHREAD_INHERIT_SCHED
,

70 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

71 
	mPTHREAD_EXPLICIT_SCHED


72 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

77 
	mPTHREAD_SCOPE_SYSTEM
,

78 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

79 
	mPTHREAD_SCOPE_PROCESS


80 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

85 
	mPTHREAD_MUTEX_TIMED_NP
,

86 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

87 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

88 
	mPTHREAD_MUTEX_ADAPTIVE_NP


89 #ifde‡
__USE_UNIX98


91 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

92 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

93 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

94 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


96 #ifde‡
__USE_GNU


98 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_ADAPTIVE_NP


104 
	mPTHREAD_PROCESS_PRIVATE
,

105 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

106 
	mPTHREAD_PROCESS_SHARED


107 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

110 #ifde‡
__USE_UNIX98


113 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

114 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

115 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

116 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_WRITER_NP


120 
	#PTHREAD_ONCE_INIT
 0

	)

124 #ifde‡
__USE_XOPEN2K


126 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

131 
	s_±hªad_˛ónup_buf„r


133 (*
	m__routöe
) (*);

134 *
	m__¨g
;

135 
	m__ˇn˚…y≥
;

136 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

143 
	mPTHREAD_CANCEL_ENABLE
,

144 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

145 
	mPTHREAD_CANCEL_DISABLE


146 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

150 
	mPTHREAD_CANCEL_DEFERRED
,

151 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

152 
	mPTHREAD_CANCEL_ASYNCHRONOUS


153 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

155 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

163 

±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__thªad
,

164 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

165 *(*
__°¨t_routöe
) (*),

166 *
__ª°ri˘
 
__¨g
Ë
__THROW
;

169 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
;

172 

	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

175 

	$±hªad_exô
 (*
__ªtvÆ
)

176 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

181 

	$±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

187 

	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

195 

	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

198 

	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
;

201 

	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

202 
__dëach°©e
Ë
__THROW
;

205 

	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

206 *
__dëach°©e
Ë
__THROW
;

209 

	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

210 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


211 
__∑øm
Ë
__THROW
;

214 

	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


215 
__©å
,

216 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

217 
__THROW
;

220 

	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

221 
__THROW
;

224 

	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


225 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

226 
__THROW
;

229 

	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

230 
__öhîô
Ë
__THROW
;

233 

	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


234 
__©å
, *
__ª°ri˘
 
__öhîô
)

235 
__THROW
;

238 

	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

239 
__THROW
;

242 

	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

243 *
__ª°ri˘
 
__sc›e
Ë
__THROW
;

245 #ifde‡
__USE_UNIX98


247 

	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

248 
size_t
 
__gu¨dsize
Ë
__THROW
;

251 

	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


252 
__©å
, 
size_t
 *
__ª°ri˘
 
__gu¨dsize
)

253 
__THROW
;

260 

	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

261 *
__°ackaddr
Ë
__THROW
;

264 

	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


265 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

266 
__THROW
;

268 #ifde‡
__USE_XOPEN2K


272 

	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

273 
size_t
 
__°acksize
Ë
__THROW
;

276 

	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

277 **
__ª°ri˘
 
__°ackaddr
,

278 
size_t
 *
__ª°ri˘
 
__°acksize
Ë
__THROW
;

284 

	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

285 
size_t
 
__°acksize
Ë
__THROW
;

288 

	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


289 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

290 
__THROW
;

292 #ifde‡
__USE_GNU


294 

	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
Ë
__THROW
;

301 

	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

302 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

303 
__THROW
;

306 

	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

307 *
__ª°ri˘
 
__pﬁicy
,

308 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

309 
__THROW
;

311 #ifde‡
__USE_UNIX98


313 

	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

316 

	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

319 #ifde‡
__USE_GNU


324 

	$±hªad_yõld
 (Ë
__THROW
;

331 

	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

332 
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


333 
__muãx_©å
Ë
__THROW
;

336 

	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

339 

	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

342 

	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

344 #ifde‡
__USE_XOPEN2K


346 

	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

347 
__c⁄°
 
time•ec
 *
__ª°ri˘


348 
__ab°ime
Ë
__THROW
;

352 

	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
Ë
__THROW
;

359 

	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

362 

	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
Ë
__THROW
;

365 

	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

366 
__ª°ri˘
 
__©å
,

367 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

370 

	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

371 
__psh¨ed
Ë
__THROW
;

373 #ifde‡
__USE_UNIX98


377 

	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

378 
__THROW
;

381 

	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


382 
__©å
, *
__ª°ri˘
 
__köd
Ë
__THROW
;

390 

	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

391 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


392 
__c⁄d_©å
Ë
__THROW
;

395 

	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

398 

	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

401 

	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
Ë
__THROW
;

405 

	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

406 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
Ë
__THROW
;

412 

	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

413 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

414 
__c⁄°
 
time•ec
 *
__ª°ri˘


415 
__ab°ime
Ë
__THROW
;

420 

	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

423 

	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
Ë
__THROW
;

426 

	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

427 
__ª°ri˘
 
__©å
,

428 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

431 

	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

432 
__psh¨ed
Ë
__THROW
;

435 #ifde‡
__USE_UNIX98


440 

	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

441 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


442 
__©å
Ë
__THROW
;

445 

	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

448 

	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

451 

	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

453 #ifde‡
__USE_XOPEN2K


455 

	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

456 
__c⁄°
 
time•ec
 *
__ª°ri˘


457 
__ab°ime
Ë
__THROW
;

461 

	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

464 

	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

466 #ifde‡
__USE_XOPEN2K


468 

	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

469 
__c⁄°
 
time•ec
 *
__ª°ri˘


470 
__ab°ime
Ë
__THROW
;

474 

	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
Ë
__THROW
;

480 

	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

483 

	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
Ë
__THROW
;

486 

	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

487 
__ª°ri˘
 
__©å
,

488 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

491 

	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

492 
__psh¨ed
Ë
__THROW
;

495 

	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
,

496 *
__¥ef
Ë
__THROW
;

499 

	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

500 
__¥ef
Ë
__THROW
;

503 #ifde‡
__USE_XOPEN2K


509 

	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

510 
__THROW
;

513 

	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

516 

	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

519 

	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

522 

	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
Ë
__THROW
;

527 

	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

528 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


529 
__©å
, 
__cou¡
Ë
__THROW
;

531 

	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

533 

	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

535 

	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
Ë
__THROW
;

537 

	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

538 
__ª°ri˘
 
__©å
,

539 *
__ª°ri˘
 
__psh¨ed
Ë
__THROW
;

541 

	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

542 
__psh¨ed
Ë
__THROW
;

544 

	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
Ë
__THROW
;

556 

	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

557 (*
__de°r_fun˘i⁄
Ë(*)Ë
__THROW
;

560 

	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

563 

	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

564 
__c⁄°
 *
__poöãr
Ë
__THROW
;

567 
*
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

576 

	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

577 (*
__öô_routöe
Ë()Ë
__THROW
;

584 

	$±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
Ë
__THROW
;

588 

	$±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
Ë
__THROW
;

591 

	$±hªad_ˇn˚l
 (
±hªad_t
 
__thªad
Ë
__THROW
;

596 

	$±hªad_ã°ˇn˚l
 (Ë
__THROW
;

606 
	#±hªad_˛ónup_push
(
routöe
,
¨g
) \

607 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

608 
	`_±hªad_˛ónup_push
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

610 

	`_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

611 (*
__routöe
) (*),

612 *
__¨g
Ë
__THROW
;

617 
	#±hªad_˛ónup_p›
(
execuã
) \

618 
	`_±hªad_˛ónup_p›
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

620 

	$_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

621 
__execuã
Ë
__THROW
;

626 #ifde‡
__USE_GNU


627 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
,
¨g
) \

628 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

629 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
routöe
), (
¨g
));

	)

631 

	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

632 (*
__routöe
) (*),

633 *
__¨g
Ë
__THROW
;

639 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

640 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
execuã
)); 
	}

	)
}

642 

	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

643 
__execuã
Ë
__THROW
;

647 #ifde‡
__USE_XOPEN2K


649 

	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

650 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

655 
	~<bôs/sigthªad.h
>

671 

	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

672 (*
__∑ª¡
) (),

673 (*
__chûd
Ë()Ë
__THROW
;

678 

	$±hªad_kûl_Ÿhî_thªads_≈
 (Ë
__THROW
;

680 
__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

34 
	#__√ed_wöt_t


	)

35 
	~<°ddef.h
>

36 #i‚de‡
_WINT_T


41 
	#_WINT_T


	)

42 
	twöt_t
;

47 #i‚de‡
WEOF


48 
	#WEOF
 (0xffffffffu)

	)

51 #unde‡
__√ed_iswxxx


56 #i‚de‡
__iswxxx_deföed


57 
	#__iswxxx_deföed
 1

	)

61 
	tw˘y≥_t
;

63 #i‚de‡
_ISwbô


68 
	~<ídün.h
>

69 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


70 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

72 
	#_ISwbô
(
bô
) \

73 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

74 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

75 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

76 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

81 
	m__ISwuµî
 = 0,

82 
	m__ISwlowî
 = 1,

83 
	m__ISwÆpha
 = 2,

84 
	m__ISwdigô
 = 3,

85 
	m__ISwxdigô
 = 4,

86 
	m__ISw•a˚
 = 5,

87 
	m__ISw¥öt
 = 6,

88 
	m__ISwgøph
 = 7,

89 
	m__ISwbœnk
 = 8,

90 
	m__ISw˙ål
 = 9,

91 
	m__ISwpun˘
 = 10,

92 
	m__ISwÆnum
 = 11,

94 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

95 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

96 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

97 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

98 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

99 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

100 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

101 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

102 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

103 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

104 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

105 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

110 
__BEGIN_DECLS


118 

	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

124 

	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

127 

	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

131 

	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

135 

	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

140 

	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

143 

	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

148 

	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

153 

	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

158 

	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

163 

	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

168 #ifde‡
__USE_ISOC99


169 

	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

178 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

182 

	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

184 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__


187 
*
__˘y≥32_b
;

189 
	#iswÆnum
(
wc
) \

190 (
__exãnsi⁄__
 \

191 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

192 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwÆnum
Ë: 
	`iswÆnum
 (wc)))

	)

193 
	#iswÆpha
(
wc
) \

194 (
__exãnsi⁄__
 \

195 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

196 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwÆpha
Ë: 
	`iswÆpha
 (wc)))

	)

197 
	#isw˙ål
(
wc
) \

198 (
__exãnsi⁄__
 \

199 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

200 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISw˙ål
Ë: 
	`isw˙ål
 (wc)))

	)

201 
	#iswdigô
(
wc
) \

202 (
__exãnsi⁄__
 \

203 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

204 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwdigô
Ë: 
	`iswdigô
 (wc)))

	)

205 
	#iswlowî
(
wc
) \

206 (
__exãnsi⁄__
 \

207 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

208 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwlowî
Ë: 
	`iswlowî
 (wc)))

	)

209 
	#iswgøph
(
wc
) \

210 (
__exãnsi⁄__
 \

211 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

212 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwgøph
Ë: 
	`iswgøph
 (wc)))

	)

213 
	#isw¥öt
(
wc
) \

214 (
__exãnsi⁄__
 \

215 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

216 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISw¥öt
Ë: 
	`isw¥öt
 (wc)))

	)

217 
	#iswpun˘
(
wc
) \

218 (
__exãnsi⁄__
 \

219 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

220 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwpun˘
Ë: 
	`iswpun˘
 (wc)))

	)

221 
	#isw•a˚
(
wc
) \

222 (
__exãnsi⁄__
 \

223 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

224 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISw•a˚
Ë: 
	`isw•a˚
 (wc)))

	)

225 
	#iswuµî
(
wc
) \

226 (
__exãnsi⁄__
 \

227 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

228 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwuµî
Ë: 
	`iswuµî
 (wc)))

	)

229 
	#iswxdigô
(
wc
) \

230 (
__exãnsi⁄__
 \

231 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

232 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwxdigô
Ë: 
	`iswxdigô
 (wc)))

	)

234 #ifde‡
__USE_ISOC99


235 
	#iswbœnk
(
wc
) \

236 (
__exãnsi⁄__
 \

237 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

238 ? (Ë(
__˘y≥32_b
[(
wöt_t
Ë(
wc
)] & 
_ISwbœnk
Ë: 
	`iswbœnk
 (wc)))

	)

249 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

252 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

255 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

257 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__


260 
c⁄° 
wöt_t
 *
__˘y≥32_tﬁowî
;

261 
c⁄° 
wöt_t
 *
__˘y≥32_touµî
;

263 
	#towlowî
(
wc
) \

264 (
__exãnsi⁄__
 \

265 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

266 ? (
wöt_t
Ë
__˘y≥32_tﬁowî
[(wöt_tË(
wc
)] : 
	`towlowî
 (wc)))

	)

268 
	#towuµî
(
wc
) \

269 (
__exãnsi⁄__
 \

270 (
	`__buûtö_c⁄°™t_p
 (
wc
Ë&& (
wöt_t
Ë(wcË<
L
'\xff' \

271 ? (
wöt_t
Ë
__˘y≥32_touµî
[(wöt_tË(
wc
)] : 
	`towuµî
 (wc)))

	)

275 
__END_DECLS


282 #ifde‡
_WCTYPE_H


288 
__BEGIN_DECLS


292 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

295 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

297 #ifde‡
__USE_GNU


299 
	~<xloˇÀ.h
>

303 

	$__iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

309 

	$__iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

312 

	$__isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

316 

	$__iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

320 

	$__iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

325 

	$__iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

328 

	$__isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

333 

	$__iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

338 

	$__isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

343 

	$__iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

348 

	$__iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

353 

	$__iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

357 
w˘y≥_t
 
	$__w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

358 
__THROW
;

362 

	$__isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

363 
__THROW
;

371 
wöt_t
 
	$__towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

374 
wöt_t
 
	$__towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

378 
w˘øns_t
 
	$__w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

379 
__THROW
;

382 
wöt_t
 
	$__tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

383 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

387 
__END_DECLS


	@/usr/include/bits/initspin.h

23 
	#__LT_SPINLOCK_INIT
 0

	)

26 
	#__LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

27 
	#__ALT_LOCK_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

28 
	#__ATOMIC_INITIALIZER
 { 0, 
__LT_SPINLOCK_INIT
 }

	)

	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_time•ec


	)

29 
	~<time.h
>

32 
	~<bôs/sched.h
>

34 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

37 
__BEGIN_DECLS


40 

	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

41 
__THROW
;

44 

	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

47 

	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

48 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

51 

	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

54 

	$sched_yõld
 (Ë
__THROW
;

57 

	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

60 

	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

63 

	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

65 
__END_DECLS


	@
1
.
1
/usr/include
148
3046
EXTERN.h
INTERN.h
arg.h
array.c
array.h
cmd.c
cmd.h
config.h
cons.c
consarg.c
doarg.c
doio.c
dolist.c
dump.c
eval.c
form.c
form.h
handy.h
hash.c
hash.h
malloc.c
patch-malloc.c
patchlevel.h
perl.c
perl.h
perly.c
perly.h
regcomp.c
regcomp.h
regexec.c
regexp.h
spat.h
stab.c
stab.h
str.c
str.h
toke.c
tperly.c
usersub.c
util.c
util.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/gdbm.h
/usr/include/grp.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pwd.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/dir.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/ipc.h
/usr/include/sys/msg.h
/usr/include/sys/param.h
/usr/include/sys/select.h
/usr/include/sys/sem.h
/usr/include/sys/shm.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/time.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/bits/byteswap.h
/usr/include/bits/dirent.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/in.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/ipc.h
/usr/include/bits/msq.h
/usr/include/bits/netdb.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/select.h
/usr/include/bits/sem.h
/usr/include/bits/setjmp.h
/usr/include/bits/shm.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/stat.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/rpc/netdb.h
/usr/include/stdint.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/uio.h
/usr/include/ucontext.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/sigcontext.h
/usr/include/asm/socket.h
/usr/include/bits/endian.h
/usr/include/bits/local_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sockaddr.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/uio.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/sys/ucontext.h
/usr/include/asm/errno.h
/usr/include/asm/ioctl.h
/usr/include/asm/sockios.h
/usr/include/bits/libc-lock.h
/usr/include/bits/sched.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/initspin.h
/usr/include/sched.h
